### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_health_state_filter
    id: _application_health_state_filter
    parent: system.fabric
    children:
      - system.fabric._application_health_state_filter.ApplicationHealthStateFilter()
      - system.fabric._application_health_state_filter.getApplicationNameFilter()
      - system.fabric._application_health_state_filter.getApplicationTypeNameFilter()
      - system.fabric._application_health_state_filter.getDeployedApplicationFilters()
      - system.fabric._application_health_state_filter.getHealthStateFilter()
      - system.fabric._application_health_state_filter.getServiceFilters()
      - system.fabric._application_health_state_filter.setApplicationNameFilter(URI)
      - system.fabric._application_health_state_filter.setApplicationTypeNameFilter(String)
      - system.fabric._application_health_state_filter.setHealthStateFilter(HealthStateFilter)
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: ApplicationHealthStateFilter
    nameWithType: ApplicationHealthStateFilter
    fullName: system.fabric.ApplicationHealthStateFilter
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 18
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-101\">フィルター処理<xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>オブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-101\">Filter for <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref> objects.</span></span> </p>\n<p><span data-ttu-id=\"81358-102\">\r\n\r\n  <b>注釈:</b>エンティティ ヘルス状態のチャンク クエリでは、粒度が細かい選択クエリの結果に含める必要があるアプリケーションにフィルター処理アプリケーションの一覧を指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-102\">\r\n\r\n  <b>Remarks:</b>The entity health state chunk queries can specify a list of application filters to fine-grain select the applications that should be included in the query result.</span></span> <span data-ttu-id=\"81358-103\">渡されたすべてのアプリケーションが、フィルターに関係なく、集計されたクラスターの正常性状態の評価に使用されることに注意してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-103\">Note that all the applications are used to evaluate cluster aggregated health state, regardless of the filter passed in.</span></span> </p>"
    syntax: &ref_1
      content: public class ApplicationHealthStateFilter
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_health_state_filter.ApplicationHealthStateFilter()
    id: ApplicationHealthStateFilter()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: ApplicationHealthStateFilter()
    nameWithType: ApplicationHealthStateFilter.ApplicationHealthStateFilter()
    fullName: system.fabric.ApplicationHealthStateFilter.ApplicationHealthStateFilter()
    overload: system.fabric._application_health_state_filter.ApplicationHealthStateFilter*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 38
    package: system.fabric
    syntax:
      content: public ApplicationHealthStateFilter()
  - uid: system.fabric._application_health_state_filter.getApplicationNameFilter()
    id: getApplicationNameFilter()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: getApplicationNameFilter()
    nameWithType: ApplicationHealthStateFilter.getApplicationNameFilter()
    fullName: URI system.fabric.ApplicationHealthStateFilter.getApplicationNameFilter()
    overload: system.fabric._application_health_state_filter.getApplicationNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 93
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-104\">アプリケーション名のフィルターを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-104\">Gets the application name filter.</span></span></p>\n<p><span data-ttu-id=\"81358-105\">\r\n\r\n  <b>注釈:</b>目的のアプリケーションにのみ、フィルターが適用される、指定した場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-105\">\r\n\r\n  <b>Remarks:</b>If specified, the filter applies only to the desired application.</span></span> <span data-ttu-id=\"81358-106\">フィルターに一致するアプリケーションで集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-106\">For the application to match the filter, its aggregated health state must match the specified health state filter.</span></span> </p>"
    syntax:
      content: public URI getApplicationNameFilter()
      return:
        type: '62304784'
        description: <p><span data-ttu-id="81358-107">アプリケーションの名前フィルター。</span><span class="sxs-lookup"><span data-stu-id="81358-107">The application name filter.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.getApplicationTypeNameFilter()
    id: getApplicationTypeNameFilter()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: getApplicationTypeNameFilter()
    nameWithType: ApplicationHealthStateFilter.getApplicationTypeNameFilter()
    fullName: String system.fabric.ApplicationHealthStateFilter.getApplicationTypeNameFilter()
    overload: system.fabric._application_health_state_filter.getApplicationTypeNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 123
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-108\">アプリケーションの種類の名前フィルターを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-108\">Gets the application type name filter.</span></span></p>\n<p><span data-ttu-id=\"81358-109\">\r\n\r\n  <b>注釈:</b>指定すると場合、に、(特定のアプリケーション名) の具体的なフィルターがない型の指定したアプリケーションのすべてのアプリケーションにフィルターが適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-109\">\r\n\r\n  <b>Remarks:</b>If specified, the filter applies to all applications of specified application type that don't have a more specific filter (for a specific application name).</span></span> <span data-ttu-id=\"81358-110\">フィルターに一致するアプリケーションは、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-110\">For an application to match the filter, its aggregated health state must match the specified health state filter.</span></span> </p>"
    syntax:
      content: public String getApplicationTypeNameFilter()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="81358-111">アプリケーションの種類の名前のフィルター。</span><span class="sxs-lookup"><span data-stu-id="81358-111">The application type name filter.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.getDeployedApplicationFilters()
    id: getDeployedApplicationFilters()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: getDeployedApplicationFilters()
    nameWithType: ApplicationHealthStateFilter.getDeployedApplicationFilters()
    fullName: List<DeployedApplicationHealthStateFilter> system.fabric.ApplicationHealthStateFilter.getDeployedApplicationFilters()
    overload: system.fabric._application_health_state_filter.getDeployedApplicationFilters*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 174
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-112\">一覧を取得<xref uid=\"system.fabric._deployed_application_health_state_filter\" data-throw-if-not-resolved=\"false\">DeployedApplicationHealthStateFilter</xref>を配置したアプリケーションの子の正常性状態に適用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-112\">Gets the list of <xref uid=\"system.fabric._deployed_application_health_state_filter\" data-throw-if-not-resolved=\"false\">DeployedApplicationHealthStateFilter</xref> to be applied to the deployed application children health states.</span></span></p>\n<p><span data-ttu-id=\"81358-113\">\r\n\r\n  <b>注釈:</b>一覧は、1 つの既定の展開済みアプリケーション フィルターや、クエリによって返される粒度が細かいエンティティに特定の展開済みアプリケーションの展開済みアプリケーション フィルターを含めることができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-113\">\r\n\r\n  <b>Remarks:</b>The list can contain one default deployed application filter or deployed application filters for specific deployed applications to fine-grain entities returned by the query.</span></span> <span data-ttu-id=\"81358-114\">すべて展開、アプリケーション、アプリケーションの子としてフィルターに一致する子が返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-114\">All deployed application children that match the filter will be returned as children of the application.</span></span> <span data-ttu-id=\"81358-115\">空の場合、既定では子は返されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-115\">If empty, the children are not returned by default.</span></span> </p>"
    syntax:
      content: public List<DeployedApplicationHealthStateFilter> getDeployedApplicationFilters()
      return:
        type: 5618da2dsystem.fabric._deployed_application_health_state_filtera08ddfce
        description: <p><span data-ttu-id="81358-116">一連の<xref uid="system.fabric._deployed_application_health_state_filter" data-throw-if-not-resolved="false">DeployedApplicationHealthStateFilter</xref>を配置したアプリケーションの子の正常性状態に適用できます。</span><span class="sxs-lookup"><span data-stu-id="81358-116">The list of <xref uid="system.fabric._deployed_application_health_state_filter" data-throw-if-not-resolved="false">DeployedApplicationHealthStateFilter</xref> to be applied to the deployed application children health states.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.getHealthStateFilter()
    id: getHealthStateFilter()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: getHealthStateFilter()
    nameWithType: ApplicationHealthStateFilter.getHealthStateFilter()
    fullName: HealthStateFilter system.fabric.ApplicationHealthStateFilter.getHealthStateFilter()
    overload: system.fabric._application_health_state_filter.getHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 59
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-117\">集計された正常性状態のフィルターを取得、 <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-117\">Gets filter for the aggregated health state of the <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref> entries in the collection.</span></span></p>\n<p><span data-ttu-id=\"81358-118\">\r\n\r\n  <b>注釈:</b>ヘルス状態フィルター値はメンバーまたはのメンバーのビットごとの組み合わせから取得<xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-118\">\r\n\r\n  <b>Remarks:</b>The health state filter value comes from members or bitwise combination of members of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>.</span></span> <span data-ttu-id=\"81358-119\">フィルターに一致するアプリケーションは、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-119\">For an application to match the filter, its aggregated health state must match the specified health state filter.</span></span> <span data-ttu-id=\"81358-120\">ヘルス状態のフィルターが既定の場合は、特定のフィルター (アプリケーション名またはアプリケーションの種類名) が存在しない場合 [なし] に「ヘルス状態フィルターが既定値です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-120\">If the health state filter is Default, the health state filter defaults to None if there are no specific filters (application name or application type name).</span></span> <span data-ttu-id=\"81358-121\">それ以外の場合、既定のフィルターはすべてに適用すると見なされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-121\">Otherwise, the Default filter is considered to apply to All.</span></span> </p>"
    syntax:
      content: public HealthStateFilter getHealthStateFilter()
      return:
        type: system.fabric.health._health_state_filter
        description: <p><span data-ttu-id="81358-122">集計された正常性状態のフィルター、 <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</span><span class="sxs-lookup"><span data-stu-id="81358-122">The filter for the aggregated health state of the <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref> entries in the collection.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.getServiceFilters()
    id: getServiceFilters()
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: getServiceFilters()
    nameWithType: ApplicationHealthStateFilter.getServiceFilters()
    fullName: List<ServiceHealthStateFilter> system.fabric.ApplicationHealthStateFilter.getServiceFilters()
    overload: system.fabric._application_health_state_filter.getServiceFilters*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 156
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-123\">一覧を取得<xref uid=\"system.fabric._service_health_state_filter\" data-throw-if-not-resolved=\"false\">ServiceHealthStateFilter</xref>をサービスの子の正常性状態に適用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-123\">Gets the list of <xref uid=\"system.fabric._service_health_state_filter\" data-throw-if-not-resolved=\"false\">ServiceHealthStateFilter</xref> to be applied to the service children health states.</span></span></p>\n<p><span data-ttu-id=\"81358-124\">\r\n\r\n  <b>注釈:</b>一覧には、1 つの既定のサービスのフィルターまたはクエリで返された粒度が細かいエンティティに特定のサービスのサービスのフィルターを含めることができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-124\">\r\n\r\n  <b>Remarks:</b>The list can contain one default service filter or service filters for specific services to fine-grain entities returned by the query.</span></span> <span data-ttu-id=\"81358-125\">フィルターに一致するすべてのサービスの子は、アプリケーションの子として返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-125\">All service children that match the filter will be returned as children of the application.</span></span> <span data-ttu-id=\"81358-126\">空の場合、既定では子は返されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-126\">If empty, the children are not returned by default.</span></span> </p>"
    syntax:
      content: public List<ServiceHealthStateFilter> getServiceFilters()
      return:
        type: 5618da2dsystem.fabric._service_health_state_filtera08ddfce
        description: <p><span data-ttu-id="81358-127">一連の<xref uid="system.fabric._service_health_state_filter" data-throw-if-not-resolved="false">ServiceHealthStateFilter</xref>をサービスの子の正常性状態に適用できます。</span><span class="sxs-lookup"><span data-stu-id="81358-127">The list of <xref uid="system.fabric._service_health_state_filter" data-throw-if-not-resolved="false">ServiceHealthStateFilter</xref> to be applied to the service children health states.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.setApplicationNameFilter(URI)
    id: setApplicationNameFilter(URI)
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: setApplicationNameFilter(URI applicationNameFilter)
    nameWithType: ApplicationHealthStateFilter.setApplicationNameFilter(URI applicationNameFilter)
    fullName: void system.fabric.ApplicationHealthStateFilter.setApplicationNameFilter(URI applicationNameFilter)
    overload: system.fabric._application_health_state_filter.setApplicationNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 108
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-128\">アプリケーション名のフィルターを設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-128\">Sets the application name filter.</span></span></p>\n<p><span data-ttu-id=\"81358-129\">\r\n\r\n  <b>注釈:</b>目的のアプリケーションにのみ、フィルターが適用される、指定した場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-129\">\r\n\r\n  <b>Remarks:</b>If specified, the filter applies only to the desired application.</span></span> <span data-ttu-id=\"81358-130\">フィルターに一致するアプリケーションで集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-130\">For the application to match the filter, its aggregated health state must match the specified health state filter.</span></span> </p>"
    syntax:
      content: public void setApplicationNameFilter(URI applicationNameFilter)
      parameters:
        - id: applicationNameFilter
          type: '62304784'
          description: <p><span data-ttu-id="81358-131">アプリケーションの名前フィルター。</span><span class="sxs-lookup"><span data-stu-id="81358-131">The application name filter.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.setApplicationTypeNameFilter(String)
    id: setApplicationTypeNameFilter(String)
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: setApplicationTypeNameFilter(String applicationTypeNameFilter)
    nameWithType: ApplicationHealthStateFilter.setApplicationTypeNameFilter(String applicationTypeNameFilter)
    fullName: void system.fabric.ApplicationHealthStateFilter.setApplicationTypeNameFilter(String applicationTypeNameFilter)
    overload: system.fabric._application_health_state_filter.setApplicationTypeNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 139
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-132\">アプリケーションの種類の名前フィルターを設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-132\">Sets the application type name filter.</span></span></p>\n<p><span data-ttu-id=\"81358-133\">\r\n\r\n  <b>注釈:</b>指定すると場合、に、(特定のアプリケーション名) の具体的なフィルターがない型の指定したアプリケーションのすべてのアプリケーションにフィルターが適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-133\">\r\n\r\n  <b>Remarks:</b>If specified, the filter applies to all applications of specified application type that don't have a more specific filter (for a specific application name).</span></span> <span data-ttu-id=\"81358-134\">フィルターに一致するアプリケーションは、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-134\">For an application to match the filter, its aggregated health state must match the specified health state filter.</span></span> </p>"
    syntax:
      content: public void setApplicationTypeNameFilter(String applicationTypeNameFilter)
      parameters:
        - id: applicationTypeNameFilter
          type: '26831127'
          description: <p><span data-ttu-id="81358-135">アプリケーションの種類の名前のフィルター。</span><span class="sxs-lookup"><span data-stu-id="81358-135">The application type name filter.</span></span> </p>
  - uid: system.fabric._application_health_state_filter.setHealthStateFilter(HealthStateFilter)
    id: setHealthStateFilter(HealthStateFilter)
    parent: system.fabric._application_health_state_filter
    href: system.fabric._application_health_state_filter.yml
    langs:
      - java
    name: setHealthStateFilter(HealthStateFilter healthStateFilter)
    nameWithType: ApplicationHealthStateFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    fullName: void system.fabric.ApplicationHealthStateFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    overload: system.fabric._application_health_state_filter.setHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStateFilter.java
      startLine: 79
    package: system.fabric
    summary: "<p><span data-ttu-id=\"81358-136\">集計された正常性状態のセットのフィルター、 <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-136\">Sets filter for the aggregated health state of the <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref> entries in the collection.</span></span></p>\n<p><span data-ttu-id=\"81358-137\">\r\n\r\n  <b>注釈:</b>ヘルス状態フィルター値はメンバーまたはのメンバーのビットごとの組み合わせから取得<xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-137\">\r\n\r\n  <b>Remarks:</b>The health state filter value comes from members or bitwise combination of members of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>.</span></span> <span data-ttu-id=\"81358-138\">フィルターに一致するアプリケーションは、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-138\">For an application to match the filter, its aggregated health state must match the specified health state filter.</span></span> <span data-ttu-id=\"81358-139\">ヘルス状態のフィルターが既定の場合は、特定のフィルター (アプリケーション名またはアプリケーションの種類名) が存在しない場合 [なし] に「ヘルス状態フィルターが既定値です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-139\">If the health state filter is Default, the health state filter defaults to None if there are no specific filters (application name or application type name).</span></span> <span data-ttu-id=\"81358-140\">それ以外の場合、既定のフィルターはすべてに適用すると見なされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-140\">Otherwise, the Default filter is considered to apply to All.</span></span> </p>"
    syntax:
      content: public void setHealthStateFilter(HealthStateFilter healthStateFilter)
      parameters:
        - id: healthStateFilter
          type: system.fabric.health._health_state_filter
          description: <p><span data-ttu-id="81358-141">集計された正常性状態のフィルター、 <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</span><span class="sxs-lookup"><span data-stu-id="81358-141">The filter for the aggregated health state of the <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref> entries in the collection.</span></span> </p>
references:
  - uid: system.fabric._application_health_state_filter.ApplicationHealthStateFilter*
    name: ApplicationHealthStateFilter
    nameWithType: ApplicationHealthStateFilter.ApplicationHealthStateFilter
    fullName: system.fabric.ApplicationHealthStateFilter.ApplicationHealthStateFilter
    package: system.fabric
  - uid: system.fabric._application_health_state_filter.getHealthStateFilter*
    name: getHealthStateFilter
    nameWithType: ApplicationHealthStateFilter.getHealthStateFilter
    fullName: HealthStateFilter system.fabric.ApplicationHealthStateFilter.getHealthStateFilter
    package: system.fabric
  - uid: system.fabric._application_health_state_filter.setHealthStateFilter*
    name: setHealthStateFilter
    nameWithType: ApplicationHealthStateFilter.setHealthStateFilter
    fullName: void system.fabric.ApplicationHealthStateFilter.setHealthStateFilter
    package: system.fabric
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric._application_health_state_filter.getApplicationNameFilter*
    name: getApplicationNameFilter
    nameWithType: ApplicationHealthStateFilter.getApplicationNameFilter
    fullName: URI system.fabric.ApplicationHealthStateFilter.getApplicationNameFilter
    package: system.fabric
  - uid: system.fabric._application_health_state_filter.setApplicationNameFilter*
    name: setApplicationNameFilter
    nameWithType: ApplicationHealthStateFilter.setApplicationNameFilter
    fullName: void system.fabric.ApplicationHealthStateFilter.setApplicationNameFilter
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._application_health_state_filter.getApplicationTypeNameFilter*
    name: getApplicationTypeNameFilter
    nameWithType: ApplicationHealthStateFilter.getApplicationTypeNameFilter
    fullName: String system.fabric.ApplicationHealthStateFilter.getApplicationTypeNameFilter
    package: system.fabric
  - uid: system.fabric._application_health_state_filter.setApplicationTypeNameFilter*
    name: setApplicationTypeNameFilter
    nameWithType: ApplicationHealthStateFilter.setApplicationTypeNameFilter
    fullName: void system.fabric.ApplicationHealthStateFilter.setApplicationTypeNameFilter
    package: system.fabric
  - uid: 5618da2dsystem.fabric._service_health_state_filtera08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric._service_health_state_filter
        name: ServiceHealthStateFilter
        fullName: system.fabric.ServiceHealthStateFilter
        href: system.fabric._service_health_state_filter.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._application_health_state_filter.getServiceFilters*
    name: getServiceFilters
    nameWithType: ApplicationHealthStateFilter.getServiceFilters
    fullName: List<ServiceHealthStateFilter> system.fabric.ApplicationHealthStateFilter.getServiceFilters
    package: system.fabric
  - uid: 5618da2dsystem.fabric._deployed_application_health_state_filtera08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric._deployed_application_health_state_filter
        name: DeployedApplicationHealthStateFilter
        fullName: system.fabric.DeployedApplicationHealthStateFilter
        href: system.fabric._deployed_application_health_state_filter.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._application_health_state_filter.getDeployedApplicationFilters*
    name: getDeployedApplicationFilters
    nameWithType: ApplicationHealthStateFilter.getDeployedApplicationFilters
    fullName: List<DeployedApplicationHealthStateFilter> system.fabric.ApplicationHealthStateFilter.getDeployedApplicationFilters
    package: system.fabric
  - uid: system.fabric._deployed_application_health_state_filter
    parent: system.fabric
    href: system.fabric._deployed_application_health_state_filter.yml
    name: DeployedApplicationHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter
    fullName: system.fabric.DeployedApplicationHealthStateFilter
    type: Class
    summary: "<p><span data-ttu-id=\"81358-142\">フィルター処理<xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref>オブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-142\">Filter for <xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref> objects.</span></span> </p>\n<p><span data-ttu-id=\"81358-143\">\r\n\r\n  <b>注釈:</b>正常性の状態のチャンクのクエリでは、粒度が細かい選択にクエリ結果に含める必要がある配置済みアプリケーション フィルターを展開したアプリケーションの一覧を指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-143\">\r\n\r\n  <b>Remarks:</b>The health state chunk queries can specify a list of deployed application filters to fine-grain select the deployed applications that should be included in the query result.</span></span> <span data-ttu-id=\"81358-144\">渡されるフィルターに関係なく、正常性状態を集計すべて配置されているアプリケーションは、親の評価に使用されることに注意してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-144\">Note that all the deployed applications are used to evaluate parents' aggregated health state, regardless of the filter passed in.</span></span> </p>"
    syntax:
      content: public class DeployedApplicationHealthStateFilter
  - uid: system.fabric._service_health_state_filter
    parent: system.fabric
    href: system.fabric._service_health_state_filter.yml
    name: ServiceHealthStateFilter
    nameWithType: ServiceHealthStateFilter
    fullName: system.fabric.ServiceHealthStateFilter
    type: Class
    summary: "<p><span data-ttu-id=\"81358-145\">フィルター処理<xref uid=\"system.fabric.health._service_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ServiceHealthState</xref>オブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-145\">Filter for <xref uid=\"system.fabric.health._service_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ServiceHealthState</xref> objects.</span></span> </p>\n<p><span data-ttu-id=\"81358-146\">\r\n\r\n  <b>注釈:</b>エンティティ ヘルス状態のチャンク クエリでは、粒度が細かい選択クエリの結果に含める必要があるサービスにフィルター処理サービスの一覧を指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-146\">\r\n\r\n  <b>Remarks:</b>The entity health state chunk queries can specify a list of service filters to fine-grain select the services that should be included in the query result.</span></span> <span data-ttu-id=\"81358-147\">渡されるフィルターに関係なく、正常性状態を集計、サービスは、親の評価に使用されるすべてことに注意してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-147\">Note that all the services are used to evaluate parents aggregated health state, regardless of the filter passed in.</span></span> </p>"
    syntax:
      content: public class ServiceHealthStateFilter
  - uid: system.fabric.health._health_state_filter
    parent: system.fabric.health
    href: system.fabric.health._health_state_filter.yml
    name: HealthStateFilter
    nameWithType: HealthStateFilter
    fullName: system.fabric.health.HealthStateFilter
    type: Enum
    syntax:
      content: public enum HealthStateFilter
  - uid: system.fabric.health._application_health_state
    parent: system.fabric.health
    href: system.fabric.health._application_health_state.yml
    name: ApplicationHealthState
    nameWithType: ApplicationHealthState
    fullName: system.fabric.health.ApplicationHealthState
    type: Class
    summary: '<p><span data-ttu-id="81358-148">アプリケーション識別子と、集計された正常性状態を含む、アプリケーションのヘルス状態を表します。</span><span class="sxs-lookup"><span data-stu-id="81358-148">Represents the health state of an application, which contains the application identifier and the aggregated health state.</span></span> </p>'
    syntax:
      content: public class ApplicationHealthState extends EntityHealthState
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._application_health_state_filter
    parent: system.fabric
    href: system.fabric._application_health_state_filter.yml
    name: ApplicationHealthStateFilter
    nameWithType: ApplicationHealthStateFilter
    fullName: system.fabric.ApplicationHealthStateFilter
    type: Class
    summary: "<p><span data-ttu-id=\"81358-149\">フィルター処理<xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>オブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-149\">Filter for <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref> objects.</span></span> </p>\n<p><span data-ttu-id=\"81358-150\">\r\n\r\n  <b>注釈:</b>エンティティ ヘルス状態のチャンク クエリでは、粒度が細かい選択クエリの結果に含める必要があるアプリケーションにフィルター処理アプリケーションの一覧を指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-150\">\r\n\r\n  <b>Remarks:</b>The entity health state chunk queries can specify a list of application filters to fine-grain select the applications that should be included in the query result.</span></span> <span data-ttu-id=\"81358-151\">渡されたすべてのアプリケーションが、フィルターに関係なく、集計されたクラスターの正常性状態の評価に使用されることに注意してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"81358-151\">Note that all the applications are used to evaluate cluster aggregated health state, regardless of the filter passed in.</span></span> </p>"
    syntax: *ref_1