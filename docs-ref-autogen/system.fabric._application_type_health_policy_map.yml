### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_type_health_policy_map
    id: _application_type_health_policy_map
    parent: system.fabric
    children:
      - system.fabric._application_type_health_policy_map.ApplicationTypeHealthPolicyMap()
      - system.fabric._application_type_health_policy_map.getApplicationTypeHealthPolicyMapWrapper()
      - 'system.fabric._application_type_health_policy_map.setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte>)'
    href: system.fabric._application_type_health_policy_map.yml
    langs:
      - java
    name: ApplicationTypeHealthPolicyMap
    nameWithType: ApplicationTypeHealthPolicyMap
    fullName: system.fabric.ApplicationTypeHealthPolicyMap
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationTypeHealthPolicyMap.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationTypeHealthPolicyMap.java
      startLine: 22
    package: system.fabric
    summary: "<p>クラスターの正常性評価で使用されるアプリケーションの種類の正常性ポリシーのエントリのポリシーのマップを定義します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>アプリケーションの種類の正常性ポリシー マップは、特殊なアプリケーションの種類を記述するクラスターの正常性評価で使用できます。 マップに含まれるアプリケーションの種類がグローバルではなく、マップでは、含まれている割合に対して評価されます<xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>です。 マップで指定されたアプリケーションの種類のアプリケーションは、アプリケーションのグローバル プールに対してはカウントされません。 </p>"
    syntax: &ref_1
      content: public class ApplicationTypeHealthPolicyMap
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_type_health_policy_map.ApplicationTypeHealthPolicyMap()
    id: ApplicationTypeHealthPolicyMap()
    parent: system.fabric._application_type_health_policy_map
    href: system.fabric._application_type_health_policy_map.yml
    langs:
      - java
    name: ApplicationTypeHealthPolicyMap()
    nameWithType: ApplicationTypeHealthPolicyMap.ApplicationTypeHealthPolicyMap()
    fullName: system.fabric.ApplicationTypeHealthPolicyMap.ApplicationTypeHealthPolicyMap()
    overload: system.fabric._application_type_health_policy_map.ApplicationTypeHealthPolicyMap*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationTypeHealthPolicyMap.java
      startLine: 32
    package: system.fabric
    summary: <p>インスタンスを作成、 <xref uid="system.fabric._application_type_health_policy_map" data-throw-if-not-resolved="false">applicationtypehealthpolicymap の値</xref>クラスです。 </p>
    syntax:
      content: public ApplicationTypeHealthPolicyMap()
  - uid: system.fabric._application_type_health_policy_map.getApplicationTypeHealthPolicyMapWrapper()
    id: getApplicationTypeHealthPolicyMapWrapper()
    parent: system.fabric._application_type_health_policy_map
    href: system.fabric._application_type_health_policy_map.yml
    langs:
      - java
    name: getApplicationTypeHealthPolicyMapWrapper()
    nameWithType: ApplicationTypeHealthPolicyMap.getApplicationTypeHealthPolicyMapWrapper()
    fullName: 'Map<String, Byte> system.fabric.ApplicationTypeHealthPolicyMap.getApplicationTypeHealthPolicyMapWrapper()'
    overload: system.fabric._application_type_health_policy_map.getApplicationTypeHealthPolicyMapWrapper*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationTypeHealthPolicyMap.java
      startLine: 73
    package: system.fabric
    syntax:
      content: 'public Map<String, Byte> getApplicationTypeHealthPolicyMapWrapper()'
      return:
        type: c5887ce5
  - uid: 'system.fabric._application_type_health_policy_map.setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte>)'
    id: 'setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte>)'
    parent: system.fabric._application_type_health_policy_map
    href: system.fabric._application_type_health_policy_map.yml
    langs:
      - java
    name: 'setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte> applicationTypeHealthPolicyMapWrapper)'
    nameWithType: 'ApplicationTypeHealthPolicyMap.setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte> applicationTypeHealthPolicyMapWrapper)'
    fullName: 'void system.fabric.ApplicationTypeHealthPolicyMap.setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte> applicationTypeHealthPolicyMapWrapper)'
    overload: system.fabric._application_type_health_policy_map.setApplicationTypeHealthPolicyMapWrapper*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationTypeHealthPolicyMap.java
      startLine: 77
    package: system.fabric
    syntax:
      content: 'public void setApplicationTypeHealthPolicyMapWrapper(Map<String, Byte> applicationTypeHealthPolicyMapWrapper)'
      parameters:
        - id: applicationTypeHealthPolicyMapWrapper
          type: c5887ce5
references:
  - uid: system.fabric._application_type_health_policy_map.ApplicationTypeHealthPolicyMap*
    name: ApplicationTypeHealthPolicyMap
    nameWithType: ApplicationTypeHealthPolicyMap.ApplicationTypeHealthPolicyMap
    fullName: system.fabric.ApplicationTypeHealthPolicyMap.ApplicationTypeHealthPolicyMap
    package: system.fabric
  - uid: c5887ce5
    spec.java:
      - name: 'Map<String, Byte>'
        fullName: 'Map<String, Byte>'
  - uid: system.fabric._application_type_health_policy_map.getApplicationTypeHealthPolicyMapWrapper*
    name: getApplicationTypeHealthPolicyMapWrapper
    nameWithType: ApplicationTypeHealthPolicyMap.getApplicationTypeHealthPolicyMapWrapper
    fullName: 'Map<String, Byte> system.fabric.ApplicationTypeHealthPolicyMap.getApplicationTypeHealthPolicyMapWrapper'
    package: system.fabric
  - uid: system.fabric._application_type_health_policy_map.setApplicationTypeHealthPolicyMapWrapper*
    name: setApplicationTypeHealthPolicyMapWrapper
    nameWithType: ApplicationTypeHealthPolicyMap.setApplicationTypeHealthPolicyMapWrapper
    fullName: void system.fabric.ApplicationTypeHealthPolicyMap.setApplicationTypeHealthPolicyMapWrapper
    package: system.fabric
  - uid: system.fabric._application_type_health_policy_map
    parent: system.fabric
    href: system.fabric._application_type_health_policy_map.yml
    name: ApplicationTypeHealthPolicyMap
    nameWithType: ApplicationTypeHealthPolicyMap
    fullName: system.fabric.ApplicationTypeHealthPolicyMap
    type: Class
    summary: "<p>クラスターの正常性評価で使用されるアプリケーションの種類の正常性ポリシーのエントリのポリシーのマップを定義します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>アプリケーションの種類の正常性ポリシー マップは、特殊なアプリケーションの種類を記述するクラスターの正常性評価で使用できます。 マップに含まれるアプリケーションの種類がグローバルではなく、マップでは、含まれている割合に対して評価されます<xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>です。 マップで指定されたアプリケーションの種類のアプリケーションは、アプリケーションのグローバル プールに対してはカウントされません。 </p>"
    syntax: *ref_1
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    name: getMaxPercentUnhealthyApplications()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    type: Method
    summary: "<p>許容される異常なアプリケーションの割合の最大値を設定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされるまでアプリケーションの最大許容パーセンテージです。 許容パーセンテージ内であっても、1 つ以上の異常なアプリケーションがある場合は、正常性は Warning として評価されます。 これには、計算に含まれているアプリケーションの種類のすべてのアプリケーションの除外、クラスターに配置されたアプリケーションの総数に対して異常なアプリケーションの数で割ることによって、 <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">applicationtypehealthpolicymapの値</xref>. 切り上げ計算が実行され、少数のアプリケーションに対する 1 つのエラーは許容されます。 既定のパーセンテージは 0 です。 </p>"
    syntax:
      content: public byte getMaxPercentUnhealthyApplications()
      return:
        type: d357ea40
        description: <p>許容される異常なアプリケーションの割合の最大値。 有効な値は、0 から 100 までの整数値です。 </p>