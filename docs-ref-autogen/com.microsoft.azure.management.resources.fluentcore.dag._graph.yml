### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph
    id: _graph
    parent: com.microsoft.azure.management.resources.fluentcore.dag
    children:
      - com.microsoft.azure.management.resources.fluentcore.dag._graph.addNode(NodeT)
      - 'com.microsoft.azure.management.resources.fluentcore.dag._graph.findPath(String,String)'
      - com.microsoft.azure.management.resources.fluentcore.dag._graph.getNodes()
      - com.microsoft.azure.management.resources.fluentcore.dag._graph.graph
      - com.microsoft.azure.management.resources.fluentcore.dag._graph.Graph()
      - com.microsoft.azure.management.resources.fluentcore.dag._graph.visit(Visitor)
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: 'Graph<DataT,NodeT,NodeT>'
    nameWithType: 'Graph<DataT,NodeT,NodeT>'
    fullName: 'com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT,NodeT,NodeT>'
    type: Class
    source:
      remote: &ref_0
        path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
        branch: v1.3.0
        repo: 'https://github.com/Azure/azure-sdk-for-java'
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 22
    package: com.microsoft.azure.management.resources.fluentcore.dag
    summary: |-
      <p>有向グラフのデータ構造を表す型。 </p>
      <p>グラフ内の各ノードとして表されます<xref uid="com.microsoft.azure.management.resources.fluentcore.dag._node" data-throw-if-not-resolved="false">ノード</xref></p>
      <p></p>
    syntax:
      content: 'public class Graph<DataT,NodeT extends Node<DataT,NodeT>>'
      typeParameters:
        - type: 7aacc8e4
          description: <p>グラフのノードに格納されたデータの種類 </p>
        - type: 3166dcd3
          description: <p>グラフ内のノードの種類 </p>
        - type: 3166dcd3
          description: <p>グラフ内のノードの種類 </p>
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.addNode(NodeT)
    id: addNode(NodeT)
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: addNode(NodeT node)
    nameWithType: 'Graph<DataT,NodeT,NodeT>.addNode(NodeT node)'
    fullName: 'void com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.addNode(NodeT node)'
    overload: com.microsoft.azure.management.resources.fluentcore.dag._graph.addNode*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 70
    package: com.microsoft.azure.management.resources.fluentcore.dag
    summary: |-
      <p>このグラフにノードを追加します。</p>
      <p></p>
    syntax:
      content: public void addNode(NodeT node)
      parameters:
        - id: node
          type: 3166dcd3
          description: <p>ノード </p>
  - uid: 'com.microsoft.azure.management.resources.fluentcore.dag._graph.findPath(String,String)'
    id: 'findPath(String,String)'
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: 'findPath(String start, String end)'
    nameWithType: 'Graph<DataT,NodeT,NodeT>.findPath(String start, String end)'
    fullName: 'String com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.findPath(String start, String end)'
    overload: com.microsoft.azure.management.resources.fluentcore.dag._graph.findPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 147
    package: com.microsoft.azure.management.resources.fluentcore.dag
    syntax:
      content: 'protected String findPath(String start, String end)'
      parameters:
        - id: start
          type: '26831127'
        - id: end
          type: '26831127'
      return:
        type: '26831127'
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.getNodes()
    id: getNodes()
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: getNodes()
    nameWithType: 'Graph<DataT,NodeT,NodeT>.getNodes()'
    fullName: 'Collection<NodeT> com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.getNodes()'
    overload: com.microsoft.azure.management.resources.fluentcore.dag._graph.getNodes*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 78
    package: com.microsoft.azure.management.resources.fluentcore.dag
    syntax:
      content: public Collection<NodeT> getNodes()
      return:
        type: 97fa570e
        description: <p>グラフ内のすべてのノードです。 </p>
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.graph
    id: graph
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: graph
    nameWithType: 'Graph<DataT,NodeT,NodeT>.graph'
    fullName: 'Map<String, NodeT> com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.graph'
    type: Field
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 26
    package: com.microsoft.azure.management.resources.fluentcore.dag
    summary: <p>基になるグラフ。 </p>
    syntax:
      content: 'protected Map<String, NodeT> graph'
      return:
        type: a3cb62d6
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.Graph()
    id: Graph()
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: Graph()
    nameWithType: 'Graph<DataT,NodeT,NodeT>.Graph()'
    fullName: 'com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.Graph()'
    overload: com.microsoft.azure.management.resources.fluentcore.dag._graph.Graph*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 55
    package: com.microsoft.azure.management.resources.fluentcore.dag
    summary: <p>有向グラフを作成します。 </p>
    syntax:
      content: public Graph()
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.visit(Visitor)
    id: visit(Visitor)
    parent: com.microsoft.azure.management.resources.fluentcore.dag._graph
    href: com.microsoft.azure.management.resources.fluentcore.dag._graph.yml
    langs:
      - java
    name: visit(Visitor visitor)
    nameWithType: 'Graph<DataT,NodeT,NodeT>.visit(Visitor visitor)'
    fullName: 'void com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.visit(Visitor visitor)'
    overload: com.microsoft.azure.management.resources.fluentcore.dag._graph.visit*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/dag/Graph.java
      startLine: 90
    package: com.microsoft.azure.management.resources.fluentcore.dag
    summary: |-
      <p>このグラフでは、DFS のアクセスを実行します。 </p>
      <p>DFS の順序で有向グラフを走査して、検索は、各ノードとエッジを検討、訪問者が通知されます。</p>
      <p></p>
    syntax:
      content: public void visit(Visitor visitor)
      parameters:
        - id: visitor
          type: bb01fbc9
          description: <p>グラフの訪問者 </p>
references:
  - uid: 7aacc8e4
    spec.java:
      - name: DataT
        fullName: DataT
  - uid: 3166dcd3
    spec.java:
      - name: NodeT
        fullName: NodeT
  - uid: a3cb62d6
    spec.java:
      - name: 'Map<String, NodeT>'
        fullName: 'Map<String, NodeT>'
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.Graph*
    name: Graph
    nameWithType: 'Graph<DataT,NodeT,NodeT>.Graph'
    fullName: 'com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.Graph'
    package: com.microsoft.azure.management.resources.fluentcore.dag
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.addNode*
    name: addNode
    nameWithType: 'Graph<DataT,NodeT,NodeT>.addNode'
    fullName: 'void com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.addNode'
    package: com.microsoft.azure.management.resources.fluentcore.dag
  - uid: 97fa570e
    spec.java:
      - name: Collection<NodeT>
        fullName: Collection<NodeT>
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.getNodes*
    name: getNodes
    nameWithType: 'Graph<DataT,NodeT,NodeT>.getNodes'
    fullName: 'Collection<NodeT> com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.getNodes'
    package: com.microsoft.azure.management.resources.fluentcore.dag
  - uid: bb01fbc9
    spec.java:
      - name: Visitor
        fullName: Visitor
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.visit*
    name: visit
    nameWithType: 'Graph<DataT,NodeT,NodeT>.visit'
    fullName: 'void com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.visit'
    package: com.microsoft.azure.management.resources.fluentcore.dag
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._graph.findPath*
    name: findPath
    nameWithType: 'Graph<DataT,NodeT,NodeT>.findPath'
    fullName: 'String com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.findPath'
    package: com.microsoft.azure.management.resources.fluentcore.dag
  - uid: com.microsoft.azure.management.resources.fluentcore.dag._node
    parent: com.microsoft.azure.management.resources.fluentcore.dag
    href: com.microsoft.azure.management.resources.fluentcore.dag._node.yml
    name: 'Node<DataT,NodeT,NodeT>'
    nameWithType: 'Node<DataT,NodeT,NodeT>'
    fullName: 'com.microsoft.azure.management.resources.fluentcore.dag.Node<DataT,NodeT,NodeT>'
    type: Class
    summary: |-
      <p>型内のノードを表す、<xref uid="com.microsoft.azure.management.resources.fluentcore.dag._graph" data-throw-if-not-resolved="false">グラフ</xref>です。</p>
      <p></p>
    syntax:
      content: 'public class Node<DataT,NodeT extends Node<DataT,NodeT>>'
      typeParameters:
        - type: 7aacc8e4
          description: <p>ノードに格納されたデータの種類 </p>
        - type: 3166dcd3
          description: <p>ノードの型 </p>
        - type: 3166dcd3
          description: <p>ノードの型 </p>