### YamlMime:ManagedReference
items:
  - uid: system.fabric._fabric_client
    id: _fabric_client
    parent: system.fabric
    children:
      - system.fabric._fabric_client.close()
      - 'system.fabric._fabric_client.createNativeClient(String [])'
      - system.fabric._fabric_client.FabricClient()
      - system.fabric._fabric_client.FabricClient(FabricClientRole)
      - system.fabric._fabric_client.FabricClient(FabricClientSettings)
      - 'system.fabric._fabric_client.FabricClient(FabricClientSettings,String [])'
      - 'system.fabric._fabric_client.FabricClient(SecurityCredentials,FabricClientSettings,String [])'
      - 'system.fabric._fabric_client.FabricClient(SecurityCredentials,String [])'
      - 'system.fabric._fabric_client.FabricClient(String [])'
      - system.fabric._fabric_client.getApplicationManager()
      - system.fabric._fabric_client.getClientConnectionObservable()
      - system.fabric._fabric_client.getClientDisconnectionObservable()
      - system.fabric._fabric_client.getClusterManager()
      - system.fabric._fabric_client.getCredential()
      - system.fabric._fabric_client.getFabricClientPtr()
      - system.fabric._fabric_client.getFaultManagementClient()
      - system.fabric._fabric_client.getHealthManager()
      - system.fabric._fabric_client.getHostEndpoints()
      - system.fabric._fabric_client.getImageStoreClient()
      - system.fabric._fabric_client.getInfraServiceClient()
      - system.fabric._fabric_client.getPropertyManager()
      - system.fabric._fabric_client.getQueryManager()
      - system.fabric._fabric_client.getRepairManager()
      - system.fabric._fabric_client.getServiceGroupManager()
      - system.fabric._fabric_client.getServiceManager()
      - system.fabric._fabric_client.getSettings()
      - system.fabric._fabric_client.getTestManagementClient()
      - 'system.fabric._fabric_client.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)'
      - system.fabric._fabric_client.updateSecurityCredentials(SecurityCredentials)
      - system.fabric._fabric_client.UpdateSettings(FabricClientSettings)
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 22
    package: system.fabric
    summary: "<p>作成し、Service Fabric サービスとその他のエンティティを管理します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。 これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。 </p>"
    syntax: &ref_1
      content: public class FabricClient
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: system.fabric._fabric_client.close()
    id: close()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: close()
    nameWithType: FabricClient.close()
    fullName: void system.fabric.FabricClient.close()
    overload: system.fabric._fabric_client.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 467
    package: system.fabric
    syntax:
      content: public void close()
  - uid: 'system.fabric._fabric_client.createNativeClient(String [])'
    id: 'createNativeClient(String [])'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'createNativeClient(String[] hostEndPoints)'
    nameWithType: 'FabricClient.createNativeClient(String[] hostEndPoints)'
    fullName: 'void system.fabric.FabricClient.createNativeClient(String[] hostEndPoints)'
    overload: system.fabric._fabric_client.createNativeClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 401
    package: system.fabric
    syntax:
      content: 'public void createNativeClient(String[] hostEndPoints)'
      parameters:
        - id: hostEndPoints
          type: 1bb63ab0
  - uid: system.fabric._fabric_client.FabricClient()
    id: FabricClient()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: FabricClient()
    nameWithType: FabricClient.FabricClient()
    fullName: system.fabric.FabricClient.FabricClient()
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 200
    package: system.fabric
    summary: "<p>新しいインスタンスを初期化、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>クラスです。</p>\n<p>\r\n\r\n  <b>注釈:</b>場合、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> 、サービスと同じクラスターには、ローカルを使用して<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>です。 ローカル<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>できるサービス ファブリックの機能、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>一覧から選択することではなくローカル ゲートウェイ サービスに接続します。 これにより、クライアントは、追加のネットワーク ホップをバイパスできます。 場合、サービスは、同じクラスター内の別のサービス パーティションを解決し、ローカルを使用することをお勧め<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>の自動負荷分散を有効にし、パフォーマンスが向上します。 </p>"
    syntax:
      content: public FabricClient()
  - uid: system.fabric._fabric_client.FabricClient(FabricClientRole)
    id: FabricClient(FabricClientRole)
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: FabricClient(FabricClientRole clientRole)
    nameWithType: FabricClient.FabricClient(FabricClientRole clientRole)
    fullName: system.fabric.FabricClient.FabricClient(FabricClientRole clientRole)
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 211
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">FabricClient</xref>指定した fabric クライアントの役割を持つクラス。</p>
      <p></p>
    syntax:
      content: public FabricClient(FabricClientRole clientRole)
      parameters:
        - id: clientRole
          type: system.fabric._fabric_client_role
          description: <p>Fabric クライアントの役割 </p>
  - uid: system.fabric._fabric_client.FabricClient(FabricClientSettings)
    id: FabricClient(FabricClientSettings)
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: FabricClient(FabricClientSettings settings)
    nameWithType: FabricClient.FabricClient(FabricClientSettings settings)
    fullName: system.fabric.FabricClient.FabricClient(FabricClientSettings settings)
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 229
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>目的 fabric クライアント設定を持つクラス。 場合、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> 、サービスと同じクラスターには、ローカルを使用して<xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>です。 ローカル<xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>できるサービス ファブリックの機能、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>一覧から選択することではなくローカル ゲートウェイ サービスに接続します。 これにより、クライアントは、追加のネットワーク ホップをバイパスできます。 場合、サービスは、同じクラスター内の別のサービス パーティションを解決し、ローカルを使用することをお勧め<xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>の自動負荷分散を有効にし、パフォーマンスが向上します。</p>
      <p></p>
    syntax:
      content: public FabricClient(FabricClientSettings settings)
      parameters:
        - id: settings
          type: system.fabric._fabric_client_settings
          description: <p>Fabric クライアントによって使用されるファブリックのクライアント設定します。 </p>
  - uid: 'system.fabric._fabric_client.FabricClient(FabricClientSettings,String [])'
    id: 'FabricClient(FabricClientSettings,String [])'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'FabricClient(FabricClientSettings settings, String[] hostEndpoints)'
    nameWithType: 'FabricClient.FabricClient(FabricClientSettings settings, String[] hostEndpoints)'
    fullName: 'system.fabric.FabricClient.FabricClient(FabricClientSettings settings, String[] hostEndpoints)'
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 270
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> Service Fabric ゲートウェイ アドレス (hostEndpoints) と、必要なファブリック クライアント設定の指定したクラスです。</p>
      <p></p>
    syntax:
      content: 'public FabricClient(FabricClientSettings settings, String[] hostEndpoints)'
      parameters:
        - id: settings
          type: system.fabric._fabric_client_settings
          description: <p>Fabric クライアント設定します。 </p>
        - id: hostEndpoints
          type: 1bb63ab0
          description: <p>ゲートウェイ アドレスのセットを定義、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスターへの接続に使用できます。 </p>
  - uid: 'system.fabric._fabric_client.FabricClient(SecurityCredentials,FabricClientSettings,String [])'
    id: 'FabricClient(SecurityCredentials,FabricClientSettings,String [])'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)'
    nameWithType: 'FabricClient.FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)'
    fullName: 'system.fabric.FabricClient.FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)'
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 287
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> Service Fabric ゲートウェイ アドレス (hostEndpoints)、セキュリティ資格情報および fabric クライアント設定の指定したクラスです。</p>
      <p></p>
    syntax:
      content: 'public FabricClient(SecurityCredentials credential, FabricClientSettings settings, String[] hostEndpoints)'
      parameters:
        - id: credential
          type: system.fabric._security_credentials
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._security_credentials\" data-throw-if-not-resolved=\"false\">system.fabric.SecurityCredentials</xref>のセキュリティ設定を定義、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>です。 </p>"
        - id: settings
          type: system.fabric._fabric_client_settings
          description: <p>Fabric クライアント設定します。 </p>
        - id: hostEndpoints
          type: 1bb63ab0
          description: <p>ゲートウェイ アドレスのセットを定義、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスターへの接続に使用できます。 </p>
  - uid: 'system.fabric._fabric_client.FabricClient(SecurityCredentials,String [])'
    id: 'FabricClient(SecurityCredentials,String [])'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'FabricClient(SecurityCredentials credential, String[] hostEndpoints)'
    nameWithType: 'FabricClient.FabricClient(SecurityCredentials credential, String[] hostEndpoints)'
    fullName: 'system.fabric.FabricClient.FabricClient(SecurityCredentials credential, String[] hostEndpoints)'
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 256
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>サービス ファブリック ゲートウェイ アドレス (hostEndpoints) とセキュリティ資格情報の指定したクラスです。</p>
      <p></p>
    syntax:
      content: 'public FabricClient(SecurityCredentials credential, String[] hostEndpoints)'
      parameters:
        - id: credential
          type: system.fabric._security_credentials
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._security_credentials\" data-throw-if-not-resolved=\"false\">system.fabric.SecurityCredentials</xref>のセキュリティ設定を定義、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>です。 </p>"
        - id: hostEndpoints
          type: 1bb63ab0
          description: <p>ゲートウェイ アドレスのセットを定義、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスターへの接続に使用できます。 </p>
  - uid: 'system.fabric._fabric_client.FabricClient(String [])'
    id: 'FabricClient(String [])'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'FabricClient(String[] hostEndpoints)'
    nameWithType: 'FabricClient.FabricClient(String[] hostEndpoints)'
    fullName: 'system.fabric.FabricClient.FabricClient(String[] hostEndpoints)'
    overload: system.fabric._fabric_client.FabricClient*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 241
    package: system.fabric
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>指定されたサービス ファブリック ゲートウェイ アドレス (hostEndpoints) クラスします。</p>
      <p></p>
    syntax:
      content: 'public FabricClient(String[] hostEndpoints)'
      parameters:
        - id: hostEndpoints
          type: 1bb63ab0
          description: <p>ゲートウェイ アドレスのセットを定義、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスターへの接続に使用できます。 </p>
  - uid: system.fabric._fabric_client.getApplicationManager()
    id: getApplicationManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getApplicationManager()
    nameWithType: FabricClient.getApplicationManager()
    fullName: ApplicationManagementClient system.fabric.FabricClient.getApplicationManager()
    overload: system.fabric._fabric_client.getApplicationManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 107
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._application_management_client" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient</xref>アプリケーションおよびアプリケーションの種類に関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public ApplicationManagementClient getApplicationManager()
      return:
        type: system.fabric._application_management_client
        description: <p><xref uid="system.fabric._application_management_client" data-throw-if-not-resolved="false">System.fabric.ApplicationManagementClient</xref>アプリケーションおよびアプリケーションの種類に関連する操作を実行します。 </p>
  - uid: system.fabric._fabric_client.getClientConnectionObservable()
    id: getClientConnectionObservable()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getClientConnectionObservable()
    nameWithType: FabricClient.getClientConnectionObservable()
    fullName: Observable<GatewayInformation> system.fabric.FabricClient.getClientConnectionObservable()
    overload: system.fabric._fabric_client.getClientConnectionObservable*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 178
    package: system.fabric
    syntax:
      content: public Observable<GatewayInformation> getClientConnectionObservable()
      return:
        type: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
  - uid: system.fabric._fabric_client.getClientDisconnectionObservable()
    id: getClientDisconnectionObservable()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getClientDisconnectionObservable()
    nameWithType: FabricClient.getClientDisconnectionObservable()
    fullName: Observable<GatewayInformation> system.fabric.FabricClient.getClientDisconnectionObservable()
    overload: system.fabric._fabric_client.getClientDisconnectionObservable*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 182
    package: system.fabric
    syntax:
      content: public Observable<GatewayInformation> getClientDisconnectionObservable()
      return:
        type: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
  - uid: system.fabric._fabric_client.getClusterManager()
    id: getClusterManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getClusterManager()
    nameWithType: FabricClient.getClusterManager()
    fullName: ClusterManagementClient system.fabric.FabricClient.getClusterManager()
    overload: system.fabric._fabric_client.getClusterManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 129
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._cluster_management_client" data-throw-if-not-resolved="false">system.fabric.ClusterManagementClient</xref> Service Fabric クラスターに関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public ClusterManagementClient getClusterManager()
      return:
        type: system.fabric._cluster_management_client
        description: <p><xref uid="system.fabric._cluster_management_client" data-throw-if-not-resolved="false">System.fabric.ClusterManagementClient</xref> Service Fabric クラスターに関連する操作を実行します。 </p>
  - uid: system.fabric._fabric_client.getCredential()
    id: getCredential()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getCredential()
    nameWithType: FabricClient.getCredential()
    fullName: SecurityCredentials system.fabric.FabricClient.getCredential()
    overload: system.fabric._fabric_client.getCredential*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 92
    package: system.fabric
    syntax:
      content: public SecurityCredentials getCredential()
      return:
        type: system.fabric._security_credentials
  - uid: system.fabric._fabric_client.getFabricClientPtr()
    id: getFabricClientPtr()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getFabricClientPtr()
    nameWithType: FabricClient.getFabricClientPtr()
    fullName: long system.fabric.FabricClient.getFabricClientPtr()
    overload: system.fabric._fabric_client.getFabricClientPtr*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 88
    package: system.fabric
    syntax:
      content: public long getFabricClientPtr()
      return:
        type: 0364520f
  - uid: system.fabric._fabric_client.getFaultManagementClient()
    id: getFaultManagementClient()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getFaultManagementClient()
    nameWithType: FabricClient.getFaultManagementClient()
    fullName: FaultManagementClient system.fabric.FabricClient.getFaultManagementClient()
    overload: system.fabric._fabric_client.getFaultManagementClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 174
    package: system.fabric
    syntax:
      content: public FaultManagementClient getFaultManagementClient()
      return:
        type: system.fabric._fault_management_client
  - uid: system.fabric._fabric_client.getHealthManager()
    id: getHealthManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getHealthManager()
    nameWithType: FabricClient.getHealthManager()
    fullName: HealthClient system.fabric.FabricClient.getHealthManager()
    overload: system.fabric._fabric_client.getHealthManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 453
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._health_client" data-throw-if-not-resolved="false">system.fabric.HealthClient</xref>ヘルスに関連する操作を実行するなどの正常性のレポートまたはエンティティのヘルスを取得します。</p>
      <p></p>
    syntax:
      content: public HealthClient getHealthManager()
      return:
        type: system.fabric._health_client
        description: <p><xref uid="system.fabric._health_client" data-throw-if-not-resolved="false">System.fabric.HealthClient</xref>ヘルスに関連する操作を実行するなどの正常性のレポートまたはエンティティのヘルスを取得します。 </p>
  - uid: system.fabric._fabric_client.getHostEndpoints()
    id: getHostEndpoints()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getHostEndpoints()
    nameWithType: FabricClient.getHostEndpoints()
    fullName: 'String [] system.fabric.FabricClient.getHostEndpoints()'
    overload: system.fabric._fabric_client.getHostEndpoints*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 96
    package: system.fabric
    syntax:
      content: 'public String [] getHostEndpoints()'
      return:
        type: 1bb63ab0
  - uid: system.fabric._fabric_client.getImageStoreClient()
    id: getImageStoreClient()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getImageStoreClient()
    nameWithType: FabricClient.getImageStoreClient()
    fullName: ImageStoreClient system.fabric.FabricClient.getImageStoreClient()
    overload: system.fabric._fabric_client.getImageStoreClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 163
    package: system.fabric
    syntax:
      content: public ImageStoreClient getImageStoreClient()
      return:
        type: 56b4d650
  - uid: system.fabric._fabric_client.getInfraServiceClient()
    id: getInfraServiceClient()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getInfraServiceClient()
    nameWithType: FabricClient.getInfraServiceClient()
    fullName: InfrastructureServiceClient system.fabric.FabricClient.getInfraServiceClient()
    overload: system.fabric._fabric_client.getInfraServiceClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 150
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._infrastructure_service_client" data-throw-if-not-resolved="false">system.fabric.InfrastructureServiceClient</xref>クラスターが実行されているインフラストラクチャに関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public InfrastructureServiceClient getInfraServiceClient()
      return:
        type: system.fabric._infrastructure_service_client
        description: <p><xref uid="system.fabric._infrastructure_service_client" data-throw-if-not-resolved="false">System.fabric.InfrastructureServiceClient</xref>です。 </p>
  - uid: system.fabric._fabric_client.getPropertyManager()
    id: getPropertyManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getPropertyManager()
    nameWithType: FabricClient.getPropertyManager()
    fullName: PropertyManagementClient system.fabric.FabricClient.getPropertyManager()
    overload: system.fabric._fabric_client.getPropertyManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 118
    package: system.fabric
    summary: |-
      <p>取得、 <xref uid="system.fabric._property_management_client" data-throw-if-not-resolved="false">system.fabric.PropertyManagementClient</xref>名前およびプロパティに関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public PropertyManagementClient getPropertyManager()
      return:
        type: system.fabric._property_management_client
        description: <p><xref uid="system.fabric._property_management_client" data-throw-if-not-resolved="false">System.fabric.PropertyManagementClient</xref>名前およびプロパティに関連する操作を実行します。 </p>
  - uid: system.fabric._fabric_client.getQueryManager()
    id: getQueryManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getQueryManager()
    nameWithType: FabricClient.getQueryManager()
    fullName: QueryClient system.fabric.FabricClient.getQueryManager()
    overload: system.fabric._fabric_client.getQueryManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 462
    package: system.fabric
    syntax:
      content: public QueryClient getQueryManager()
      return:
        type: system.fabric._query_client
  - uid: system.fabric._fabric_client.getRepairManager()
    id: getRepairManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getRepairManager()
    nameWithType: FabricClient.getRepairManager()
    fullName: RepairManagementClient system.fabric.FabricClient.getRepairManager()
    overload: system.fabric._fabric_client.getRepairManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 159
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._repair_management_client" data-throw-if-not-resolved="false">system.fabric.RepairManagementClient</xref>修復作業を管理します。</p>
      <p></p>
    syntax:
      content: public RepairManagementClient getRepairManager()
      return:
        type: system.fabric._repair_management_client
        description: <p><xref uid="system.fabric._repair_management_client" data-throw-if-not-resolved="false">System.fabric.RepairManagementClient</xref>修復作業を管理します。 </p>
  - uid: system.fabric._fabric_client.getServiceGroupManager()
    id: getServiceGroupManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getServiceGroupManager()
    nameWithType: FabricClient.getServiceGroupManager()
    fullName: ServiceGroupManagementClient system.fabric.FabricClient.getServiceGroupManager()
    overload: system.fabric._fabric_client.getServiceGroupManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 140
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._service_group_management_client" data-throw-if-not-resolved="false">system.fabric.ServiceGroupManagementClient</xref>サービス グループに関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public ServiceGroupManagementClient getServiceGroupManager()
      return:
        type: system.fabric._service_group_management_client
        description: <p><xref uid="system.fabric._service_group_management_client" data-throw-if-not-resolved="false">System.fabric.ServiceGroupManagementClient</xref>サービス グループに関連する操作を実行します。 </p>
  - uid: system.fabric._fabric_client.getServiceManager()
    id: getServiceManager()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getServiceManager()
    nameWithType: FabricClient.getServiceManager()
    fullName: ServiceManagementClient system.fabric.FabricClient.getServiceManager()
    overload: system.fabric._fabric_client.getServiceManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 442
    package: system.fabric
    summary: |-
      <p>取得<xref uid="system.fabric._service_management_client" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient</xref>サービスとサービスの種類に関連する操作を実行します。</p>
      <p></p>
    syntax:
      content: public ServiceManagementClient getServiceManager()
      return:
        type: system.fabric._service_management_client
        description: <p><xref uid="system.fabric._service_management_client" data-throw-if-not-resolved="false">System.fabric.ServiceManagementClient</xref>サービスとサービスの種類に関連する操作を実行します。 </p>
  - uid: system.fabric._fabric_client.getSettings()
    id: getSettings()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getSettings()
    nameWithType: FabricClient.getSettings()
    fullName: FabricClientSettings system.fabric.FabricClient.getSettings()
    overload: system.fabric._fabric_client.getSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 383
    package: system.fabric
    summary: |-
      <p>ファブリックのクライアント設定を取得します。</p>
      <p></p>
    syntax:
      content: public FabricClientSettings getSettings()
      return:
        type: system.fabric._fabric_client_settings
        description: <p>Fabric クライアント設定します。 </p>
  - uid: system.fabric._fabric_client.getTestManagementClient()
    id: getTestManagementClient()
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: getTestManagementClient()
    nameWithType: FabricClient.getTestManagementClient()
    fullName: TestManagementClient system.fabric.FabricClient.getTestManagementClient()
    overload: system.fabric._fabric_client.getTestManagementClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 170
    package: system.fabric
    syntax:
      content: public TestManagementClient getTestManagementClient()
      return:
        type: system.fabric._test_management_client
  - uid: 'system.fabric._fabric_client.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)'
    id: 'registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String>)'
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: 'registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)'
    nameWithType: 'FabricClient.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)'
    fullName: 'void system.fabric.FabricClient.registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)'
    overload: system.fabric._fabric_client.registerOnClaimsRetrievalCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 529
    package: system.fabric
    summary: <p>要求トークンの取得コールバックを登録します ClaimsRetrieval イベント </p>
    syntax:
      content: 'public void registerOnClaimsRetrievalCallback(BiFunction<FabricClient, AzureActiveDirectoryMetadata, String> callback)'
      parameters:
        - id: callback
          type: 8ead6242system.fabric._fabric_clientb33c76fcsystem.fabric.security._azure_active_directory_metadata4d03418a
          description: <p>受け取る関数<xref uid="system.fabric.security._azure_active_directory_metadata" data-throw-if-not-resolved="false">system.fabric.security.AzureActiveDirectoryMetadata</xref>トークンには、Azure Active Directory からの要求トークンを取得するために必要なを返す入力要求とします。 </p>
  - uid: system.fabric._fabric_client.updateSecurityCredentials(SecurityCredentials)
    id: updateSecurityCredentials(SecurityCredentials)
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: updateSecurityCredentials(SecurityCredentials credentials)
    nameWithType: FabricClient.updateSecurityCredentials(SecurityCredentials credentials)
    fullName: void system.fabric.FabricClient.updateSecurityCredentials(SecurityCredentials credentials)
    overload: system.fabric._fabric_client.updateSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 303
    package: system.fabric
    summary: |-
      <p>Fabric クライアントのセキュリティ資格情報を更新します。</p>
      <p></p>
    syntax:
      content: public void updateSecurityCredentials(SecurityCredentials credentials)
      parameters:
        - id: credentials
          type: system.fabric._security_credentials
          description: <p>使用する新しいセキュリティ資格情報。 </p>
  - uid: system.fabric._fabric_client.UpdateSettings(FabricClientSettings)
    id: UpdateSettings(FabricClientSettings)
    parent: system.fabric._fabric_client
    href: system.fabric._fabric_client.yml
    langs:
      - java
    name: UpdateSettings(FabricClientSettings settings)
    nameWithType: FabricClient.UpdateSettings(FabricClientSettings settings)
    fullName: void system.fabric.FabricClient.UpdateSettings(FabricClientSettings settings)
    overload: system.fabric._fabric_client.UpdateSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClient.java
      startLine: 291
    package: system.fabric
    syntax:
      content: public void UpdateSettings(FabricClientSettings settings)
      parameters:
        - id: settings
          type: system.fabric._fabric_client_settings
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._fabric_client.getFabricClientPtr*
    name: getFabricClientPtr
    nameWithType: FabricClient.getFabricClientPtr
    fullName: long system.fabric.FabricClient.getFabricClientPtr
    package: system.fabric
  - uid: system.fabric._fabric_client.getCredential*
    name: getCredential
    nameWithType: FabricClient.getCredential
    fullName: SecurityCredentials system.fabric.FabricClient.getCredential
    package: system.fabric
  - uid: 1bb63ab0
    spec.java:
      - name: 'String []'
        fullName: 'String []'
  - uid: system.fabric._fabric_client.getHostEndpoints*
    name: getHostEndpoints
    nameWithType: FabricClient.getHostEndpoints
    fullName: 'String [] system.fabric.FabricClient.getHostEndpoints'
    package: system.fabric
  - uid: system.fabric._fabric_client.getApplicationManager*
    name: getApplicationManager
    nameWithType: FabricClient.getApplicationManager
    fullName: ApplicationManagementClient system.fabric.FabricClient.getApplicationManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getPropertyManager*
    name: getPropertyManager
    nameWithType: FabricClient.getPropertyManager
    fullName: PropertyManagementClient system.fabric.FabricClient.getPropertyManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getClusterManager*
    name: getClusterManager
    nameWithType: FabricClient.getClusterManager
    fullName: ClusterManagementClient system.fabric.FabricClient.getClusterManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getServiceGroupManager*
    name: getServiceGroupManager
    nameWithType: FabricClient.getServiceGroupManager
    fullName: ServiceGroupManagementClient system.fabric.FabricClient.getServiceGroupManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getInfraServiceClient*
    name: getInfraServiceClient
    nameWithType: FabricClient.getInfraServiceClient
    fullName: InfrastructureServiceClient system.fabric.FabricClient.getInfraServiceClient
    package: system.fabric
  - uid: system.fabric._fabric_client.getRepairManager*
    name: getRepairManager
    nameWithType: FabricClient.getRepairManager
    fullName: RepairManagementClient system.fabric.FabricClient.getRepairManager
    package: system.fabric
  - uid: 56b4d650
    spec.java:
      - name: ImageStoreClient
        fullName: ImageStoreClient
  - uid: system.fabric._fabric_client.getImageStoreClient*
    name: getImageStoreClient
    nameWithType: FabricClient.getImageStoreClient
    fullName: ImageStoreClient system.fabric.FabricClient.getImageStoreClient
    package: system.fabric
  - uid: system.fabric._fabric_client.getTestManagementClient*
    name: getTestManagementClient
    nameWithType: FabricClient.getTestManagementClient
    fullName: TestManagementClient system.fabric.FabricClient.getTestManagementClient
    package: system.fabric
  - uid: system.fabric._fabric_client.getFaultManagementClient*
    name: getFaultManagementClient
    nameWithType: FabricClient.getFaultManagementClient
    fullName: FaultManagementClient system.fabric.FabricClient.getFaultManagementClient
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._gateway_informationa08ddfce
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._gateway_information
        name: GatewayInformation
        fullName: system.fabric.GatewayInformation
        href: system.fabric._gateway_information.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_client.getClientConnectionObservable*
    name: getClientConnectionObservable
    nameWithType: FabricClient.getClientConnectionObservable
    fullName: Observable<GatewayInformation> system.fabric.FabricClient.getClientConnectionObservable
    package: system.fabric
  - uid: system.fabric._fabric_client.getClientDisconnectionObservable*
    name: getClientDisconnectionObservable
    nameWithType: FabricClient.getClientDisconnectionObservable
    fullName: Observable<GatewayInformation> system.fabric.FabricClient.getClientDisconnectionObservable
    package: system.fabric
  - uid: system.fabric._fabric_client.FabricClient*
    name: FabricClient
    nameWithType: FabricClient.FabricClient
    fullName: system.fabric.FabricClient.FabricClient
    package: system.fabric
  - uid: system.fabric._fabric_client.UpdateSettings*
    name: UpdateSettings
    nameWithType: FabricClient.UpdateSettings
    fullName: void system.fabric.FabricClient.UpdateSettings
    package: system.fabric
  - uid: system.fabric._fabric_client.updateSecurityCredentials*
    name: updateSecurityCredentials
    nameWithType: FabricClient.updateSecurityCredentials
    fullName: void system.fabric.FabricClient.updateSecurityCredentials
    package: system.fabric
  - uid: system.fabric._fabric_client.getSettings*
    name: getSettings
    nameWithType: FabricClient.getSettings
    fullName: FabricClientSettings system.fabric.FabricClient.getSettings
    package: system.fabric
  - uid: system.fabric._fabric_client.createNativeClient*
    name: createNativeClient
    nameWithType: FabricClient.createNativeClient
    fullName: void system.fabric.FabricClient.createNativeClient
    package: system.fabric
  - uid: system.fabric._fabric_client.getServiceManager*
    name: getServiceManager
    nameWithType: FabricClient.getServiceManager
    fullName: ServiceManagementClient system.fabric.FabricClient.getServiceManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getHealthManager*
    name: getHealthManager
    nameWithType: FabricClient.getHealthManager
    fullName: HealthClient system.fabric.FabricClient.getHealthManager
    package: system.fabric
  - uid: system.fabric._fabric_client.getQueryManager*
    name: getQueryManager
    nameWithType: FabricClient.getQueryManager
    fullName: QueryClient system.fabric.FabricClient.getQueryManager
    package: system.fabric
  - uid: system.fabric._fabric_client.close*
    name: close
    nameWithType: FabricClient.close
    fullName: void system.fabric.FabricClient.close
    package: system.fabric
  - uid: 8ead6242system.fabric._fabric_clientb33c76fcsystem.fabric.security._azure_active_directory_metadata4d03418a
    spec.java:
      - name: BiFunction<
        fullName: BiFunction<
      - uid: system.fabric._fabric_client
        name: FabricClient
        fullName: system.fabric.FabricClient
        href: system.fabric._fabric_client.yml
      - name: ', '
        fullName: ', '
      - uid: system.fabric.security._azure_active_directory_metadata
        name: AzureActiveDirectoryMetadata
        fullName: system.fabric.security.AzureActiveDirectoryMetadata
        href: system.fabric.security._azure_active_directory_metadata.yml
      - name: ', String>'
        fullName: ', String>'
  - uid: system.fabric._fabric_client.registerOnClaimsRetrievalCallback*
    name: registerOnClaimsRetrievalCallback
    nameWithType: FabricClient.registerOnClaimsRetrievalCallback
    fullName: void system.fabric.FabricClient.registerOnClaimsRetrievalCallback
    package: system.fabric
  - uid: system.fabric._service_management_client
    parent: system.fabric
    href: system.fabric._service_management_client.yml
    name: ServiceManagementClient
    nameWithType: ServiceManagementClient
    fullName: system.fabric.ServiceManagementClient
    type: Class
    syntax:
      content: public class ServiceManagementClient
  - uid: system.fabric._health_client
    parent: system.fabric
    href: system.fabric._health_client.yml
    name: HealthClient
    nameWithType: HealthClient
    fullName: system.fabric.HealthClient
    type: Class
    summary: <p>レポートおよびクエリの状態などの操作を関連する正常性の実行に使用される正常性のクライアントを表します。 </p>
    syntax:
      content: public class HealthClient
  - uid: system.fabric._query_client
    parent: system.fabric
    href: system.fabric._query_client.yml
    name: QueryClient
    nameWithType: QueryClient
    fullName: system.fabric.QueryClient
    type: Class
    syntax:
      content: public class QueryClient
  - uid: system.fabric._application_management_client
    parent: system.fabric
    href: system.fabric._application_management_client.yml
    name: ApplicationManagementClient
    nameWithType: ApplicationManagementClient
    fullName: system.fabric.ApplicationManagementClient
    type: Class
    summary: <p>展開/解除-展開/作成/削除アプリケーションやサービスに機能を提供します。 </p>
    syntax:
      content: public class ApplicationManagementClient
  - uid: system.fabric._property_management_client
    parent: system.fabric
    href: system.fabric._property_management_client.yml
    name: PropertyManagementClient
    nameWithType: PropertyManagementClient
    fullName: system.fabric.PropertyManagementClient
    type: Class
    summary: <p>名前およびプロパティの管理を実行するために使用するプロパティの管理クライアントを表します。 </p>
    syntax:
      content: public class PropertyManagementClient
  - uid: system.fabric._cluster_management_client
    parent: system.fabric
    href: system.fabric._cluster_management_client.yml
    name: ClusterManagementClient
    nameWithType: ClusterManagementClient
    fullName: system.fabric.ClusterManagementClient
    type: Class
    summary: <p>クラスターのメンテナンス操作を実行するには、クラスター管理クライアントを表します。 </p>
    syntax:
      content: public class ClusterManagementClient
  - uid: system.fabric._service_group_management_client
    parent: system.fabric
    href: system.fabric._service_group_management_client.yml
    name: ServiceGroupManagementClient
    nameWithType: ServiceGroupManagementClient
    fullName: system.fabric.ServiceGroupManagementClient
    type: Class
    syntax:
      content: public class ServiceGroupManagementClient
  - uid: system.fabric._infrastructure_service_client
    parent: system.fabric
    href: system.fabric._infrastructure_service_client.yml
    name: InfrastructureServiceClient
    nameWithType: InfrastructureServiceClient
    fullName: system.fabric.InfrastructureServiceClient
    type: Class
    summary: "<p>インフラストラクチャに固有の操作を実行するためのメソッドを提供します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>このクライアントを使用する前に、InfrastructureService を有効にする必要があります。 InfrastructureService は、いくつかのインフラストラクチャでのみサポートされます。 このクラスは、Service Fabric プラットフォームをサポートしていますコードから直接呼び出されるものではありません。 </p>"
    syntax:
      content: public class InfrastructureServiceClient
  - uid: system.fabric._repair_management_client
    parent: system.fabric
    href: system.fabric._repair_management_client.yml
    name: RepairManagementClient
    nameWithType: RepairManagementClient
    fullName: system.fabric.RepairManagementClient
    type: Class
    summary: <p>修復タスクを管理するためのメソッドを提供します。 </p>
    syntax:
      content: public class RepairManagementClient
  - uid: system.fabric._test_management_client
    parent: system.fabric
    href: system.fabric._test_management_client.yml
    name: TestManagementClient
    nameWithType: TestManagementClient
    fullName: system.fabric.TestManagementClient
    type: Class
    syntax:
      content: public class TestManagementClient
  - uid: system.fabric._fault_management_client
    parent: system.fabric
    href: system.fabric._fault_management_client.yml
    name: FaultManagementClient
    nameWithType: FaultManagementClient
    fullName: system.fabric.FaultManagementClient
    type: Class
    syntax:
      content: public class FaultManagementClient
  - uid: system.fabric._fabric_client
    parent: system.fabric
    href: system.fabric._fabric_client.yml
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    summary: "<p>作成し、Service Fabric サービスとその他のエンティティを管理します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。 これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。 </p>"
    syntax: *ref_1
  - uid: system.fabric.security._azure_active_directory_metadata
    parent: system.fabric.security
    href: system.fabric.security._azure_active_directory_metadata.yml
    name: AzureActiveDirectoryMetadata
    nameWithType: AzureActiveDirectoryMetadata
    fullName: system.fabric.security.AzureActiveDirectoryMetadata
    type: Class
    summary: <p>Azure Active Directory からの認証トークンを取得するために使用するメタデータを表します。 </p>
    syntax:
      content: public class AzureActiveDirectoryMetadata
  - uid: system.fabric._observable
    parent: system.fabric
    href: system.fabric._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: system.fabric.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: system.fabric._gateway_information
    parent: system.fabric
    href: system.fabric._gateway_information.yml
    name: GatewayInformation
    nameWithType: GatewayInformation
    fullName: system.fabric.GatewayInformation
    type: Class
    summary: <p>クラスター内の Service Fabric ノードを識別する情報が含まれています。 </p>
    syntax:
      content: public class GatewayInformation
  - uid: system.fabric._security_credentials
    parent: system.fabric
    href: system.fabric._security_credentials.yml
    name: SecurityCredentials
    nameWithType: SecurityCredentials
    fullName: system.fabric.SecurityCredentials
    type: Class
    summary: <p>セキュリティ資格情報を表す型の抽象基本クラスです。 </p>
    syntax:
      content: public class SecurityCredentials
  - uid: system.fabric._fabric_client_settings
    parent: system.fabric
    href: system.fabric._fabric_client_settings.yml
    name: FabricClientSettings
    nameWithType: FabricClientSettings
    fullName: system.fabric.FabricClientSettings
    type: Class
    summary: <p>構成設定を表す、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスです。 </p>
    syntax:
      content: public class FabricClientSettings
  - uid: system.fabric._fabric_client_role
    parent: system.fabric
    href: system.fabric._fabric_client_role.yml
    name: FabricClientRole
    nameWithType: FabricClientRole
    fullName: system.fabric.FabricClientRole
    type: Enum
    syntax:
      content: public enum FabricClientRole