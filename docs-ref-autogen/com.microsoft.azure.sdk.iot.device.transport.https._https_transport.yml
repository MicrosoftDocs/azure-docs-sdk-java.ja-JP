### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    id: _https_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport(DeviceClientConfig)
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: HttpsTransport
    nameWithType: HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 29
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>HTTPS トランスポートをします。 メッセージを追加して、IoT Hub をバッチ処理されたメッセージを送信するための機能が含まれています。 IoT Hub によって受信されるまで、未送信のメッセージをバッファーします。 トランスポートは、構築時、次のパラメーターにバインドされて: IoT Hub 名、デバイス ID、デバイスのキー、およびメッセージの有効な秒数。 </p>
      <p>トランスポートをメッセージの IoT Hub をポーリングし、ユーザー定義メッセージのコールバックを呼び出す場合、メッセージと、コールバックが見つかりました。 </p>
    syntax:
      content: public class HttpsTransport implements IotHubTransport
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 146
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>トランスポート キューにメッセージを追加します。</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>送信するメッセージ。 </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p>メッセージの応答を受信したときに呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: <p>コールバックが呼び出されたときに渡されるコンテキスト。</p>
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    exceptions:
      - type: 12fe80de
        description: <p>場合は、トランスポートが開かれていないかは既に閉じています。 </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 172
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>トランスポート キューにメッセージを追加します。</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>送信するメッセージ。 </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p>メッセージの応答を受信したときに呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: <p>コールバックが呼び出されたときに渡されるコンテキスト。</p>
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    exceptions:
      - type: 12fe80de
        description: <p>場合は、トランスポートが開かれていないかは既に閉じています。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: close()
    nameWithType: HttpsTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 107
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: "<p>IoT Hub と通信するために使用するすべてのリソースを閉じます。 1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。 トランスポートが既に閉じられています関数には何もしないものとします。</p>\n\n<p></p>"
    syntax:
      content: public void close()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、トランスポートを閉じるときにエラーが発生します。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: HttpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 299
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>メッセージが検出され、IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答する場合は、メッセージのコールバックを呼び出します。 </p>
      <p>メッセージ コールバックが設定されていない場合、関数は何もします。</p>
      <p></p>
    syntax:
      content: public void handleMessage()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    exceptions:
      - type: cbf33bbe
        description: '<p>IoT Hub にメッセージの結果を送信からの応答にステータス コードがない場合、サーバーに到達できませんだった場合、または<xref uid="" data-throw-if-not-resolved="false">IotHubStatusCode #OK_EMPTY</xref>です。 </p>'
      - type: 12fe80de
        description: <p>場合は、トランスポートが開かれていないかは既に閉じています。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport(DeviceClientConfig)
    id: HttpsTransport(DeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: HttpsTransport(DeviceClientConfig config)
    nameWithType: HttpsTransport.HttpsTransport(DeviceClientConfig config)
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransport(DeviceClientConfig config)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 61
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>インスタンスを作成する、指定された<xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref>オブジェクト。</p>
      <p></p>
    syntax:
      content: public HttpsTransport(DeviceClientConfig config)
      parameters:
        - id: config
          type: com.microsoft.azure.sdk.iot.device._device_client_config
          description: <p>IoT ハブ接続のパラメーターを構成します。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: HttpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 253
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>完了したすべての要求のコールバックを呼び出します。</p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    exceptions:
      - type: 12fe80de
        description: <p>場合は、トランスポートが開かれていないかは既に閉じています。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: HttpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 357
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>それ以外の場合、トランスポートはメッセージが表示されない、処理する場合は true と false を返します。</p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: <p>true に設定すると、トランスポートはメッセージが表示されない、ハンドルおよび false をそれ以外の場合は。 </p>
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 95
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>IoT Hub と通信チャネル usingmultiplexing を確立します。 チャネルが既に開いている場合、関数は何もしないものとします。</p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p>クライアントの一覧は、同じトランスポートを使用します。 </p>
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、通信チャネルを確立できません。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: open()
    nameWithType: HttpsTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 80
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>IoT Hub と通信チャネルを確立します。 チャネルが既に開いている場合、関数は何もしないものとします。</p>
      <p></p>
    syntax:
      content: public void open()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、通信チャネルを確立できません。 </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 370
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Https 接続が失われたか、確立されるたびに実行されるコールバックを登録します。</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: <p>コールバックに渡されるコンテキスト。 Null にすることができます。 </p>
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    exceptions:
      - type: 3c87bd19
        description: <p>指定されたコールバックが null の場合 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: HttpsTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 193
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>すべてのメッセージを転送キューにバッチ要求として送信します。</p>
      <p></p>
    syntax:
      content: public void sendMessages()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、サーバーに到達できませんでした。 </p>
      - type: 12fe80de
        description: <p>場合は、トランスポートが開かれていないかは既に閉じています。 </p>
references:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport*
    name: HttpsTransport
    nameWithType: HttpsTransport.HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransport
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open*
    name: open
    nameWithType: HttpsTransport.open
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen*
    name: multiplexOpen
    nameWithType: HttpsTransport.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close*
    name: close
    nameWithType: HttpsTransport.close
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    name: addMessage
    nameWithType: HttpsTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages*
    name: sendMessages
    nameWithType: HttpsTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: HttpsTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage*
    name: handleMessage
    nameWithType: HttpsTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty*
    name: isEmpty
    nameWithType: HttpsTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: HttpsTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p>IoT ハブ トランスポートのインターフェイスです。 </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport._https_transport_state
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport._https_transport_state.yml
    name: HttpsTransport.HttpsTransportState
    nameWithType: HttpsTransport.HttpsTransportState
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransportState
    type: Enum
    summary: <p>HTTPS トランスポートの状態。 </p>
    syntax:
      content: protected enum HttpsTransportState
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p>IoT Hub 接続状態コールバックのインターフェイスです。</p>
      <p>このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #execute(IotHubConnectionState, Object)</xref>接続の状態 (ダウン、成功した場合など) に渡します。 </p>
    syntax:
      content: public interface IotHubConnectionStateCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
    name: HttpsIotHubConnection
    nameWithType: HttpsIotHubConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection
    type: Class
    summary: <p>デバイスと IoT Hub の間の HTTPS 接続します。 別の IoT Hub リソースの Uri に同期的に接続するための機能が含まれています。 </p>
    syntax:
      content: public class HttpsIotHubConnection
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
    type: Class
    summary: <p>メッセージを送信する、IoT ハブ トランスポートに必要なデータを含むパケットです。 </p>
    syntax:
      content: public class IotHubOutboundPacket
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet.yml
    name: IotHubCallbackPacket
    nameWithType: IotHubCallbackPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubCallbackPacket
    type: Class
    summary: <p>コールバックを呼び出す、IoT ハブ トランスポートに必要なデータを含むパケットです。 </p>
    syntax:
      content: public class IotHubCallbackPacket
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p>IoT Hub クライアントの構成設定。 ユーザー定義のすべての設定を検証します。 </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    type: Method
    summary: |-
      <p>IoT Hub と通信チャネルを確立します。 チャネルが既に開いている場合、関数は何もしないものとします。</p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p>IoT Hub と通信チャネル usingmultiplexing を確立します。 チャネルが既に開いている場合、関数は何もしないものとします。</p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p>クライアントの一覧は、同じトランスポートを使用します。 </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p>公開された API です。 IoT Hub に接続する 1 つの論理的または物理的なデバイスを許可します。 IoT Hub クライアントは、送信側のイベントをおよび IoT Hub からメッセージの受信をサポートします。 </p>
      <p>これらのワークフローをサポートするために、クライアント ライブラリは、次の抽象化を提供します。 メッセージ ペイロードおよび関連するプロパティです。クライアントはメッセージを送受信します。 </p>
      <p>クライアントは、ネットワークがダウンしているし、ネットワークがオンラインに戻ったときに再送信中にメッセージをバッファーします。 通信 (HTTPS のみ) の効率性を向上させるためにメッセージをバッチ処理します。 </p>
      <p>クライアントは、HTTPS 1.1 および AMQPS 1.0 のトランスポートをサポートします。 </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    type: Method
    summary: "<p>IoT Hub と通信するために使用するすべてのリソースを閉じます。 1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。 トランスポートが既に閉じられています関数には何もしないものとします。</p>\n\n<p></p>"
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>トランスポート キューにメッセージを追加します。</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>送信するメッセージ。 </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p>メッセージの応答を受信したときに呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: <p>コールバックが呼び出されたときに渡されるコンテキスト。 </p>
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p>IoT Hub イベント コールバックのインターフェイスです。</p>
      <p>このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #execute(IotHubStatusCode, Object)</xref> IoT Hub からの応答を受信するとします。 </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>トランスポート キューにメッセージを追加します。</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>送信するメッセージ。 </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p>メッセージの応答を受信したときに呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: <p>コールバックが呼び出されたときに渡されるコンテキスト。 </p>
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p>IoT Hub 応答コールバックのインターフェイスです。</p>
      <p>このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #execute(ResponseMessage, Object)</xref> IoT Hub からの応答を受信するとします。 </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    type: Method
    summary: |-
      <p>トランスポート キューでは、すべてのメッセージを送信します。 前回の送信に失敗した場合、関数は前の試みで、メッセージを再送信しようとします。</p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    type: Method
    summary: <p>完了したすべての要求のコールバックを呼び出します。 </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    type: Method
    summary: |-
      <p>メッセージが検出され、IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答する場合は、メッセージのコールバックを呼び出します。 </p>
      <p>メッセージ コールバックが設定されていない場合、関数は何もします。</p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    type: Method
    summary: "<p>返します<code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。 </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>IoT Hub への接続が失われた、または確立されるたびに実行されるコールバックを登録します。</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>呼び出されるコールバック。 </p>
        - id: callbackContext
          type: '79317049'
          description: "<p>コールバックに渡されるコンテキスト。 指定できます<code>null \r\n\r\n    </code>コールバックが指定されていない場合。 </p>"
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state.yml
    name: IotHubConnectionState
    nameWithType: IotHubConnectionState
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionState
    type: Enum
    summary: <p>IoT ハブ接続の状態の値。 </p>
    syntax:
      content: public enum IotHubConnectionState
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_message
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_message.yml
    name: HttpsMessage
    nameWithType: HttpsMessage
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMessage
    type: Interface
    summary: <p>HTTPS メッセージ。 '- アプリ - iot hub'; が付いた、そのプロパティ名は区別 plain IoT Hub メッセージから HTTPS メッセージコンテンツの種類を明示的に指定しています。 </p>
    syntax:
      content: public interface HttpsMessage
  - uid: com.microsoft.azure.sdk.iot.device.exceptions._iot_hub_size_exceeded_exception
    parent: com.microsoft.azure.sdk.iot.device.exceptions
    href: com.microsoft.azure.sdk.iot.device.exceptions._iot_hub_size_exceeded_exception.yml
    name: IotHubSizeExceededException
    nameWithType: IotHubSizeExceededException
    fullName: com.microsoft.azure.sdk.iot.device.exceptions.IotHubSizeExceededException
    type: Class
    summary: |-
      <p>Iot Hub のサイズを超えました例外を作成します。</p>
      <p>関数が、バッファーにコンテンツを追加しようとしています。 または、メッセージと、最終的なサイズが、iot Hub で許容される最大サイズを超える場合、この例外はスローになります。 </p>
    syntax:
      content: public class IotHubSizeExceededException
  - uid: com.microsoft.azure.sdk.iot.device._response_message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._response_message.yml
    name: ResponseMessage
    nameWithType: ResponseMessage
    fullName: com.microsoft.azure.sdk.iot.device.ResponseMessage
    type: Class
    summary: <p>拡張<xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">メッセージ</xref>状態の応答をサポートするために </p>
    syntax:
      content: public class ResponseMessage