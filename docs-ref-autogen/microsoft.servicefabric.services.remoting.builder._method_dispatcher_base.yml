### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    id: _method_dispatcher_base
    parent: microsoft.servicefabric.services.remoting.builder
    children:
      - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith(CompletableFuture<?>)
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)'
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody(int,Object)'
      - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody(Object)
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch(Object,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync(Object,int,Object,CancellationToken)'
      - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId()
      - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName(int)
      - microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue(Object)
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize(int,Map<Integer, String>)'
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch(int,Object,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync(int,Object,Object,CancellationToken)'
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: MethodDispatcherBase
    nameWithType: MethodDispatcherBase
    fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 13
    package: microsoft.servicefabric.services.remoting.builder
    summary: <p>クライアントからの要求を適切なインターフェイスと、リモート オブジェクトのメソッドにディスパッチする型を生成するコード ジェネレーターのリモート処理によって使用される基本クラスです。 </p>
    syntax:
      content: public class MethodDispatcherBase implements MethodDispatcher
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.remoting._method_dispatcher
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith(CompletableFuture<?>)
    id: continueWith(CompletableFuture<?>)
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: continueWith(CompletableFuture<?> future)
    nameWithType: MethodDispatcherBase.continueWith(CompletableFuture<?> future)
    fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?> future)
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 115
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>によって使用される内部 -<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>リモート処理</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<Object> continueWith(CompletableFuture<?> future)
      parameters:
        - id: future
          type: 16409f84
          description: <p>将来の継続 </p>
      return:
        type: 55aa5245
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult(int,CompletableFuture<TRetval>)'
    id: 'continueWithResult(int,CompletableFuture<TRetval>)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'continueWithResult(int methodId, CompletableFuture<TRetval> future)'
    nameWithType: 'MethodDispatcherBase.continueWithResult(int methodId, CompletableFuture<TRetval> future)'
    fullName: 'protected<TRetval> CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWithResult(int methodId, CompletableFuture<TRetval> future)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 98
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>によって使用される内部 -<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>リモート処理</p>
      <p></p>
    syntax:
      content: 'protected <TRetval> CompletableFuture<Object> continueWithResult(int methodId, CompletableFuture<TRetval> future)'
      parameters:
        - id: methodId
          type: f75371fa
          description: <p>メソッド id </p>
        - id: future
          type: 77318c5d
          description: <p>将来の継続 </p>
      return:
        type: d2898f57
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody(int,Object)'
    id: 'createResponseBody(int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'createResponseBody(int methodId, Object returnValue)'
    nameWithType: 'MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)'
    fullName: 'abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody(int methodId, Object returnValue)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 166
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>このメソッドは、応答を作成する、リモート オブジェクトをメソッドのディスパッチの結果として、指定された戻り値の生成されたメソッドのディスパッチャーによって実装されます。</p>
      <p></p>
    syntax:
      content: 'protected abstract Object createResponseBody(int methodId, Object returnValue)'
      parameters:
        - id: methodId
          type: f75371fa
          description: <p>メソッドの id です。 </p>
        - id: returnValue
          type: '79317049'
          description: <p>メソッドから返される値。 </p>
      return:
        type: 1377799a
        description: <p>A<xref uid="" data-throw-if-not-resolved="false">オブジェクト</xref>クライアントに返送する応答の本体を表すです。 </p>
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody(Object)
    id: createResponseMessageBody(Object)
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: createResponseMessageBody(Object responseMessageBodyValue)
    nameWithType: MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
    fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody(Object responseMessageBodyValue)
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 171
    package: microsoft.servicefabric.services.remoting.builder
    syntax:
      content: protected abstract Object createResponseMessageBody(Object responseMessageBodyValue)
      parameters:
        - id: responseMessageBodyValue
          type: '79317049'
      return:
        type: 1377799a
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch(Object,int,Object)'
    id: 'dispatch(Object,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'dispatch(Object objectImplementation, int methodId, Object requestMsgBody)'
    nameWithType: 'MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)'
    fullName: 'void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch(Object objectImplementation, int methodId, Object requestMsgBody)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 79
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>このメソッドは、リモート オブジェクトによって実装されるインターフェイスの指定したメソッド Id に一方向のメッセージのディスパッチに使用します。</p>
      <p></p>
    syntax:
      content: 'public void dispatch(Object objectImplementation, int methodId, Object requestMsgBody)'
      parameters:
        - id: objectImplementation
          type: '79317049'
          description: <p>リモート オブジェクトの実装です。 </p>
        - id: methodId
          type: f75371fa
          description: <p>リモート オブジェクトによって実装されるインターフェイスのメソッドの Id。 </p>
        - id: requestMsgBody
          type: '79317049'
          description: <p>メッセージの本文。 </p>
    overridden: 'microsoft.servicefabric.services.remoting._method_dispatcher.dispatch(Object,int,Object)'
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync(Object,int,Object,CancellationToken)'
    id: 'dispatchAsync(Object,int,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)'
    nameWithType: 'MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 52
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>このメソッドは、リモート オブジェクトによって実装されるインターフェイスの指定したメソッド Id への要求のディスパッチに生成されたメソッドのディスパッチャーによって実装されます。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestMsgBody, CancellationToken cancellationToken)'
      parameters:
        - id: objectImplementation
          type: '79317049'
          description: <p>リモート オブジェクトのインスタンス </p>
        - id: methodId
          type: f75371fa
          description: <p>メソッドの id </p>
        - id: requestMsgBody
          type: '79317049'
          description: <p>要求本文 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 55aa5245
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、メソッドから戻り値です。 </p>
    overridden: 'microsoft.servicefabric.services.remoting._method_dispatcher.dispatchAsync(Object,int,Object,CancellationToken)'
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId()
    id: getInterfaceId()
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: getInterfaceId()
    nameWithType: MethodDispatcherBase.getInterfaceId()
    fullName: int microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId()
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 29
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>インターフェイス Id を使用して、リモート処理インターフェイスを識別します。</p>
      <p></p>
    syntax:
      content: public int getInterfaceId()
      return:
        type: f75371fa
        description: <p>インターフェイス id です。 </p>
    overridden: microsoft.servicefabric.services.remoting._method_dispatcher.getInterfaceId()
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName(int)
    id: getMethodName(int)
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: getMethodName(int methodId)
    nameWithType: MethodDispatcherBase.getMethodName(int methodId)
    fullName: String microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName(int methodId)
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 34
    package: microsoft.servicefabric.services.remoting.builder
    syntax:
      content: public String getMethodName(int methodId)
      parameters:
        - id: methodId
          type: f75371fa
      return:
        type: '26831127'
    overridden: microsoft.servicefabric.services.remoting._method_dispatcher.getMethodName(int)
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue(Object)
    id: getRequestMessageBodyValue(Object)
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: getRequestMessageBodyValue(Object requestMessageBody)
    nameWithType: MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
    fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue(Object requestMessageBody)
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 169
    package: microsoft.servicefabric.services.remoting.builder
    syntax:
      content: protected abstract Object getRequestMessageBodyValue(Object requestMessageBody)
      parameters:
        - id: requestMessageBody
          type: '79317049'
      return:
        type: 1377799a
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize(int,Map<Integer, String>)'
    id: 'initialize(int,Map<Integer, String>)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'initialize(int interfaceId, Map<Integer, String> methodNameMap)'
    nameWithType: 'MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)'
    fullName: 'void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize(int interfaceId, Map<Integer, String> methodNameMap)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 17
    package: microsoft.servicefabric.services.remoting.builder
    syntax:
      content: 'public void initialize(int interfaceId, Map<Integer, String> methodNameMap)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodNameMap
          type: 5188bed5
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch(int,Object,Object)'
    id: 'onDispatch(int,Object,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'onDispatch(int methodId, Object remotedObject, Object requestBody)'
    nameWithType: 'MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)'
    fullName: 'abstract void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch(int methodId, Object remotedObject, Object requestBody)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 154
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>このメソッドは、リモート オブジェクトによって実装されるインターフェイスの指定したメソッド Id に一方向のメッセージをディスパッチする生成されたメソッドのディスパッチャーによって実装されます。</p>
      <p></p>
    syntax:
      content: 'protected abstract void onDispatch(int methodId, Object remotedObject, Object requestBody)'
      parameters:
        - id: methodId
          type: f75371fa
          description: <p>メソッドの id です。 </p>
        - id: remotedObject
          type: '79317049'
          description: <p>リモート オブジェクト インスタンス。 </p>
        - id: requestBody
          type: '79317049'
          description: <p>メッセージ本文 </p>
      return:
        type: 5beb11ad
  - uid: 'microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync(int,Object,Object,CancellationToken)'
    id: 'onDispatchAsync(int,Object,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.yml
    langs:
      - java
    name: 'onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)'
    nameWithType: 'MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)'
    fullName: 'abstract CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/MethodDispatcherBase.java
      startLine: 141
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>このメソッドは、リモート オブジェクトによって実装されるインターフェイスの指定したメソッド Id への要求のディスパッチに生成されたメソッドのディスパッチャーによって実装されます。</p>
      <p></p>
    syntax:
      content: 'protected abstract CompletableFuture<Object> onDispatchAsync(int methodId, Object remotedObject, Object requestBody, CancellationToken cancellationToken)'
      parameters:
        - id: methodId
          type: f75371fa
          description: <p>メソッドの id </p>
        - id: remotedObject
          type: '79317049'
          description: <p>リモート オブジェクトのインスタンス </p>
        - id: requestBody
          type: '79317049'
          description: <p>要求本文 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: <p>非同期要求を取り消すキャンセル トークン。 </p>
      return:
        type: '55e17007'
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、メソッドから戻り値です。 </p>
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 5188bed5
    spec.java:
      - name: 'Map<Integer, String>'
        fullName: 'Map<Integer, String>'
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.initialize*
    name: initialize
    nameWithType: MethodDispatcherBase.initialize
    fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.initialize
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getInterfaceId*
    name: getInterfaceId
    nameWithType: MethodDispatcherBase.getInterfaceId
    fullName: int microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getInterfaceId
    package: microsoft.servicefabric.services.remoting.builder
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getMethodName*
    name: getMethodName
    nameWithType: MethodDispatcherBase.getMethodName
    fullName: String microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getMethodName
    package: microsoft.servicefabric.services.remoting.builder
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: 55aa5245
    spec.java:
      - name: CompletableFuture<Object>
        fullName: CompletableFuture<Object>
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatchAsync*
    name: dispatchAsync
    nameWithType: MethodDispatcherBase.dispatchAsync
    fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatchAsync
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.dispatch*
    name: dispatch
    nameWithType: MethodDispatcherBase.dispatch
    fullName: void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.dispatch
    package: microsoft.servicefabric.services.remoting.builder
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWith*
    name: continueWith
    nameWithType: MethodDispatcherBase.continueWith
    fullName: CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith
    package: microsoft.servicefabric.services.remoting.builder
  - uid: '55e17007'
    spec.java:
      - name: abstract CompletableFuture<Object>
        fullName: abstract CompletableFuture<Object>
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatchAsync*
    name: onDispatchAsync
    nameWithType: MethodDispatcherBase.onDispatchAsync
    fullName: abstract CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatchAsync
    package: microsoft.servicefabric.services.remoting.builder
  - uid: 5beb11ad
    spec.java:
      - name: abstract void
        fullName: abstract void
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.onDispatch*
    name: onDispatch
    nameWithType: MethodDispatcherBase.onDispatch
    fullName: abstract void microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.onDispatch
    package: microsoft.servicefabric.services.remoting.builder
  - uid: 1377799a
    spec.java:
      - name: abstract Object
        fullName: abstract Object
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseBody*
    name: createResponseBody
    nameWithType: MethodDispatcherBase.createResponseBody
    fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseBody
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.getRequestMessageBodyValue*
    name: getRequestMessageBodyValue
    nameWithType: MethodDispatcherBase.getRequestMessageBodyValue
    fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.getRequestMessageBodyValue
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.createResponseMessageBody*
    name: createResponseMessageBody
    nameWithType: MethodDispatcherBase.createResponseMessageBody
    fullName: abstract Object microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.createResponseMessageBody
    package: microsoft.servicefabric.services.remoting.builder
  - uid: 77318c5d
    spec.java:
      - name: CompletableFuture<TRetval>
        fullName: CompletableFuture<TRetval>
  - uid: d2898f57
    spec.java:
      - name: <TRetval> CompletableFuture<Object>
        fullName: <TRetval> CompletableFuture<Object>
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base.continueWithResult*
    name: continueWithResult
    nameWithType: MethodDispatcherBase.continueWithResult
    fullName: protected<TRetval> CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWithResult
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting._method_dispatcher
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
    name: MethodDispatcher
    nameWithType: MethodDispatcher
    fullName: microsoft.servicefabric.services.remoting.MethodDispatcher
    type: Interface
    syntax:
      content: public interface MethodDispatcher
  - uid: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base_with_serializer
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._method_dispatcher_base_with_serializer.yml
    name: MethodDispatcherBaseWithSerializer
    nameWithType: MethodDispatcherBaseWithSerializer
    fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBaseWithSerializer
    type: Class
    syntax:
      content: public class MethodDispatcherBaseWithSerializer
  - uid: microsoft.servicefabric.services.remoting._method_dispatcher.getInterfaceId()
    parent: microsoft.servicefabric.services.remoting._method_dispatcher
    href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
    name: getInterfaceId()
    nameWithType: MethodDispatcher.getInterfaceId()
    fullName: int microsoft.servicefabric.services.remoting.MethodDispatcher.getInterfaceId()
    type: Method
    syntax:
      content: public int getInterfaceId()
      return:
        type: f75371fa
  - uid: microsoft.servicefabric.services.remoting._method_dispatcher.getMethodName(int)
    parent: microsoft.servicefabric.services.remoting._method_dispatcher
    href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
    name: getMethodName(int methodId)
    nameWithType: MethodDispatcher.getMethodName(int methodId)
    fullName: String microsoft.servicefabric.services.remoting.MethodDispatcher.getMethodName(int methodId)
    type: Method
    syntax:
      content: public String getMethodName(int methodId)
      parameters:
        - id: methodId
          type: f75371fa
      return:
        type: '26831127'
  - uid: 'microsoft.servicefabric.services.remoting._method_dispatcher.dispatchAsync(Object,int,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting._method_dispatcher
    href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
    name: 'dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)'
    nameWithType: 'MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Object> microsoft.servicefabric.services.remoting.MethodDispatcher.dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)'
    type: Method
    syntax:
      content: 'public CompletableFuture<Object> dispatchAsync(Object objectImplementation, int methodId, Object requestBody, CancellationToken cancellationToken)'
      parameters:
        - id: objectImplementation
          type: '79317049'
        - id: methodId
          type: f75371fa
        - id: requestBody
          type: '79317049'
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 55aa5245
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。 インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。 キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。 取り消しを開始するトークンを使用することはできません。 所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。 通知を受信するオブジェクトは、適切な方法で応答できます。 </p>'
    syntax:
      content: public class CancellationToken
  - uid: 'microsoft.servicefabric.services.remoting._method_dispatcher.dispatch(Object,int,Object)'
    parent: microsoft.servicefabric.services.remoting._method_dispatcher
    href: microsoft.servicefabric.services.remoting._method_dispatcher.yml
    name: 'dispatch(Object objectImplementation, int methodId, Object requestBody)'
    nameWithType: 'MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)'
    fullName: 'void microsoft.servicefabric.services.remoting.MethodDispatcher.dispatch(Object objectImplementation, int methodId, Object requestBody)'
    type: Method
    syntax:
      content: 'public void dispatch(Object objectImplementation, int methodId, Object requestBody)'
      parameters:
        - id: objectImplementation
          type: '79317049'
        - id: methodId
          type: f75371fa
        - id: requestBody
          type: '79317049'
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: <p>これは、サービスのインターフェイスのリモート処理を有効にするためのマーカー インターフェイスです。 <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>このインターフェイスから派生する、サービスによって実装されたすべてのインターフェイスのリモート処理を提供します。 リモート インターフェイスは、クライアント側プロキシを経由してアクセスできます。 </p>
    syntax:
      content: public interface Service