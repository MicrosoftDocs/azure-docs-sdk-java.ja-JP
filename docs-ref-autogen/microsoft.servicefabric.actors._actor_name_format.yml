### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_name_format
    id: _actor_name_format
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)'
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)'
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)'
      - microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: ActorNameFormat
    nameWithType: ActorNameFormat
    fullName: microsoft.servicefabric.actors.ActorNameFormat
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 13
    package: microsoft.servicefabric.actors
    summary: '<p><span data-ttu-id="aece8-101">サービス名、アプリケーション名の形式、アクター インターフェイスの型のように名前を生成するための静的メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="aece8-101">Contains static methods for generating names like service name, application name form the actor interface type.</span></span> </p>'
    syntax:
      content: public class ActorNameFormat
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
    id: getConfigPackageName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getConfigPackageName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 58
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-102">アクター サービス パッケージで使用される構成パッケージ名を取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-102">Gets the configuration package name used in service package for the actor.</span></span></p>
      <p></p>
    syntax:
      content: public static String getConfigPackageName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-103">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-103">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-104">構成パッケージの名前です。</span><span class="sxs-lookup"><span data-stu-id="aece8-104">configuration package name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
    id: getFabricServiceEndpointName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceEndpointName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 97
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-105">アクター サービスのサービス マニフェストに指定されているアクターの種類のサービス エンドポイントを取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-105">Gets the service endpoint for the actor type which is specified in service manifest for the actor service.</span></span></p>
      <p></p>
    syntax:
      content: public static String getFabricServiceEndpointName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-106">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-106">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-107">サービス エンドポイントの名前。</span><span class="sxs-lookup"><span data-stu-id="aece8-107">Service endpoint name.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)'
    id: 'getFabricServiceName(Class<?>,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    fullName: 'static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 220
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-108">Service Fabric クラスター内のアクターの種類をホストするサービスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-108">Gets name of service which hosts the actor type in Service Fabric cluster.</span></span></p>
      <p></p>
    syntax:
      content: 'public static String getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-109">アクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-109">Type of the actor interface.</span></span> </p>
        - id: serviceName
          type: '26831127'
          description: <p><span data-ttu-id="aece8-110">アクターの種類をホストするサービスの名前です。</span><span class="sxs-lookup"><span data-stu-id="aece8-110">Name of service hosting the actor type.</span></span> <span data-ttu-id="aece8-111">この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。</span><span class="sxs-lookup"><span data-stu-id="aece8-111">If this value is null then service name is constructed using the actorInterfaceType.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-112">Service Fabric サービスの名前はアクターの種類をホストしています。</span><span class="sxs-lookup"><span data-stu-id="aece8-112">Service Fabric service name hosting the actor type.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
    id: getFabricServiceReplicatorConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 29
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-113\">取得レプリケーター構成セクションのアクター サービス用の構成パッケージで指定された名前。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-113\">Gets the replicator configuration section name specified in configuration package for the actor service.</span></span></p>\n<p><span data-ttu-id=\"aece8-114\">\r\n\r\n  <b>注釈:</b>レプリケーター構成セクションで指定された値を使用して構成する<xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref>アクターの状態のプライマリ レプリカとセカンダリ レプリカの間でレプリケーション用です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-114\">\r\n\r\n  <b>Remarks:</b> Values specified in replicator configuration section are used to configure <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref> for the replication of actor state between primary and secondary replicas.</span></span> </p>"
    syntax:
      content: public static String getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-115">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-115">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-116">レプリケーター構成セクション名。</span><span class="sxs-lookup"><span data-stu-id="aece8-116">Replicator configuration section name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
    id: getFabricServiceReplicatorEndpointName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 69
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-117">アクター サービスのサービス マニフェストに指定されているレプリケーター エンドポイントを取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-117">Gets the replicator endpoint which is specified in service manifest for the actor service.</span></span></p>
      <p></p>
    syntax:
      content: public static String getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-118">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-118">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-119">サービスのレプリケーター エンドポイントの名前。</span><span class="sxs-lookup"><span data-stu-id="aece8-119">Service replicator endpoint name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
    id: getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 85
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-120\">レプリケーター セキュリティの構成セクション アクター サービス用の構成パッケージで指定された名前を取得。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-120\">Gets the replicator security configuration section name specified in configuration package for the actor service.</span></span></p>\n<p><span data-ttu-id=\"aece8-121\">\r\n\r\n  <b>注釈:</b>複製物作成会社のセキュリティ構成 セクションで指定された値を使用して構成<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#securityCredentials</xref>アクターの状態のプライマリ レプリカとセカンダリ レプリカの間でレプリケーション用です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-121\">\r\n\r\n  <b>Remarks:</b> Values specified in replicator security configuration section are used to configure <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#securityCredentials</xref> for the replication of actor state between primary and secondary replicas.</span></span> </p>"
    syntax:
      content: public static String getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-122">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-122">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-123">レプリケーターのセキュリティの構成セクション名。</span><span class="sxs-lookup"><span data-stu-id="aece8-123">Replicator security configuration section name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
    id: getFabricServiceTransportSettingsSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 47
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-124\">アクター サービス用の構成パッケージで指定された fabrictransport 構成セクション名を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-124\">Gets the fabrictransport configuration section name specified in configuration package for the actor service.</span></span></p>\n<p><span data-ttu-id=\"aece8-125\">\r\n\r\n  <b>注釈:</b>FabricTransport 構成セクションで指定された値を使用して構成する<xref uid=\"microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings</xref>通信します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-125\">\r\n\r\n  <b>Remarks:</b>Values specified in FabricTransport configuration section are used to configure <xref uid=\"microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings</xref> for the communication.</span></span> </p>"
    syntax:
      content: public static String getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-126">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-126">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-127">FabricTransport 構成セクション名。</span><span class="sxs-lookup"><span data-stu-id="aece8-127">FabricTransport configuration section name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
    id: getFabricServiceTypeName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceTypeName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 108
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-128">アクターのサービス型の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-128">Gets service type name for the actor.</span></span></p>
      <p></p>
    syntax:
      content: public static String getFabricServiceTypeName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: "<p><span data-ttu-id=\"aece8-129\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>実装の型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-129\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> implementation type.</span></span> </p>"
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-130">サービス型の名前。</span><span class="sxs-lookup"><span data-stu-id="aece8-130">Service type name.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)'
    id: 'getFabricServiceUri(Class<?>,String,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    fullName: 'static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 187
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-131\">サービスの Service Fabric クラスター内のアクターの種類をホストする Uri を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-131\">Gets service Uri which hosts the actor type in Service Fabric cluster.</span></span></p>\n<p><span data-ttu-id=\"aece8-132\">\r\n\r\n  <b>注釈:</b>からアプリケーション名を取得しようとは、applicationName が null または空の文字列として渡されると場合、 <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-132\">\r\n\r\n  <b>Remarks:</b> If applicationName is passed as null or empty string, an attempt is made to get application name from <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>.</span></span> <span data-ttu-id=\"aece8-133\">メソッドはまだアプリケーション名を判別できない場合<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>がスローされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-133\">If the method still cannot determine application name, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> is thrown.</span></span> </p>"
    syntax:
      content: 'public static URI getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-134">アクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-134">Type of the actor interface.</span></span> </p>
        - id: applicationName
          type: '26831127'
          description: '<p><span data-ttu-id="aece8-135">Service Fabric アプリケーションの名前を含む、アクター サービス。</span><span class="sxs-lookup"><span data-stu-id="aece8-135">Service Fabric application name containing the actor service.</span></span> <span data-ttu-id="aece8-136">アプリケーション名がから取得した場合、この値は null <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></span><span class="sxs-lookup"><span data-stu-id="aece8-136">If this value is null application name is obtained from <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></span></span></p>'
        - id: serviceName
          type: '26831127'
          description: <p><span data-ttu-id="aece8-137">アクターの種類をホストするサービスの名前です。</span><span class="sxs-lookup"><span data-stu-id="aece8-137">Name of service hosting the actor type.</span></span> <span data-ttu-id="aece8-138">この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。</span><span class="sxs-lookup"><span data-stu-id="aece8-138">If this value is null then service name is constructed using the actorInterfaceType.</span></span> </p>
      return:
        type: '62304784'
        description: <p><span data-ttu-id="aece8-139">Service Fabric サービスのアクターの種類をホストしている Uri。</span><span class="sxs-lookup"><span data-stu-id="aece8-139">Service Fabric service Uri hosting the actor type.</span></span> </p>
    exceptions:
      - type: 114cf0c6
        description: <p><span data-ttu-id="aece8-140">URISyntaxException がスローされます。</span><span class="sxs-lookup"><span data-stu-id="aece8-140">Throws URISyntaxException</span></span> </p>
      - type: 3c87bd19
        description: <p><span data-ttu-id="aece8-141">使用して applicationName を特定できない場合<xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>です。</span><span class="sxs-lookup"><span data-stu-id="aece8-141">When applicationName cannot be determined using <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)'
    id: 'getFabricServiceUri(Class<?>,URI,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    fullName: 'static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 153
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-142\">サービスの Service Fabric クラスター内のアクターの種類をホストする Uri を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-142\">Gets service Uri which hosts the actor type in Service Fabric cluster.</span></span></p>\n<p><span data-ttu-id=\"aece8-143\">\r\n\r\n  <b>注釈:</b> applicationUri が null または空の文字列として渡される場合からのアプリケーション名を取得する、試行が行われます。 <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-143\">\r\n\r\n  <b>Remarks:</b> If applicationUri is passed as null or empty string, an attempt is made to get application name from <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>.</span></span> <span data-ttu-id=\"aece8-144\">メソッドはまだアプリケーション名を判別できない場合<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>がスローされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-144\">If the method still cannot determine application name, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> is thrown.</span></span> </p>"
    syntax:
      content: 'public static URI getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-145">アクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-145">Type of the actor interface.</span></span> </p>
        - id: applicationUri
          type: '62304784'
          description: '<p><span data-ttu-id="aece8-146">Service Fabric アプリケーション アクター サービスを含む Uri です。</span><span class="sxs-lookup"><span data-stu-id="aece8-146">Service Fabric application Uri containing the actor service.</span></span> <span data-ttu-id="aece8-147">アプリケーション名がから取得した場合、この値は null <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></span><span class="sxs-lookup"><span data-stu-id="aece8-147">If this value is null application name is obtained from <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></span></span></p>'
        - id: serviceName
          type: '26831127'
          description: <p><span data-ttu-id="aece8-148">アクターの種類をホストするサービスの名前です。</span><span class="sxs-lookup"><span data-stu-id="aece8-148">Name of service hosting the actor type.</span></span> <span data-ttu-id="aece8-149">この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。</span><span class="sxs-lookup"><span data-stu-id="aece8-149">If this value is null then service name is constructed using the actorInterfaceType.</span></span> </p>
      return:
        type: '62304784'
        description: <p><span data-ttu-id="aece8-150">Service Fabric サービスのアクターの種類をホストしている Uri。</span><span class="sxs-lookup"><span data-stu-id="aece8-150">Service Fabric service Uri hosting the actor type.</span></span> </p>
    exceptions:
      - type: 114cf0c6
        description: <p><span data-ttu-id="aece8-151">URISyntaxException がスローされます。</span><span class="sxs-lookup"><span data-stu-id="aece8-151">Throws URISyntaxException</span></span> </p>
      - type: 3c87bd19
        description: <p><span data-ttu-id="aece8-152">使用して applicationUri を特定できない場合<xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>です。</span><span class="sxs-lookup"><span data-stu-id="aece8-152">When applicationUri cannot be determined using <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName(Class<?>)
    id: getLocalStoreConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 124
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"aece8-153\">アクター サービス用の構成パッケージで指定されたローカル ストアの構成セクション名を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-153\">Gets local store configuration section name specified in configuration package for the actor service.</span></span></p>\n<p><span data-ttu-id=\"aece8-154\">\r\n\r\n  <b>注釈:</b>ローカル ストアの構成 セクションで指定された値を使用して構成する<xref uid=\"system.fabric._fabric_local_store_settings\" data-throw-if-not-resolved=\"false\">system.fabric.FabricLocalStoreSettings</xref>アクターの状態を格納するためです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"aece8-154\">\r\n\r\n  <b>Remarks:</b>Values specified in local store configuration section are used to configure <xref uid=\"system.fabric._fabric_local_store_settings\" data-throw-if-not-resolved=\"false\">system.fabric.FabricLocalStoreSettings</xref> for storing the state of actor.</span></span> </p>"
    syntax:
      content: public static String getLocalStoreConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-155">アクターを実装するクラスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-155">Type of class implementing the actor.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-156">ローカル ストアの構成セクション名。</span><span class="sxs-lookup"><span data-stu-id="aece8-156">Local store configuration section name.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
    id: getName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getName(Class<?> actorInterfaceType)
    nameWithType: ActorNameFormat.getName(Class<?> actorInterfaceType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getName(Class<?> actorInterfaceType)
    overload: microsoft.servicefabric.actors._actor_name_format.getName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 232
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="aece8-157">名前を取得<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref> actorInterfaceType からです。</span><span class="sxs-lookup"><span data-stu-id="aece8-157">Gets name of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> from actorInterfaceType.</span></span></p>
      <p></p>
    syntax:
      content: public static String getName(Class<?> actorInterfaceType)
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p><span data-ttu-id="aece8-158">アクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="aece8-158">Type of the actor interface.</span></span> </p>
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-159">名前<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>です。</span><span class="sxs-lookup"><span data-stu-id="aece8-159">Name of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref>.</span></span> </p>
references:
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
    name: getFabricServiceReplicatorConfigSectionName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
    name: getFabricServiceTransportSettingsSectionName
    nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
    name: getConfigPackageName
    nameWithType: ActorNameFormat.getConfigPackageName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
    name: getFabricServiceReplicatorEndpointName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
    name: getFabricServiceReplicatorSecurityConfigSectionName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
    name: getFabricServiceEndpointName
    nameWithType: ActorNameFormat.getFabricServiceEndpointName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
    name: getFabricServiceTypeName
    nameWithType: ActorNameFormat.getFabricServiceTypeName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName*
    name: getLocalStoreConfigSectionName
    nameWithType: ActorNameFormat.getLocalStoreConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getLocalStoreConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: 114cf0c6
    spec.java:
      - name: java.net.URISyntaxException
        fullName: java.net.URISyntaxException
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    name: getFabricServiceUri
    nameWithType: ActorNameFormat.getFabricServiceUri
    fullName: static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
    name: getFabricServiceName
    nameWithType: ActorNameFormat.getFabricServiceName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getName*
    name: getName
    nameWithType: ActorNameFormat.getName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getName
    package: microsoft.servicefabric.actors
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings
    parent: microsoft.servicefabric.fabrictransport.runtime
    href: microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings.yml
    name: FabricTransportListenerSettings
    nameWithType: FabricTransportListenerSettings
    fullName: microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings
    type: Class
    syntax:
      content: public class FabricTransportListenerSettings
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="aece8-160">信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="aece8-160">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor
  - uid: system.fabric._fabric_local_store_settings
    parent: system.fabric
    href: system.fabric._fabric_local_store_settings.yml
    name: FabricLocalStoreSettings
    nameWithType: FabricLocalStoreSettings
    fullName: system.fabric.FabricLocalStoreSettings
    type: Class
    summary: <p><span data-ttu-id="aece8-161">新しいインスタンスを初期化、 <xref uid="system.fabric._fabric_local_store_settings" data-throw-if-not-resolved="false">FabricLocalStoreSettings</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="aece8-161">Initializes a new instance of the <xref uid="system.fabric._fabric_local_store_settings" data-throw-if-not-resolved="false">FabricLocalStoreSettings</xref> class.</span></span> </p>
    syntax:
      content: public class FabricLocalStoreSettings
  - uid: system.fabric._code_package_activation_context.getApplicationName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationName()
    nameWithType: CodePackageActivationContext.getApplicationName()
    fullName: String system.fabric.CodePackageActivationContext.getApplicationName()
    type: Method
    summary: |-
      <p><span data-ttu-id="aece8-162">アプリケーションの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="aece8-162">Gets the name of the application.</span></span></p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="aece8-163">アプリケーションの名前です。</span><span class="sxs-lookup"><span data-stu-id="aece8-163">The name of the application.</span></span> </p>
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: <p><span data-ttu-id="aece8-164">Service Fabric サービスのアクティブ化コンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="aece8-164">Represents activation context for the Service Fabric service.</span></span> <span data-ttu-id="aece8-165">これは、ファブリックのアクティブ化サービスでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="aece8-165">This is valid for fabric activated service only.</span></span> </p>
    syntax:
      content: public interface CodePackageActivationContext