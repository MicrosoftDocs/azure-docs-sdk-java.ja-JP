### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_name_format
    id: _actor_name_format
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)'
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)'
      - 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)'
      - microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName(Class<?>)
      - microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: ActorNameFormat
    nameWithType: ActorNameFormat
    fullName: microsoft.servicefabric.actors.ActorNameFormat
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 13
    package: microsoft.servicefabric.actors
    summary: <p>サービス名、アプリケーション名の形式、アクター インターフェイスの型のように名前を生成するための静的メソッドが含まれています。 </p>
    syntax:
      content: public class ActorNameFormat
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName(Class<?>)
    id: getConfigPackageName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getConfigPackageName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 58
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクター サービス パッケージで使用される構成パッケージ名を取得します。</p>
      <p></p>
    syntax:
      content: public static String getConfigPackageName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>構成パッケージの名前です。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName(Class<?>)
    id: getFabricServiceEndpointName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceEndpointName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 97
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクター サービスのサービス マニフェストに指定されているアクターの種類のサービス エンドポイントを取得します。</p>
      <p></p>
    syntax:
      content: public static String getFabricServiceEndpointName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>サービス エンドポイントの名前。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceName(Class<?>,String)'
    id: 'getFabricServiceName(Class<?>,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    fullName: 'static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 220
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Service Fabric クラスター内のアクターの種類をホストするサービスの名前を取得します。</p>
      <p></p>
    syntax:
      content: 'public static String getFabricServiceName(Class<?> actorInterfaceType, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p>アクター インターフェイスの型。 </p>
        - id: serviceName
          type: '26831127'
          description: <p>アクターの種類をホストするサービスの名前です。 この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。 </p>
      return:
        type: '26831127'
        description: <p>Service Fabric サービスの名前はアクターの種類をホストしています。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName(Class<?>)
    id: getFabricServiceReplicatorConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 29
    package: microsoft.servicefabric.actors
    summary: "<p>取得レプリケーター構成セクションのアクター サービス用の構成パッケージで指定された名前。</p>\n<p>\r\n\r\n  <b>注釈:</b>レプリケーター構成セクションで指定された値を使用して構成する<xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref>アクターの状態のプライマリ レプリカとセカンダリ レプリカの間でレプリケーション用です。 </p>"
    syntax:
      content: public static String getFabricServiceReplicatorConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>レプリケーター構成セクション名。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName(Class<?>)
    id: getFabricServiceReplicatorEndpointName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 69
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクター サービスのサービス マニフェストに指定されているレプリケーター エンドポイントを取得します。</p>
      <p></p>
    syntax:
      content: public static String getFabricServiceReplicatorEndpointName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>サービスのレプリケーター エンドポイントの名前。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
    id: getFabricServiceReplicatorSecurityConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 85
    package: microsoft.servicefabric.actors
    summary: "<p>レプリケーター セキュリティの構成セクション アクター サービス用の構成パッケージで指定された名前を取得。</p>\n<p>\r\n\r\n  <b>注釈:</b>複製物作成会社のセキュリティ構成 セクションで指定された値を使用して構成<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#securityCredentials</xref>アクターの状態のプライマリ レプリカとセカンダリ レプリカの間でレプリケーション用です。 </p>"
    syntax:
      content: public static String getFabricServiceReplicatorSecurityConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>レプリケーターのセキュリティの構成セクション名。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName(Class<?>)
    id: getFabricServiceTransportSettingsSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 47
    package: microsoft.servicefabric.actors
    summary: "<p>アクター サービス用の構成パッケージで指定された fabrictransport 構成セクション名を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>FabricTransport 構成セクションで指定された値を使用して構成する<xref uid=\"microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings</xref>通信します。 </p>"
    syntax:
      content: public static String getFabricServiceTransportSettingsSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>FabricTransport 構成セクション名。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName(Class<?>)
    id: getFabricServiceTypeName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getFabricServiceTypeName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 108
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクターのサービス型の名前を取得します。</p>
      <p></p>
    syntax:
      content: public static String getFabricServiceTypeName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>実装の型。 </p>"
      return:
        type: '26831127'
        description: <p>サービス型の名前。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,String,String)'
    id: 'getFabricServiceUri(Class<?>,String,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    fullName: 'static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 187
    package: microsoft.servicefabric.actors
    summary: "<p>サービスの Service Fabric クラスター内のアクターの種類をホストする Uri を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>からアプリケーション名を取得しようとは、applicationName が null または空の文字列として渡されると場合、 <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>です。 メソッドはまだアプリケーション名を判別できない場合<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>がスローされます。 </p>"
    syntax:
      content: 'public static URI getFabricServiceUri(Class<?> actorInterfaceType, String applicationName, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p>アクター インターフェイスの型。 </p>
        - id: applicationName
          type: '26831127'
          description: '<p>Service Fabric アプリケーションの名前を含む、アクター サービス。 アプリケーション名がから取得した場合、この値は null <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></p>'
        - id: serviceName
          type: '26831127'
          description: <p>アクターの種類をホストするサービスの名前です。 この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。 </p>
      return:
        type: '62304784'
        description: <p>Service Fabric サービスのアクターの種類をホストしている Uri。 </p>
    exceptions:
      - type: 114cf0c6
        description: <p>URISyntaxException がスローされます。 </p>
      - type: 3c87bd19
        description: <p>使用して applicationName を特定できない場合<xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>です。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri(Class<?>,URI,String)'
    id: 'getFabricServiceUri(Class<?>,URI,String)'
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: 'getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    nameWithType: 'ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    fullName: 'static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 153
    package: microsoft.servicefabric.actors
    summary: "<p>サービスの Service Fabric クラスター内のアクターの種類をホストする Uri を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b> applicationUri が null または空の文字列として渡される場合からのアプリケーション名を取得する、試行が行われます。 <xref uid=\"system.fabric._code_package_activation_context\" data-throw-if-not-resolved=\"false\">system.fabric.CodePackageActivationContext</xref>です。 メソッドはまだアプリケーション名を判別できない場合<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>がスローされます。 </p>"
    syntax:
      content: 'public static URI getFabricServiceUri(Class<?> actorInterfaceType, URI applicationUri, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p>アクター インターフェイスの型。 </p>
        - id: applicationUri
          type: '62304784'
          description: '<p>Service Fabric アプリケーション アクター サービスを含む Uri です。 アプリケーション名がから取得した場合、この値は null <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref></p>'
        - id: serviceName
          type: '26831127'
          description: <p>アクターの種類をホストするサービスの名前です。 この値が null の場合サービス名は、使用して、actorInterfaceType で作成されます。 </p>
      return:
        type: '62304784'
        description: <p>Service Fabric サービスのアクターの種類をホストしている Uri。 </p>
    exceptions:
      - type: 114cf0c6
        description: <p>URISyntaxException がスローされます。 </p>
      - type: 3c87bd19
        description: <p>使用して applicationUri を特定できない場合<xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>です。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName(Class<?>)
    id: getLocalStoreConfigSectionName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    nameWithType: ActorNameFormat.getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getLocalStoreConfigSectionName(Class<?> actorImplementationType)
    overload: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 124
    package: microsoft.servicefabric.actors
    summary: "<p>アクター サービス用の構成パッケージで指定されたローカル ストアの構成セクション名を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ローカル ストアの構成 セクションで指定された値を使用して構成する<xref uid=\"system.fabric._fabric_local_store_settings\" data-throw-if-not-resolved=\"false\">system.fabric.FabricLocalStoreSettings</xref>アクターの状態を格納するためです。 </p>"
    syntax:
      content: public static String getLocalStoreConfigSectionName(Class<?> actorImplementationType)
      parameters:
        - id: actorImplementationType
          type: a19781f8
          description: <p>アクターを実装するクラスの型。 </p>
      return:
        type: '26831127'
        description: <p>ローカル ストアの構成セクション名。 </p>
  - uid: microsoft.servicefabric.actors._actor_name_format.getName(Class<?>)
    id: getName(Class<?>)
    parent: microsoft.servicefabric.actors._actor_name_format
    href: microsoft.servicefabric.actors._actor_name_format.yml
    langs:
      - java
    name: getName(Class<?> actorInterfaceType)
    nameWithType: ActorNameFormat.getName(Class<?> actorInterfaceType)
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getName(Class<?> actorInterfaceType)
    overload: microsoft.servicefabric.actors._actor_name_format.getName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorNameFormat.java
      startLine: 232
    package: microsoft.servicefabric.actors
    summary: |-
      <p>名前を取得<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref> actorInterfaceType からです。</p>
      <p></p>
    syntax:
      content: public static String getName(Class<?> actorInterfaceType)
      parameters:
        - id: actorInterfaceType
          type: a19781f8
          description: <p>アクター インターフェイスの型。 </p>
      return:
        type: '26831127'
        description: <p>名前<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>です。 </p>
references:
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorConfigSectionName*
    name: getFabricServiceReplicatorConfigSectionName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTransportSettingsSectionName*
    name: getFabricServiceTransportSettingsSectionName
    nameWithType: ActorNameFormat.getFabricServiceTransportSettingsSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTransportSettingsSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getConfigPackageName*
    name: getConfigPackageName
    nameWithType: ActorNameFormat.getConfigPackageName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getConfigPackageName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorEndpointName*
    name: getFabricServiceReplicatorEndpointName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorEndpointName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorEndpointName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceReplicatorSecurityConfigSectionName*
    name: getFabricServiceReplicatorSecurityConfigSectionName
    nameWithType: ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceReplicatorSecurityConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceEndpointName*
    name: getFabricServiceEndpointName
    nameWithType: ActorNameFormat.getFabricServiceEndpointName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceEndpointName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceTypeName*
    name: getFabricServiceTypeName
    nameWithType: ActorNameFormat.getFabricServiceTypeName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceTypeName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getLocalStoreConfigSectionName*
    name: getLocalStoreConfigSectionName
    nameWithType: ActorNameFormat.getLocalStoreConfigSectionName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getLocalStoreConfigSectionName
    package: microsoft.servicefabric.actors
  - uid: 114cf0c6
    spec.java:
      - name: java.net.URISyntaxException
        fullName: java.net.URISyntaxException
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceUri*
    name: getFabricServiceUri
    nameWithType: ActorNameFormat.getFabricServiceUri
    fullName: static URI microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceUri
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getFabricServiceName*
    name: getFabricServiceName
    nameWithType: ActorNameFormat.getFabricServiceName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getFabricServiceName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_name_format.getName*
    name: getName
    nameWithType: ActorNameFormat.getName
    fullName: static String microsoft.servicefabric.actors.ActorNameFormat.getName
    package: microsoft.servicefabric.actors
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings
    parent: microsoft.servicefabric.fabrictransport.runtime
    href: microsoft.servicefabric.fabrictransport.runtime._fabric_transport_listener_settings.yml
    name: FabricTransportListenerSettings
    nameWithType: FabricTransportListenerSettings
    fullName: microsoft.servicefabric.fabrictransport.runtime.FabricTransportListenerSettings
    type: Class
    syntax:
      content: public class FabricTransportListenerSettings
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。 </p>
    syntax:
      content: public interface Actor
  - uid: system.fabric._fabric_local_store_settings
    parent: system.fabric
    href: system.fabric._fabric_local_store_settings.yml
    name: FabricLocalStoreSettings
    nameWithType: FabricLocalStoreSettings
    fullName: system.fabric.FabricLocalStoreSettings
    type: Class
    summary: <p>新しいインスタンスを初期化、 <xref uid="system.fabric._fabric_local_store_settings" data-throw-if-not-resolved="false">FabricLocalStoreSettings</xref>クラスです。 </p>
    syntax:
      content: public class FabricLocalStoreSettings
  - uid: system.fabric._code_package_activation_context.getApplicationName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationName()
    nameWithType: CodePackageActivationContext.getApplicationName()
    fullName: String system.fabric.CodePackageActivationContext.getApplicationName()
    type: Method
    summary: |-
      <p>アプリケーションの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p>アプリケーションの名前です。 </p>
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax:
      content: public interface CodePackageActivationContext