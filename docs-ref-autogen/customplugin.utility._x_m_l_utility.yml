### YamlMime:ManagedReference
items:
  - uid: customplugin.utility._x_m_l_utility
    id: _x_m_l_utility
    parent: customplugin.utility
    children:
      - 'customplugin.utility._x_m_l_utility.addNode(String,Node)'
      - 'customplugin.utility._x_m_l_utility.addNodeBeforeNode(String,Node,Node)'
      - 'customplugin.utility._x_m_l_utility.addNodeBeforeNodeWithAttributes(String,LinkedHashMap<String, String>,Node,Node)'
      - 'customplugin.utility._x_m_l_utility.addNodeWithAttributes(String,LinkedHashMap<String, String>,Node)'
      - 'customplugin.utility._x_m_l_utility.addNodeWithValue(String,String,Node)'
      - 'customplugin.utility._x_m_l_utility.getNode(String,NodeList)'
      - 'customplugin.utility._x_m_l_utility.getNodeAttr(String,Node)'
      - 'customplugin.utility._x_m_l_utility.getNodeAttrValue(String,Node)'
      - 'customplugin.utility._x_m_l_utility.getNodeAttrValue(String,String,NodeList)'
      - 'customplugin.utility._x_m_l_utility.getNodes(String,NodeList)'
      - customplugin.utility._x_m_l_utility.getNodeValue(Node)
      - 'customplugin.utility._x_m_l_utility.getNodeValue(String,NodeList)'
      - customplugin.utility._x_m_l_utility.loadDocumentFromFile(String)
      - 'customplugin.utility._x_m_l_utility.loadDocumentFromFile(String,String)'
      - customplugin.utility._x_m_l_utility.loadDocumentFromInputStream(InputStream)
      - 'customplugin.utility._x_m_l_utility.setNodeAttrValue(String,String,Node)'
      - 'customplugin.utility._x_m_l_utility.writeDocumentToFile(Document,String)'
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: XMLUtility
    nameWithType: XMLUtility
    fullName: customplugin.utility.XMLUtility
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 41
    package: customplugin.utility
    summary: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._utility\" data-throw-if-not-resolved=\"false\">ユーティリティ</xref>XML のクラスの機能に関連します。</p>\n\n<p></p>"
    syntax:
      content: public class XMLUtility
    inheritance:
      - java.lang.Object
  - uid: 'customplugin.utility._x_m_l_utility.addNode(String,Node)'
    id: 'addNode(String,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'addNode(String tagName, Node parent)'
    nameWithType: 'XMLUtility.addNode(String tagName, Node parent)'
    fullName: 'static Node customplugin.utility.XMLUtility.addNode(String tagName, Node parent)'
    overload: customplugin.utility._x_m_l_utility.addNode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 313
    package: customplugin.utility
    summary: |-
      <p>作成し、xml で、親の下に新しいノードを追加、タグの名前と親ノードを指定するには、dom</p>
      <p></p>
    syntax:
      content: 'public static Node addNode(String tagName, Node parent)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: parent
          type: 44693a6c
      return:
        type: 44693a6c
        description: <p>XML dom で新しく追加されたノード </p>
  - uid: 'customplugin.utility._x_m_l_utility.addNodeBeforeNode(String,Node,Node)'
    id: 'addNodeBeforeNode(String,Node,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'addNodeBeforeNode(String tagName, Node refNode, Node parent)'
    nameWithType: 'XMLUtility.addNodeBeforeNode(String tagName, Node refNode, Node parent)'
    fullName: 'static Node customplugin.utility.XMLUtility.addNodeBeforeNode(String tagName, Node refNode, Node parent)'
    overload: customplugin.utility._x_m_l_utility.addNodeBeforeNode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 367
    package: customplugin.utility
    summary: |-
      <p>特定のタグ名参照ノードと親ノードを作成し、参照ノードの前に親の下に新しいノードを追加します</p>
      <p></p>
    syntax:
      content: 'public static Node addNodeBeforeNode(String tagName, Node refNode, Node parent)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: refNode
          type: 44693a6c
        - id: parent
          type: 44693a6c
      return:
        type: 44693a6c
  - uid: 'customplugin.utility._x_m_l_utility.addNodeBeforeNodeWithAttributes(String,LinkedHashMap<String, String>,Node,Node)'
    id: 'addNodeBeforeNodeWithAttributes(String,LinkedHashMap<String, String>,Node,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'addNodeBeforeNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node refNode, Node parent)'
    nameWithType: 'XMLUtility.addNodeBeforeNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node refNode, Node parent)'
    fullName: 'static Node customplugin.utility.XMLUtility.addNodeBeforeNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node refNode, Node parent)'
    overload: customplugin.utility._x_m_l_utility.addNodeBeforeNodeWithAttributes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 386
    package: customplugin.utility
    summary: |-
      <p>タグ名、属性値のマップとの参照と親ノードのペアを指定するには、この関数を作成し、xml で参照ノードの前に親ノードの下の属性の設定、入力タグ名を含む新しいノードを追加 dom</p>
      <p></p>
    syntax:
      content: 'public static Node addNodeBeforeNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node refNode, Node parent)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: attributes
          type: d96ee175
        - id: refNode
          type: 44693a6c
        - id: parent
          type: 44693a6c
      return:
        type: 44693a6c
  - uid: 'customplugin.utility._x_m_l_utility.addNodeWithAttributes(String,LinkedHashMap<String, String>,Node)'
    id: 'addNodeWithAttributes(String,LinkedHashMap<String, String>,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'addNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node parent)'
    nameWithType: 'XMLUtility.addNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node parent)'
    fullName: 'static Node customplugin.utility.XMLUtility.addNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node parent)'
    overload: customplugin.utility._x_m_l_utility.addNodeWithAttributes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 348
    package: customplugin.utility
    summary: |-
      <p>Givent タグ名、属性の値、および親ノードのマップを作成し、属性を持つ新しいノードを追加および、XML dom の指定した親の下のノードを追加</p>
      <p></p>
    syntax:
      content: 'public static Node addNodeWithAttributes(String tagName, LinkedHashMap<String, String> attributes, Node parent)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: attributes
          type: d96ee175
        - id: parent
          type: 44693a6c
      return:
        type: 44693a6c
  - uid: 'customplugin.utility._x_m_l_utility.addNodeWithValue(String,String,Node)'
    id: 'addNodeWithValue(String,String,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'addNodeWithValue(String tagName, String value, Node parent)'
    nameWithType: 'XMLUtility.addNodeWithValue(String tagName, String value, Node parent)'
    fullName: 'static Node customplugin.utility.XMLUtility.addNodeWithValue(String tagName, String value, Node parent)'
    overload: customplugin.utility._x_m_l_utility.addNodeWithValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 329
    package: customplugin.utility
    summary: |-
      <p>タグ名、値、および親ノードを考慮して、作成し、XML dom の指定された値、親の下の新しいノードを追加</p>
      <p></p>
    syntax:
      content: 'public static Node addNodeWithValue(String tagName, String value, Node parent)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: value
          type: '26831127'
        - id: parent
          type: 44693a6c
      return:
        type: 44693a6c
        description: <p>ノードでは、新しく作成され、XML dom に追加されました </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNode(String,NodeList)'
    id: 'getNode(String,NodeList)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNode(String tagName, NodeList nodes)'
    nameWithType: 'XMLUtility.getNode(String tagName, NodeList nodes)'
    fullName: 'static Node customplugin.utility.XMLUtility.getNode(String tagName, NodeList nodes)'
    overload: customplugin.utility._x_m_l_utility.getNode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 151
    package: customplugin.utility
    summary: |-
      <p>ノードとタグ名の一覧を指定したノードを返します</p>
      <p></p>
    syntax:
      content: 'public static Node getNode(String tagName, NodeList nodes)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: nodes
          type: 8110ecd4
      return:
        type: 44693a6c
        description: <p>ノードの対応するオブジェクト </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNodeAttr(String,Node)'
    id: 'getNodeAttr(String,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNodeAttr(String attrName, Node node)'
    nameWithType: 'XMLUtility.getNodeAttr(String attrName, Node node)'
    fullName: 'Node customplugin.utility.XMLUtility.getNodeAttr(String attrName, Node node)'
    overload: customplugin.utility._x_m_l_utility.getNodeAttr*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 224
    package: customplugin.utility
    summary: |-
      <p>ノード属性を返すノードと属性の名前を指定するには、</p>
      <p></p>
    syntax:
      content: 'public Node getNodeAttr(String attrName, Node node)'
      parameters:
        - id: attrName
          type: '26831127'
        - id: node
          type: 44693a6c
      return:
        type: 44693a6c
        description: <p>これは、入力ノードに属性ノード </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNodeAttrValue(String,Node)'
    id: 'getNodeAttrValue(String,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNodeAttrValue(String attrName, Node node)'
    nameWithType: 'XMLUtility.getNodeAttrValue(String attrName, Node node)'
    fullName: 'static String customplugin.utility.XMLUtility.getNodeAttrValue(String attrName, Node node)'
    overload: customplugin.utility._x_m_l_utility.getNodeAttrValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 244
    package: customplugin.utility
    summary: |-
      <p>ノード属性のテキスト値を返す、属性名とノードを指定するには、</p>
      <p></p>
    syntax:
      content: 'public static String getNodeAttrValue(String attrName, Node node)'
      parameters:
        - id: attrName
          type: '26831127'
        - id: node
          type: 44693a6c
      return:
        type: '26831127'
        description: <p>文字列テキストの入力ノードに対応する属性の値。 </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNodeAttrValue(String,String,NodeList)'
    id: 'getNodeAttrValue(String,String,NodeList)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNodeAttrValue(String tagName, String attrName, NodeList nodes)'
    nameWithType: 'XMLUtility.getNodeAttrValue(String tagName, String attrName, NodeList nodes)'
    fullName: 'static String customplugin.utility.XMLUtility.getNodeAttrValue(String tagName, String attrName, NodeList nodes)'
    overload: customplugin.utility._x_m_l_utility.getNodeAttrValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 288
    package: customplugin.utility
    summary: |-
      <p>タグ名、属性名とノード一覧を返します、タグ名と一致するノードの属性の値</p>
      <p></p>
    syntax:
      content: 'public static String getNodeAttrValue(String tagName, String attrName, NodeList nodes)'
      parameters:
        - id: tagName
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>タグの名前 </p>

                </listitem>

              </itemizedlist>

            </p>
        - id: attrName
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>属性の名前 </p>

                </listitem>

              </itemizedlist>

            </p>
        - id: nodes
          type: 8110ecd4
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>検索するノードの一覧 </p>

                </listitem>

              </itemizedlist>

            </p>
      return:
        type: '26831127'
        description: <p>文字列であるタグ名と一致するノードの属性の値 </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNodes(String,NodeList)'
    id: 'getNodes(String,NodeList)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNodes(String tagName, NodeList nodes)'
    nameWithType: 'XMLUtility.getNodes(String tagName, NodeList nodes)'
    fullName: 'static List<Node> customplugin.utility.XMLUtility.getNodes(String tagName, NodeList nodes)'
    overload: customplugin.utility._x_m_l_utility.getNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 167
    package: customplugin.utility
    summary: <p>ノードのリスト、指定されたタグ名と一致するノードの新しい一覧を返します </p>
    syntax:
      content: 'public static List<Node> getNodes(String tagName, NodeList nodes)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: nodes
          type: 8110ecd4
      return:
        type: 112fc0a1
        description: <p>タグと一致するノードの一覧 </p>
  - uid: customplugin.utility._x_m_l_utility.getNodeValue(Node)
    id: getNodeValue(Node)
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: getNodeValue(Node node)
    nameWithType: XMLUtility.getNodeValue(Node node)
    fullName: static String customplugin.utility.XMLUtility.getNodeValue(Node node)
    overload: customplugin.utility._x_m_l_utility.getNodeValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 184
    package: customplugin.utility
    summary: |-
      <p>特定のノード、ノードの対応する値を返します</p>
      <p></p>
    syntax:
      content: public static String getNodeValue(Node node)
      parameters:
        - id: node
          type: 44693a6c
      return:
        type: '26831127'
        description: <p>文字列であるノードのテキスト値 </p>
  - uid: 'customplugin.utility._x_m_l_utility.getNodeValue(String,NodeList)'
    id: 'getNodeValue(String,NodeList)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'getNodeValue(String tagName, NodeList nodes)'
    nameWithType: 'XMLUtility.getNodeValue(String tagName, NodeList nodes)'
    fullName: 'static String customplugin.utility.XMLUtility.getNodeValue(String tagName, NodeList nodes)'
    overload: customplugin.utility._x_m_l_utility.getNodeValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 202
    package: customplugin.utility
    summary: |-
      <p>指定された、タグ名とノードの一覧では、対応するノードの値を返します</p>
      <p></p>
    syntax:
      content: 'public static String getNodeValue(String tagName, NodeList nodes)'
      parameters:
        - id: tagName
          type: '26831127'
        - id: nodes
          type: 8110ecd4
      return:
        type: '26831127'
        description: <p>文字列である、対応するノードの値 </p>
  - uid: customplugin.utility._x_m_l_utility.loadDocumentFromFile(String)
    id: loadDocumentFromFile(String)
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: loadDocumentFromFile(String filePath)
    nameWithType: XMLUtility.loadDocumentFromFile(String filePath)
    fullName: static Document customplugin.utility.XMLUtility.loadDocumentFromFile(String filePath)
    overload: customplugin.utility._x_m_l_utility.loadDocumentFromFile*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 53
    package: customplugin.utility
    summary: |-
      <p>ドキュメントを作成するオブジェクトから指定された XML ファイルのパス</p>
      <p></p>
    syntax:
      content: public static Document loadDocumentFromFile(String filePath)
      parameters:
        - id: filePath
          type: '26831127'
      return:
        type: '98354509'
        description: <p>ドキュメントの XML ファイルのドキュメント オブジェクトの表現 </p>
    exceptions:
      - type: 3d34ae3a
      - type: 38ec2a1f
      - type: cbf33bbe
  - uid: 'customplugin.utility._x_m_l_utility.loadDocumentFromFile(String,String)'
    id: 'loadDocumentFromFile(String,String)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'loadDocumentFromFile(String projectName, String relativeFilePathInProject)'
    nameWithType: 'XMLUtility.loadDocumentFromFile(String projectName, String relativeFilePathInProject)'
    fullName: 'static Document customplugin.utility.XMLUtility.loadDocumentFromFile(String projectName, String relativeFilePathInProject)'
    overload: customplugin.utility._x_m_l_utility.loadDocumentFromFile*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 63
    package: customplugin.utility
    syntax:
      content: 'public static Document loadDocumentFromFile(String projectName, String relativeFilePathInProject)'
      parameters:
        - id: projectName
          type: '26831127'
        - id: relativeFilePathInProject
          type: '26831127'
      return:
        type: '98354509'
  - uid: customplugin.utility._x_m_l_utility.loadDocumentFromInputStream(InputStream)
    id: loadDocumentFromInputStream(InputStream)
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: loadDocumentFromInputStream(InputStream in)
    nameWithType: XMLUtility.loadDocumentFromInputStream(InputStream in)
    fullName: static Document customplugin.utility.XMLUtility.loadDocumentFromInputStream(InputStream in)
    overload: customplugin.utility._x_m_l_utility.loadDocumentFromInputStream*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 101
    package: customplugin.utility
    summary: |-
      <p>入力ストリームからのドキュメント オブジェクトを作成します。</p>
      <p></p>
    syntax:
      content: public static Document loadDocumentFromInputStream(InputStream in)
      parameters:
        - id: in
          type: 76fcb9b7
          description: <p>入力ストリーム </p>
      return:
        type: '98354509'
        description: <p>ドキュメントの入力ストリームのドキュメント オブジェクトの表現 </p>
    exceptions:
      - type: 3d34ae3a
      - type: 38ec2a1f
      - type: cbf33bbe
  - uid: 'customplugin.utility._x_m_l_utility.setNodeAttrValue(String,String,Node)'
    id: 'setNodeAttrValue(String,String,Node)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'setNodeAttrValue(String attrName, String newAttrValue, Node node)'
    nameWithType: 'XMLUtility.setNodeAttrValue(String attrName, String newAttrValue, Node node)'
    fullName: 'static void customplugin.utility.XMLUtility.setNodeAttrValue(String attrName, String newAttrValue, Node node)'
    overload: customplugin.utility._x_m_l_utility.setNodeAttrValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 266
    package: customplugin.utility
    summary: |-
      <p>属性の新しい値を設定するノードおよび属性名を指定するには、</p>
      <p></p>
    syntax:
      content: 'public static void setNodeAttrValue(String attrName, String newAttrValue, Node node)'
      parameters:
        - id: attrName
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>属性の名前 </p>

                </listitem>

              </itemizedlist>

            </p>
        - id: newAttrValue
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>属性の新しい値 </p>

                </listitem>

              </itemizedlist>

            </p>
        - id: node
          type: 44693a6c
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>ノードの下の考慮事項 </p>

                </listitem>

              </itemizedlist>

            </p>
  - uid: 'customplugin.utility._x_m_l_utility.writeDocumentToFile(Document,String)'
    id: 'writeDocumentToFile(Document,String)'
    parent: customplugin.utility._x_m_l_utility
    href: customplugin.utility._x_m_l_utility.yml
    langs:
      - java
    name: 'writeDocumentToFile(Document doc, String resFilePath)'
    nameWithType: 'XMLUtility.writeDocumentToFile(Document doc, String resFilePath)'
    fullName: 'static void customplugin.utility.XMLUtility.writeDocumentToFile(Document doc, String resFilePath)'
    overload: customplugin.utility._x_m_l_utility.writeDocumentToFile*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/XMLUtility.java
      startLine: 123
    package: customplugin.utility
    summary: |-
      <p>オブジェクトの特定のドキュメントと出力ファイル名、ドキュメント オブジェクトを作成するには、ファイル パスを指定</p>
      <p></p>
    syntax:
      content: 'public static void writeDocumentToFile(Document doc, String resFilePath)'
      parameters:
        - id: doc
          type: '98354509'
          description: <p>書き込まれるドキュメント オブジェクト </p>
        - id: resFilePath
          type: '26831127'
          description: <p>ドキュメント オブジェクトがする必要がある FilePath 書き込まれます </p>
    exceptions:
      - type: 7c6d07eb
      - type: d5427e37
      - type: 4cd81049
references:
  - uid: 3d34ae3a
    spec.java:
      - name: ParserConfigurationException
        fullName: ParserConfigurationException
  - uid: 38ec2a1f
    spec.java:
      - name: SAXException
        fullName: SAXException
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: '98354509'
    spec.java:
      - name: Document
        fullName: Document
  - uid: customplugin.utility._x_m_l_utility.loadDocumentFromFile*
    name: loadDocumentFromFile
    nameWithType: XMLUtility.loadDocumentFromFile
    fullName: static Document customplugin.utility.XMLUtility.loadDocumentFromFile
    package: customplugin.utility
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: customplugin.utility._x_m_l_utility.loadDocumentFromInputStream*
    name: loadDocumentFromInputStream
    nameWithType: XMLUtility.loadDocumentFromInputStream
    fullName: static Document customplugin.utility.XMLUtility.loadDocumentFromInputStream
    package: customplugin.utility
  - uid: 7c6d07eb
    spec.java:
      - name: FileNotFoundException
        fullName: FileNotFoundException
  - uid: d5427e37
    spec.java:
      - name: UnsupportedEncodingException
        fullName: UnsupportedEncodingException
  - uid: 4cd81049
    spec.java:
      - name: TransformerException
        fullName: TransformerException
  - uid: customplugin.utility._x_m_l_utility.writeDocumentToFile*
    name: writeDocumentToFile
    nameWithType: XMLUtility.writeDocumentToFile
    fullName: static void customplugin.utility.XMLUtility.writeDocumentToFile
    package: customplugin.utility
  - uid: 8110ecd4
    spec.java:
      - name: NodeList
        fullName: NodeList
  - uid: 44693a6c
    spec.java:
      - name: Node
        fullName: Node
  - uid: customplugin.utility._x_m_l_utility.getNode*
    name: getNode
    nameWithType: XMLUtility.getNode
    fullName: static Node customplugin.utility.XMLUtility.getNode
    package: customplugin.utility
  - uid: 112fc0a1
    spec.java:
      - name: List<Node>
        fullName: List<Node>
  - uid: customplugin.utility._x_m_l_utility.getNodes*
    name: getNodes
    nameWithType: XMLUtility.getNodes
    fullName: static List<Node> customplugin.utility.XMLUtility.getNodes
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.getNodeValue*
    name: getNodeValue
    nameWithType: XMLUtility.getNodeValue
    fullName: static String customplugin.utility.XMLUtility.getNodeValue
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.getNodeAttrValue*
    name: getNodeAttrValue
    nameWithType: XMLUtility.getNodeAttrValue
    fullName: static String customplugin.utility.XMLUtility.getNodeAttrValue
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.setNodeAttrValue*
    name: setNodeAttrValue
    nameWithType: XMLUtility.setNodeAttrValue
    fullName: static void customplugin.utility.XMLUtility.setNodeAttrValue
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.addNode*
    name: addNode
    nameWithType: XMLUtility.addNode
    fullName: static Node customplugin.utility.XMLUtility.addNode
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.addNodeWithValue*
    name: addNodeWithValue
    nameWithType: XMLUtility.addNodeWithValue
    fullName: static Node customplugin.utility.XMLUtility.addNodeWithValue
    package: customplugin.utility
  - uid: d96ee175
    spec.java:
      - name: 'LinkedHashMap<String, String>'
        fullName: 'LinkedHashMap<String, String>'
  - uid: customplugin.utility._x_m_l_utility.addNodeWithAttributes*
    name: addNodeWithAttributes
    nameWithType: XMLUtility.addNodeWithAttributes
    fullName: static Node customplugin.utility.XMLUtility.addNodeWithAttributes
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.addNodeBeforeNode*
    name: addNodeBeforeNode
    nameWithType: XMLUtility.addNodeBeforeNode
    fullName: static Node customplugin.utility.XMLUtility.addNodeBeforeNode
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.addNodeBeforeNodeWithAttributes*
    name: addNodeBeforeNodeWithAttributes
    nameWithType: XMLUtility.addNodeBeforeNodeWithAttributes
    fullName: static Node customplugin.utility.XMLUtility.addNodeBeforeNodeWithAttributes
    package: customplugin.utility
  - uid: customplugin.utility._x_m_l_utility.getNodeAttr*
    name: getNodeAttr
    nameWithType: XMLUtility.getNodeAttr
    fullName: Node customplugin.utility.XMLUtility.getNodeAttr
    package: customplugin.utility
  - uid: customplugin.utility._utility
    parent: customplugin.utility
    href: customplugin.utility._utility.yml
    name: Utility
    nameWithType: Utility
    fullName: customplugin.utility.Utility
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._utility\" data-throw-if-not-resolved=\"false\">ユーティリティ</xref>Eclipse プラグイン関連のユーティリティ メソッドのクラスです。</p>\n\n<p></p>"
    syntax:
      content: public class Utility