### YamlMime:ManagedReference
items:
  - uid: system.fabric._operation_data_stream
    id: _operation_data_stream
    parent: system.fabric
    children:
      - system.fabric._operation_data_stream.getNextAsync(CancellationToken)
    href: system.fabric._operation_data_stream.yml
    langs:
      - java
    name: OperationDataStream
    nameWithType: OperationDataStream
    fullName: system.fabric.OperationDataStream
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/OperationDataStream.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/OperationDataStream.java
      startLine: 11
    package: system.fabric
    syntax:
      content: public interface OperationDataStream
  - uid: system.fabric._operation_data_stream.getNextAsync(CancellationToken)
    id: getNextAsync(CancellationToken)
    parent: system.fabric._operation_data_stream
    href: system.fabric._operation_data_stream.yml
    langs:
      - java
    name: getNextAsync(CancellationToken cancellationToken)
    nameWithType: OperationDataStream.getNextAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<OperationData> system.fabric.OperationDataStream.getNextAsync(CancellationToken cancellationToken)
    overload: system.fabric._operation_data_stream.getNextAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/OperationDataStream.java
      startLine: 13
    package: system.fabric
    syntax:
      content: public CompletableFuture<OperationData> getNextAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 9cdf14d0system.fabric._operation_dataa08ddfce
references:
  - uid: 9cdf14d0system.fabric._operation_dataa08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._operation_data
        name: OperationData
        fullName: system.fabric.OperationData
        href: system.fabric._operation_data.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._operation_data_stream.getNextAsync*
    name: getNextAsync
    nameWithType: OperationDataStream.getNextAsync
    fullName: CompletableFuture<OperationData> system.fabric.OperationDataStream.getNextAsync
    package: system.fabric
  - uid: system.fabric._async_enumerate_operation_data
  - uid: system.fabric._operation_data
    parent: system.fabric
    href: system.fabric._operation_data.yml
    name: OperationData
    nameWithType: OperationData
    fullName: system.fabric.OperationData
    type: Class
    syntax:
      content: public class OperationData
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="e580f-101">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e580f-101">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="e580f-102">インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e580f-102">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="e580f-103">キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。</span><span class="sxs-lookup"><span data-stu-id="e580f-103">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="e580f-104">取り消しを開始するトークンを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="e580f-104">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="e580f-105">所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。</span><span class="sxs-lookup"><span data-stu-id="e580f-105">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="e580f-106">通知を受信するオブジェクトは、適切な方法で応答できます。</span><span class="sxs-lookup"><span data-stu-id="e580f-106">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric.exception._fabric_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_exception.yml
    name: FabricException
    nameWithType: FabricException
    fullName: system.fabric.exception.FabricException
    type: Class
    syntax:
      content: public class FabricException