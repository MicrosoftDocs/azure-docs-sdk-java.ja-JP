### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object
    id: _fault_tolerant_object
    parent: com.microsoft.azure.eventhubs
    children:
      - 'com.microsoft.azure.eventhubs._fault_tolerant_object.close(final ReactorDispatcher,final IOperationResult<Void, Exception>)'
      - 'com.microsoft.azure.eventhubs._fault_tolerant_object.FaultTolerantObject(final IOperation<T>,final IOperation<Void>)'
      - 'com.microsoft.azure.eventhubs._fault_tolerant_object.runOnOpenedObject(final ReactorDispatcher,final IOperationResult<T, Exception>)'
      - com.microsoft.azure.eventhubs._fault_tolerant_object.unsafeGetIfOpened()
    href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
    langs:
      - java
    name: FaultTolerantObject<T>
    nameWithType: FaultTolerantObject<T>
    fullName: com.microsoft.azure.eventhubs.FaultTolerantObject<T>
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
      startLine: 16
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public class FaultTolerantObject<T extends IIOObject>
      typeParameters:
        - type: 8ce1ecb9
    inheritance:
      - java.lang.Object
  - uid: 'com.microsoft.azure.eventhubs._fault_tolerant_object.close(final ReactorDispatcher,final IOperationResult<Void, Exception>)'
    id: 'close(final ReactorDispatcher,final IOperationResult<Void, Exception>)'
    parent: com.microsoft.azure.eventhubs._fault_tolerant_object
    href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
    langs:
      - java
    name: 'close(final ReactorDispatcher dispatcher, final IOperationResult<Void, Exception> closeCallback)'
    nameWithType: 'FaultTolerantObject<T>.close(final ReactorDispatcher dispatcher, final IOperationResult<Void, Exception> closeCallback)'
    fullName: 'void com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.close(final ReactorDispatcher dispatcher, final IOperationResult<Void, Exception> closeCallback)'
    overload: com.microsoft.azure.eventhubs._fault_tolerant_object.close*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
      startLine: 90
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public void close(final ReactorDispatcher dispatcher, final IOperationResult<Void, Exception> closeCallback)'
      parameters:
        - id: dispatcher
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
        - id: closeCallback
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation_result372b00f0
  - uid: 'com.microsoft.azure.eventhubs._fault_tolerant_object.FaultTolerantObject(final IOperation<T>,final IOperation<Void>)'
    id: 'FaultTolerantObject(final IOperation<T>,final IOperation<Void>)'
    parent: com.microsoft.azure.eventhubs._fault_tolerant_object
    href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
    langs:
      - java
    name: 'FaultTolerantObject(final IOperation<T> openAsync, final IOperation<Void> closeAsync)'
    nameWithType: 'FaultTolerantObject<T>.FaultTolerantObject(final IOperation<T> openAsync, final IOperation<Void> closeAsync)'
    fullName: 'com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.FaultTolerantObject(final IOperation<T> openAsync, final IOperation<Void> closeAsync)'
    overload: com.microsoft.azure.eventhubs._fault_tolerant_object.FaultTolerantObject*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
      startLine: 27
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public FaultTolerantObject(final IOperation<T> openAsync, final IOperation<Void> closeAsync)'
      parameters:
        - id: openAsync
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation669339f7
        - id: closeAsync
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation88a69386
  - uid: 'com.microsoft.azure.eventhubs._fault_tolerant_object.runOnOpenedObject(final ReactorDispatcher,final IOperationResult<T, Exception>)'
    id: 'runOnOpenedObject(final ReactorDispatcher,final IOperationResult<T, Exception>)'
    parent: com.microsoft.azure.eventhubs._fault_tolerant_object
    href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
    langs:
      - java
    name: 'runOnOpenedObject(final ReactorDispatcher dispatcher, final IOperationResult<T, Exception> openCallback)'
    nameWithType: 'FaultTolerantObject<T>.runOnOpenedObject(final ReactorDispatcher dispatcher, final IOperationResult<T, Exception> openCallback)'
    fullName: 'void com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.runOnOpenedObject(final ReactorDispatcher dispatcher, final IOperationResult<T, Exception> openCallback)'
    overload: com.microsoft.azure.eventhubs._fault_tolerant_object.runOnOpenedObject*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
      startLine: 46
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public void runOnOpenedObject(final ReactorDispatcher dispatcher, final IOperationResult<T, Exception> openCallback)'
      parameters:
        - id: dispatcher
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
        - id: openCallback
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation_result4ee51867
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object.unsafeGetIfOpened()
    id: unsafeGetIfOpened()
    parent: com.microsoft.azure.eventhubs._fault_tolerant_object
    href: com.microsoft.azure.eventhubs._fault_tolerant_object.yml
    langs:
      - java
    name: unsafeGetIfOpened()
    nameWithType: FaultTolerantObject<T>.unsafeGetIfOpened()
    fullName: T com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.unsafeGetIfOpened()
    overload: com.microsoft.azure.eventhubs._fault_tolerant_object.unsafeGetIfOpened*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/FaultTolerantObject.java
      startLine: 38
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public T unsafeGetIfOpened()
      return:
        type: 8ce1ecb9
references:
  - uid: 8ce1ecb9
    spec.java:
      - name: T
        fullName: T
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation669339f7
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._i_operation
        name: IOperation
        fullName: com.microsoft.azure.eventhubs.amqp.IOperation
        href: com.microsoft.azure.eventhubs.amqp._i_operation.yml
      - name: <T>
        fullName: <T>
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation88a69386
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._i_operation
        name: IOperation
        fullName: com.microsoft.azure.eventhubs.amqp.IOperation
        href: com.microsoft.azure.eventhubs.amqp._i_operation.yml
      - name: <Void>
        fullName: <Void>
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object.FaultTolerantObject*
    name: FaultTolerantObject
    nameWithType: FaultTolerantObject<T>.FaultTolerantObject
    fullName: com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.FaultTolerantObject
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object.unsafeGetIfOpened*
    name: unsafeGetIfOpened
    nameWithType: FaultTolerantObject<T>.unsafeGetIfOpened
    fullName: T com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.unsafeGetIfOpened
    package: com.microsoft.azure.eventhubs
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
        name: ReactorDispatcher
        fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
        href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation_result4ee51867
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._i_operation_result
        name: IOperationResult
        fullName: com.microsoft.azure.eventhubs.amqp.IOperationResult
        href: com.microsoft.azure.eventhubs.amqp._i_operation_result.yml
      - name: '<T, Exception>'
        fullName: '<T, Exception>'
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object.runOnOpenedObject*
    name: runOnOpenedObject
    nameWithType: FaultTolerantObject<T>.runOnOpenedObject
    fullName: void com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.runOnOpenedObject
    package: com.microsoft.azure.eventhubs
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._i_operation_result372b00f0
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._i_operation_result
        name: IOperationResult
        fullName: com.microsoft.azure.eventhubs.amqp.IOperationResult
        href: com.microsoft.azure.eventhubs.amqp._i_operation_result.yml
      - name: '<Void, Exception>'
        fullName: '<Void, Exception>'
  - uid: com.microsoft.azure.eventhubs._fault_tolerant_object.close*
    name: close
    nameWithType: FaultTolerantObject<T>.close
    fullName: void com.microsoft.azure.eventhubs.FaultTolerantObject<T extends IIOObject>.close
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs.amqp._i_i_o_object
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._i_i_o_object.yml
    name: IIOObject
    nameWithType: IIOObject
    fullName: com.microsoft.azure.eventhubs.amqp.IIOObject
    type: Interface
    syntax:
      content: public interface IIOObject
  - uid: com.microsoft.azure.eventhubs.amqp._i_operation
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._i_operation.yml
    name: IOperation<T>
    nameWithType: IOperation<T>
    fullName: com.microsoft.azure.eventhubs.amqp.IOperation<T>
    type: Interface
    syntax:
      content: public interface IOperation<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: com.microsoft.azure.eventhubs.amqp._i_operation_result
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._i_operation_result.yml
    name: 'IOperationResult<T,E>'
    nameWithType: 'IOperationResult<T,E>'
    fullName: 'com.microsoft.azure.eventhubs.amqp.IOperationResult<T,E>'
    type: Interface
    syntax:
      content: 'public interface IOperationResult<T,E extends Throwable>'
      typeParameters:
        - type: 8ce1ecb9
        - type: 0ca03e3a
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
    name: ReactorDispatcher
    nameWithType: ReactorDispatcher
    fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>スレッド セーフであるのではないすべての呼び出しを<xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref>リアクター スレッドでの API がする必要があります。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref> ex - すべてのイベント駆動型 API 用の非インボックスの動作: onReceive で-onSocketRead 時に生じる可能性があります。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref> Send() - インボックス - リアクターの別のスレッドで実行できなかった可能性がありますするなどの API をサポートしていませんでした。 フックするイベントを生成する、次のユーティリティ クラスを使用するように、<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>のイベント委任パターン。 使用して、<xref uid=\"\" data-throw-if-not-resolved=\"false\">パイプ</xref>をリアクター リッスンで IO として。 基数: 複数<xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>の 1 に接続できなかった<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>です。 各<xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> API を呼び出すことは、同期的に - 初期化する必要があります<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>これはスレッド セーフではありません。 </p>"
    syntax:
      content: public class ReactorDispatcher