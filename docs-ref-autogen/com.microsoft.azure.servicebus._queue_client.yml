### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._queue_client
    id: _queue_client
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._queue_client.abandon(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage(long)
      - com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync(long)
      - com.microsoft.azure.servicebus._queue_client.complete(UUID)
      - com.microsoft.azure.servicebus._queue_client.completeAsync(UUID)
      - com.microsoft.azure.servicebus._queue_client.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.getEntityPath()
      - com.microsoft.azure.servicebus._queue_client.getPrefetchCount()
      - com.microsoft.azure.servicebus._queue_client.getQueueName()
      - com.microsoft.azure.servicebus._queue_client.getReceiveMode()
      - com.microsoft.azure.servicebus._queue_client.onClose()
      - 'com.microsoft.azure.servicebus._queue_client.QueueClient(ConnectionStringBuilder,ReceiveMode)'
      - com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler)
      - 'com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
      - com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler)
      - 'com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
      - 'com.microsoft.azure.servicebus._queue_client.scheduleMessage(IMessage,Instant)'
      - 'com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync(IMessage,Instant)'
      - com.microsoft.azure.servicebus._queue_client.send(IMessage)
      - com.microsoft.azure.servicebus._queue_client.sendAsync(IMessage)
      - com.microsoft.azure.servicebus._queue_client.sendBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._queue_client.sendBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._queue_client.setPrefetchCount(int)
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: QueueClient
    nameWithType: QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient
    type: Class
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 22
    package: com.microsoft.azure.servicebus
    syntax:
      content: public class QueueClient implements IQueueClient
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.servicebus.primitives._client_entity
      - com.microsoft.azure.servicebus.InitializableEntity
    inheritedMembers:
      - 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.close()
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus.primitives._client_entity.finalize()
      - com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
      - 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
  - uid: com.microsoft.azure.servicebus._queue_client.abandon(UUID)
    id: abandon(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: abandon(UUID lockToken)
    nameWithType: QueueClient.abandon(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.abandon(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 237
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void abandon(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: 'com.microsoft.azure.servicebus._queue_client.abandon(UUID,Map<String, Object>)'
    id: 'abandon(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 242
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
  - uid: com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID)
    id: abandonAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: abandonAsync(UUID lockToken)
    nameWithType: QueueClient.abandonAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 247
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> abandonAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID,Map<String, Object>)'
    id: 'abandonAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 252
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage(long)
    id: cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: QueueClient.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessage(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 176
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>スケジュールされたメッセージのシーケンス番号 </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>スケジュールされたメッセージはキャンセルできませんでした。 場合、 </p>
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync(long)
    id: cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 163
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。 これは、メッセージが取り消されたときに完了する CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>スケジュールされたメッセージのシーケンス番号 </p>
      return:
        type: db03ee24
        description: <p>保留中の取り消しを表す CompletableFuture </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
  - uid: com.microsoft.azure.servicebus._queue_client.complete(UUID)
    id: complete(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: complete(UUID lockToken)
    nameWithType: QueueClient.complete(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.complete(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.complete*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 257
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void complete(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: com.microsoft.azure.servicebus._queue_client.completeAsync(UUID)
    id: completeAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: completeAsync(UUID lockToken)
    nameWithType: QueueClient.completeAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.completeAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.completeAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 262
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> completeAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetter(UUID)
    id: deadLetter(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: deadLetter(UUID lockToken)
    nameWithType: QueueClient.deadLetter(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 287
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void deadLetter(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,Map<String, Object>)'
    id: 'deadLetter(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 292
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String)'
    id: 'deadLetter(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 297
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String,Map<String, Object>)'
    id: 'deadLetter(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 302
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
        - id: propertiesToModify
          type: e7b06046
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID)
    id: deadLetterAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: deadLetterAsync(UUID lockToken)
    nameWithType: QueueClient.deadLetterAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 307
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 312
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String)'
    id: 'deadLetterAsync(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 317
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 322
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.getEntityPath()
    id: getEntityPath()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getEntityPath()
    nameWithType: QueueClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getEntityPath()
    overload: com.microsoft.azure.servicebus._queue_client.getEntityPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 181
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>メッセージが送信または受信側のメッセージをこのクライアントは、エンティティのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: <p>このクライアントが接続するエンティティのパス </p>
    overridden: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
  - uid: com.microsoft.azure.servicebus._queue_client.getPrefetchCount()
    id: getPrefetchCount()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getPrefetchCount()
    nameWithType: QueueClient.getPrefetchCount()
    fullName: int com.microsoft.azure.servicebus.QueueClient.getPrefetchCount()
    overload: com.microsoft.azure.servicebus._queue_client.getPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 327
    package: com.microsoft.azure.servicebus
    syntax:
      content: public int getPrefetchCount()
      return:
        type: f75371fa
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName()
    id: getQueueName()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getQueueName()
    nameWithType: QueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName()
    overload: com.microsoft.azure.servicebus._queue_client.getQueueName*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 337
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>キューの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>キューの名前。 </p>
    overridden: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode()
    id: getReceiveMode()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getReceiveMode()
    nameWithType: QueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode()
    overload: com.microsoft.azure.servicebus._queue_client.getReceiveMode*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 124
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>取得、 <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref>現在受信機の</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>受信モードです。 </p>
    overridden: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
  - uid: com.microsoft.azure.servicebus._queue_client.onClose()
    id: onClose()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: onClose()
    nameWithType: QueueClient.onClose()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.onClose()
    overload: com.microsoft.azure.servicebus._queue_client.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 212
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected CompletableFuture<Void> onClose()
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.QueueClient(ConnectionStringBuilder,ReceiveMode)'
    id: 'QueueClient(ConnectionStringBuilder,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    nameWithType: 'QueueClient.QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    fullName: 'com.microsoft.azure.servicebus.QueueClient.QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._queue_client.QueueClient*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 42
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
  - uid: com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler)
    id: registerMessageHandler(IMessageHandler)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: registerMessageHandler(IMessageHandler handler)
    nameWithType: QueueClient.registerMessageHandler(IMessageHandler handler)
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler(IMessageHandler handler)
    overload: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 186
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void registerMessageHandler(IMessageHandler handler)
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_message_handler
  - uid: 'com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
    id: 'registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    nameWithType: 'QueueClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    overload: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 191
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_message_handler
        - id: handlerOptions
          type: com.microsoft.azure.servicebus._message_handler_options
  - uid: com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler)
    id: registerSessionHandler(ISessionHandler)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: registerSessionHandler(ISessionHandler handler)
    nameWithType: QueueClient.registerSessionHandler(ISessionHandler handler)
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler(ISessionHandler handler)
    overload: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 196
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void registerSessionHandler(ISessionHandler handler)
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_session_handler
  - uid: 'com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
    id: 'registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    nameWithType: 'QueueClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    overload: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 201
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_session_handler
        - id: handlerOptions
          type: com.microsoft.azure.servicebus._session_handler_options
  - uid: 'com.microsoft.azure.servicebus._queue_client.scheduleMessage(IMessage,Instant)'
    id: 'scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._queue_client.scheduleMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 171
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。 スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p>インスタント メッセージをエンティティにエンキューをする必要があります。 </p>
      return:
        type: 0364520f
        description: <p>スケジュールされたメッセージのシーケンス番号 </p>
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、エンティティにメッセージを送信できませんでした。 </p>
  - uid: 'com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync(IMessage,Instant)'
    id: 'scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 155
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。 スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。 これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。 完了時に、CompletableFuture では、メッセージのスケジュールをキャンセルするために使用するスケジュールされたメッセージのシーケンス番号を返します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p>インスタント メッセージをエンティティにエンキューをする必要があります。 </p>
      return:
        type: 30822cb1
        description: '<p>スケジュールされたメッセージのシーケンス番号を返しますの保留中の送信を表す CompletableFuture です。 このシーケンス番号は、メッセージのスケジュール設定 [キャンセル] を使用できます。 </p>'
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
  - uid: com.microsoft.azure.servicebus._queue_client.send(IMessage)
    id: send(IMessage)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: send(IMessage message)
    nameWithType: QueueClient.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.QueueClient.send(IMessage message)
    overload: com.microsoft.azure.servicebus._queue_client.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 129
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、エンティティにメッセージを送信できませんでした。 </p>
  - uid: com.microsoft.azure.servicebus._queue_client.sendAsync(IMessage)
    id: sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendAsync(IMessage message)
    nameWithType: QueueClient.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendAsync(IMessage message)
    overload: com.microsoft.azure.servicebus._queue_client.sendAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 139
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。 これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
      return:
        type: db03ee24
        description: <p>保留中の送信を表す CompletableFuture </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatch(Collection<? extends IMessage>)
    id: sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: QueueClient.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.QueueClient.sendBatch(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._queue_client.sendBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 134
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。 このメソッドは、バッチが、エンティティに送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>エンティティに送信されるメッセージのコレクション </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、エンティティにバッチを送信できませんでした。 </p>
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatchAsync(Collection<? extends IMessage>)
    id: sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._queue_client.sendBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 147
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。 これは、エンティティに送信されると、バッチが完了 CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>エンティティに送信されるメッセージのコレクション </p>
      return:
        type: db03ee24
        description: <p>保留中の送信を表す CompletableFuture </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
  - uid: com.microsoft.azure.servicebus._queue_client.setPrefetchCount(int)
    id: setPrefetchCount(int)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: setPrefetchCount(int prefetchCount)
    nameWithType: QueueClient.setPrefetchCount(int prefetchCount)
    fullName: void com.microsoft.azure.servicebus.QueueClient.setPrefetchCount(int prefetchCount)
    overload: com.microsoft.azure.servicebus._queue_client.setPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 332
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void setPrefetchCount(int prefetchCount)
      parameters:
        - id: prefetchCount
          type: f75371fa
references:
  - uid: com.microsoft.azure.servicebus._queue_client.QueueClient*
    name: QueueClient
    nameWithType: QueueClient.QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient.QueueClient
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode*
    name: getReceiveMode
    nameWithType: QueueClient.getReceiveMode
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode
    package: com.microsoft.azure.servicebus
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: com.microsoft.azure.servicebus._queue_client.send*
    name: send
    nameWithType: QueueClient.send
    fullName: void com.microsoft.azure.servicebus.QueueClient.send
    package: com.microsoft.azure.servicebus
  - uid: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: 'Collection<? extends '
        fullName: 'Collection<? extends '
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatch*
    name: sendBatch
    nameWithType: QueueClient.sendBatch
    fullName: void com.microsoft.azure.servicebus.QueueClient.sendBatch
    package: com.microsoft.azure.servicebus
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.servicebus._queue_client.sendAsync*
    name: sendAsync
    nameWithType: QueueClient.sendAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatchAsync*
    name: sendBatchAsync
    nameWithType: QueueClient.sendBatchAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: 328f8254
    spec.java:
      - name: Instant
        fullName: Instant
  - uid: 30822cb1
    spec.java:
      - name: CompletableFuture<Long>
        fullName: CompletableFuture<Long>
  - uid: com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync*
    name: scheduleMessageAsync
    nameWithType: QueueClient.scheduleMessageAsync
    fullName: CompletableFuture<Long> com.microsoft.azure.servicebus.QueueClient.scheduleMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync*
    name: cancelScheduledMessageAsync
    nameWithType: QueueClient.cancelScheduledMessageAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.scheduleMessage*
    name: scheduleMessage
    nameWithType: QueueClient.scheduleMessage
    fullName: long com.microsoft.azure.servicebus.QueueClient.scheduleMessage
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage*
    name: cancelScheduledMessage
    nameWithType: QueueClient.cancelScheduledMessage
    fullName: void com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessage
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._queue_client.getEntityPath*
    name: getEntityPath
    nameWithType: QueueClient.getEntityPath
    fullName: String com.microsoft.azure.servicebus.QueueClient.getEntityPath
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    name: registerMessageHandler
    nameWithType: QueueClient.registerMessageHandler
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    name: registerSessionHandler
    nameWithType: QueueClient.registerSessionHandler
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler
    package: com.microsoft.azure.servicebus
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: com.microsoft.azure.servicebus._queue_client.abandon*
    name: abandon
    nameWithType: QueueClient.abandon
    fullName: void com.microsoft.azure.servicebus.QueueClient.abandon
    package: com.microsoft.azure.servicebus
  - uid: e7b06046
    spec.java:
      - name: 'Map<String, Object>'
        fullName: 'Map<String, Object>'
  - uid: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    name: abandonAsync
    nameWithType: QueueClient.abandonAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.complete*
    name: complete
    nameWithType: QueueClient.complete
    fullName: void com.microsoft.azure.servicebus.QueueClient.complete
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.completeAsync*
    name: completeAsync
    nameWithType: QueueClient.completeAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.completeAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetter*
    name: deadLetter
    nameWithType: QueueClient.deadLetter
    fullName: void com.microsoft.azure.servicebus.QueueClient.deadLetter
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    name: deadLetterAsync
    nameWithType: QueueClient.deadLetterAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync
    package: com.microsoft.azure.servicebus
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.servicebus._queue_client.getPrefetchCount*
    name: getPrefetchCount
    nameWithType: QueueClient.getPrefetchCount
    fullName: int com.microsoft.azure.servicebus.QueueClient.getPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.setPrefetchCount*
    name: setPrefetchCount
    nameWithType: QueueClient.setPrefetchCount
    fullName: void com.microsoft.azure.servicebus.QueueClient.setPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName*
    name: getQueueName
    nameWithType: QueueClient.getQueueName
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.onClose*
    name: onClose
    nameWithType: QueueClient.onClose
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.onClose
    package: com.microsoft.azure.servicebus
  - uid: 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.servicebus.primitives._client_entity
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.close()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.close()
    type: Method
    syntax:
      content: public final void close()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: <p>同期的に終了し、このオブジェクトに関連付けられているすべてのリソースを破棄します。 このメソッドを呼び出すことは、呼び出し元のと同じです。 このメソッドはブロックされるまでオブジェクトが閉じられます。 </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: closeAsync()
    nameWithType: ClientEntity.closeAsync()
    fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> closeAsync()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: <p>終了し、このオブジェクトに関連付けられているすべてのリソースを破棄します。 閉じられた後、オブジェクトを使用できません。 これは、すぐに、CompletableFuture を返す非同期メソッドです。 このオブジェクトは、返された CompletableFuture が完了したときに完全に閉じられます。 </p>
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: <p>このオブジェクトの終了を表す CompletableFuture です。 </p>
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.finalize()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: finalize()
    nameWithType: ClientEntity.finalize()
    fullName: void com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
    type: Method
    syntax:
      content: protected void finalize()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosed()
    nameWithType: ClientEntity.getIsClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosed()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosingOrClosed()
    nameWithType: ClientEntity.getIsClosingOrClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosingOrClosed()
      return:
        type: 4fc6e284
  - uid: 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: throwIfClosed(Throwable cause)
    nameWithType: ClientEntity.throwIfClosed(Throwable cause)
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable cause)
    type: Method
    syntax:
      content: protected final void throwIfClosed(Throwable cause)
      parameters:
        - id: cause
          type: a04fafd7
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_queue_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: IQueueClient
    nameWithType: IQueueClient
    fullName: com.microsoft.azure.servicebus.IQueueClient
    type: Interface
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._queue_client\" data-throw-if-not-resolved=\"false\">QueueClient</xref> Service Bus キューとすべての基本的な対話に使用できます。 </p>"
    syntax:
      content: 'public interface IQueueClient extends IMessageSender,IMessageEntityClient'
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p>2 つを表す列挙体は、Azure Service Bus をサポートしているモードを受信します。</p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus.primitives._messaging_factory
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
    type: Class
    summary: <p>関連するすべての AMQP の詳細を AMQP 接続をカプセル化し、ライフ サイクルを管理の概要は次のサイクルです。 このクラスの各インスタンスは、名前空間への AMQP 接続を 1 つを表します。 アプリケーションでは、複数の送信者、受信者または同じ MessagingFacotry インスタンスを使用してクライアントを作成する場合は、それらの送信者、受信者またはクライアントと名前空間に同じ接続が共有されます。 </p>
    syntax:
      content: public class MessagingFactory extends ClientEntity
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p>Azure Service Bus にメッセージを送信するメッセージの送信者を表します。</p>
      <p></p>
    syntax:
      content: public interface IMessageSender extends IMessageEntityClient
  - uid: com.microsoft.azure.servicebus.primitives._misc_request_response_operation_handler
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._misc_request_response_operation_handler.yml
    name: MiscRequestResponseOperationHandler
    nameWithType: MiscRequestResponseOperationHandler
    fullName: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
    type: Class
    syntax:
      content: public class MiscRequestResponseOperationHandler extends ClientEntity
  - uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
    name: ConnectionStringBuilder
    nameWithType: ConnectionStringBuilder
    fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    type: Class
    summary: |-
      <p>このクラスは、ServiceBus エンティティとの通信を確立できる接続文字列を構築するために使用できます。 既存の接続文字列で基本的な検証を実行するも使用できます。 </p>
      <p>サンプル コードに示します。 <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                   "ServiceBusNamespaceName", 

                                                   "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                   "SharedAccessSignatureKeyName", 

                                                   "SharedAccessSignatureKey");

           

          String connectionString = connectionStringBuilder.toString();

          </code></pre></p>

      <p>接続文字列は、基本的に、文字列で区切られたキーと値のペアで構成されている「;」です。 基本形式は {{ &lt;} キー {&gt;} = { &lt;} 値 {&gt;} [; {&lt;} キー {&gt;} = { &lt;} 値 {&gt;}]。 サポートされているキー名が次のような場所。<itemizedlist><listitem><p>エンドポイントで servicebus 名前空間を指す URL </p></listitem><listitem><p>EntityPath の service bus エンティティへのパス (キュー/トピック/サブスクリプション/)。 キューおよびトピックでは、エンティティの名前だけです。 サブスクリプションの場合、パスは&lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></listitem><listitem><p>SharedAccessKeyName - 名前空間、またはエンティティの対応する共有アクセス ポリシーのルールにキー名。 </p></listitem><listitem><p>SharedAccessKey - 名前空間またはエンティティの対応する共有アクセス ポリシー規則のキー値。 </p></listitem><listitem><p>SharedAccessSignatureToken - キー名とキーの値の代わりにクライアントを提供できます、既に生成された SAS トークン。 </p></listitem><listitem><p>OperationTimeout - すべての送信者、受信者およびこの接続文字列から作成されたクライアントに使用する既定のタイムアウト。 </p></listitem><listitem><p><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> -再試行ポリシーの名前。 </p></listitem></itemizedlist></p>
    syntax:
      content: public class ConnectionStringBuilder
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: <p>これは、すべてのエラーの場合のサービス バスを生成する基本例外です。 </p>
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: getReceiveMode()
    nameWithType: IQueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode()
    type: Method
    summary: |-
      <p>取得、 <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref>現在受信機の</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>受信モードです。 </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: send(IMessage message)
    nameWithType: IMessageSender.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
  - uid: com.microsoft.azure.servicebus._i_message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message.yml
    name: IMessage
    nameWithType: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    type: Interface
    summary: |-
      <p>Azure Service Bus とクライアント間で交換されるメッセージを表します。</p>
      <p></p>
    syntax:
      content: public interface IMessage
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。 このメソッドは、バッチが、エンティティに送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>エンティティに送信されるメッセージのコレクション </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendAsync(IMessage message)
    nameWithType: IMessageSender.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。 これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
      return:
        type: db03ee24
        description: <p>保留中の送信を表す CompletableFuture </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。 これは、エンティティに送信されると、バッチが完了 CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>エンティティに送信されるメッセージのコレクション </p>
      return:
        type: db03ee24
        description: <p>保留中の送信を表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。 スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。 これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。 完了時に、CompletableFuture では、メッセージのスケジュールをキャンセルするために使用するスケジュールされたメッセージのシーケンス番号を返します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p>インスタント メッセージをエンティティにエンキューをする必要があります。 </p>
      return:
        type: 30822cb1
        description: '<p>スケジュールされたメッセージのシーケンス番号を返しますの保留中の送信を表す CompletableFuture です。 このシーケンス番号は、メッセージのスケジュール設定 [キャンセル] を使用できます。 </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    type: Method
    summary: |-
      <p>まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。 これは、メッセージが取り消されたときに完了する CompletableFuture を返す非同期メソッドです。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>スケジュールされたメッセージのシーケンス番号 </p>
      return:
        type: db03ee24
        description: <p>保留中の取り消しを表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。 スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>エンティティに送信されるメッセージ </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p>インスタント メッセージをエンティティにエンキューをする必要があります。 </p>
      return:
        type: 0364520f
        description: <p>スケジュールされたメッセージのシーケンス番号 </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
    type: Method
    summary: |-
      <p>まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。 このメソッドは、エンティティにメッセージが送信されるまでブロックします。 このメソッドを呼び出すことを呼び出すことと同じです。 パフォーマンス向上のためには、非同期メソッドを使用します。</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>スケジュールされたメッセージのシーケンス番号 </p>
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p>メッセージが送信または受信側のメッセージをこのクライアントは、エンティティのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: <p>このクライアントが接続するエンティティのパス </p>
  - uid: com.microsoft.azure.servicebus._i_message_handler
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_handler.yml
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: com.microsoft.azure.servicebus.IMessageHandler
    type: Interface
    summary: '<p>コールバックを登録するためのコントラクトを定義<xref uid="" data-throw-if-not-resolved="false">QueueClient#registerMessageHandler(IMessageHandler)</xref>と<xref uid="" data-throw-if-not-resolved="false">SubscriptionClient#registerMessageHandler(IMessageHandler)</xref> の<xref uid="com.microsoft.azure.servicebus._queue_client" data-throw-if-not-resolved="false">QueueClient</xref>と<xref uid="com.microsoft.azure.servicebus._subscription_client" data-throw-if-not-resolved="false">SubscriptionClient</xref>です。 </p>'
    syntax:
      content: public interface IMessageHandler
  - uid: com.microsoft.azure.servicebus._message_handler_options
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._message_handler_options.yml
    name: MessageHandlerOptions
    nameWithType: MessageHandlerOptions
    fullName: com.microsoft.azure.servicebus.MessageHandlerOptions
    type: Class
    summary: <p>OnMessage ハンドラーの処理オプション。 </p>
    syntax:
      content: public class MessageHandlerOptions
  - uid: com.microsoft.azure.servicebus._i_session_handler
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_session_handler.yml
    name: ISessionHandler
    nameWithType: ISessionHandler
    fullName: com.microsoft.azure.servicebus.ISessionHandler
    type: Interface
    summary: '<p>セッションのメッセージ処理のコールバックを登録するためのコントラクトを定義<xref uid="" data-throw-if-not-resolved="false">QueueClient#registerSessionHandler(ISessionHandler)</xref>または<xref uid="" data-throw-if-not-resolved="false">SubscriptionClient#registerSessionHandler(ISessionHandler)</xref>の<xref uid="com.microsoft.azure.servicebus._queue_client" data-throw-if-not-resolved="false">QueueClient</xref>と<xref uid="com.microsoft.azure.servicebus._subscription_client" data-throw-if-not-resolved="false">SubscriptionClient</xref>です。 </p>'
    syntax:
      content: public interface ISessionHandler
  - uid: com.microsoft.azure.servicebus._session_handler_options
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._session_handler_options.yml
    name: SessionHandlerOptions
    nameWithType: SessionHandlerOptions
    fullName: com.microsoft.azure.servicebus.SessionHandlerOptions
    type: Class
    summary: <p>OnSession ハンドラーの処理オプション。 </p>
    syntax:
      content: public class SessionHandlerOptions
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: getQueueName()
    nameWithType: IQueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName()
    type: Method
    summary: |-
      <p>キューの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>キューの名前。 </p>
  - uid: com.microsoft.azure.servicebus._i_message_session
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: IMessageSession
    nameWithType: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    type: Interface
    summary: |-
      <p>セッション オブジェクトを表します。 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>セッションでの操作を実行するために使用できます。 </p>
      <p>サービス バス セッション、AMQP 1.0 プロトコルでは"Groups"とも呼ばれますとは、一連の関連メッセージをバインド解除済みです。 ServiceBus では、セッションでメッセージの順序を保証します。 </p>
      <p>センダは、セッションを作成することができますを設定してトピックまたはキューにメッセージを送信するときに、 <xref uid="" data-throw-if-not-resolved="false">#sessionId をメッセージ</xref>プロパティを<xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">メッセージ</xref>一部のアプリケーションに一意の識別子を定義します。 AMQP 1.0 プロトコル レベルでは、この値は、グループ id プロパティにマップされます。 </p>
      <p>セッションは、キューまたはトピックのサブスクリプションで、セッションのセッション Id で、少なくとも 1 つのメッセージが表示される時に存在するようになります。 セッションが存在する場合は定義されている時点、またはセッションの有効期限が切れる場合または非表示のジェスチャです。 </p>
    syntax:
      content: public interface IMessageSession extends IMessageReceiver