### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._cluster_health_chunk
    id: _cluster_health_chunk
    parent: system.fabric.health
    children:
      - system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks()
      - system.fabric.health._cluster_health_chunk.getHealthState()
      - system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks()
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: ClusterHealthChunk
    nameWithType: ClusterHealthChunk
    fullName: system.fabric.health.ClusterHealthChunk
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 3
    package: system.fabric.health
    summary: <p>クラスターに関するヘルス情報が含まれて、クラスター状態チャンクを表します。 </p>
    syntax:
      content: public class ClusterHealthChunk
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks()
    id: getApplicationHealthStateChunks()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getApplicationHealthStateChunks()
    nameWithType: ClusterHealthChunk.getApplicationHealthStateChunks()
    fullName: ApplicationHealthStateChunkList system.fabric.health.ClusterHealthChunk.getApplicationHealthStateChunks()
    overload: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 39
    package: system.fabric.health
    summary: "<p>アプリケーションの正常性の一覧に、入力フィルターを尊重状態チャンクを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定では、子に含まれていない結果です。 ユーザーは、必要な正常性アドインまたはその他の情報に基づく子の一部を含めるように要求できます。 </p>"
    syntax:
      content: public ApplicationHealthStateChunkList getApplicationHealthStateChunks()
      return:
        type: system.fabric.health._application_health_state_chunk_list
        description: <p>入力フィルターを適用するアプリケーションのヘルス状態のチャンクの一覧。 </p>
  - uid: system.fabric.health._cluster_health_chunk.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: ClusterHealthChunk.getHealthState()
    fullName: HealthState system.fabric.health.ClusterHealthChunk.getHealthState()
    overload: system.fabric.health._cluster_health_chunk.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 13
    package: system.fabric.health
    summary: |-
      <p>集計されたクラスターの正常性状態を取得します。</p>
      <p></p>
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p>クラスターの正常性状態の集計。 </p>
  - uid: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks()
    id: getNodeHealthStateChunks()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getNodeHealthStateChunks()
    nameWithType: ClusterHealthChunk.getNodeHealthStateChunks()
    fullName: NodeHealthStateChunkList system.fabric.health.ClusterHealthChunk.getNodeHealthStateChunks()
    overload: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 26
    package: system.fabric.health
    summary: "<p>入力のフィルターを適用するヘルス状態のチャンクのノードの一覧を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定では、子に含まれていない結果です。 ユーザーは、必要な正常性アドインまたはその他の情報に基づく子の一部を含めるように要求できます。 </p>"
    syntax:
      content: public NodeHealthStateChunkList getNodeHealthStateChunks()
      return:
        type: system.fabric.health._node_health_state_chunk_list
        description: <p>入力フィルターを適用するノードのヘルス状態のチャンクの一覧。 </p>
references:
  - uid: system.fabric.health._cluster_health_chunk.getHealthState*
    name: getHealthState
    nameWithType: ClusterHealthChunk.getHealthState
    fullName: HealthState system.fabric.health.ClusterHealthChunk.getHealthState
    package: system.fabric.health
  - uid: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks*
    name: getNodeHealthStateChunks
    nameWithType: ClusterHealthChunk.getNodeHealthStateChunks
    fullName: NodeHealthStateChunkList system.fabric.health.ClusterHealthChunk.getNodeHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks*
    name: getApplicationHealthStateChunks
    nameWithType: ClusterHealthChunk.getApplicationHealthStateChunks
    fullName: ApplicationHealthStateChunkList system.fabric.health.ClusterHealthChunk.getApplicationHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._node_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._node_health_state_chunk_list.yml
    name: NodeHealthStateChunkList
    nameWithType: NodeHealthStateChunkList
    fullName: system.fabric.health.NodeHealthStateChunkList
    type: Class
    summary: "<p>含むリストを表す<xref uid=\"system.fabric.health._node_health_state_chunk\" data-throw-if-not-resolved=\"false\">NodeHealthStateChunk</xref>項目。 </p>\n<p>\r\n\r\n  <b>注釈:</b>ヘルス状態のチャンク クエリを通じて、一覧を取得できます。 クエリは、メッセージを格納できる以上のチャンクを結果として必要があります。 この場合、メッセージに一致する項目の一覧が返されます、合計項目の数を示すカウントを利用できます。 </p>"
    syntax:
      content: public class NodeHealthStateChunkList
  - uid: system.fabric.health._application_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._application_health_state_chunk_list.yml
    name: ApplicationHealthStateChunkList
    nameWithType: ApplicationHealthStateChunkList
    fullName: system.fabric.health.ApplicationHealthStateChunkList
    type: Class
    summary: "<p>含むリストを表す<xref uid=\"system.fabric.health._application_health_state_chunk\" data-throw-if-not-resolved=\"false\">ApplicationHealthStateChunk</xref>項目。 </p>\n<p>\r\n\r\n  <b>注釈:</b>ヘルス状態のチャンク クエリを通じて、一覧を取得できます。 クエリは、メッセージを格納できる以上のチャンクを結果として必要があります。 この場合、メッセージに一致する項目の一覧が返されます、合計項目の数を示すカウントを利用できます。 </p>"
    syntax:
      content: public class ApplicationHealthStateChunkList extends HealthStateChunkList<ApplicationHealthStateChunk>