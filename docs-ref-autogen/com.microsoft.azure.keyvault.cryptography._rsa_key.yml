### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key
    id: _rsa_key
    parent: com.microsoft.azure.keyvault.cryptography
    children:
      - com.microsoft.azure.keyvault.cryptography._rsa_key.close()
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
      - com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultEncryptionAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeySize()
      - com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeyWrapAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultSignatureAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._rsa_key.getKid()
      - com.microsoft.azure.keyvault.cryptography._rsa_key.KeySize1024
      - com.microsoft.azure.keyvault.cryptography._rsa_key.KeySize2048
      - com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String)
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,int)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,int,Provider)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,KeyPair)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,KeyPair,Provider)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.signAsync(final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.unwrapKeyAsync(final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.verifyAsync(final byte [],final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._rsa_key.wrapKeyAsync(final byte [],final String)'
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: RsaKey
    nameWithType: RsaKey
    fullName: com.microsoft.azure.keyvault.cryptography.RsaKey
    type: Class
    source:
      remote: &ref_0
        path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
        branch: bb950b2a0255c017040501de0c19e4849361ca1d
        repo: 'https://github.com/Azure/azure-keyvault-java'
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 25
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public class RsaKey implements IKey
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.keyvault.core._i_key
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.close()
    id: close()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: close()
    nameWithType: RsaKey.close()
    fullName: void com.microsoft.azure.keyvault.cryptography.RsaKey.close()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.close*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 292
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    id: 'decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'RsaKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.decryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 105
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-101">指定した暗号テキストを復号化します。</span><span class="sxs-lookup"><span data-stu-id="9457a-101">Decrypts the specified cipher text.</span></span> <span data-ttu-id="9457a-102">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="9457a-102">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p><span data-ttu-id="9457a-103">暗号化を解除する暗号テキスト</span><span class="sxs-lookup"><span data-stu-id="9457a-103">The cipher text to decrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="9457a-104">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-104">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="9457a-105">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-105">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: authenticationTag
          type: f549433f
          description: <p><span data-ttu-id="9457a-106">(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ</span><span class="sxs-lookup"><span data-stu-id="9457a-106">The authentication tag from the encrypt operation (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-107">を使用する暗号化アルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-107">The encryption algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="9457a-108">プレーン テキストを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-108">A ListenableFuture containing the plain text</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-109">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-109">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    id: 'encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'RsaKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.encryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 138
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-110">指定されたプレーン テキストを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="9457a-110">Encrypts the specified plain text.</span></span> <span data-ttu-id="9457a-111">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="9457a-111">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p><span data-ttu-id="9457a-112">プレーン テキストを暗号化するには</span><span class="sxs-lookup"><span data-stu-id="9457a-112">The plain text to encrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="9457a-113">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-113">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="9457a-114">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-114">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-115">既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-115">The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm</span></span> </p>'
      return:
        type: 7356d169
        description: '<p><span data-ttu-id="9457a-116">暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-116">A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used</span></span> </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-117">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-117">the algorithm is not valid</span></span> </p>
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultEncryptionAlgorithm()
    id: getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: getDefaultEncryptionAlgorithm()
    nameWithType: RsaKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultEncryptionAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultEncryptionAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 85
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-118">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-118">The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-119">このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-119">The default encryption algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeySize()
    id: getDefaultKeySize()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: getDefaultKeySize()
    nameWithType: RsaKey.getDefaultKeySize()
    fullName: static int com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultKeySize()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeySize*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 30
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static int getDefaultKeySize()
      return:
        type: f75371fa
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeyWrapAlgorithm()
    id: getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: RsaKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultKeyWrapAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeyWrapAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 90
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-120">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-120">The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-121">既定のキーは、このキーのアルゴリズムをラップします。</span><span class="sxs-lookup"><span data-stu-id="9457a-121">The default key wrap algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultSignatureAlgorithm()
    id: getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: getDefaultSignatureAlgorithm()
    nameWithType: RsaKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultSignatureAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultSignatureAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 95
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-122">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-122">The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-123">このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-123">The default signature algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getKid()
    id: getKid()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: getKid()
    nameWithType: RsaKey.getKid()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getKid()
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.getKid*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 100
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-124">このキーの一意のキー識別子。</span><span class="sxs-lookup"><span data-stu-id="9457a-124">The unique key identifier for this key.</span></span></p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-125">キー識別子</span><span class="sxs-lookup"><span data-stu-id="9457a-125">The key identifier</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getKid()
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.KeySize1024
    id: KeySize1024
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: KeySize1024
    nameWithType: RsaKey.KeySize1024
    fullName: int com.microsoft.azure.keyvault.cryptography.RsaKey.KeySize1024
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 27
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static int KeySize1024= 1024
      return:
        type: f75371fa
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.KeySize2048
    id: KeySize2048
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: KeySize2048
    nameWithType: RsaKey.KeySize2048
    fullName: int com.microsoft.azure.keyvault.cryptography.RsaKey.KeySize2048
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 28
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static int KeySize2048= 2048
      return:
        type: f75371fa
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String)
    id: RsaKey(String)
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: RsaKey(String kid)
    nameWithType: RsaKey.RsaKey(String kid)
    fullName: com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey(String kid)
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 38
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public RsaKey(String kid)
      parameters:
        - id: kid
          type: '26831127'
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,int)'
    id: 'RsaKey(String,int)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'RsaKey(String kid, int keySize)'
    nameWithType: 'RsaKey.RsaKey(String kid, int keySize)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey(String kid, int keySize)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 42
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: 'public RsaKey(String kid, int keySize)'
      parameters:
        - id: kid
          type: '26831127'
        - id: keySize
          type: f75371fa
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,int,Provider)'
    id: 'RsaKey(String,int,Provider)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'RsaKey(String kid, int keySize, Provider provider)'
    nameWithType: 'RsaKey.RsaKey(String kid, int keySize, Provider provider)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey(String kid, int keySize, Provider provider)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 46
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: 'public RsaKey(String kid, int keySize, Provider provider)'
      parameters:
        - id: kid
          type: '26831127'
        - id: keySize
          type: f75371fa
        - id: provider
          type: 8f3c7027
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,KeyPair)'
    id: 'RsaKey(String,KeyPair)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'RsaKey(String kid, KeyPair keyPair)'
    nameWithType: 'RsaKey.RsaKey(String kid, KeyPair keyPair)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey(String kid, KeyPair keyPair)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 61
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: 'public RsaKey(String kid, KeyPair keyPair)'
      parameters:
        - id: kid
          type: '26831127'
        - id: keyPair
          type: 5330fdd9
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey(String,KeyPair,Provider)'
    id: 'RsaKey(String,KeyPair,Provider)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'RsaKey(String kid, KeyPair keyPair, Provider provider)'
    nameWithType: 'RsaKey.RsaKey(String kid, KeyPair keyPair, Provider provider)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey(String kid, KeyPair keyPair, Provider provider)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 65
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: 'public RsaKey(String kid, KeyPair keyPair, Provider provider)'
      parameters:
        - id: kid
          type: '26831127'
        - id: keyPair
          type: 5330fdd9
        - id: provider
          type: 8f3c7027
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.signAsync(final byte [],final String)'
    id: 'signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'RsaKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.signAsync(final byte[] digest, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.signAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 232
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-126">指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</span><span class="sxs-lookup"><span data-stu-id="9457a-126">Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="9457a-127">署名するダイジェスト</span><span class="sxs-lookup"><span data-stu-id="9457a-127">The digest to sign</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: <p><span data-ttu-id="9457a-128">使用する署名アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-128">The signature algorithm to use</span></span> </p>
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="9457a-129">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9457a-129">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-130">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-130">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.unwrapKeyAsync(final byte [],final String)'
    id: 'unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'RsaKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.unwrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 198
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-131">(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="9457a-131">Unwraps (decrypts) the specified encryped key material.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p><span data-ttu-id="9457a-132">暗号化されたキーの暗号化を解除するには</span><span class="sxs-lookup"><span data-stu-id="9457a-132">The encrypted key to decrypt</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-133">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-133">The algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="9457a-134">ラップ解除されたキーを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-134">A ListenableFuture containing the unwrapped key</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-135">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-135">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.verifyAsync(final byte [],final byte [],final String)'
    id: 'verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'RsaKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.RsaKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.verifyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 262
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-136">指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</span><span class="sxs-lookup"><span data-stu-id="9457a-136">Verifies the supplied signature value using the supplied digest and algorithm.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="9457a-137">入力ダイジェスト</span><span class="sxs-lookup"><span data-stu-id="9457a-137">The digest input</span></span> </p>
        - id: signature
          type: f549433f
          description: <p><span data-ttu-id="9457a-138">署名を検証します</span><span class="sxs-lookup"><span data-stu-id="9457a-138">The signature to verify</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-139">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-139">The algorithm to use, must be provided</span></span> </p>'
      return:
        type: 8779baad
        description: <p><span data-ttu-id="9457a-140">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9457a-140">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-141">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-141">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.wrapKeyAsync(final byte [],final String)'
    id: 'wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    langs:
      - java
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'RsaKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._rsa_key.wrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/RsaKey.java
      startLine: 168
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="9457a-142">ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</span><span class="sxs-lookup"><span data-stu-id="9457a-142">Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p><span data-ttu-id="9457a-143">ラップする対称キー</span><span class="sxs-lookup"><span data-stu-id="9457a-143">The symmetric key to wrap</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-144">使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-144">The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm</span></span> </p>'
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="9457a-145">暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-145">ListenableFuture containing the encrypted key and the algorithm that was used</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="9457a-146">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="9457a-146">the algorithm is not valid</span></span> </p>
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeySize*
    name: getDefaultKeySize
    nameWithType: RsaKey.getDefaultKeySize
    fullName: static int com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultKeySize
    package: com.microsoft.azure.keyvault.cryptography
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.RsaKey*
    name: RsaKey
    nameWithType: RsaKey.RsaKey
    fullName: com.microsoft.azure.keyvault.cryptography.RsaKey.RsaKey
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 8f3c7027
    spec.java:
      - name: Provider
        fullName: Provider
  - uid: 5330fdd9
    spec.java:
      - name: KeyPair
        fullName: KeyPair
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultEncryptionAlgorithm*
    name: getDefaultEncryptionAlgorithm
    nameWithType: RsaKey.getDefaultEncryptionAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultEncryptionAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeyWrapAlgorithm*
    name: getDefaultKeyWrapAlgorithm
    nameWithType: RsaKey.getDefaultKeyWrapAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultKeyWrapAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultSignatureAlgorithm*
    name: getDefaultSignatureAlgorithm
    nameWithType: RsaKey.getDefaultSignatureAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultSignatureAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getKid*
    name: getKid
    nameWithType: RsaKey.getKid
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getKid
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 456eb9d1
    spec.java:
      - name: NoSuchAlgorithmException
        fullName: NoSuchAlgorithmException
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: dfd3b0c8
    spec.java:
      - name: 'ListenableFuture<byte[]>'
        fullName: 'ListenableFuture<byte[]>'
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.decryptAsync*
    name: decryptAsync
    nameWithType: RsaKey.decryptAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.decryptAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 7356d169
    spec.java:
      - name: 'ListenableFuture<Triple<byte[], byte[], String>>'
        fullName: 'ListenableFuture<Triple<byte[], byte[], String>>'
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.encryptAsync*
    name: encryptAsync
    nameWithType: RsaKey.encryptAsync
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.encryptAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 32be89a6
    spec.java:
      - name: 'ListenableFuture<Pair<byte[], String>>'
        fullName: 'ListenableFuture<Pair<byte[], String>>'
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.wrapKeyAsync*
    name: wrapKeyAsync
    nameWithType: RsaKey.wrapKeyAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.wrapKeyAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.unwrapKeyAsync*
    name: unwrapKeyAsync
    nameWithType: RsaKey.unwrapKeyAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.unwrapKeyAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.signAsync*
    name: signAsync
    nameWithType: RsaKey.signAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.signAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 8779baad
    spec.java:
      - name: ListenableFuture<Boolean>
        fullName: ListenableFuture<Boolean>
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.verifyAsync*
    name: verifyAsync
    nameWithType: RsaKey.verifyAsync
    fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.RsaKey.verifyAsync
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.close*
    name: close
    nameWithType: RsaKey.close
    fullName: void com.microsoft.azure.keyvault.cryptography.RsaKey.close
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.core._i_key
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    summary: <p><span data-ttu-id="9457a-147">Microsoft Azure Key Vault ライブラリと暗号化キーを表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="9457a-147">Interface for representing cryptographic keys with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKey
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: IKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-148">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-148">The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-149">このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-149">The default encryption algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: IKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-150">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-150">The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-151">既定のキーは、このキーのアルゴリズムをラップします。</span><span class="sxs-lookup"><span data-stu-id="9457a-151">The default key wrap algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: IKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-152">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-152">The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-153">このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="9457a-153">The default signature algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getKid()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getKid()
    nameWithType: IKey.getKid()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getKid()
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-154">このキーの一意のキー識別子。</span><span class="sxs-lookup"><span data-stu-id="9457a-154">The unique key identifier for this key.</span></span></p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9457a-155">キー識別子</span><span class="sxs-lookup"><span data-stu-id="9457a-155">The key identifier</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-156">指定した暗号テキストを復号化します。</span><span class="sxs-lookup"><span data-stu-id="9457a-156">Decrypts the specified cipher text.</span></span> <span data-ttu-id="9457a-157">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="9457a-157">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p><span data-ttu-id="9457a-158">暗号化を解除する暗号テキスト</span><span class="sxs-lookup"><span data-stu-id="9457a-158">The cipher text to decrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="9457a-159">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-159">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="9457a-160">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-160">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: authenticationTag
          type: f549433f
          description: <p><span data-ttu-id="9457a-161">(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ</span><span class="sxs-lookup"><span data-stu-id="9457a-161">The authentication tag from the encrypt operation (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-162">を使用する暗号化アルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-162">The encryption algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="9457a-163">プレーン テキストを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-163">A ListenableFuture containing the plain text</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.core.IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-164">指定されたプレーン テキストを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="9457a-164">Encrypts the specified plain text.</span></span> <span data-ttu-id="9457a-165">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="9457a-165">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p><span data-ttu-id="9457a-166">プレーン テキストを暗号化するには</span><span class="sxs-lookup"><span data-stu-id="9457a-166">The plain text to encrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="9457a-167">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-167">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="9457a-168">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="9457a-168">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-169">既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-169">The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm</span></span> </p>'
      return:
        type: 7356d169
        description: '<p><span data-ttu-id="9457a-170">暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-170">A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used</span></span> </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-171">ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</span><span class="sxs-lookup"><span data-stu-id="9457a-171">Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p><span data-ttu-id="9457a-172">ラップする対称キー</span><span class="sxs-lookup"><span data-stu-id="9457a-172">The symmetric key to wrap</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-173">使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-173">The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm</span></span> </p>'
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="9457a-174">暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-174">ListenableFuture containing the encrypted key and the algorithm that was used</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-175">(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="9457a-175">Unwraps (decrypts) the specified encryped key material.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p><span data-ttu-id="9457a-176">暗号化されたキーの暗号化を解除するには</span><span class="sxs-lookup"><span data-stu-id="9457a-176">The encrypted key to decrypt</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-177">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-177">The algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="9457a-178">ラップ解除されたキーを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="9457a-178">A ListenableFuture containing the unwrapped key</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'IKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.signAsync(final byte[] digest, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-179">指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</span><span class="sxs-lookup"><span data-stu-id="9457a-179">Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="9457a-180">署名するダイジェスト</span><span class="sxs-lookup"><span data-stu-id="9457a-180">The digest to sign</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: <p><span data-ttu-id="9457a-181">使用する署名アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="9457a-181">The signature algorithm to use</span></span> </p>
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="9457a-182">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9457a-182">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9457a-183">指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</span><span class="sxs-lookup"><span data-stu-id="9457a-183">Verifies the supplied signature value using the supplied digest and algorithm.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="9457a-184">入力ダイジェスト</span><span class="sxs-lookup"><span data-stu-id="9457a-184">The digest input</span></span> </p>
        - id: signature
          type: f549433f
          description: <p><span data-ttu-id="9457a-185">署名を検証します</span><span class="sxs-lookup"><span data-stu-id="9457a-185">The signature to verify</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="9457a-186">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="9457a-186">The algorithm to use, must be provided</span></span> </p>'
      return:
        type: 8779baad
        description: <p><span data-ttu-id="9457a-187">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9457a-187">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>