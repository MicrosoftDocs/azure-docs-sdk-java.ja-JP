### YamlMime:ManagedReference
items:
  - uid: system.fabric._replicator_settings
    id: _replicator_settings
    parent: system.fabric
    children:
      - system.fabric._replicator_settings.getBatchAcknowledgementInterval()
      - system.fabric._replicator_settings.getInitialCopyQueueSize()
      - system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize()
      - system.fabric._replicator_settings.getInitialReplicationQueueSize()
      - system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxCopyQueueSize()
      - system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxReplicationMessageSize()
      - system.fabric._replicator_settings.getMaxReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize()
      - system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout()
      - system.fabric._replicator_settings.getReplicatorAddress()
      - system.fabric._replicator_settings.getRetryInterval()
      - system.fabric._replicator_settings.getSecurityCredentials()
      - system.fabric._replicator_settings.isRequireServiceAck()
      - system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations()
      - system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck()
      - 'system.fabric._replicator_settings.loadFrom(FabricCodePackageActivationContext,String,String)'
      - system.fabric._replicator_settings.ReplicatorSettings()
      - system.fabric._replicator_settings.setBatchAcknowledgementInterval(Duration)
      - system.fabric._replicator_settings.setInitialCopyQueueSize(long)
      - system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setInitialReplicationQueueSize(long)
      - system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxCopyQueueSize(long)
      - system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxReplicationMessageSize(long)
      - system.fabric._replicator_settings.setMaxReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout(Duration)
      - system.fabric._replicator_settings.setReplicatorAddress(String)
      - system.fabric._replicator_settings.setRequireServiceAck(boolean)
      - system.fabric._replicator_settings.setRetryInterval(Duration)
      - system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations(boolean)
      - system.fabric._replicator_settings.setSecurityCredentials(SecurityCredentials)
      - system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
      - system.fabric._replicator_settings.toNative(PinCollection)
      - system.fabric._replicator_settings.toString()
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 8
    package: system.fabric
    syntax: &ref_1
      content: public class ReplicatorSettings
    inheritance:
      - java.lang.Object
  - uid: system.fabric._replicator_settings.getBatchAcknowledgementInterval()
    id: getBatchAcknowledgementInterval()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getBatchAcknowledgementInterval()
    nameWithType: ReplicatorSettings.getBatchAcknowledgementInterval()
    fullName: Duration system.fabric.ReplicatorSettings.getBatchAcknowledgementInterval()
    overload: system.fabric._replicator_settings.getBatchAcknowledgementInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 214
    package: system.fabric
    summary: "<p>受信確認を送信する前に、操作を受信した後、レプリケーターが待機する時間を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>受信し、この期間内に受信確認は、その他の操作を 1 つのメッセージで送信、受信確認となります。 増加、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#batchAcknowledgementInterval</xref>値は、各レプリケーション操作の待機時間を減らしますが、レプリケーターのスループットが向上します。 既定値は、0.05 秒 (50 ミリ秒) </p>"
    syntax:
      content: public Duration getBatchAcknowledgementInterval()
      return:
        type: e02a2de0
        description: <p>受信確認を送信する前に、操作を受信した後、レプリケーターが待機する時間にバックアップします。 </p>
  - uid: system.fabric._replicator_settings.getInitialCopyQueueSize()
    id: getInitialCopyQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialCopyQueueSize()
    nameWithType: ReplicatorSettings.getInitialCopyQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialCopyQueueSize()
    overload: system.fabric._replicator_settings.getInitialCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 340
    package: system.fabric
    summary: "<p>コピー操作キュー内の初期サイズを取得<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public long getInitialCopyQueueSize()
      return:
        type: 0364520f
        description: <p>内のコピー操作キューの初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。 </p>
  - uid: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize()
    id: getInitialPrimaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialPrimaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialPrimaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialPrimaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 561
    package: system.fabric
    summary: "<p>プライマリ レプリケーション操作キュー内の初期サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s の各単位をここでは、数キュー内の操作です。</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割はプライマリ、既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public long getInitialPrimaryReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>プライマリ レプリケーション操作キュー内の初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref></p>
  - uid: system.fabric._replicator_settings.getInitialReplicationQueueSize()
    id: getInitialReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 294
    package: system.fabric
    summary: |-
      <p>レプリケーション キューのサイズの初期サイズを取得します。</p>
      <p></p>
    syntax:
      content: public long getInitialReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>レプリケーション キューのサイズの初期サイズします。 </p>
  - uid: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize()
    id: getInitialSecondaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialSecondaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialSecondaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialSecondaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 676
    package: system.fabric
    summary: "<p>セカンダリのレプリケーション操作キュー内の初期サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割はセカンダリ/アイドル状態を既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public long getInitialSecondaryReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>セカンダリのレプリケーション操作キュー内の初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s はまだ追加され、処理、サービス。 単位をここでは、キューの操作の数 </p>
  - uid: system.fabric._replicator_settings.getMaxCopyQueueSize()
    id: getMaxCopyQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxCopyQueueSize()
    nameWithType: ReplicatorSettings.getMaxCopyQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxCopyQueueSize()
    overload: system.fabric._replicator_settings.getMaxCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 377
    package: system.fabric
    summary: "<p>内のコピー操作キューの最大サイズを取得<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>Primaryâ€ で操作がバッファーされる場合は、セカンダリでこのキューのサイズに達すると、™ s コピー キュー。 かどうかには、そのキューを格納、し、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は 1024 </p>"
    syntax:
      content: public long getMaxCopyQueueSize()
      return:
        type: 0364520f
        description: <p>内のコピー操作キューの最大サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。 </p>
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize()
    id: getMaxPrimaryReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxPrimaryReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 638
    package: system.fabric
    summary: "<p>内のプライマリ レプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスのロールがプライマリの場合。 既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public long getMaxPrimaryReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: <p>が必要です。 内のプライマリ レプリケーション操作キューの最大サイズを返します<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>の単位をここでは、仮想キューのメモリ使用量。長さを返します。 </p>
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize()
    id: getMaxPrimaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxPrimaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 599
    package: system.fabric
    summary: "<p>内のプライマリ レプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>このキューのサイズに達したかどうかは、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は、このパラメーターの値は 1024 のメモが 2 の累乗にする必要があります。 この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>ときに、サービスの役割は、プライマリ </p>"
    syntax:
      content: public long getMaxPrimaryReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>最大キューのサイズ、プライマリ レプリケーション操作の内部<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s。 単位をここでは、キュー内の操作の数です。 </p>
  - uid: system.fabric._replicator_settings.getMaxReplicationMessageSize()
    id: getMaxReplicationMessageSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationMessageSize()
    nameWithType: ReplicatorSettings.getMaxReplicationMessageSize()
    fullName: Long system.fabric.ReplicatorSettings.getMaxReplicationMessageSize()
    overload: system.fabric._replicator_settings.getMaxReplicationMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 504
    package: system.fabric
    summary: "<p>レプリケーター経由で送信できるメッセージの最大サイズを取得します。 メッセージをコピーして、コンテキストのメッセージをコピーするこれらレプリケーション メッセージが含まれます。 表現の単位はバイトです。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 50 MB </p>"
    syntax:
      content: public Long getMaxReplicationMessageSize()
      return:
        type: 34f09483
        description: <p>レプリケーター経由で送信できるメッセージの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize()
    id: getMaxReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 446
    package: system.fabric
    summary: "<p>レプリケーション キューのメモリの最大サイズを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public long getMaxReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: <p>レプリケーション キューのメモリの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueSize()
    id: getMaxReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 313
    package: system.fabric
    summary: |-
      <p>レプリケーション キューの最大サイズを取得します。</p>
      <p></p>
    syntax:
      content: public long getMaxReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>レプリケーション キューの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize()
    id: getMaxSecondaryReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxSecondaryReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 758
    package: system.fabric
    summary: "<p>内のセカンダリのレプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s。</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割がセカンダリ/アイドル状態の場合。 既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public long getMaxSecondaryReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: <p>内のセカンダリのレプリケーション操作キューの最大サイズを返します<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s。 単位をここでは、キューの仮想メモリの消費です。 </p>
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize()
    id: getMaxSecondaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxSecondaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 717
    package: system.fabric
    summary: "<p>内のセカンダリのレプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>Primaryâ€ で操作がバッファーされるこのキューのサイズに達すると、™ s レプリケーション キュー。 かどうかには、そのキューを格納、し、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は、このパラメーターの値が 2048.Note が 2 の累乗にする必要があります。 この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割がセカンダリ/アイドル状態の場合 </p>"
    syntax:
      content: public long getMaxSecondaryReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>内のセカンダリのレプリケーション操作キューの最大サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s はまだ追加され、処理、サービス。 単位をここでは、キューの操作の数 </p>
  - uid: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout()
    id: getPrimaryWaitForPendingQuorumsTimeout()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getPrimaryWaitForPendingQuorumsTimeout()
    nameWithType: ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout()
    fullName: Duration system.fabric.ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout()
    overload: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 797
    package: system.fabric
    summary: "<p>Â €˜cancellingâ€ につながる可能性のある再構成要求を処理する前に、保留中のレプリケーション操作の確認のクォーラムを受信するため、主にレプリケーターが待機する時間を定義™、保留中のレプリケーション操作です。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 0 です。 つまり、その再構成おく方™ t が保留中のレプリケーション操作でのクォーラムを受信するために待機します。 これは、再構成を早く完了するために役立ちます。 フェールオーバーをプライマリに長い期間の暗黙的な低速の再構成にこのパラメーターの値が大きいが生じる可能性があることに注意してください。 </p>"
    syntax:
      content: public Duration getPrimaryWaitForPendingQuorumsTimeout()
      return:
        type: e02a2de0
        description: <p>プライマリのレプリケーターが再構成を処理するプライマリ レプリケーターの要求がある場合に、保留中のレプリケーション操作に対して受信確認のクォーラムを受信するために待機する時間<xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>です。 </p>
  - uid: system.fabric._replicator_settings.getReplicatorAddress()
    id: getReplicatorAddress()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getReplicatorAddress()
    nameWithType: ReplicatorSettings.getReplicatorAddress()
    fullName: String system.fabric.ReplicatorSettings.getReplicatorAddress()
    overload: system.fabric._replicator_settings.getReplicatorAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 247
    package: system.fabric
    summary: "<p>その他の複製物作成会社と通信するときにこの複製物作成会社が使用するアドレスを構成します。</p>\n<p>\r\n\r\n  <b>注釈:</b>文字列としてフォーマットされている\"hostname:port\"ホスト名が FQDN または IP アドレスを指定できます。 既定値は localhost:0 </p>"
    syntax:
      content: public String getReplicatorAddress()
      return:
        type: '26831127'
        description: <p>その他の複製物作成会社と通信するときにこの複製物作成会社が使用するアドレス。 </p>
  - uid: system.fabric._replicator_settings.getRetryInterval()
    id: getRetryInterval()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getRetryInterval()
    nameWithType: ReplicatorSettings.getRetryInterval()
    fullName: Duration system.fabric.ReplicatorSettings.getRetryInterval()
    overload: system.fabric._replicator_settings.getRetryInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 177
    package: system.fabric
    summary: "<p>定義しますが、どのくらいの期間<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>は、プライマリからのメッセージを受信したことを確認するセカンダリ セカンダリへのメッセージを送信後に待機します。</p>\n<p>\r\n\r\n  <b>注釈:</b>メッセージが処理されたことに必ずしもはメッセージを受信します。 このタイマーを超えた場合、メッセージが再送信されます。 既定値は、5 秒です。 </p>"
    syntax:
      content: public Duration getRetryInterval()
      return:
        type: e02a2de0
        description: <p>必要な時間、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>は、プライマリからのメッセージを受信したことを確認するセカンダリ セカンダリへのメッセージを送信後に待機します。 </p>
  - uid: system.fabric._replicator_settings.getSecurityCredentials()
    id: getSecurityCredentials()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getSecurityCredentials()
    nameWithType: ReplicatorSettings.getSecurityCredentials()
    fullName: SecurityCredentials system.fabric.ReplicatorSettings.getSecurityCredentials()
    overload: system.fabric._replicator_settings.getSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 273
    package: system.fabric
    summary: |-
      <p>使用サービスが複製物作成会社間のトラフィックを保護するためのセキュリティ資格情報を定義できます。</p>
      <p></p>
    syntax:
      content: public SecurityCredentials getSecurityCredentials()
      return:
        type: system.fabric._security_credentials
        description: <p>複製物作成会社間のトラフィックを保護するためのセキュリティ資格情報を定義するサービス。 </p>
  - uid: system.fabric._replicator_settings.isRequireServiceAck()
    id: isRequireServiceAck()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isRequireServiceAck()
    nameWithType: ReplicatorSettings.isRequireServiceAck()
    fullName: boolean system.fabric.ReplicatorSettings.isRequireServiceAck()
    overload: system.fabric._replicator_settings.isRequireServiceAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 415
    package: system.fabric
    summary: "<p>により、サービスを呼び出すオプティミスティックの受信確認要求することで非永続的なサービスの操作の<xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref>次の操作をポンプする前にします。</p>\n<p>\r\n\r\n  <b>注釈:</b>明示的な受信確認を必要とする非永続的サービスはオプティミスティックの受信確認して、操作を防ぐために True にこのプロパティを設定することができます、<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>です。 この設定は、永続的なサービスの影響を与えません。 既定値は false です。 </p>"
    syntax:
      content: public boolean isRequireServiceAck()
      return:
        type: 4fc6e284
        description: <p>true の場合、オプティミスティックの受信確認の非永続的なサービス操作のそれ以外の場合は false。 </p>
  - uid: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations()
    id: isSecondaryClearAcknowledgedOperations()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isSecondaryClearAcknowledgedOperations()
    nameWithType: ReplicatorSettings.isSecondaryClearAcknowledgedOperations()
    fullName: boolean system.fabric.ReplicatorSettings.isSecondaryClearAcknowledgedOperations()
    overload: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 474
    package: system.fabric
    summary: "<p>通常、セカンダリのレプリケーターに操作にできる catchup レプリカにプライマリに昇格の場合、キューに保持されます。 このフラグを有効にすると、セカンダリに複製物作成会社は、ユーザーのサービスによって承認されるとすぐに、操作を解放します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は false </p>"
    syntax:
      content: public boolean isSecondaryClearAcknowledgedOperations()
      return:
        type: 4fc6e284
        description: <p>ユーザー サービスが承認されるとすぐに、セカンダリのレプリケーターが、操作を解放する場合は true。それ以外の場合は false です。 </p>
  - uid: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck()
    id: isUseStreamFaultsAndEndOfStreamOperationAck()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isUseStreamFaultsAndEndOfStreamOperationAck()
    nameWithType: ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck()
    fullName: boolean system.fabric.ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck()
    overload: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 531
    package: system.fabric
    summary: "<p>レプリケーターがストリームのエラーを使用するかどうかを指定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は false </p>"
    syntax:
      content: public boolean isUseStreamFaultsAndEndOfStreamOperationAck()
      return:
        type: 4fc6e284
        description: <p>レプリケーターがストリームの障害を使用する場合は trueそれ以外の場合は false です。 </p>
  - uid: 'system.fabric._replicator_settings.loadFrom(FabricCodePackageActivationContext,String,String)'
    id: 'loadFrom(FabricCodePackageActivationContext,String,String)'
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: 'loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    nameWithType: 'ReplicatorSettings.loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    fullName: 'static ReplicatorSettings system.fabric.ReplicatorSettings.loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    overload: system.fabric._replicator_settings.loadFrom*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 1026
    package: system.fabric
    syntax:
      content: 'public static ReplicatorSettings loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
      parameters:
        - id: codePackageActivationContext
          type: system.fabric._fabric_code_package_activation_context
        - id: configPackageName
          type: '26831127'
        - id: sectionName
          type: '26831127'
      return:
        type: system.fabric._replicator_settings
  - uid: system.fabric._replicator_settings.ReplicatorSettings()
    id: ReplicatorSettings()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: ReplicatorSettings()
    nameWithType: ReplicatorSettings.ReplicatorSettings()
    fullName: system.fabric.ReplicatorSettings.ReplicatorSettings()
    overload: system.fabric._replicator_settings.ReplicatorSettings*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 77
    package: system.fabric
    syntax:
      content: public ReplicatorSettings()
  - uid: system.fabric._replicator_settings.setBatchAcknowledgementInterval(Duration)
    id: setBatchAcknowledgementInterval(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    nameWithType: ReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    fullName: void system.fabric.ReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    overload: system.fabric._replicator_settings.setBatchAcknowledgementInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 233
    package: system.fabric
    summary: "<p>受信確認を送信する前に、操作を受信した後、レプリケーターが待機する時間を設定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>受信し、この期間内に受信確認は、その他の操作を 1 つのメッセージで送信、受信確認となります。 増加、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#batchAcknowledgementInterval</xref>値は、各レプリケーション操作の待機時間を減らしますが、レプリケーターのスループットが向上します。 既定値は、0.05 秒 (50 ミリ秒) </p>"
    syntax:
      content: public void setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
      parameters:
        - id: batchAcknowledgementInterval
          type: e02a2de0
          description: <p>受信確認を送信する前に、操作を受信した後、レプリケーターが待機する時間にバックアップします。 </p>
  - uid: system.fabric._replicator_settings.setInitialCopyQueueSize(long)
    id: setInitialCopyQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialCopyQueueSize(long initialCopyQueueSize)
    nameWithType: ReplicatorSettings.setInitialCopyQueueSize(long initialCopyQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialCopyQueueSize(long initialCopyQueueSize)
    overload: system.fabric._replicator_settings.setInitialCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 358
    package: system.fabric
    summary: "<p>取得または設定のコピー操作キュー内の初期サイズ<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public void setInitialCopyQueueSize(long initialCopyQueueSize)
      parameters:
        - id: initialCopyQueueSize
          type: 0364520f
          description: <p>内のコピー操作キューの初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。 </p>
  - uid: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize(long)
    id: setInitialPrimaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 579
    package: system.fabric
    summary: "<p>プライマリ レプリケーション操作キュー内の初期サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s の各単位をここでは、数キュー内の操作です。</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割はプライマリ、既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public void setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
      parameters:
        - id: initialPrimaryReplicationQueueSize
          type: 0364520f
          description: <p>プライマリ レプリケーション操作キュー内の初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref></p>
  - uid: system.fabric._replicator_settings.setInitialReplicationQueueSize(long)
    id: setInitialReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialReplicationQueueSize(long initialReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialReplicationQueueSize(long initialReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialReplicationQueueSize(long initialReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 304
    package: system.fabric
    summary: |-
      <p>レプリケーション キューのサイズの初期サイズを設定します。</p>
      <p></p>
    syntax:
      content: public void setInitialReplicationQueueSize(long initialReplicationQueueSize)
      parameters:
        - id: initialReplicationQueueSize
          type: 0364520f
          description: <p>レプリケーション キューのサイズの初期サイズします。 </p>
  - uid: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize(long)
    id: setInitialSecondaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 696
    package: system.fabric
    summary: "<p>セカンダリのレプリケーション操作キュー内の初期サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割はセカンダリ/アイドル状態を既定値は 64 です。 このパラメーターの値が 2 のべき乗でなければならないことに注意してください。 </p>"
    syntax:
      content: public void setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
      parameters:
        - id: initialSecondaryReplicationQueueSize
          type: 0364520f
          description: <p>セカンダリのレプリケーション操作キュー内の初期サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s はまだ追加され、処理、サービス。 単位をここでは、キューの操作の数 </p>
  - uid: system.fabric._replicator_settings.setMaxCopyQueueSize(long)
    id: setMaxCopyQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxCopyQueueSize(long maxCopyQueueSize)
    nameWithType: ReplicatorSettings.setMaxCopyQueueSize(long maxCopyQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxCopyQueueSize(long maxCopyQueueSize)
    overload: system.fabric._replicator_settings.setMaxCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 397
    package: system.fabric
    summary: "<p>内のコピー操作キューの最大サイズを設定<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>Primaryâ€ で操作がバッファーされる場合は、セカンダリでこのキューのサイズに達すると、™ s コピー キュー。 かどうかには、そのキューを格納、し、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は 1024 </p>"
    syntax:
      content: public void setMaxCopyQueueSize(long maxCopyQueueSize)
      parameters:
        - id: maxCopyQueueSize
          type: 0364520f
          description: <p>内のコピー操作キューの最大サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、コピーが含まれています<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>追加されていないと、サービスによって処理されます。 </p>
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize(long)
    id: setMaxPrimaryReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 657
    package: system.fabric
    summary: "<p>内のプライマリ レプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスのロールがプライマリの場合。 既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public void setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
      parameters:
        - id: maxPrimaryReplicationQueueMemorySize
          type: 0364520f
          description: <p>最大キューのサイズ、プライマリ レプリケーション操作の内部<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>単位をここでは、仮想メモリキューの使用量。長さを返します。 </p>
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize(long)
    id: setMaxPrimaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 620
    package: system.fabric
    summary: "<p>内のプライマリ レプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>このキューのサイズに達したかどうかは、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は、このパラメーターの値は 1024 のメモが 2 の累乗にする必要があります。 この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>ときに、サービスの役割は、プライマリ </p>"
    syntax:
      content: public void setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
      parameters:
        - id: maxPrimaryReplicationQueueSize
          type: 0364520f
          description: <p>最大キューのサイズ、プライマリ レプリケーション操作の内部<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s。 単位をここでは、キュー内の操作の数です。 </p>
  - uid: system.fabric._replicator_settings.setMaxReplicationMessageSize(long)
    id: setMaxReplicationMessageSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationMessageSize(long maxReplicationMessageSize)
    nameWithType: ReplicatorSettings.setMaxReplicationMessageSize(long maxReplicationMessageSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationMessageSize(long maxReplicationMessageSize)
    overload: system.fabric._replicator_settings.setMaxReplicationMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 519
    package: system.fabric
    summary: "<p>レプリケーター経由で送信できるメッセージの最大サイズを設定します。 メッセージをコピーして、コンテキストのメッセージをコピーするこれらレプリケーション メッセージが含まれます。 表現の単位はバイトです。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 50 MB </p>"
    syntax:
      content: public void setMaxReplicationMessageSize(long maxReplicationMessageSize)
      parameters:
        - id: maxReplicationMessageSize
          type: 0364520f
          description: <p>レプリケーター経由で送信できるメッセージの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize(long)
    id: setMaxReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 459
    package: system.fabric
    summary: "<p>レプリケーション キューのメモリの最大サイズを設定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public void setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
      parameters:
        - id: maxReplicationQueueMemorySize
          type: 0364520f
          description: <p>レプリケーション キューのメモリの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueSize(long)
    id: setMaxReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationQueueSize(long maxReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxReplicationQueueSize(long maxReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueSize(long maxReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 323
    package: system.fabric
    summary: |-
      <p>レプリケーション キューの最大サイズを設定します。</p>
      <p></p>
    syntax:
      content: public void setMaxReplicationQueueSize(long maxReplicationQueueSize)
      parameters:
        - id: maxReplicationQueueSize
          type: 0364520f
          description: <p>レプリケーション キューの最大サイズ。 </p>
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize(long)
    id: setMaxSecondaryReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 777
    package: system.fabric
    summary: "<p>内のセカンダリのレプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s。</p>\n<p>\r\n\r\n  <b>注釈:</b>この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割がセカンダリ/アイドル状態の場合。 既定値は 0 です。 つまり、メモリの制限はありません。 </p>"
    syntax:
      content: public void setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
      parameters:
        - id: maxSecondaryReplicationQueueMemorySize
          type: 0364520f
          description: <p>内のセカンダリのレプリケーション操作キューの最大サイズを返します<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s。 単位をここでは、キューの仮想メモリの消費です。 </p>
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize(long)
    id: setMaxSecondaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 739
    package: system.fabric
    summary: "<p>内のセカンダリのレプリケーション操作キューの最大サイズを定義<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>注釈:</b>Primaryâ€ で操作がバッファーされるこのキューのサイズに達すると、™ s レプリケーション キュー。 かどうかには、そのキューを格納、し、プライマリの表示が開始<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref>例外。 既定値は、このパラメーターの値が 2048.Note が 2 の累乗にする必要があります。 この設定に固有の<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>サービスの役割がセカンダリ/アイドル状態の場合 </p>"
    syntax:
      content: public void setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
      parameters:
        - id: maxSecondaryReplicationQueueSize
          type: 0364520f
          description: <p>内のセカンダリのレプリケーション操作キューの最大サイズ<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>、レプリケーションが含まれている<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s はまだ追加され、処理、サービス。 単位をここでは、キューの操作の数 </p>
  - uid: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout(Duration)
    id: setPrimaryWaitForPendingQuorumsTimeout(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    nameWithType: ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    fullName: void system.fabric.ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    overload: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 818
    package: system.fabric
    summary: "<p>Â €˜cancellingâ€ につながる可能性のある再構成要求を処理する前に、保留中のレプリケーション操作の確認のクォーラムを受信するため、主にレプリケーターが待機する時間を定義™、保留中のレプリケーション操作です。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は 0 です。 つまり、その再構成おく方™ t が保留中のレプリケーション操作でのクォーラムを受信するために待機します。 これは、再構成を早く完了するために役立ちます。 フェールオーバーをプライマリに長い期間の暗黙的な低速の再構成にこのパラメーターの値が大きいが生じる可能性があることに注意してください。 </p>"
    syntax:
      content: public void setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
      parameters:
        - id: primaryWaitForPendingQuorumsTimeout
          type: e02a2de0
          description: <p>プライマリのレプリケーターが再構成を処理するプライマリ レプリケーターの要求がある場合に、保留中のレプリケーション操作に対して受信確認のクォーラムを受信するために待機する時間<xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>です。 </p>
  - uid: system.fabric._replicator_settings.setReplicatorAddress(String)
    id: setReplicatorAddress(String)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setReplicatorAddress(String replicatorAddress)
    nameWithType: ReplicatorSettings.setReplicatorAddress(String replicatorAddress)
    fullName: void system.fabric.ReplicatorSettings.setReplicatorAddress(String replicatorAddress)
    overload: system.fabric._replicator_settings.setReplicatorAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 262
    package: system.fabric
    summary: "<p>その他の複製物作成会社と通信するときにこの複製物作成会社が使用するアドレスを構成します。</p>\n<p>\r\n\r\n  <b>注釈:</b>文字列としてフォーマットされている\"hostname:port\"ホスト名が FQDN または IP アドレスを指定できます。 既定値は localhost:0 </p>"
    syntax:
      content: public void setReplicatorAddress(String replicatorAddress)
      parameters:
        - id: replicatorAddress
          type: '26831127'
          description: <p>その他の複製物作成会社と通信するときにこの複製物作成会社が使用するアドレス。 </p>
  - uid: system.fabric._replicator_settings.setRequireServiceAck(boolean)
    id: setRequireServiceAck(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setRequireServiceAck(boolean requireServiceAck)
    nameWithType: ReplicatorSettings.setRequireServiceAck(boolean requireServiceAck)
    fullName: void system.fabric.ReplicatorSettings.setRequireServiceAck(boolean requireServiceAck)
    overload: system.fabric._replicator_settings.setRequireServiceAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 434
    package: system.fabric
    summary: "<p>により、サービスを呼び出すオプティミスティックの受信確認要求することで非永続的なサービスの操作の<xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref>次の操作をポンプする前にします。</p>\n<p>\r\n\r\n  <b>注釈:</b>明示的な受信確認を必要とする非永続的サービスはオプティミスティックの受信確認して、操作を防ぐために True にこのプロパティを設定することができます、<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>です。 この設定は、永続的なサービスの影響を与えません。 既定値は false です。 </p>"
    syntax:
      content: public void setRequireServiceAck(boolean requireServiceAck)
      parameters:
        - id: requireServiceAck
          type: 4fc6e284
          description: <p>true の場合、オプティミスティックの受信確認の非永続的なサービス操作のそれ以外の場合は false。 </p>
  - uid: system.fabric._replicator_settings.setRetryInterval(Duration)
    id: setRetryInterval(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setRetryInterval(Duration retryInterval)
    nameWithType: ReplicatorSettings.setRetryInterval(Duration retryInterval)
    fullName: void system.fabric.ReplicatorSettings.setRetryInterval(Duration retryInterval)
    overload: system.fabric._replicator_settings.setRetryInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 196
    package: system.fabric
    summary: "<p>定義しますが、どのくらいの期間<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>は、プライマリからのメッセージを受信したことを確認するセカンダリ セカンダリへのメッセージを送信後に待機します。</p>\n<p>\r\n\r\n  <b>注釈:</b>メッセージが処理されたことに必ずしもはメッセージを受信します。 このタイマーを超えた場合、メッセージが再送信されます。 既定値は、5 秒です。 </p>"
    syntax:
      content: public void setRetryInterval(Duration retryInterval)
      parameters:
        - id: retryInterval
          type: e02a2de0
          description: <p>必要な時間、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>は、プライマリからのメッセージを受信したことを確認するセカンダリ セカンダリへのメッセージを送信後に待機します。 </p>
  - uid: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations(boolean)
    id: setSecondaryClearAcknowledgedOperations(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    nameWithType: ReplicatorSettings.setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    fullName: void system.fabric.ReplicatorSettings.setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    overload: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 490
    package: system.fabric
    summary: "<p>通常、セカンダリのレプリケーターに操作にできる catchup レプリカにプライマリに昇格の場合、キューに保持されます。 このフラグを有効にすると、セカンダリに複製物作成会社は、ユーザーのサービスによって承認されるとすぐに、操作を解放します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は false </p>"
    syntax:
      content: public void setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
      parameters:
        - id: secondaryClearAcknowledgedOperations
          type: 4fc6e284
          description: <p>ユーザー サービスが承認されるとすぐに、セカンダリのレプリケーターが、操作を解放する場合は true。それ以外の場合は false です。 </p>
  - uid: system.fabric._replicator_settings.setSecurityCredentials(SecurityCredentials)
    id: setSecurityCredentials(SecurityCredentials)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setSecurityCredentials(SecurityCredentials securityCredentials)
    nameWithType: ReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    fullName: void system.fabric.ReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    overload: system.fabric._replicator_settings.setSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 285
    package: system.fabric
    summary: |-
      <p>使用サービスが複製物作成会社間のトラフィックを保護するためのセキュリティ資格情報を定義できます。</p>
      <p></p>
    syntax:
      content: public void setSecurityCredentials(SecurityCredentials securityCredentials)
      parameters:
        - id: securityCredentials
          type: system.fabric._security_credentials
          description: <p>複製物作成会社間のトラフィックを保護するためのセキュリティ資格情報を定義するサービス。 </p>
  - uid: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
    id: setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    nameWithType: ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    fullName: void system.fabric.ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    overload: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 544
    package: system.fabric
    summary: "<p>レプリケーターがストリームのエラーを使用するかどうかを指定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定値は false </p>"
    syntax:
      content: public void setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
      parameters:
        - id: useStreamFaultsAndEndOfStreamOperationAck
          type: 4fc6e284
          description: <p>レプリケーターがストリームの障害を使用する場合は trueそれ以外の場合は false です。 </p>
  - uid: system.fabric._replicator_settings.toNative(PinCollection)
    id: toNative(PinCollection)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: toNative(PinCollection pinCollection)
    nameWithType: ReplicatorSettings.toNative(PinCollection pinCollection)
    fullName: long system.fabric.ReplicatorSettings.toNative(PinCollection pinCollection)
    overload: system.fabric._replicator_settings.toNative*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 842
    package: system.fabric
    syntax:
      content: public long toNative(PinCollection pinCollection)
      parameters:
        - id: pinCollection
          type: system.fabric._pin_collection
      return:
        type: 0364520f
  - uid: system.fabric._replicator_settings.toString()
    id: toString()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: toString()
    nameWithType: ReplicatorSettings.toString()
    fullName: String system.fabric.ReplicatorSettings.toString()
    overload: system.fabric._replicator_settings.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 823
    package: system.fabric
    syntax:
      content: public String toString()
      return:
        type: '26831127'
references:
  - uid: system.fabric._replicator_settings.ReplicatorSettings*
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings.ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings.ReplicatorSettings
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: system.fabric._replicator_settings.getRetryInterval*
    name: getRetryInterval
    nameWithType: ReplicatorSettings.getRetryInterval
    fullName: Duration system.fabric.ReplicatorSettings.getRetryInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.setRetryInterval*
    name: setRetryInterval
    nameWithType: ReplicatorSettings.setRetryInterval
    fullName: void system.fabric.ReplicatorSettings.setRetryInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.getBatchAcknowledgementInterval*
    name: getBatchAcknowledgementInterval
    nameWithType: ReplicatorSettings.getBatchAcknowledgementInterval
    fullName: Duration system.fabric.ReplicatorSettings.getBatchAcknowledgementInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.setBatchAcknowledgementInterval*
    name: setBatchAcknowledgementInterval
    nameWithType: ReplicatorSettings.setBatchAcknowledgementInterval
    fullName: void system.fabric.ReplicatorSettings.setBatchAcknowledgementInterval
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._replicator_settings.getReplicatorAddress*
    name: getReplicatorAddress
    nameWithType: ReplicatorSettings.getReplicatorAddress
    fullName: String system.fabric.ReplicatorSettings.getReplicatorAddress
    package: system.fabric
  - uid: system.fabric._replicator_settings.setReplicatorAddress*
    name: setReplicatorAddress
    nameWithType: ReplicatorSettings.setReplicatorAddress
    fullName: void system.fabric.ReplicatorSettings.setReplicatorAddress
    package: system.fabric
  - uid: system.fabric._replicator_settings.getSecurityCredentials*
    name: getSecurityCredentials
    nameWithType: ReplicatorSettings.getSecurityCredentials
    fullName: SecurityCredentials system.fabric.ReplicatorSettings.getSecurityCredentials
    package: system.fabric
  - uid: system.fabric._replicator_settings.setSecurityCredentials*
    name: setSecurityCredentials
    nameWithType: ReplicatorSettings.setSecurityCredentials
    fullName: void system.fabric.ReplicatorSettings.setSecurityCredentials
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._replicator_settings.getInitialReplicationQueueSize*
    name: getInitialReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialReplicationQueueSize*
    name: setInitialReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueSize*
    name: getMaxReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueSize*
    name: setMaxReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialCopyQueueSize*
    name: getInitialCopyQueueSize
    nameWithType: ReplicatorSettings.getInitialCopyQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialCopyQueueSize*
    name: setInitialCopyQueueSize
    nameWithType: ReplicatorSettings.setInitialCopyQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxCopyQueueSize*
    name: getMaxCopyQueueSize
    nameWithType: ReplicatorSettings.getMaxCopyQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxCopyQueueSize*
    name: setMaxCopyQueueSize
    nameWithType: ReplicatorSettings.setMaxCopyQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxCopyQueueSize
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._replicator_settings.isRequireServiceAck*
    name: isRequireServiceAck
    nameWithType: ReplicatorSettings.isRequireServiceAck
    fullName: boolean system.fabric.ReplicatorSettings.isRequireServiceAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.setRequireServiceAck*
    name: setRequireServiceAck
    nameWithType: ReplicatorSettings.setRequireServiceAck
    fullName: void system.fabric.ReplicatorSettings.setRequireServiceAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize*
    name: getMaxReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize*
    name: setMaxReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations*
    name: isSecondaryClearAcknowledgedOperations
    nameWithType: ReplicatorSettings.isSecondaryClearAcknowledgedOperations
    fullName: boolean system.fabric.ReplicatorSettings.isSecondaryClearAcknowledgedOperations
    package: system.fabric
  - uid: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations*
    name: setSecondaryClearAcknowledgedOperations
    nameWithType: ReplicatorSettings.setSecondaryClearAcknowledgedOperations
    fullName: void system.fabric.ReplicatorSettings.setSecondaryClearAcknowledgedOperations
    package: system.fabric
  - uid: 34f09483
    spec.java:
      - name: Long
        fullName: Long
  - uid: system.fabric._replicator_settings.getMaxReplicationMessageSize*
    name: getMaxReplicationMessageSize
    nameWithType: ReplicatorSettings.getMaxReplicationMessageSize
    fullName: Long system.fabric.ReplicatorSettings.getMaxReplicationMessageSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationMessageSize*
    name: setMaxReplicationMessageSize
    nameWithType: ReplicatorSettings.setMaxReplicationMessageSize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationMessageSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck*
    name: isUseStreamFaultsAndEndOfStreamOperationAck
    nameWithType: ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck
    fullName: boolean system.fabric.ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck*
    name: setUseStreamFaultsAndEndOfStreamOperationAck
    nameWithType: ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck
    fullName: void system.fabric.ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize*
    name: getInitialPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialPrimaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize*
    name: setInitialPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialPrimaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize*
    name: getMaxPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize*
    name: setMaxPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize*
    name: getMaxPrimaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize*
    name: setMaxPrimaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize*
    name: getInitialSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialSecondaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize*
    name: setInitialSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialSecondaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize*
    name: getMaxSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize*
    name: setMaxSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize*
    name: getMaxSecondaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize*
    name: setMaxSecondaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout*
    name: getPrimaryWaitForPendingQuorumsTimeout
    nameWithType: ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout
    fullName: Duration system.fabric.ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout
    package: system.fabric
  - uid: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout*
    name: setPrimaryWaitForPendingQuorumsTimeout
    nameWithType: ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout
    fullName: void system.fabric.ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout
    package: system.fabric
  - uid: system.fabric._replicator_settings.toString*
    name: toString
    nameWithType: ReplicatorSettings.toString
    fullName: String system.fabric.ReplicatorSettings.toString
    package: system.fabric
  - uid: system.fabric._replicator_settings.toNative*
    name: toNative
    nameWithType: ReplicatorSettings.toNative
    fullName: long system.fabric.ReplicatorSettings.toNative
    package: system.fabric
  - uid: system.fabric._replicator_settings.loadFrom*
    name: loadFrom
    nameWithType: ReplicatorSettings.loadFrom
    fullName: static ReplicatorSettings system.fabric.ReplicatorSettings.loadFrom
    package: system.fabric
  - uid: system.fabric._security_credentials
    parent: system.fabric
    href: system.fabric._security_credentials.yml
    name: SecurityCredentials
    nameWithType: SecurityCredentials
    fullName: system.fabric.SecurityCredentials
    type: Class
    summary: <p>セキュリティ資格情報を表す型の抽象基本クラスです。 </p>
    syntax:
      content: public class SecurityCredentials
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax: *ref_1
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p>高可用性と信頼性のレプリケート状態です。 </p>\n<p>\r\n\r\n  <b>注釈:</b>の既定の実装を提供、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>、 <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>、および<xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref>インターフェイスの実装と共に、ユーザーのサービスが使用できる、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>インターフェイスです。 インスタンス、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスが経由で取得した、 <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider、system.fabric.ReplicatorSettings)</xref>メソッドにキャストできる<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>使用します。 </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._operation
    parent: system.fabric
    href: system.fabric._operation.yml
    name: Operation
    nameWithType: Operation
    fullName: system.fabric.Operation
    type: Interface
    summary: "<p>\r\n\r\n  <b>注釈:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>セカンダリ レプリカに配信される状態の変化を説明する基本インターフェイスです。 含まれている、 <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>とシーケンス番号およびその他の情報を識別します。 </p>"
    syntax:
      content: public interface Operation
  - uid: system.fabric._operation.acknowledge()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    name: acknowledge()
    nameWithType: Operation.acknowledge()
    fullName: void system.fabric.Operation.acknowledge()
    type: Method
    summary: "<p>この操作が、セカンダリ レプリカに正常に適用されたことを確認します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>取得したときに、サービスはこのメソッドを呼び出す必要があります、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>複製物作成会社と正常にローカル ストアに適用します。 永続化されたサービスでは、このメソッドを呼び出すことが必須ため、 <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>を実装するその他のオブジェクトを解放しない<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>です。 揮発性サービスでは、レプリケーターに暗黙的に承認されると operations 値の設定でそれ以外の場合は構成しない限り、受信したとき<xref uid=\"system.fabric._replicator_settings.isRequireServiceAck()\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#isRequireServiceAck()</xref> true に設定します。 プライマリ レプリカを受け取る前に、レプリカのクォーラム操作を確認する必要があります、 <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>操作完了の応答。 </p>"
    syntax:
      content: public void acknowledge()
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator extends PrimaryReplicator
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._fabric_code_package_activation_context
    parent: system.fabric
    href: system.fabric._fabric_code_package_activation_context.yml
    name: FabricCodePackageActivationContext
    nameWithType: FabricCodePackageActivationContext
    fullName: system.fabric.FabricCodePackageActivationContext
    type: Class
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax:
      content: public class FabricCodePackageActivationContext implements CodePackageActivationContext