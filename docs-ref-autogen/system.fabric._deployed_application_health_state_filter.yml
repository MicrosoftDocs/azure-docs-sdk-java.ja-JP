### YamlMime:ManagedReference
items:
  - uid: system.fabric._deployed_application_health_state_filter
    id: _deployed_application_health_state_filter
    parent: system.fabric
    children:
      - system.fabric._deployed_application_health_state_filter.DeployedApplicationHealthStateFilter()
      - system.fabric._deployed_application_health_state_filter.getDeployedServicePackageFilters()
      - system.fabric._deployed_application_health_state_filter.getHealthStateFilter()
      - system.fabric._deployed_application_health_state_filter.getNodeNameFilter()
      - system.fabric._deployed_application_health_state_filter.setHealthStateFilter(HealthStateFilter)
      - system.fabric._deployed_application_health_state_filter.setNodeNameFilter(String)
      - system.fabric._deployed_application_health_state_filter.toString()
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: DeployedApplicationHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter
    fullName: system.fabric.DeployedApplicationHealthStateFilter
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 17
    package: system.fabric
    summary: "<p>フィルター処理<xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref>オブジェクト。 </p>\n<p>\r\n\r\n  <b>注釈:</b>正常性の状態のチャンクのクエリでは、粒度が細かい選択にクエリ結果に含める必要がある配置済みアプリケーション フィルターを展開したアプリケーションの一覧を指定できます。 渡されるフィルターに関係なく、正常性状態を集計すべて配置されているアプリケーションは、親の評価に使用されることに注意してください。 </p>"
    syntax: &ref_1
      content: public class DeployedApplicationHealthStateFilter
    inheritance:
      - java.lang.Object
  - uid: system.fabric._deployed_application_health_state_filter.DeployedApplicationHealthStateFilter()
    id: DeployedApplicationHealthStateFilter()
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: DeployedApplicationHealthStateFilter()
    nameWithType: DeployedApplicationHealthStateFilter.DeployedApplicationHealthStateFilter()
    fullName: system.fabric.DeployedApplicationHealthStateFilter.DeployedApplicationHealthStateFilter()
    overload: system.fabric._deployed_application_health_state_filter.DeployedApplicationHealthStateFilter*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 28
    package: system.fabric
    syntax:
      content: public DeployedApplicationHealthStateFilter()
  - uid: system.fabric._deployed_application_health_state_filter.getDeployedServicePackageFilters()
    id: getDeployedServicePackageFilters()
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: getDeployedServicePackageFilters()
    nameWithType: DeployedApplicationHealthStateFilter.getDeployedServicePackageFilters()
    fullName: List<DeployedServicePackageHealthStateFilter> system.fabric.DeployedApplicationHealthStateFilter.getDeployedServicePackageFilters()
    overload: system.fabric._deployed_application_health_state_filter.getDeployedServicePackageFilters*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 33
    package: system.fabric
    syntax:
      content: public List<DeployedServicePackageHealthStateFilter> getDeployedServicePackageFilters()
      return:
        type: 5618da2dsystem.fabric._deployed_service_package_health_state_filtera08ddfce
  - uid: system.fabric._deployed_application_health_state_filter.getHealthStateFilter()
    id: getHealthStateFilter()
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: getHealthStateFilter()
    nameWithType: DeployedApplicationHealthStateFilter.getHealthStateFilter()
    fullName: HealthStateFilter system.fabric.DeployedApplicationHealthStateFilter.getHealthStateFilter()
    overload: system.fabric._deployed_application_health_state_filter.getHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 51
    package: system.fabric
    summary: "<p>集計された正常性状態のフィルターを取得、 <xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref>コレクション内のエントリ。</p>\n<p>\r\n\r\n  <b>注釈:</b>ヘルス状態フィルター値はメンバーまたはのメンバーのビットごとの組み合わせから取得<xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>です。 フィルターの一致するように配置されたアプリケーション、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。 </p>"
    syntax:
      content: public HealthStateFilter getHealthStateFilter()
      return:
        type: system.fabric.health._health_state_filter
        description: <p>集計された正常性状態のフィルター、 <xref uid="system.fabric.health._deployed_application_health_state" data-throw-if-not-resolved="false">system.fabric.health.DeployedApplicationHealthState</xref>コレクション内のエントリ。 </p>
  - uid: system.fabric._deployed_application_health_state_filter.getNodeNameFilter()
    id: getNodeNameFilter()
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: getNodeNameFilter()
    nameWithType: DeployedApplicationHealthStateFilter.getNodeNameFilter()
    fullName: String system.fabric.DeployedApplicationHealthStateFilter.getNodeNameFilter()
    overload: system.fabric._deployed_application_health_state_filter.getNodeNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 83
    package: system.fabric
    summary: "<p>ノード名のフィルターを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>(存在する場合)、親フィルターに一致するすべての展開済みアプリケーションが考慮され、一致したヘルス状態のフィルターと同様に、他のフィルター メンバーが指定されていない場合。 それ以外の場合、フィルターは、指定したノードにデプロイされたアプリケーションにのみ適用されます。 </p>"
    syntax:
      content: public String getNodeNameFilter()
      return:
        type: '26831127'
        description: <p>ノード名のフィルターです。 </p>
  - uid: system.fabric._deployed_application_health_state_filter.setHealthStateFilter(HealthStateFilter)
    id: setHealthStateFilter(HealthStateFilter)
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: setHealthStateFilter(HealthStateFilter healthStateFilter)
    nameWithType: DeployedApplicationHealthStateFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    fullName: void system.fabric.DeployedApplicationHealthStateFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    overload: system.fabric._deployed_application_health_state_filter.setHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 68
    package: system.fabric
    summary: "<p>集計された正常性状態のセットのフィルター、 <xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref>コレクション内のエントリ。</p>\n<p>\r\n\r\n  <b>注釈:</b>ヘルス状態フィルター値はメンバーまたはのメンバーのビットごとの組み合わせから取得<xref uid=\"\" data-throw-if-not-resolved=\"false\">HealthStateFilter</xref>です。 フィルターの一致するように配置されたアプリケーション、集計された正常性状態は、指定したヘルス状態のフィルターを一致しなければなりません。 </p>"
    syntax:
      content: public void setHealthStateFilter(HealthStateFilter healthStateFilter)
      parameters:
        - id: healthStateFilter
          type: system.fabric.health._health_state_filter
          description: <p>集計された正常性状態のフィルター、 <xref uid="system.fabric.health._deployed_application_health_state" data-throw-if-not-resolved="false">system.fabric.health.DeployedApplicationHealthState</xref>コレクション内のエントリ。 </p>
  - uid: system.fabric._deployed_application_health_state_filter.setNodeNameFilter(String)
    id: setNodeNameFilter(String)
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: setNodeNameFilter(String nodeNameFilter)
    nameWithType: DeployedApplicationHealthStateFilter.setNodeNameFilter(String nodeNameFilter)
    fullName: void system.fabric.DeployedApplicationHealthStateFilter.setNodeNameFilter(String nodeNameFilter)
    overload: system.fabric._deployed_application_health_state_filter.setNodeNameFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 99
    package: system.fabric
    summary: "<p>ノード名のフィルターを設定します。</p>\n<p>\r\n\r\n  <b>注釈:</b>(存在する場合)、親フィルターに一致するすべての展開済みアプリケーションが考慮され、一致したヘルス状態のフィルターと同様に、他のフィルター メンバーが指定されていない場合。 それ以外の場合、フィルターは、指定したノードにデプロイされたアプリケーションにのみ適用されます。 </p>"
    syntax:
      content: public void setNodeNameFilter(String nodeNameFilter)
      parameters:
        - id: nodeNameFilter
          type: '26831127'
          description: <p>ノード名のフィルターです。 </p>
  - uid: system.fabric._deployed_application_health_state_filter.toString()
    id: toString()
    parent: system.fabric._deployed_application_health_state_filter
    href: system.fabric._deployed_application_health_state_filter.yml
    langs:
      - java
    name: toString()
    nameWithType: DeployedApplicationHealthStateFilter.toString()
    fullName: String system.fabric.DeployedApplicationHealthStateFilter.toString()
    overload: system.fabric._deployed_application_health_state_filter.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/DeployedApplicationHealthStateFilter.java
      startLine: 108
    package: system.fabric
    summary: |-
      <p>フィルターの文字列表現を返します。</p>
      <p></p>
    syntax:
      content: public String toString()
      return:
        type: '26831127'
        description: <p>フィルターの文字列形式。 </p>
references:
  - uid: system.fabric._deployed_application_health_state_filter.DeployedApplicationHealthStateFilter*
    name: DeployedApplicationHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter.DeployedApplicationHealthStateFilter
    fullName: system.fabric.DeployedApplicationHealthStateFilter.DeployedApplicationHealthStateFilter
    package: system.fabric
  - uid: 5618da2dsystem.fabric._deployed_service_package_health_state_filtera08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric._deployed_service_package_health_state_filter
        name: DeployedServicePackageHealthStateFilter
        fullName: system.fabric.DeployedServicePackageHealthStateFilter
        href: system.fabric._deployed_service_package_health_state_filter.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._deployed_application_health_state_filter.getDeployedServicePackageFilters*
    name: getDeployedServicePackageFilters
    nameWithType: DeployedApplicationHealthStateFilter.getDeployedServicePackageFilters
    fullName: List<DeployedServicePackageHealthStateFilter> system.fabric.DeployedApplicationHealthStateFilter.getDeployedServicePackageFilters
    package: system.fabric
  - uid: system.fabric._deployed_application_health_state_filter.getHealthStateFilter*
    name: getHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter.getHealthStateFilter
    fullName: HealthStateFilter system.fabric.DeployedApplicationHealthStateFilter.getHealthStateFilter
    package: system.fabric
  - uid: system.fabric._deployed_application_health_state_filter.setHealthStateFilter*
    name: setHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter.setHealthStateFilter
    fullName: void system.fabric.DeployedApplicationHealthStateFilter.setHealthStateFilter
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._deployed_application_health_state_filter.getNodeNameFilter*
    name: getNodeNameFilter
    nameWithType: DeployedApplicationHealthStateFilter.getNodeNameFilter
    fullName: String system.fabric.DeployedApplicationHealthStateFilter.getNodeNameFilter
    package: system.fabric
  - uid: system.fabric._deployed_application_health_state_filter.setNodeNameFilter*
    name: setNodeNameFilter
    nameWithType: DeployedApplicationHealthStateFilter.setNodeNameFilter
    fullName: void system.fabric.DeployedApplicationHealthStateFilter.setNodeNameFilter
    package: system.fabric
  - uid: system.fabric._deployed_application_health_state_filter.toString*
    name: toString
    nameWithType: DeployedApplicationHealthStateFilter.toString
    fullName: String system.fabric.DeployedApplicationHealthStateFilter.toString
    package: system.fabric
  - uid: system.fabric._deployed_service_package_health_state_filter
    parent: system.fabric
    href: system.fabric._deployed_service_package_health_state_filter.yml
    name: DeployedServicePackageHealthStateFilter
    nameWithType: DeployedServicePackageHealthStateFilter
    fullName: system.fabric.DeployedServicePackageHealthStateFilter
    type: Class
    summary: "<p>フィルター処理<xref uid=\"system.fabric.health._deployed_service_package_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedServicePackageHealthState</xref>オブジェクト。 </p>\n<p>\r\n\r\n  <b>注釈:</b>正常性の状態のチャンクのクエリでは、クエリ結果に含める必要がある展開済みサービス パッケージ フィルター粒度が細かいの選択 を展開済みサービス パッケージの一覧を指定できます。 渡されるフィルターに関係なく、正常性状態を集計すべて展開済みサービス パッケージが親の評価に使用されることに注意してください。 </p>"
    syntax:
      content: public class DeployedServicePackageHealthStateFilter
  - uid: system.fabric.health._health_state_filter
    parent: system.fabric.health
    href: system.fabric.health._health_state_filter.yml
    name: HealthStateFilter
    nameWithType: HealthStateFilter
    fullName: system.fabric.health.HealthStateFilter
    type: Enum
    syntax:
      content: public enum HealthStateFilter
  - uid: system.fabric.health._deployed_application_health_state
    parent: system.fabric.health
    href: system.fabric.health._deployed_application_health_state.yml
    name: DeployedApplicationHealthState
    nameWithType: DeployedApplicationHealthState
    fullName: system.fabric.health.DeployedApplicationHealthState
    type: Class
    summary: <p>エンティティの識別子を含む配置のアプリケーションの正常性状態と、集計された正常性状態を表します。 </p>
    syntax:
      content: public class DeployedApplicationHealthState extends EntityHealthState
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._deployed_application_health_state_filter
    parent: system.fabric
    href: system.fabric._deployed_application_health_state_filter.yml
    name: DeployedApplicationHealthStateFilter
    nameWithType: DeployedApplicationHealthStateFilter
    fullName: system.fabric.DeployedApplicationHealthStateFilter
    type: Class
    summary: "<p>フィルター処理<xref uid=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.DeployedApplicationHealthState</xref>オブジェクト。 </p>\n<p>\r\n\r\n  <b>注釈:</b>正常性の状態のチャンクのクエリでは、粒度が細かい選択にクエリ結果に含める必要がある配置済みアプリケーション フィルターを展開したアプリケーションの一覧を指定できます。 渡されるフィルターに関係なく、正常性状態を集計すべて配置されているアプリケーションは、親の評価に使用されることに注意してください。 </p>"
    syntax: *ref_1