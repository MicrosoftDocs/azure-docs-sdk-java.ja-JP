### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    id: _with_orchestrator
    parent: com.microsoft.azure.management.compute
    children:
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    langs:
      - java
    name: ContainerService.DefinitionStages.WithOrchestrator
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator
    type: Interface
    source:
      remote: &ref_0
        path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
        branch: v1.3.0
        repo: 'https://github.com/Azure/azure-sdk-for-java'
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      startLine: 140
    package: com.microsoft.azure.management.compute
    summary: <p>オーケストレーションの種類を指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithOrchestrator
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
    id: withDcosOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    langs:
      - java
    name: withDcosOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
    overload: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      startLine: 151
    package: com.microsoft.azure.management.compute
    summary: <p>コンテナー サービスの DCOS オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithDiagnostics withDcosOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
    id: withKubernetesOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    langs:
      - java
    name: withKubernetesOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
    fullName: WithServicePrincipalProfile com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
    overload: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      startLine: 157
    package: com.microsoft.azure.management.compute
    summary: <p>コンテナー サービスの Kubernetes オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithServicePrincipalProfile withKubernetesOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
    id: withSwarmOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    langs:
      - java
    name: withSwarmOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
    overload: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      startLine: 145
    package: com.microsoft.azure.management.compute
    summary: <p>コンテナー サービスの群オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithDiagnostics withSwarmOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
        description: <p>定義の次のステージ </p>
references:
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration*
    name: withSwarmOrchestration
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration
    package: com.microsoft.azure.management.compute
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration*
    name: withDcosOrchestration
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration
    package: com.microsoft.azure.management.compute
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration*
    name: withKubernetesOrchestration
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration
    fullName: WithServicePrincipalProfile com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration
    package: com.microsoft.azure.management.compute
  - uid: com.microsoft.azure.management.compute._container_service._definition
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition.yml
    name: ContainerService.Definition
    nameWithType: ContainerService.Definition
    fullName: com.microsoft.azure.management.compute.ContainerService.Definition
    type: Interface
    summary: <p>コンテナー サービスに関連するすべての定義のコンテナー インターフェイスです。 </p>
    syntax:
      content: 'public interface Definition extends ContainerService.DefinitionStages.Blank,ContainerService.DefinitionStages.WithGroup,ContainerService.DefinitionStages.WithOrchestrator,ContainerService.DefinitionStages.WithMasterNodeCount,ContainerService.DefinitionStages.WithMasterLeafDomainLabel,ContainerService.DefinitionStages.WithLinux,ContainerService.DefinitionStages.WithLinuxRootUsername,ContainerService.DefinitionStages.WithLinuxSshKey,ContainerService.DefinitionStages.WithAgentPool,ContainerService.DefinitionStages.WithServicePrincipalProfile,ContainerService.DefinitionStages.WithDiagnostics,ContainerService.DefinitionStages.WithCreate'
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.yml
    name: ContainerService.DefinitionStages.WithDiagnostics
    nameWithType: ContainerService.DefinitionStages.WithDiagnostics
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithDiagnostics
    type: Interface
    summary: <p>特定の診断設定を許可するコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithDiagnostics extends ContainerService.DefinitionStages.WithLinux
  - uid: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.yml
    name: ContainerService.DefinitionStages.WithServicePrincipalProfile
    nameWithType: ContainerService.DefinitionStages.WithServicePrincipalProfile
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithServicePrincipalProfile
    type: Interface
    summary: <p>サービス プリンシパルをクラスターのプロパティを許可する段階です。 </p>
    syntax:
      content: public interface WithServicePrincipalProfile