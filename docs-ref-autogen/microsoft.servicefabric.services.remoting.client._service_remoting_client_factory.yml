### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory
    id: _service_remoting_client_factory
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory.yml
    langs:
      - java
    name: ServiceRemotingClientFactory
    nameWithType: ServiceRemotingClientFactory
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
    type: Interface
    source:
      remote:
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingClientFactory.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingClientFactory.java
      startLine: 8
    package: microsoft.servicefabric.services.remoting.client
    summary: <p>クライアント ファクトリには、リモート処理の通信を提供するために実装する必要がありますのあるインターフェイスを定義します。 </p>
    syntax:
      content: public interface ServiceRemotingClientFactory extends CommunicationClientFactory<ServiceRemotingClient>
    inheritedMembers:
      - 'microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)'
      - 'microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)'
      - 'microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)'
references:
  - uid: 'microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.communication.client._communication_client_factory
    href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
    name: 'getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    nameWithType: 'CommunicationClientFactory<TCommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<TCommunicationClient> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>1 つまたは複数の通信リスナーを含む指定されたサービスのパーティションを解決し、指定された listenerName に対応するエンドポイントと通信するクライアントを返します。 フォームのサービスのエンドポイントは、{「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<TCommunicationClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
      parameters:
        - id: serviceUri
          type: '62304784'
          description: <p>サービスの Uri を解決するのには </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p>解決するのには、パーティションを識別するキー </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p>レプリカの指定パーティション キーで識別されるパーティションには、クライアントに接続する必要があります </p>
        - id: listenerName
          type: '26831127'
          description: <p>クライアントが接続する、選択したレプリカのエンドポイントでどのリスナーを指定します。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>クライアントを作成するときに発生する例外を使用する再試行ポリシーを指定します。 </p>
      return:
        type: '87556530'
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、 <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>(<xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>) オブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.communication.client._communication_client_factory
    href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
    name: 'getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    nameWithType: 'CommunicationClientFactory<TCommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<TCommunicationClient> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>1 つまたは複数の通信リスナーを含む指定されたサービスのパーティションを再解決し、指定された listenerName に対応するエンドポイントと通信するクライアントを返します。 フォームのサービスのエンドポイントは、{「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<TCommunicationClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
      parameters:
        - id: previousRsp
          type: system.fabric._resolved_service_partition
          description: <p>以前の ResolvedServicePartition 値 </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p>レプリカの指定パーティション キーで識別されるパーティションには、クライアントに接続する必要があります </p>
        - id: listenerName
          type: '26831127'
          description: <p>クライアントが接続する、選択したレプリカのエンドポイントでどのリスナーを指定します。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>クライアントを作成するときに発生する例外を使用する再試行ポリシーを指定します。 </p>
      return:
        type: '87556530'
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、 <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>(<xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>) オブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.communication.client._communication_client_factory
    href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
    name: 'reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    nameWithType: 'CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<OperationRetryControl> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>発生する例外処理、 <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>サービスにメッセージを送信するときに</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
      parameters:
        - id: client
          type: 4500d4bf
          description: <p>クライアントの通信 </p>
        - id: exceptionInformation
          type: microsoft.servicefabric.services.communication.client._exception_information
          description: <p>サービスと通信中に発生した例外に関する情報。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>報告された例外を処理するために使用する必要があります再試行ポリシーを指定します。 </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.services.communication.client._operation_retry_controla08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、 <xref uid="microsoft.servicefabric.services.communication.client._operation_retry_control" data-throw-if-not-resolved="false">OperationRetryControl</xref>再試行ポリシーでこの例外の情報を提供するオブジェクト。 </p>
  - uid: microsoft.servicefabric.services.communication.client._communication_client_factory
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
    name: CommunicationClientFactory<TCommunicationClient>
    nameWithType: CommunicationClientFactory<TCommunicationClient>
    fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient>
    type: Interface
    summary: <p>Service fabric サービスと対話する通信のクライアントのファクトリを提供するために実装する必要があります、インターフェイスを定義します。 </p>
    syntax:
      content: public interface CommunicationClientFactory<TCommunicationClient extends CommunicationClient>
      typeParameters:
        - type: 4500d4bf
  - uid: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: FabricTransportServiceRemotingClientFactory
    nameWithType: FabricTransportServiceRemotingClientFactory
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
    type: Class
    summary: <p><xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClientFactory</xref>ファブリック TCP トランスポートを使用して作成する<xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClient</xref> 経由でリモート処理は実行されているインターフェイスでステートレスおよびステートフルなサービスと通信します。<xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener</xref>です。 </p>
    syntax:
      content: public class FabricTransportServiceRemotingClientFactory implements ServiceRemotingClientFactory