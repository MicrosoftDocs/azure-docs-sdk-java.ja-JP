### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.table._ignore
    id: _ignore
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._ignore.yml
    langs:
      - java
    name: Ignore
    nameWithType: Ignore
    fullName: com.microsoft.azure.storage.table.Ignore
    type: Interface
    source:
      remote:
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/Ignore.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/Ignore.java
      startLine: 34
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="f2645-101">注釈リフレクションによってプロパティをシリアル化または逆の使用を防ぐためのメソッドに設定します。</span><span class="sxs-lookup"><span data-stu-id="f2645-101">An annotation set on a method to prevent its use in serializing or deserializing a property by reflection.</span></span> <span data-ttu-id="f2645-102">実装するクラスのメソッドに注釈を適用<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>させるはリフレクション ベースのシリアル化および逆シリアル化中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2645-102">Apply the  annotation to methods in a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to force them to be ignored during reflection-based serialization and deserialization.</span></span> <span data-ttu-id="f2645-103">ドキュメントを参照して<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>詳細についてはリフレクション ベースのシリアル化および逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="f2645-103">See the documentation for <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> for more information on using reflection-based serialization and deserialization.</span></span></p>
      <p></p>
    syntax:
      content: public interface Ignore
    see:
      - type: com.microsoft.azure.storage.table._store_as
        description: <span data-ttu-id="f2645-104">StoreAs</span><span class="sxs-lookup"><span data-stu-id="f2645-104">StoreAs</span></span>
references:
  - uid: com.microsoft.azure.storage.table._table_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_entity.yml
    name: TableEntity
    nameWithType: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    type: Interface
    summary: "<p><span data-ttu-id=\"f2645-105\">テーブルのエンティティ型に必要なインターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-105\">An interface required for table entity types.</span></span> <span data-ttu-id=\"f2645-106\"><xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>インターフェイスは、共通のエンティティ プロパティの getter および setter メソッドを宣言し、およびシリアル化と逆シリアル化のプロパティ マップを使用してすべてのエンティティ プロパティのメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-106\">The <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map.</span></span> <span data-ttu-id=\"f2645-107\">実装するクラスを作成する<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>プロパティの格納、取得、シリアル化および逆シリアル化をカスタマイズして、テーブル エンティティの追加のカスタム ロジックを指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-107\">Create classes implementing <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity.</span></span> </p>\n<p><span data-ttu-id=\"f2645-108\">ストレージ クライアント ライブラリには 2 つの実装が含まれています<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>単純なプロパティ アクセスとシリアル化を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-108\">The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that provide for simple property access and serialization:</span></span> </p>\n<p><span data-ttu-id=\"f2645-109\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>実装<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>し格納およびプロパティを取得する単純なプロパティ マップを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-109\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> and provides a simple property map to store and retrieve properties.</span></span> <span data-ttu-id=\"f2645-110\">使用して、 <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>簡単なアクセスのプロパティのサブセットのみを返す場合 (たとえば、クエリの select 句) をエンティティのプロパティまたはの場合、クエリが異なる複数のエンティティ型を返すことができますプロパティ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-110\">Use a <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties.</span></span> <span data-ttu-id=\"f2645-111\">また、この種類を使用する、プロパティ情報を失うことがなく異種エンティティの一括テーブルの更新を実行することができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-111\">You can also use this type to perform bulk table updates of heterogeneous entities without losing property information.</span></span> </p>\n\n<p><span data-ttu-id=\"f2645-112\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の実装は、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>でシリアル化と逆シリアル化をリフレクション ベースで動作を使用する、およびメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-112\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that uses reflection-based serialization and deserialization behavior in its  and  methods.</span></span> <span data-ttu-id=\"f2645-113\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-派生クラスの型と名前付けをシリアル化して自動的に逆シリアル化の規則に従っているメソッドを使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-113\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically.</span></span> </p>\n\n<p><span data-ttu-id=\"f2645-114\">実装するクラス<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>活用できる、自動リフレクション ベースのシリアル化および逆シリアル化の動作で<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>で静的メソッドを呼び出すことによって、 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-114\">Any class that implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> by invoking the static methods  in  and  in .</span></span> <span data-ttu-id=\"f2645-115\">クラスは、シリアル化しても、自動的に逆シリアル化するには、型および名前付け規則に従うメソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-115\">The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically.</span></span> <span data-ttu-id=\"f2645-116\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-116\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"f2645-117\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-117\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"f2645-118\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-118\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"f2645-119\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-119\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"f2645-120\">クラスの説明の表を参照して<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> Java 対応するプロパティの型のマップ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-120\">See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"f2645-121\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-121\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"f2645-122\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-122\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"f2645-123\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-123\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"f2645-124\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>リフレクション メソッドを使用して、サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-124\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass that uses the reflection methods.</span></span> </p>\n<p></p>"
    syntax:
      content: public interface TableEntity
  - uid: com.microsoft.azure.storage.table._table_service_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: TableServiceEntity
    nameWithType: TableServiceEntity
    fullName: com.microsoft.azure.storage.table.TableServiceEntity
    type: Class
    summary: "<p><span data-ttu-id=\"f2645-125\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>クラスは、ストレージ サービス内のテーブル エンティティの基本オブジェクト型を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-125\">The <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> class represents the base object type for a table entity in the Storage service.</span></span> <span data-ttu-id=\"f2645-126\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の基本実装を提供、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>を提供するインターフェイスとメソッドを既定ではおよびリフレクションを使用してすべてのプロパティを逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-126\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> provides a base implementation for the <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection.</span></span> <span data-ttu-id=\"f2645-127\">テーブル エンティティ クラスがこのクラスを拡張し、オーバーライド、および提供するメソッドをカスタマイズしたかより多くのパフォーマンスの高いシリアル化ロジック。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-127\">A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic.</span></span> </p>\n<p><span data-ttu-id=\"f2645-128\">リフレクションの使用によりのサブクラス<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>シリアル化を実装することがなく逆シリアル化およびシリアル化のコードそのものです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-128\">The use of reflection allows subclasses of <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> to be serialized and deserialized without having to implement the serialization code themselves.</span></span> <span data-ttu-id=\"f2645-129\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-129\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"f2645-130\">活用するために、自動のシリアル化コード、テーブル エンティティ クラスは、対応するテーブル内のエンティティ Microsoft Azure テーブル ストレージ内の各プロパティの getter および setter メソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-130\">To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage.</span></span> <span data-ttu-id=\"f2645-131\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-131\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"f2645-132\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-132\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"f2645-133\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-133\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"f2645-134\">Java 対応するプロパティの型のマップは、次の表を参照してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-134\">See the table below for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"f2645-135\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-135\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"f2645-136\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-136\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"f2645-137\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-137\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"f2645-138\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-138\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass.</span></span> </p>\n<p><span data-ttu-id=\"f2645-139\">次の表は、Microsoft Azure ストレージでサポートされているプロパティのデータ型と逆シリアル化したときに、対応する Java 型を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-139\">The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized.</span></span> <table rows=\"9\" cols=\"4\"><row><entry thead=\"yes\"><p><span data-ttu-id=\"f2645-140\">ストレージの種類</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-140\">Storage Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"f2645-141\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>値</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-141\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> Value</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"f2645-142\">Java の型</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-142\">Java Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"f2645-143\">説明</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-143\">Description</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-144\"><b>Edm.Binary</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-144\"><b>Edm.Binary</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-145\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType #BINARY</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-145\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType#BINARY</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-146\">バイト配列のサイズは最大 64 KB です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-146\">An array of bytes up to 64 KB in size.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-147\"><b>Edm.Boolean</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-147\"><b>Edm.Boolean</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-148\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType #BOOLEAN</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-148\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType#BOOLEAN</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-149\">ブール値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-149\">A Boolean value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-150\"><b>Edm.DateTime</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-150\"><b>Edm.DateTime</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-151\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType # 日付 _ 時刻</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-151\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType#DATE_TIME</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-152\">世界協定時刻 (UTC) を表す 64 ビット値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-152\">A 64-bit value expressed as Coordinated Universal Time (UTC).</span></span> <span data-ttu-id=\"f2645-153\">サポートされている範囲は、西暦 1601 年 1 月 1 日深夜 12時 00分から始まります</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-153\">The supported range begins from 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id=\"f2645-154\">始まります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-154\">(C.E.), UTC.</span></span> <span data-ttu-id=\"f2645-155\">この範囲は 9999 年 12 月 31 日に終了します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-155\">The range ends at December 31, 9999.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-156\"><b>Edm.Double</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-156\"><b>Edm.Double</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-157\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType #DOUBLE</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-157\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType#DOUBLE</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-158\">64 ビット倍精度浮動小数点値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-158\">A 64-bit double-precision floating point value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-159\"><b>Edm.Guid</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-159\"><b>Edm.Guid</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-160\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType #GUID</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-160\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType#GUID</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-161\">グローバルで一意となる 128 ビットの識別子。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-161\">A 128-bit globally unique identifier.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-162\"><b>Edm.Int32</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-162\"><b>Edm.Int32</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-163\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType # INT32</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-163\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType#INT32</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-164\">32 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-164\">A 32-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-165\"><b>Edm.Int64</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-165\"><b>Edm.Int64</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-166\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType # INT64</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-166\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType#INT64</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-167\">64 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-167\">A 64-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"f2645-168\"><b>Edm.String</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-168\"><b>Edm.String</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-169\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType #STRING</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-169\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType#STRING</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"f2645-170\">UTF-16 エンコードの値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-170\">A UTF-16-encoded value.</span></span> <span data-ttu-id=\"f2645-171\">文字列値には、最大 64 KB の可能性があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-171\">String values may be up to 64 KB in size.</span></span>  </p></entry></row></table></p>\n<p><span data-ttu-id=\"f2645-172\">MSDN のトピックを参照してください<ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">テーブル サービス データ モデルについて</ulink>テーブル、エンティティ、および Microsoft Azure ストレージ サービスで使用されているプロパティの概要についてはします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-172\">See the MSDN topic <ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">Understanding the Table Service Data Model</ulink> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service.</span></span> </p>\n<p><span data-ttu-id=\"f2645-173\">使用できる EDM プリミティブ データ型と名前の概要については、次を参照してください、。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-173\">For an overview of the available EDM primitive data types and names, see the</span></span></p>\n<p><span data-ttu-id=\"f2645-174\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">プリミティブ データ型</ulink>のセクションで、 <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData プロトコルの概要</ulink>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f2645-174\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</ulink> section of the <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</ulink>.</span></span> </p>\n\n<p></p>"
    syntax:
      content: public class TableServiceEntity
  - uid: com.microsoft.azure.storage.table._store_as
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._store_as.yml
    name: StoreAs
    nameWithType: StoreAs
    fullName: com.microsoft.azure.storage.table.StoreAs
    type: Interface
    summary: |-
      <p><span data-ttu-id="f2645-175">注釈名プロパティをオーバーライドするために使用がシリアル化されでリフレクションを使用して逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="f2645-175">An annotation used to override the name a property is serialized and deserialized with using reflection.</span></span> <span data-ttu-id="f2645-176">この注釈を使用して、set アクセス操作子メソッドによって保存または実装するクラスの get アクセス操作子メソッドによって取得されたデータに関連付けるプロパティ名を指定<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>リフレクション ベースのシリアル化と逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="f2645-176">Use this annotation to specify the property name to associate with the data stored by a setter method or retrieved by a getter method in a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> that uses reflection-based serialization and deserialization.</span></span> <span data-ttu-id="f2645-177">名前"PartitionKey"、"RowKey"、"Timestamp"、"Etag"は予約されている場合は無視されますが、注釈設定することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2645-177">Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the  annotation.</span></span> </p>
      <p><span data-ttu-id="f2645-178">例:</span><span class="sxs-lookup"><span data-stu-id="f2645-178">Example:</span></span> </p>
      <p></p>
      <p></p>
      <p><span data-ttu-id="f2645-179">この例では、メソッドを取得し、エンティティ プロパティの設定の名前付け方法<em>ObjectPropertyName</em> 、既定のケースを取得し、名前付きエンティティのプロパティを設定する注釈ことができます<em>EntityPropertyName</em>です。</span><span class="sxs-lookup"><span data-stu-id="f2645-179">This example shows how the methods that would get and set an entity property named <em>ObjectPropertyName</em> in the default case can be annotated to get and set an entity property named <em>EntityPropertyName</em>.</span></span> <span data-ttu-id="f2645-180">ドキュメントを参照して<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>詳細についてはリフレクション ベースのシリアル化および逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="f2645-180">See the documentation for <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> for more information on using reflection-based serialization and deserialization.</span></span></p>
      <p></p>
    syntax:
      content: public interface StoreAs