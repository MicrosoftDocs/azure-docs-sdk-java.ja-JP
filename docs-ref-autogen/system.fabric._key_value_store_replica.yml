### YamlMime:ManagedReference
items:
  - uid: system.fabric._key_value_store_replica
    id: _key_value_store_replica
    parent: system.fabric
    children:
      - system.fabric._key_value_store_replica.abort()
      - 'system.fabric._key_value_store_replica.add(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
      - 'system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
      - system.fabric._key_value_store_replica.closeAsync(CancellationToken)
      - 'system.fabric._key_value_store_replica.contains(TransactionBase,String)'
      - system.fabric._key_value_store_replica.createTransaction()
      - system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
      - system.fabric._key_value_store_replica.enumerate(TransactionBase)
      - 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)'
      - system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
      - 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)'
      - 'system.fabric._key_value_store_replica.get(TransactionBase,String)'
      - system.fabric._key_value_store_replica.getCurrentEpoch()
      - system.fabric._key_value_store_replica.getDataLossHandler()
      - 'system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)'
      - system.fabric._key_value_store_replica.getReplicatorSettings()
      - system.fabric._key_value_store_replica.getStoreName()
      - 'system.fabric._key_value_store_replica.getValue(TransactionBase,String)'
      - system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
      - system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)'
      - system.fabric._key_value_store_replica.onAbort()
      - 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
      - system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
      - system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
      - system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
      - system.fabric._key_value_store_replica.onDatalossReported()
      - system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
      - 'system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
      - 'system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - 'system.fabric._key_value_store_replica.remove(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.remove(TransactionBase,String,long)'
      - system.fabric._key_value_store_replica.restoreAsync(String)
      - 'system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)'
      - system.fabric._key_value_store_replica.serviceCloseAsync(CancellationToken)
      - system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
      - 'system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.tryGet(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)'
      - 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [],long)'
      - 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [],long)'
      - system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 23
    package: system.fabric
    summary: '<p><span data-ttu-id="bfa03-101">」のサービスのライターに、レプリケートされたトランザクション関連のデータ記憶域を提供"任意の Service Fabric サービスに統合するための準備ができています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-101">Provides a transactional, replicated, associative data storage to service writers â€“ ready for integration into any Service Fabric service.</span></span> </p>'
    syntax: &ref_1
      content: public class KeyValueStoreReplica implements StatefulServiceReplica
    inheritance:
      - java.lang.Object
      - system.fabric._stateful_service_replica
  - uid: system.fabric._key_value_store_replica.abort()
    id: abort()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: abort()
    nameWithType: KeyValueStoreReplica.abort()
    fullName: void system.fabric.KeyValueStoreReplica.abort()
    overload: system.fabric._key_value_store_replica.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1210
    package: system.fabric
    summary: <p><span data-ttu-id="bfa03-102">このインスタンスを中止、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-102">Aborts this instance of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref> class.</span></span> </p>
    syntax:
      content: public void abort()
    overridden: system.fabric._stateful_service_replica.abort()
  - uid: 'system.fabric._key_value_store_replica.add(TransactionBase,String,byte [])'
    id: 'add(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'add(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.add(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'void system.fabric.KeyValueStoreReplica.add(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.add*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 360
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-103">キー/値のストアを指定したキーによってインデックス設定される値を追加します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-103">Adds a value indexed by the specified key to the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: 'public void add(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-104">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-104">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-105">キーまたは (文字列) として追加する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-105">The key or index of the value to be added (as a string).</span></span> <span data-ttu-id="bfa03-106">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-106">Limited to 800 characters in length.</span></span> </p>
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-107">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-107">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
  - uid: 'system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
    id: 'backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    nameWithType: 'KeyValueStoreReplica.backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    fullName: 'CompletableFuture<?> system.fabric.KeyValueStoreReplica.backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    overload: system.fabric._key_value_store_replica.backupAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 908
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-108\">非同期的にキー値ストアのバックアップを作成します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-108\">Asynchronously creates a backup of the key-value store.</span></span></p>\n<p><span data-ttu-id=\"bfa03-109\">\r\n\r\n  <b>注釈:</b> 、 <b>postBackupAsyncFunc</b>バックアップ中にエラーがある場合は呼び出されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-109\">\r\n\r\n  <b>Remarks:</b> The <b>postBackupAsyncFunc</b> is not invoked if there is an error during backup.</span></span> <span data-ttu-id=\"bfa03-110\">また、ときに呼び出されました<b>backupOption</b>は<xref uid=\"system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY\" data-throw-if-not-resolved=\"false\">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>ここでは完了する、ユーザーから必要な追加の操作が存在しないため、バックアップ サイクルが 1 つ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-110\">Also, it is not invoked when <b>backupOption</b> is <xref uid=\"system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY\" data-throw-if-not-resolved=\"false\">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref> since there is no further action needed from the user in this case to complete a single backup cycle.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
      parameters:
        - id: backupDirectory
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-111">バックアップが格納されるディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-111">The directory where the backup is to be stored.</span></span> <span data-ttu-id="bfa03-112">場合<b>backupOption</b>は<xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>、このパラメーターは null である必要があります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-112">If <b>backupOption</b> is <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>, then this parameter should be null.</span></span> <span data-ttu-id="bfa03-113">それ以外の場合、このパラメーターが null にすることはできませんを空または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-113">Otherwise, this parameter cannot be null, empty or contain just whitespace.</span></span> <span data-ttu-id="bfa03-114">UNC パスも指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-114">UNC paths may also be provided.</span></span> <span data-ttu-id="bfa03-115">ディレクトリが存在しない場合は作成されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-115">If the directory doesn''t exist, it is created.</span></span> <span data-ttu-id="bfa03-116">増分バックアップが失敗したかどうかは、存在し、空でない<xref uid="system.fabric.exception._fabric_backup_directory_not_empty_exception" data-throw-if-not-resolved="false">system.fabric.exception.FabricBackupDirectoryNotEmptyException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-116">If it exists and isn''t empty, then incremental backup fails with <xref uid="system.fabric.exception._fabric_backup_directory_not_empty_exception" data-throw-if-not-resolved="false">system.fabric.exception.FabricBackupDirectoryNotEmptyException</xref>.</span></span> </p>'
        - id: backupOption
          type: system.fabric._store_backup_option
          description: <p><span data-ttu-id="bfa03-117">バックアップのオプションです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-117">The backup option.</span></span> </p>
        - id: postBackupAsyncFunc
          type: 432ffe41system.fabric._store_backup_info774bd4f0
          description: '<p><span data-ttu-id="bfa03-118">投稿では、Windows Fabric を使用するシステムに制御を返す前に、バックアップ後のアクティビティを完了するユーザーによって呼び出される非同期のメソッドをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-118">The post backup asynchronous method that is invoked by Windows Fabric to allow the user to complete any post backup activity before returning control to the system.</span></span> <span data-ttu-id="bfa03-119">場合<b>null</b>が渡されたこれは、増分バックアップは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bfa03-119">If <b>null</b> is passed in for this, incremental backups are disallowed.</span></span> <span data-ttu-id="bfa03-120">バックアップ後のメソッドが false を返す場合は、増分バックアップは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bfa03-120">If the post-backup method returns false, then again, incremental backups are disallowed.</span></span> </p>'
      return:
        type: 16409f84
        description: <p><span data-ttu-id="bfa03-121">非同期のバックアップ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="bfa03-121">A task that represents the asynchronous backup operation.</span></span> </p>
    exceptions:
      - type: 3c87bd19
        description: '<p><span data-ttu-id="bfa03-122">バックアップ ディレクトリには<b>null</b> backupOption がないとき<xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-122">backupDirectory is <b>null</b> when backupOption is not <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>.</span></span> </p>'
      - type: 3c87bd19
        description: '<p><span data-ttu-id="bfa03-123">空か backupOption がない場合にだけである空白文字が含まれています、backupDirectory <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>か backupDirectory ではありません<b>null</b>ときbackupOption は<xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-123">backupDirectory is empty or contains just whitespaces when backupOption is not <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref> or backupDirectory is not <b>null</b> when backupOption is <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY" data-throw-if-not-resolved="false">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY</xref>.</span></span> </p>'
      - type: system.fabric.exception._fabric_backup_directory_not_empty_exception
        description: '<p><span data-ttu-id="bfa03-124">BackupOption が場合<xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL" data-throw-if-not-resolved="false">StoreBackupOption #FABRIC_STORE_BACKUP_OPTION_INCREMENTAL</xref>バックアップ ディレクトリには既にファイルまたはサブディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-124">When backupOption is <xref uid="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL" data-throw-if-not-resolved="false">StoreBackupOption#FABRIC_STORE_BACKUP_OPTION_INCREMENTAL</xref> and the backup directory already contains files or sub-directories.</span></span> </p>'
      - type: system.fabric.exception._fabric_backup_in_progress_exception
        description: <p><span data-ttu-id="bfa03-125">ときに、以前に開始されたバックアップが現在進行中です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-125">When a previously initiated backup is currently in progress.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.changeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1128
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-126\">レプリカとそのレプリケーターのレプリカのロールを変更します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-126\">Changes the replica role of the replica and its replicator.</span></span></p>\n<p><span data-ttu-id=\"bfa03-127\">\r\n\r\n  <b>注釈:</b>明示的に呼び出すのアプリケーション レプリカがから派生している場合は、このメソッドは必要はありません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-127\">\r\n\r\n  <b>Remarks:</b>This method does not need to be called explicitly if the application replica derives from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-128\">ここでは、アプリケーションのレプリカをオーバーライドする必要があります<xref uid=\"system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onChangeRoleAsync (system.fabric.ReplicaRole、system.fabric.CancellationToken)</xref>代わりにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-128\">In this case, the application replica should override <xref uid=\"system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onChangeRoleAsync(system.fabric.ReplicaRole, system.fabric.CancellationToken)</xref> instead.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p><span data-ttu-id="bfa03-129">ターゲット レプリカのロール。</span><span class="sxs-lookup"><span data-stu-id="bfa03-129">The target replica role.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-130\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-130\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 06be942d
        description: <p><span data-ttu-id="bfa03-131">このレプリカのアドレスを結果タスク。</span><span class="sxs-lookup"><span data-stu-id="bfa03-131">A task whose result is the address of this replica.</span></span> </p>
    overridden: 'system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
  - uid: system.fabric._key_value_store_replica.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.closeAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1180
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-132\">レプリカおよびレプリカ セットからオフラインになっているに備えて、レプリケーターを閉じます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-132\">Closes the replica and its replicator in preparation for going offline from a replica set.</span></span> <span data-ttu-id=\"bfa03-133\">現在は使用しません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-133\">Currently unused.</span></span> <span data-ttu-id=\"bfa03-134\">将来使用するために予約されています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-134\">Reserved for future use.</span></span></p>\n<p><span data-ttu-id=\"bfa03-135\">\r\n\r\n  <b>注釈:</b>レプリカが必ずしもから削除されていない永続的に、レプリカ セットと、後で再度開くことができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-135\">\r\n\r\n  <b>Remarks:</b>The replica has not necessarily been removed permanently from the replica set and may be re-opened at a later time.</span></span> <span data-ttu-id=\"bfa03-136\">レプリカを閉じるための一般的な原因は、アップグレードまたは負荷分散の準備として正常にシャット ダウンします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-136\">The most common causes for closing a replica is graceful shutdown in preparation for upgrade or load balancing.</span></span> <span data-ttu-id=\"bfa03-137\">このメソッドは明示的に呼び出す場合は、アプリケーションのレプリカがから派生する必要はありません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-137\">This method does not need to be called explicitly if the application replica derives from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-138\">ここでは、アプリケーションのレプリカをオーバーライドする必要があります<xref uid=\"system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onCloseAsync(system.fabric.CancellationToken)</xref>代わりにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-138\">In this case, the application replica should override <xref uid=\"system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onCloseAsync(system.fabric.CancellationToken)</xref> instead.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Void> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-139\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-139\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: db03ee24
        description: <p><span data-ttu-id="bfa03-140">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="bfa03-140">A task that represents the asynchronous operation.</span></span> </p>
    overridden: system.fabric._stateful_service_replica.closeAsync(CancellationToken)
  - uid: 'system.fabric._key_value_store_replica.contains(TransactionBase,String)'
    id: 'contains(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'contains(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.contains(TransactionBase transactionBase, String key)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.contains(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.contains*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 702
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-141">キー/値のストアに値が含まれているかどうかを示すフラグを決定します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-141">Determines a flag that indicates whether a value is contained in the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean contains(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-142">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-142">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-143">キーまたは (文字列として) を検索する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-143">The key or index of the value to look up (as a string).</span></span> <span data-ttu-id="bfa03-144">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-144">Limited to 800 characters in length.</span></span> </p>
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="bfa03-145">キー/値のストア; に値が含まれている場合は true。false の場合、それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="bfa03-145">true if the value is contained in the key/value store; false, otherwise.</span></span> </p>'
  - uid: system.fabric._key_value_store_replica.createTransaction()
    id: createTransaction()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: createTransaction()
    nameWithType: KeyValueStoreReplica.createTransaction()
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction()
    overload: system.fabric._key_value_store_replica.createTransaction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 317
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-146">一意な作成<xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref>ストア操作をコミットに使用されるインスタンス、またはキー/値のグループをロールバックします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-146">Creates a unique <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref> instance, which is used to commit or rollback groups of key/value store operations.</span></span></p>
      <p></p>
    syntax:
      content: public Transaction createTransaction()
      return:
        type: system.fabric._transaction
        description: <p><span data-ttu-id="bfa03-147">A <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref>トランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-147">A <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref> object representing a transaction.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
    id: createTransaction(KeyValueStoreTransactionSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: createTransaction(KeyValueStoreTransactionSettings settings)
    nameWithType: KeyValueStoreReplica.createTransaction(KeyValueStoreTransactionSettings settings)
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction(KeyValueStoreTransactionSettings settings)
    overload: system.fabric._key_value_store_replica.createTransaction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 337
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-148">一意な作成<xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref>ストア操作をコミットに使用されるインスタンス、またはキー/値のグループをロールバックします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-148">Creates a unique <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref> instance, which is used to commit or rollback groups of key/value store operations.</span></span></p>
      <p></p>
    syntax:
      content: public Transaction createTransaction(KeyValueStoreTransactionSettings settings)
      parameters:
        - id: settings
          type: system.fabric._key_value_store_transaction_settings
          description: <p><span data-ttu-id="bfa03-149">トランザクションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-149">The transaction settings.</span></span> </p>
      return:
        type: system.fabric._transaction
        description: <p><span data-ttu-id="bfa03-150">A <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref>トランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-150">A <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref> object representing a transaction.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.enumerate(TransactionBase)
    id: enumerate(TransactionBase)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: enumerate(TransactionBase transactionBase)
    nameWithType: KeyValueStoreReplica.enumerate(TransactionBase transactionBase)
    fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase)
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 721
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-151">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>キー/値のストア内の値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-151">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> values in the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase)
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-152">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-152">The transaction instance.</span></span> </p>
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p><span data-ttu-id="bfa03-153">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-153">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> enumerator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String)'
    id: 'enumerate(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerate(TransactionBase transactionBase, String keyPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix)'
    fullName: 'Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix)'
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 743
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-154">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>値のキーが指定されたキーのプレフィックスに一致するキー/値の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-154">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> values in the key/value store, where the value keys match the specified key prefix.</span></span></p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-155">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-155">The transaction instance.</span></span> </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-156">(文字列) と一致するように、キーまたはインデックスをプレフィックスします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-156">The key, or index, prefix to match (as a string).</span></span> <span data-ttu-id="bfa03-157">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-157">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p><span data-ttu-id="bfa03-158">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-158">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> enumerator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)'
    id: 'enumerate(TransactionBase,String,boolean)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    fullName: 'Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 769
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-159">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>キー/値のストア内の値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-159">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> values in the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-160">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-160">The transaction instance.</span></span> </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-161">(文字列) と一致するように、キーまたはインデックスをプレフィックスします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-161">The key, or index, prefix to match (as a string).</span></span> <span data-ttu-id="bfa03-162">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-162">Limited to 800 characters in length.</span></span> </p>'
        - id: strictPrefix
          type: 4fc6e284
          description: '<p><span data-ttu-id="bfa03-163">True の場合、"keyPrefix"に指定された値を付けたキーのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-163">When true, only keys prefixed by the value specified for "keyPrefix" are returned.</span></span> <span data-ttu-id="bfa03-164">それ以外の場合、列挙型は一致する、または辞書"keyPrefix"より大きい最初のキーから開始し、それ以上の行があるまで続きます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-164">Otherwise, enumeration starts at the first key matching or lexicographically greater than "keyPrefix" and continues until there are no more rows.</span></span> <span data-ttu-id="bfa03-165">既定値は true です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-165">The default is true.</span></span> </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p><span data-ttu-id="bfa03-166">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-166">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> enumerator.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
    id: enumerateMetadata(TransactionBase)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: enumerateMetadata(TransactionBase transactionBase)
    nameWithType: KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase)
    fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase)
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 795
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-167">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>キー/値のストア内の値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-167">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> values in the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase)
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-168">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-168">The transaction instance.</span></span> </p>
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p><span data-ttu-id="bfa03-169">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-169">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> enumerator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)'
    id: 'enumerateMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    fullName: 'Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 818
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-170">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>値のキーが指定されたキーのプレフィックスに一致するキー/値の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-170">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> values in the key/value store, where the value keys match the specified key prefix.</span></span></p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-171">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-171">The transaction instance.</span></span> </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-172">(文字列) と一致するように、キーまたはインデックスをプレフィックスします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-172">The key, or index, prefix to match (as a string).</span></span> <span data-ttu-id="bfa03-173">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-173">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p><span data-ttu-id="bfa03-174">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-174">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> enumerator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)'
    id: 'enumerateMetadata(TransactionBase,String,boolean)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    fullName: 'Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 848
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-175">反復処理する列挙子を返します、 <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>キー/値のストア内の値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-175">Returns an enumerator that iterates through the <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> values in the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-176">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-176">The transaction instance.</span></span> </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-177">(文字列) と一致するように、キーまたはインデックスをプレフィックスします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-177">The key, or index, prefix to match (as a string).</span></span> <span data-ttu-id="bfa03-178">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-178">Limited to 800 characters in length.</span></span> </p>'
        - id: strictPrefix
          type: 4fc6e284
          description: '<p><span data-ttu-id="bfa03-179">True の場合、"keyPrefix"に指定された値を付けたキーのみが返されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-179">When true, only keys prefixed by the value specified for "keyPrefix" are returned.</span></span> <span data-ttu-id="bfa03-180">それ以外の場合、列挙型は一致する、または辞書"keyPrefix"より大きい最初のキーから開始し、それ以上の行があるまで続きます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-180">Otherwise, enumeration starts at the first key matching or lexicographically greater than "keyPrefix" and continues until there are no more rows.</span></span> <span data-ttu-id="bfa03-181">既定値は true です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-181">The default is true.</span></span> </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p><span data-ttu-id="bfa03-182">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-182">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> enumerator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.get(TransactionBase,String)'
    id: 'get(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'get(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.get(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItem system.fabric.KeyValueStoreReplica.get(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.get*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 573
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-183">として格納されている値を取得、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>指定されたキーに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-183">Gets the stored value, as a <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> object, associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItem get(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-184">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-184">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-185">キーまたは (文字列) として取得する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-185">The key or index of the value to be retrieved (as a string).</span></span> <span data-ttu-id="bfa03-186">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-186">Limited to 800 characters in length.</span></span> </p>
      return:
        type: system.fabric._key_value_store_item
        description: <p><span data-ttu-id="bfa03-187">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>格納されている値を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-187">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> object representing the stored value.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.getCurrentEpoch()
    id: getCurrentEpoch()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getCurrentEpoch()
    nameWithType: KeyValueStoreReplica.getCurrentEpoch()
    fullName: Epoch system.fabric.KeyValueStoreReplica.getCurrentEpoch()
    overload: system.fabric._key_value_store_replica.getCurrentEpoch*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 281
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-188">キー/値のストアの現在のエポックを取得します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-188">Gets the current epoch for the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: public Epoch getCurrentEpoch()
      return:
        type: system.fabric._epoch
        description: <p><span data-ttu-id="bfa03-189">キー/値のストアの現在のエポックです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-189">The current epoch for the key/value store.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.getDataLossHandler()
    id: getDataLossHandler()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getDataLossHandler()
    nameWithType: KeyValueStoreReplica.getDataLossHandler()
    fullName: Observable system.fabric.KeyValueStoreReplica.getDataLossHandler()
    overload: system.fabric._key_value_store_replica.getDataLossHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 271
    package: system.fabric
    syntax:
      content: public Observable getDataLossHandler()
      return:
        type: system.fabric._observable
  - uid: 'system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)'
    id: 'getMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'getMetadata(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.getMetadata(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.getMetadata(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.getMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 660
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-190">として、メタデータを取得、 <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>オブジェクト、指定されたキーに関連付けられている値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-190">Gets the metadata, as a <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> object, for the value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItemMetadata getMetadata(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-191">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-191">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-192">キーまたは (文字列) として取得する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-192">The key or index of the value to be retrieved (as a string).</span></span> <span data-ttu-id="bfa03-193">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-193">Limited to 800 characters in length.</span></span> </p>
      return:
        type: system.fabric._key_value_store_item_metadata
        description: <p><span data-ttu-id="bfa03-194">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>指定した値に関連付けられているメタデータを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-194">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> object representing the metadata associated with the specified value.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.getReplicatorSettings()
    id: getReplicatorSettings()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getReplicatorSettings()
    nameWithType: KeyValueStoreReplica.getReplicatorSettings()
    fullName: ReplicatorSettings system.fabric.KeyValueStoreReplica.getReplicatorSettings()
    overload: system.fabric._key_value_store_replica.getReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1502
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-195">キー/値のストア レプリケーターのオプションの設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-195">Gets the option settings for the key/value store replicator.</span></span></p>
      <p></p>
    syntax:
      content: public ReplicatorSettings getReplicatorSettings()
      return:
        type: system.fabric._replicator_settings
        description: <p><span data-ttu-id="bfa03-196">ストアのレプリケーター オプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-196">The store replicator option settings.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.getStoreName()
    id: getStoreName()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getStoreName()
    nameWithType: KeyValueStoreReplica.getStoreName()
    fullName: String system.fabric.KeyValueStoreReplica.getStoreName()
    overload: system.fabric._key_value_store_replica.getStoreName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1453
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-197\">キー/値のストアの名前を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-197\">Gets the name of the key/value store.</span></span></p>\n<p><span data-ttu-id=\"bfa03-198\">\r\n\r\n  <b>注釈:</b>店舗名が有効なファイル名の文字に従う必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-198\">\r\n\r\n  <b>Remarks:</b>The store name should conform to valid filename characters.</span></span> </p>"
    syntax:
      content: public String getStoreName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="bfa03-199">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-199">The name of the key/value store.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.getValue(TransactionBase,String)'
    id: 'getValue(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'getValue(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.getValue(TransactionBase transactionBase, String key)'
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.getValue(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 615
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-200">指定したキーに関連付けられているバイト配列として格納されている値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-200">Gets the stored value as a byte array, associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] getValue(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-201">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-201">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-202">キーまたは (文字列) として取得する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-202">The key or index of the value to be retrieved (as a string).</span></span> <span data-ttu-id="bfa03-203">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-203">Limited to 800 characters in length.</span></span> </p>
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="bfa03-204">格納されている値を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="bfa03-204">A byte array representing the stored value.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
    id: initialize(StatefulServiceInitializationParameters)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: KeyValueStoreReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void system.fabric.KeyValueStoreReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    overload: system.fabric._key_value_store_replica.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1004
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-205\">開くのための準備でレプリカを初期化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-205\">Initializes the replica in preparation for opening.</span></span></p>\n<p><span data-ttu-id=\"bfa03-206\">\r\n\r\n  <b>注釈:</b>明示的に呼び出すのアプリケーション レプリカがから派生している場合は、このメソッドは必要はありません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-206\">\r\n\r\n  <b>Remarks:</b>This method does not need to be called explicitly if the application replica derives from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-207\">ここでは、アプリケーションのレプリカをオーバーライドする必要があります<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onInitialize(system.fabric.StatefulServiceInitializationParameters)</xref>代わりにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-207\">In this case, the application replica should override <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onInitialize(system.fabric.StatefulServiceInitializationParameters)</xref> instead.</span></span> </p>"
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: <p><span data-ttu-id="bfa03-208">レプリカの初期化情報。</span><span class="sxs-lookup"><span data-stu-id="bfa03-208">The initialization information for the replica.</span></span> </p>
    overridden: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
  - uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
    id: KeyValueStoreReplica(String)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: KeyValueStoreReplica(String storeName)
    nameWithType: KeyValueStoreReplica.KeyValueStoreReplica(String storeName)
    fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName)
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 164
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-209\">新しいインスタンスを初期化、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>指定したキー/値のクラス名を格納します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-209\">Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref> class with the specified key/value store name.</span></span></p>\n<p><span data-ttu-id=\"bfa03-210\">\r\n\r\n  <b>注釈:</b>店舗名が有効なファイル名の文字に従う必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-210\">\r\n\r\n  <b>Remarks:</b>The store name should conform to valid filename characters.</span></span> </p>"
    syntax:
      content: public KeyValueStoreReplica(String storeName)
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-211">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-211">The name of the key/value store.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 177
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-212">新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>指定したキー/値のクラス名とローカル ストアの設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-212">Initializes a new instance of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref> class with the specified key/value store name and local store settings.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-213">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-213">The name of the key/value store.</span></span> </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p><span data-ttu-id="bfa03-214">ローカル ストア用のオプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-214">The optional settings for the local store.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 208
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-215">新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>指定したキー/値のクラス名、ローカル ストアの設定、および複製物作成会社設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-215">Initializes a new instance of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref> class with the specified key/value store name, local store settings, and replicator settings.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-216">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-216">The name of the key/value store.</span></span> </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p><span data-ttu-id="bfa03-217">ローカル ストア用のオプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-217">The optional settings for the local store.</span></span> </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-218">キー/値のオプションの設定は、レプリケーターを格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-218">The option settings for the key/value store replicator.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 254
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-219">新しいインスタンスを初期化、 <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">KeyValueStoreReplica</xref>指定したキー/値のクラス名、ローカル ストアの設定で複製物作成会社設定、およびレプリカの設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-219">Initializes a new instance of the <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">KeyValueStoreReplica</xref> class with the specified key/value store name, local store settings, replicator settings, and replica settings.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-220">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-220">The name of the key/value store.</span></span> </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p><span data-ttu-id="bfa03-221">ローカル ストア用のオプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-221">The optional settings for the local store.</span></span> </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-222">キー/値の省略可能な設定には、レプリケーターが格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-222">The optional settings for the key/value store replicator.</span></span> </p>
        - id: kvsSettings
          type: system.fabric._key_value_store_replica_settings
          description: <p><span data-ttu-id="bfa03-223">キー/値の省略可能な設定には、レプリカが格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-223">The optional settings for the key/value store replica.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 233
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-224">新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>指定したキー/値のクラス名、ローカル ストアの設定、および複製物作成会社設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-224">Initializes a new instance of the <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref> class with the specified key/value store name, local store settings, and replicator settings.</span></span> <span data-ttu-id="bfa03-225">セカンダリ レプリカの通知は通知モードを使用して有効にします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-225">Secondary replica notifications are enabled via the notification mode.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-226">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-226">The name of the key/value store.</span></span> </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p><span data-ttu-id="bfa03-227">ローカル ストア用のオプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-227">The optional settings for the local store.</span></span> </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-228">キー/値のオプションの設定は、レプリケーターを格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-228">The option settings for the key/value store replicator.</span></span> </p>
        - id: notificationMode
          type: system.fabric._secondary_notification_mode
          description: '<p><span data-ttu-id="bfa03-229">セカンダリ通知モードを有効にする<xref uid="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onCopyComplete(system.fabric.KeyValueStoreEnumerator)</xref>と<xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>このレプリカでのコールバック。</span><span class="sxs-lookup"><span data-stu-id="bfa03-229">The secondary notification mode to enable <xref uid="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onCopyComplete(system.fabric.KeyValueStoreEnumerator)</xref> and <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref> callbacks on this replica.</span></span> </p>'
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)'
    id: 'KeyValueStoreReplica(String,ReplicatorSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 193
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-230\">新しいインスタンスを初期化、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>指定したキー/値のストアの名前を持つクラスし、複製物作成会社の設定を保存します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-230\">Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref> class with the specified key/value store name and store replicator settings.</span></span></p>\n<p><span data-ttu-id=\"bfa03-231\">\r\n\r\n  <b>注釈:</b>店舗名が有効なファイル名の文字に従う必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-231\">\r\n\r\n  <b>Remarks:</b>The store name should conform to valid filename characters.</span></span> </p>"
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-232">キー/値のストアの名前。</span><span class="sxs-lookup"><span data-stu-id="bfa03-232">The name of the key/value store.</span></span> </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-233">キー/値のオプションの設定は、レプリケーターを格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-233">The option settings for the key/value store replicator.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onAbort()
    id: onAbort()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onAbort()
    nameWithType: KeyValueStoreReplica.onAbort()
    fullName: void system.fabric.KeyValueStoreReplica.onAbort()
    overload: system.fabric._key_value_store_replica.onAbort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1291
    package: system.fabric
    summary: <p><span data-ttu-id="bfa03-234">このインスタンスをシャット ダウンに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-234">Called to shut down this instance.</span></span> </p>
    syntax:
      content: protected void onAbort()
  - uid: 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.onChangeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1360
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-235\">このレプリカのロールが変更されることを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-235\">Indicates that this replica is changing roles.</span></span></p>\n<p><span data-ttu-id=\"bfa03-236\">\r\n\r\n  <b>注釈:</b>から派生している場合、アプリケーションのレプリカはこのメソッドをオーバーライドする必要があります<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-236\">\r\n\r\n  <b>Remarks:</b>The application replica should override this method if deriving from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-237\">アプリケーションのレプリカは、このレプリカのアドレスを結果のタスクを返す必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-237\">The application replica should return a Task whose result is the address of this replica.</span></span> <span data-ttu-id=\"bfa03-238\">同様に、取得できる、システムでこのレプリカのアドレスが格納されている (変更されていない) ResolveServiceAsync を使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-238\">This replica address is stored by the system as is and can be retrieved (unmodified) using ResolveServiceAsync.</span></span> <span data-ttu-id=\"bfa03-239\">アプリケーションは、未処理の変更の役割のすべての呼び出しの完了の背後にあるレプリカ セットの再構成がブロックされるため、適切なタイミングでロールの変更を終了する注意する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-239\">The application must take care to complete the role change in a timely manner since reconfiguration of the replica set will be blocked behind the completion of all outstanding change role calls.</span></span> </p>"
    syntax: &ref_3
      content: 'protected CompletableFuture<String> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p><span data-ttu-id="bfa03-240">ターゲットのロール。</span><span class="sxs-lookup"><span data-stu-id="bfa03-240">The target role.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-241\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-241\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 06be942d
        description: <p><span data-ttu-id="bfa03-242">このレプリカの解決可能なアドレスを結果タスク.</span><span class="sxs-lookup"><span data-stu-id="bfa03-242">A task whose result is the resolvable address of this replica..</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
    id: onCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.onCloseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1310
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-243">このサービス レプリカがシャット ダウンを閉じる必要があるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-243">Called when this service replica is being shut down and needs to close.</span></span></p>
      <p></p>
    syntax: &ref_4
      content: protected CompletableFuture<Void> onCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-244\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-244\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: db03ee24
        description: <p><span data-ttu-id="bfa03-245">非同期操作です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-245">The asynchronous operation.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
    id: onCopyComplete(KeyValueStoreEnumerator)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onCopyComplete(KeyValueStoreEnumerator enumerator)
    nameWithType: KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    overload: system.fabric._key_value_store_replica.onCopyComplete*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1261
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-246\">プライマリからのビルドが完了したら、レプリケーション操作の適用を開始する準備が整いましたときに、セカンダリ レプリカで、システムによって呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-246\">Called by the system on secondary replicas when they have finished building from the primary and are ready to start applying replication operations.</span></span></p>\n<p><span data-ttu-id=\"bfa03-247\">\r\n\r\n  <b>注釈:</b>、 <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref>オブジェクトは、レプリケーション操作が適用される前にこのメソッドのコンテキスト内で、セカンダリ上のデータの読み取りに使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-247\">\r\n\r\n  <b>Remarks:</b>The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object can be used to read data on the secondary within the context of this method before any replication operations are applied.</span></span> <span data-ttu-id=\"bfa03-248\"><xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトが正しく不要になった後、このメソッドを返し、このメソッドのコンテキストの外部で使用することはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-248\">The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object is no longer valid after this method returns and cannot be used outside the context of this method.</span></span> <span data-ttu-id=\"bfa03-249\">アプリケーションは、レプリケーション操作が、セカンダリ レプリカでキューに登録されているが、このメソッドが戻るまでに適用されるを取得するには開始されませんので、適切なタイミングでこのコールバックを完了する注意する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-249\">The application must take care to complete this callback in a timely manner since replication operations are being queued on the secondary replica and will not start getting applied until this method returns.</span></span> <span data-ttu-id=\"bfa03-250\"><xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトは 1 つの基になるローカル トランザクションによってバックアップされ、スレッド セーフではありません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-250\">The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object is backed by a single underlying local transaction and is not thread-safe.</span></span> </p>"
    syntax: &ref_2
      content: protected void onCopyComplete(KeyValueStoreEnumerator enumerator)
      parameters:
        - id: enumerator
          type: system.fabric._key_value_store_enumerator
          description: <p><span data-ttu-id="bfa03-251">セカンダリ上のデータの読み取りに使用される列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-251">The enumerator used to read data on the secondary.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
    id: onDataLossAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.onDataLossAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1229
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-252">レプリカ セットのことを通知で、データの損失が発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-252">Signals that the replica set may have experienced data loss.</span></span> <span data-ttu-id="bfa03-253">アプリケーション イベントを非同期的に処理またはを使用するには、このメソッドをオーバーライドするか、 <xref uid="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDatalossReported()</xref>同期的に処理するイベントです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-253">The application can either override this method to process the event asynchronously or use <xref uid="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDatalossReported()</xref> event to process synchronously.</span></span> <span data-ttu-id="bfa03-254">両方は、同じイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-254">Both represent the same event.</span></span></p>
      <p></p>
    syntax: &ref_6
      content: protected CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-255\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-255\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: "<p><span data-ttu-id=\"bfa03-256\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">CompletableFuture</xref>復旧中にそのデータを示すために将来が変更され、レプリカ セットの再同期する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-256\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">CompletableFuture</xref> Future to indicate that data was modified during recovery and the replica set needs to be resynchronized.</span></span> <span data-ttu-id=\"bfa03-257\">データが変更されていないことを示すためにそれ以外の場合、false になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-257\">Otherwise, false to indicate that data has not been modified.</span></span> </p>"
  - uid: system.fabric._key_value_store_replica.onDatalossReported()
    id: onDatalossReported()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onDatalossReported()
    nameWithType: KeyValueStoreReplica.onDatalossReported()
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
    overload: system.fabric._key_value_store_replica.onDatalossReported*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1239
    package: system.fabric
    summary: '<p><span data-ttu-id="bfa03-258">レプリカ セットのことを通知で、データの損失が発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-258">Signals that the replica set may have experienced data loss.</span></span> <span data-ttu-id="bfa03-259">アプリケーションのこのイベントをリッスンまたはオーバーライドできます<xref uid="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDataLossAsync(CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-259">The application can either listen for this event or override <xref uid="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDataLossAsync(CancellationToken)</xref> .</span></span> <span data-ttu-id="bfa03-260">両方は、同じイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-260">Both represent the same event.</span></span> </p>'
    syntax: &ref_5
      content: protected void onDatalossReported()
  - uid: system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
    id: onInitialize(StatefulServiceInitializationParameters)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onInitialize(StatefulServiceInitializationParameters parameters)
    nameWithType: KeyValueStoreReplica.onInitialize(StatefulServiceInitializationParameters parameters)
    fullName: void system.fabric.KeyValueStoreReplica.onInitialize(StatefulServiceInitializationParameters parameters)
    overload: system.fabric._key_value_store_replica.onInitialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1295
    package: system.fabric
    syntax:
      content: protected void onInitialize(StatefulServiceInitializationParameters parameters)
      parameters:
        - id: parameters
          type: system.fabric._stateful_service_initialization_parameters
  - uid: 'system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    id: 'onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.onOpenAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1331
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-261">開くには追加のアクションを実行できるように、初期化されたサービス レプリカに対して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-261">Called on an initialized service replica to open it so that additional actions can be taken.</span></span></p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<Void> onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p><span data-ttu-id="bfa03-262">A <xref uid="system.fabric._replica_open_mode" data-throw-if-not-resolved="false">system.fabric.ReplicaOpenMode</xref>このレプリカに対して新しいまたは回復であるかどうかを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-262">A <xref uid="system.fabric._replica_open_mode" data-throw-if-not-resolved="false">system.fabric.ReplicaOpenMode</xref> object specifying for this replica whether it is new or recovered.</span></span> </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><span data-ttu-id="bfa03-263">A <xref uid="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition</xref>このレプリカのステートフルなサービス パーティション情報を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-263">A <xref uid="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition</xref> object representing the stateful service partition information for this replica.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-264\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-264\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: db03ee24
        description: <p><span data-ttu-id="bfa03-265">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>非同期操作を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-265">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> object representing the asynchronous operation.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
    id: onReplicationOperation(Enumeration<KeyValueStoreNotification>)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    nameWithType: KeyValueStoreReplica.onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    overload: system.fabric._key_value_store_replica.onReplicationOperation*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1288
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-266\">入力方向のレプリケーション操作のセカンダリ レプリカで、システムによって呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-266\">Called by the system on secondary replicas for incoming replication operations.</span></span> <span data-ttu-id=\"bfa03-267\">各<xref uid=\"system.fabric._key_value_store_notification\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreNotification</xref>オブジェクトには、1 つの分割不可能なレプリケーション操作のすべてのデータが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-267\">Each <xref uid=\"system.fabric._key_value_store_notification\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreNotification</xref> object contains all the data for a single atomic replication operation.</span></span></p>\n<p><span data-ttu-id=\"bfa03-268\">\r\n\r\n  <b>注釈:</b> BlockSecondaryAck モードを指定したかどうか、入力方向のレプリケーション操作は、セカンダリ レプリカ上でローカルに適用されず、メソッドが戻るまで、プライマリを確認します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-268\">\r\n\r\n  <b>Remarks:</b> If the BlockSecondaryAck mode was specified, then the incoming replication operation is not applied locally on the secondary replica and acknowledged to the primary until the method returns.</span></span> <span data-ttu-id=\"bfa03-269\">これは、アプリケーションがレプリケーション ストリームをブロックしないようにして、適切なタイミングでこのメソッドから返される注意する必要があることを意味します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-269\">This implies that the application must take care to return from this method in a timely manner to avoiding blocking the replication stream.</span></span> <span data-ttu-id=\"bfa03-270\">想定できないため、このメソッドが戻るまで、受信確認がプライマリに送信されないこと、計測されたレプリケーション操作は既に (または、後であることが保証) によって適用レプリカ セットのレプリカのクォーラムです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-270\">Since the acknowledgment is not sent to the primary until this method returns, it cannot be assumed that the observed replication operation has already been (or is guaranteed to be in the future) applied by a quorum of replicas in the replica set.</span></span> <span data-ttu-id=\"bfa03-271\">NonBlockingQuorumAcked モードが指定されている場合、レプリカ セットのレプリカのクォーラムを適用済みに計測されたレプリケーション操作が保証されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-271\">If the NonBlockingQuorumAcked mode was specified, then the observed replication operation is guaranteed to have already been applied by a quorum of replicas in the replica set.</span></span> <span data-ttu-id=\"bfa03-272\">さらに、計測されたレプリケーション操作可能性がありますが既にこのセカンダリでローカルに適用され、システムによって、メソッドが呼び出される時点で、プライマリに受信確認します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-272\">Furthermore, the observed replication operation may have already been applied locally by this secondary and acknowledged to the primary at the time the method is invoked by the system.</span></span> <span data-ttu-id=\"bfa03-273\">メソッドのコールバックではこのモードでは、レプリケーション ストリームはブロックされませんが、レプリケーション操作の通知ストリームもブロックされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-273\">The method callback will not block the replication stream in this mode, but it will still block the replication operation notification stream.</span></span> <span data-ttu-id=\"bfa03-274\">つまり、のみあります未処理 OnReplicationOperation メソッド コールバックは 1 つ特定の時点。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-274\">That is, there will only be one outstanding OnReplicationOperation method callback at any given time.</span></span> </p>"
    syntax:
      content: protected void onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
      parameters:
        - id: enumerator
          type: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
          description: <p><span data-ttu-id="bfa03-275">このレプリケーション操作のデータの読み取りに使用される列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfa03-275">The enumerator used to read the data in this replication operation.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    id: 'openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> system.fabric.KeyValueStoreReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1069
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-276\">オンライン レプリカ セット内の前に、レプリカとそのレプリケーターを開きます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-276\">Opens the replica and its replicator in preparation for coming online in a replica set.</span></span></p>\n<p><span data-ttu-id=\"bfa03-277\">\r\n\r\n  <b>注釈:</b>明示的に呼び出すのアプリケーション レプリカがから派生している場合は、このメソッドは必要はありません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-277\">\r\n\r\n  <b>Remarks:</b>This method does not need to be called explicitly if the application replica derives from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-278\">この場合、アプリケーションのレプリカでは、OnOpenAsync を代わりにオーバーライドする必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-278\">In this case, the application replica should override OnOpenAsync instead.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p><span data-ttu-id="bfa03-279">このレプリカを開始するコンテキストが開くように指定します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-279">Specifies the context under which this replica is begin opened.</span></span> </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><span data-ttu-id="bfa03-280">このレプリカが属しているセットのレプリカを説明する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-280">Contains information describing the replica set to which this replica belongs.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-281\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-281\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: <p><span data-ttu-id="bfa03-282">Open の完了を示すために CompletableFuture <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-282">A CompletableFuture to indicate completion of the open <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>.</span></span> </p>
    overridden: 'system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
  - uid: 'system.fabric._key_value_store_replica.remove(TransactionBase,String)'
    id: 'remove(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'remove(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.remove(TransactionBase transactionBase, String key)'
    fullName: 'void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.remove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 404
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-283">指定したキーに関連付けられている格納されている値を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-283">Removes the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public void remove(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-284">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-284">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-285">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-285">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-286">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-286">Limited to 800 characters in length.</span></span> </p>'
  - uid: 'system.fabric._key_value_store_replica.remove(TransactionBase,String,long)'
    id: 'remove(TransactionBase,String,long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    fullName: 'void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.remove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 434
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-287">指定したキーに関連付けられている格納されている値を削除しようとしています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-287">Attempts to remove the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public void remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-288">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-288">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-289">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-289">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-290">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-290">Limited to 800 characters in length.</span></span> </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="bfa03-291">削除するキーの現在のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="bfa03-291">The current sequence number of the key to be removed.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.restoreAsync(String)
    id: restoreAsync(String)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: restoreAsync(String backupDirectory)
    nameWithType: KeyValueStoreReplica.restoreAsync(String backupDirectory)
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory)
    overload: system.fabric._key_value_store_replica.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 962
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bfa03-292\">キー値ストア レプリカを非同期的に復元します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-292\">Asynchronously restores the key-value store replica.</span></span></p>\n<p><span data-ttu-id=\"bfa03-293\">\r\n\r\n  <b>注釈:</b>ストアをバックアップ ディレクトリ内のファイルから復元すると、更新されたデータが失われるので、復元は進行中に、キー値ストアへの任意の書き込み操作を実行しないようにお勧めします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-293\">\r\n\r\n  <b>Remarks:</b> It is recommended to not perform any write operations to the key-value store while restore is underway since the updated data would be lost when the store is restored from the files in backupDirectory.</span></span> </p>"
    syntax:
      content: public CompletableFuture<?> restoreAsync(String backupDirectory)
      parameters:
        - id: backupDirectory
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-294">レプリカがから復元するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="bfa03-294">The directory where the replica is to be restored from.</span></span> <span data-ttu-id="bfa03-295">このパラメーターを null にすることはできませんを空または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-295">This parameter cannot be null, empty or contain just whitespace.</span></span> <span data-ttu-id="bfa03-296">UNC パスも指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-296">UNC paths may also be provided.</span></span> </p>'
      return:
        type: 16409f84
        description: <p><span data-ttu-id="bfa03-297">非同期の復元操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="bfa03-297">A task that represents the asynchronous restore operation.</span></span> </p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="bfa03-298">バックアップ ディレクトリには<b>null</b>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-298">backupDirectory is <b>null</b>.</span></span> </p>
      - type: 3c87bd19
        description: <p><span data-ttu-id="bfa03-299">バックアップ ディレクトリが空か、単なる空白文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-299">backupDirectory is empty or contains just whitespaces.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)'
    id: 'restoreAsync(String,RestoreSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'restoreAsync(String backupDirectory, RestoreSettings settings)'
    nameWithType: 'KeyValueStoreReplica.restoreAsync(String backupDirectory, RestoreSettings settings)'
    fullName: 'CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory, RestoreSettings settings)'
    overload: system.fabric._key_value_store_replica.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 967
    package: system.fabric
    syntax:
      content: 'public CompletableFuture<?> restoreAsync(String backupDirectory, RestoreSettings settings)'
      parameters:
        - id: backupDirectory
          type: '26831127'
        - id: settings
          type: system.fabric._restore_settings
      return:
        type: 16409f84
  - uid: system.fabric._key_value_store_replica.serviceCloseAsync(CancellationToken)
    id: serviceCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: serviceCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.serviceCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.serviceCloseAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.serviceCloseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1297
    package: system.fabric
    syntax:
      content: protected CompletableFuture<Void> serviceCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: db03ee24
  - uid: system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
    id: setReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: setReplicatorSettings(ReplicatorSettings replicatorSettings)
    nameWithType: KeyValueStoreReplica.setReplicatorSettings(ReplicatorSettings replicatorSettings)
    fullName: void system.fabric.KeyValueStoreReplica.setReplicatorSettings(ReplicatorSettings replicatorSettings)
    overload: system.fabric._key_value_store_replica.setReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1512
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-300">キー/値のストア レプリケーターのオプションの設定を設定します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-300">Sets the option settings for the key/value store replicator.</span></span></p>
      <p></p>
    syntax:
      content: public void setReplicatorSettings(ReplicatorSettings replicatorSettings)
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-301">ストアのレプリケーター オプションの設定。</span><span class="sxs-lookup"><span data-stu-id="bfa03-301">The store replicator option settings.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte [])'
    id: 'tryAdd(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.tryAdd*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 384
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-302">キーと値を指定したキーによってインデックス設定される値を追加する操作を格納します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-302">Attempts to add a value indexed by the specified key to the key/value store.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean tryAdd(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-303">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-303">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-304">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-304">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-305">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-305">Limited to 800 characters in length.</span></span> </p>'
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-306">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-306">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="bfa03-307">指定したキーが見つかり、追加されていない場合は true。</span><span class="sxs-lookup"><span data-stu-id="bfa03-307">True if the specified key was not already found and added.</span></span> <span data-ttu-id="bfa03-308">指定したキーが既に存在する場合は false です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-308">False if the specified key already exists.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryGet(TransactionBase,String)'
    id: 'tryGet(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGet(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGet(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItem system.fabric.KeyValueStoreReplica.tryGet(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGet*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 595
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-309">として格納されている値を取得しようとしています、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>指定されたキーに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-309">Attempts to get the stored value, as a <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> object, associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItem tryGet(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-310">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-310">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-311">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-311">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-312">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-312">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: system.fabric._key_value_store_item
        description: <p><span data-ttu-id="bfa03-313">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>格納されている値を表すオブジェクト、または指定したキーが存在しない場合は null です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-313">A <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> object representing the stored value or null if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)'
    id: 'tryGetMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGetMetadata(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGetMetadata(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.tryGetMetadata(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGetMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 682
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-314">としてのメタデータの取得を試みます、 <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>オブジェクト、指定されたキーに関連付けられている値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-314">Attempts to get the metadata as a <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> object, for the value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItemMetadata tryGetMetadata(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-315">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-315">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-316">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-316">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-317">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-317">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: system.fabric._key_value_store_item_metadata
        description: <p><span data-ttu-id="bfa03-318">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref>オブジェクトのメタデータを表す、指定された値に関連付けられているか、指定したキーが存在しない場合は null です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-318">A <xref uid="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItemMetadata</xref> object representing the metadata associated with the specified value or null if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)'
    id: 'tryGetValue(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGetValue(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGetValue(TransactionBase transactionBase, String key)'
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.tryGetValue(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGetValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 636
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-319">指定したキーに関連付けられているバイト配列として格納されている値を取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-319">Attempts to get the stored value as a byte array, associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] tryGetValue(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-320">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-320">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-321">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-321">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-322">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-322">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="bfa03-323">指定したキーが存在しない場合に、格納されている値または null を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="bfa03-323">A byte array representing the stored value or null if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)'
    id: 'tryRemove(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryRemove(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryRemove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 419
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-324">指定したキーに関連付けられている格納されている値を削除しようとしています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-324">Attempts to remove the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean tryRemove(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-325">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-325">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-326">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-326">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-327">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-327">Limited to 800 characters in length.</span></span> </p>'
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="bfa03-328">指定したキーが見つかり削除された場合は true。</span><span class="sxs-lookup"><span data-stu-id="bfa03-328">True if the specified key was found and removed.</span></span> <span data-ttu-id="bfa03-329">指定したキーが存在しない場合は false。</span><span class="sxs-lookup"><span data-stu-id="bfa03-329">False if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)'
    id: 'tryRemove(TransactionBase,String,long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.tryRemove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 457
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-330">指定したキーに関連付けられている格納されている値を削除しようとしています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-330">Attempts to remove the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-331">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-331">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-332">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-332">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-333">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-333">Limited to 800 characters in length.</span></span> </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="bfa03-334">削除するキーの現在のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="bfa03-334">The current sequence number of the key to be removed.</span></span> </p>
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="bfa03-335">指定したキーが見つかり削除された場合は true。</span><span class="sxs-lookup"><span data-stu-id="bfa03-335">True if the specified key was found and removed.</span></span> <span data-ttu-id="bfa03-336">指定したキーが存在しない場合は false。</span><span class="sxs-lookup"><span data-stu-id="bfa03-336">False if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [])'
    id: 'tryUpdate(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.tryUpdate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 526
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-337">指定したキーに関連付けられている格納されている値を更新しようとしています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-337">Attempts to update the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-338">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-338">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-339">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-339">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-340">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-340">Limited to 800 characters in length.</span></span> </p>'
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-341">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-341">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="bfa03-342">指定したキーが見つかり、更新された場合のブール値 True。</span><span class="sxs-lookup"><span data-stu-id="bfa03-342">boolean True if the specified key was found and updated.</span></span> <span data-ttu-id="bfa03-343">指定したキーが存在しない場合は false。</span><span class="sxs-lookup"><span data-stu-id="bfa03-343">False if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [],long)'
    id: 'tryUpdate(TransactionBase,String,byte [],long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.tryUpdate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 545
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-344">指定したキーに関連付けられている格納されている値を更新しようとしています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-344">Attempts to update the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-345">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-345">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: '<p><span data-ttu-id="bfa03-346">キーまたはインデックス、(文字列) として削除する値。</span><span class="sxs-lookup"><span data-stu-id="bfa03-346">The key, or index, of the value to be removed (as a string).</span></span> <span data-ttu-id="bfa03-347">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-347">Limited to 800 characters in length.</span></span> </p>'
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-348">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-348">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="bfa03-349">削除するキーの現在のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="bfa03-349">The current sequence number of the key to be removed.</span></span> </p>
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="bfa03-350">指定したキーが見つかり、更新された場合は true。</span><span class="sxs-lookup"><span data-stu-id="bfa03-350">True if the specified key was found and updated.</span></span> <span data-ttu-id="bfa03-351">指定したキーが存在しない場合は false。</span><span class="sxs-lookup"><span data-stu-id="bfa03-351">False if the specified key does not exist.</span></span> </p>
  - uid: 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [])'
    id: 'update(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'update(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.update*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 479
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-352">指定したキーに関連付けられている格納されている値を更新します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-352">Updates the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public void update(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-353">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-353">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-354">キーまたは (文字列) として更新する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-354">The key or index of the value to be updated (as a string).</span></span> <span data-ttu-id="bfa03-355">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-355">Limited to 800 characters in length.</span></span> </p>
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-356">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-356">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
  - uid: 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [],long)'
    id: 'update(TransactionBase,String,byte [],long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    fullName: 'void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.update*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 496
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-357">指定したキーに関連付けられている格納されている値を更新します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-357">Updates the stored value associated with the specified key.</span></span></p>
      <p></p>
    syntax:
      content: 'public void update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p><span data-ttu-id="bfa03-358">トランザクションのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-358">The transaction instance.</span></span> </p>
        - id: key
          type: '26831127'
          description: <p><span data-ttu-id="bfa03-359">キーまたは (文字列) として更新する値のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-359">The key or index of the value to be updated (as a string).</span></span> <span data-ttu-id="bfa03-360">800 文字の長さに制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-360">Limited to 800 characters in length.</span></span> </p>
        - id: value
          type: ccd9418d
          description: '<p><span data-ttu-id="bfa03-361">(バイト配列) として値を格納する 2 GB までの長さは制限されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-361">The value (as a byte array) to be stored, limited to 2GB in length.</span></span> </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="bfa03-362">long 型の値</span><span class="sxs-lookup"><span data-stu-id="bfa03-362">long value</span></span> </p>
  - uid: system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
    id: updateReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    nameWithType: KeyValueStoreReplica.updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    fullName: void system.fabric.KeyValueStoreReplica.updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    overload: system.fabric._key_value_store_replica.updateReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 298
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bfa03-363">指定した設定でキーと値のストアのレプリケーターを更新<xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">system.fabric.ReplicatorSettings</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-363">Updates the key/value store replicator with the settings in the specified <xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">system.fabric.ReplicatorSettings</xref> object.</span></span></p>
      <p></p>
    syntax:
      content: public void updateReplicatorSettings(ReplicatorSettings replicatorSettings)
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="bfa03-364">使用して、キー/値の更新設定には、レプリケーターが格納されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-364">The settings used to update the key/value store replicator.</span></span> </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica.KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getDataLossHandler*
    name: getDataLossHandler
    nameWithType: KeyValueStoreReplica.getDataLossHandler
    fullName: Observable system.fabric.KeyValueStoreReplica.getDataLossHandler
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getCurrentEpoch*
    name: getCurrentEpoch
    nameWithType: KeyValueStoreReplica.getCurrentEpoch
    fullName: Epoch system.fabric.KeyValueStoreReplica.getCurrentEpoch
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.updateReplicatorSettings*
    name: updateReplicatorSettings
    nameWithType: KeyValueStoreReplica.updateReplicatorSettings
    fullName: void system.fabric.KeyValueStoreReplica.updateReplicatorSettings
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.createTransaction*
    name: createTransaction
    nameWithType: KeyValueStoreReplica.createTransaction
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction
    package: system.fabric
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: system.fabric._key_value_store_replica.add*
    name: add
    nameWithType: KeyValueStoreReplica.add
    fullName: void system.fabric.KeyValueStoreReplica.add
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._key_value_store_replica.tryAdd*
    name: tryAdd
    nameWithType: KeyValueStoreReplica.tryAdd
    fullName: boolean system.fabric.KeyValueStoreReplica.tryAdd
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.remove*
    name: remove
    nameWithType: KeyValueStoreReplica.remove
    fullName: void system.fabric.KeyValueStoreReplica.remove
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryRemove*
    name: tryRemove
    nameWithType: KeyValueStoreReplica.tryRemove
    fullName: boolean system.fabric.KeyValueStoreReplica.tryRemove
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._key_value_store_replica.update*
    name: update
    nameWithType: KeyValueStoreReplica.update
    fullName: void system.fabric.KeyValueStoreReplica.update
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryUpdate*
    name: tryUpdate
    nameWithType: KeyValueStoreReplica.tryUpdate
    fullName: boolean system.fabric.KeyValueStoreReplica.tryUpdate
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.get*
    name: get
    nameWithType: KeyValueStoreReplica.get
    fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.get
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGet*
    name: tryGet
    nameWithType: KeyValueStoreReplica.tryGet
    fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.tryGet
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getValue*
    name: getValue
    nameWithType: KeyValueStoreReplica.getValue
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.getValue'
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGetValue*
    name: tryGetValue
    nameWithType: KeyValueStoreReplica.tryGetValue
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.tryGetValue'
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getMetadata*
    name: getMetadata
    nameWithType: KeyValueStoreReplica.getMetadata
    fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.getMetadata
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGetMetadata*
    name: tryGetMetadata
    nameWithType: KeyValueStoreReplica.tryGetMetadata
    fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.tryGetMetadata
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.contains*
    name: contains
    nameWithType: KeyValueStoreReplica.contains
    fullName: boolean system.fabric.KeyValueStoreReplica.contains
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_itema08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_item
        name: KeyValueStoreItem
        fullName: system.fabric.KeyValueStoreItem
        href: system.fabric._key_value_store_item.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.enumerate*
    name: enumerate
    nameWithType: KeyValueStoreReplica.enumerate
    fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_item_metadata
        name: KeyValueStoreItemMetadata
        fullName: system.fabric.KeyValueStoreItemMetadata
        href: system.fabric._key_value_store_item_metadata.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.enumerateMetadata*
    name: enumerateMetadata
    nameWithType: KeyValueStoreReplica.enumerateMetadata
    fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: 432ffe41system.fabric._store_backup_info774bd4f0
    spec.java:
      - name: Function<
        fullName: Function<
      - uid: system.fabric._store_backup_info
        name: StoreBackupInfo
        fullName: system.fabric.StoreBackupInfo
        href: system.fabric._store_backup_info.yml
      - name: ', CompletableFuture<Boolean>>'
        fullName: ', CompletableFuture<Boolean>>'
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: system.fabric._key_value_store_replica.backupAsync*
    name: backupAsync
    nameWithType: KeyValueStoreReplica.backupAsync
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.backupAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.restoreAsync*
    name: restoreAsync
    nameWithType: KeyValueStoreReplica.restoreAsync
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.initialize*
    name: initialize
    nameWithType: KeyValueStoreReplica.initialize
    fullName: void system.fabric.KeyValueStoreReplica.initialize
    package: system.fabric
  - uid: 9cdf14d0system.fabric._replicatora08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._replicator
        name: Replicator
        fullName: system.fabric.Replicator
        href: system.fabric._replicator.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.openAsync*
    name: openAsync
    nameWithType: KeyValueStoreReplica.openAsync
    fullName: CompletableFuture<Replicator> system.fabric.KeyValueStoreReplica.openAsync
    package: system.fabric
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._key_value_store_replica.changeRoleAsync*
    name: changeRoleAsync
    nameWithType: KeyValueStoreReplica.changeRoleAsync
    fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.changeRoleAsync
    package: system.fabric
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: system.fabric._key_value_store_replica.closeAsync*
    name: closeAsync
    nameWithType: KeyValueStoreReplica.closeAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.closeAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.abort*
    name: abort
    nameWithType: KeyValueStoreReplica.abort
    fullName: void system.fabric.KeyValueStoreReplica.abort
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getStoreName*
    name: getStoreName
    nameWithType: KeyValueStoreReplica.getStoreName
    fullName: String system.fabric.KeyValueStoreReplica.getStoreName
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getReplicatorSettings*
    name: getReplicatorSettings
    nameWithType: KeyValueStoreReplica.getReplicatorSettings
    fullName: ReplicatorSettings system.fabric.KeyValueStoreReplica.getReplicatorSettings
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.setReplicatorSettings*
    name: setReplicatorSettings
    nameWithType: KeyValueStoreReplica.setReplicatorSettings
    fullName: void system.fabric.KeyValueStoreReplica.setReplicatorSettings
    package: system.fabric
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: system.fabric._key_value_store_replica.onDataLossAsync*
    name: onDataLossAsync
    nameWithType: KeyValueStoreReplica.onDataLossAsync
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onDatalossReported*
    name: onDatalossReported
    nameWithType: KeyValueStoreReplica.onDatalossReported
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onCopyComplete*
    name: onCopyComplete
    nameWithType: KeyValueStoreReplica.onCopyComplete
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_notification
        name: KeyValueStoreNotification
        fullName: system.fabric.KeyValueStoreNotification
        href: system.fabric._key_value_store_notification.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.onReplicationOperation*
    name: onReplicationOperation
    nameWithType: KeyValueStoreReplica.onReplicationOperation
    fullName: void system.fabric.KeyValueStoreReplica.onReplicationOperation
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onAbort*
    name: onAbort
    nameWithType: KeyValueStoreReplica.onAbort
    fullName: void system.fabric.KeyValueStoreReplica.onAbort
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onInitialize*
    name: onInitialize
    nameWithType: KeyValueStoreReplica.onInitialize
    fullName: void system.fabric.KeyValueStoreReplica.onInitialize
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.serviceCloseAsync*
    name: serviceCloseAsync
    nameWithType: KeyValueStoreReplica.serviceCloseAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.serviceCloseAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onCloseAsync*
    name: onCloseAsync
    nameWithType: KeyValueStoreReplica.onCloseAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onOpenAsync*
    name: onOpenAsync
    nameWithType: KeyValueStoreReplica.onOpenAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onOpenAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onChangeRoleAsync*
    name: onChangeRoleAsync
    nameWithType: KeyValueStoreReplica.onChangeRoleAsync
    fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync
    package: system.fabric
  - uid: system.fabric._stateful_service_replica
    parent: system.fabric
    href: system.fabric._stateful_service_replica.yml
    name: StatefulServiceReplica
    nameWithType: StatefulServiceReplica
    fullName: system.fabric.StatefulServiceReplica
    type: Interface
    summary: "<p><span data-ttu-id=\"bfa03-365\">スタートアップ、初期化、ロールの変更、およびシャット ダウンなど、レプリカのライフ サイクルを制御する動作を定義します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-365\">Defines behavior that governs the lifecycle of a replica, such as startup, initialization, role changes, and shutdown.</span></span> </p>\n<p><span data-ttu-id=\"bfa03-366\">\r\n\r\n  <b>注釈:</b>ステートフル サービスの種類は、このインターフェイスを実装する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-366\">\r\n\r\n  <b>Remarks:</b>Stateful service types must implement this interface.</span></span> <span data-ttu-id=\"bfa03-367\">ステートフルなサービスの種類のロジックには、プライマリ レプリカ上で呼び出される動作とセカンダリ レプリカで呼び出される動作が含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-367\">The logic of a stateful service type includes behavior that is invoked on Primary replicas and behavior that is invoked on Secondary replicas.</span></span> <span data-ttu-id=\"bfa03-368\">サービスの作成者が作成する場合は、指定された使用<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、サービスを実装する必要がありますも、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> の実装を使用する<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>はによって提供される<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-368\">If the service author wants to make use of the provided <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, then the service must also implement <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> to use the implementation of <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> that is provided by <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref></span></span></p>"
    syntax:
      content: public interface StatefulServiceReplica
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    summary: <p><span data-ttu-id="bfa03-369">レプリカのロールを定義します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-369">Defines the replica role</span></span> </p>
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: system.fabric._local_store_settings
    parent: system.fabric
    href: system.fabric._local_store_settings.yml
    name: LocalStoreSettings
    nameWithType: LocalStoreSettings
    fullName: system.fabric.LocalStoreSettings
    type: Class
    summary: <p><span data-ttu-id="bfa03-370">ローカル ストアのオプションの設定を表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-370">Represents the option settings for a local store.</span></span> </p>
    syntax:
      content: public class LocalStoreSettings
  - uid: system.fabric._key_value_store_replica_settings
    parent: system.fabric
    href: system.fabric._key_value_store_replica_settings.yml
    name: KeyValueStoreReplicaSettings
    nameWithType: KeyValueStoreReplicaSettings
    fullName: system.fabric.KeyValueStoreReplicaSettings
    type: Class
    summary: <p><span data-ttu-id="bfa03-371">キー/値のストア レプリカの設定を表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-371">Represents the settings for a key/value store replica.</span></span> </p>
    syntax:
      content: public class KeyValueStoreReplicaSettings
  - uid: system.fabric._stateful_service_initialization_parameters
    parent: system.fabric
    href: system.fabric._stateful_service_initialization_parameters.yml
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: system.fabric.StatefulServiceInitializationParameters
    type: Class
    summary: <p><span data-ttu-id="bfa03-372">ステートフルなサービスのサービスの初期化パラメーターを定義します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-372">Defines service initialization parameters for a stateful service.</span></span> </p>
    syntax:
      content: public class StatefulServiceInitializationParameters
  - uid: system.fabric._observable
    parent: system.fabric
    href: system.fabric._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: system.fabric.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: system.fabric._key_value_store_replica
    parent: system.fabric
    href: system.fabric._key_value_store_replica.yml
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica
    type: Class
    summary: '<p><span data-ttu-id="bfa03-373">」のサービスのライターに、レプリケートされたトランザクション関連のデータ記憶域を提供"任意の Service Fabric サービスに統合するための準備ができています。</span><span class="sxs-lookup"><span data-stu-id="bfa03-373">Provides a transactional, replicated, associative data storage to service writers â€“ ready for integration into any Service Fabric service.</span></span> </p>'
    syntax: *ref_1
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p><span data-ttu-id=\"bfa03-374\">Service Fabric でパーティションの現在のバージョンを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-374\">Represents the current version of the partition in Service Fabric.</span></span> </p>\n<p><span data-ttu-id=\"bfa03-375\">\r\n\r\n  <b>注釈:</b>、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>パーティション全体の構成番号です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-375\">\r\n\r\n  <b>Remarks:</b>An <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> is a configuration number for the partition as a whole.</span></span> <span data-ttu-id=\"bfa03-376\">レプリカの構成は、たとえば、プライマリ レプリカが変更されたときに、変更を設定すると、新しいプライマリ レプリカからレプリケートされた操作と呼ばれます新しい<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>、古いプライマリによって送信された 1 つからレプリカです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-376\">When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> from the ones which were sent by the old Primary replica.</span></span> <span data-ttu-id=\"bfa03-377\">プライマリが変更されたというは、通常、元のプライマリ レプリカの影響を受ける失敗によって影響を受けませんセカンダリ レプリカに直接表示されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-377\">The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica.</span></span> <span data-ttu-id=\"bfa03-378\">プライマリ レプリカが変更されたことを追跡するために、セカンダリ レプリカに伝達するがします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-378\">To track that the Primary replica has changed has to be communicated to the Secondary replica.</span></span> <span data-ttu-id=\"bfa03-379\">使用してこのような通信が発生した、 <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch、system.fabric.SequenceNumber、system.fabric.CancellationToken)</xref>メソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-379\">This communication occurs via the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> <span data-ttu-id=\"bfa03-380\">ほとんどのサービスがの内部フィールドの詳細を無視することができます、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>ことを知っておく通常で十分ですので、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>が変更されたと操作の相対順序を判別するエポックを比較してシステム内のイベント。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-380\">Most services can ignore the details of the inner fields of the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> as it is usually sufficient to know that the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system.</span></span> <span data-ttu-id=\"bfa03-381\">比較操作は、この目的で提供されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-381\">Comparison operations are provided for this purpose.</span></span> </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._key_value_store_item
    parent: system.fabric
    href: system.fabric._key_value_store_item.yml
    name: KeyValueStoreItem
    nameWithType: KeyValueStoreItem
    fullName: system.fabric.KeyValueStoreItem
    type: Class
    summary: <p><span data-ttu-id="bfa03-382">キー/値のストア内の項目を表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-382">Represents an item in the key/value store.</span></span> </p>
    syntax:
      content: public class KeyValueStoreItem
  - uid: system.fabric._key_value_store_item_metadata
    parent: system.fabric
    href: system.fabric._key_value_store_item_metadata.yml
    name: KeyValueStoreItemMetadata
    nameWithType: KeyValueStoreItemMetadata
    fullName: system.fabric.KeyValueStoreItemMetadata
    type: Class
    summary: <p><span data-ttu-id="bfa03-383">関連付けられているメタデータを表す、 <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref>キー/値のストア内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfa03-383">Represents the metadata that are associated with a <xref uid="system.fabric._key_value_store_item" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreItem</xref> object in the Key/Value store.</span></span> </p>
    syntax:
      content: public class KeyValueStoreItemMetadata
  - uid: system.fabric._secondary_notification_mode
    parent: system.fabric
    href: system.fabric._secondary_notification_mode.yml
    name: SecondaryNotificationMode
    nameWithType: SecondaryNotificationMode
    fullName: system.fabric.SecondaryNotificationMode
    type: Enum
    summary: '<p><span data-ttu-id="bfa03-384">セカンダリの通知を指定します、 <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>の目的の動作について説明しますと<xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation (java.util.Enumeration)</xref>有効になっている場合。</span><span class="sxs-lookup"><span data-stu-id="bfa03-384">Specifies the secondary notifications on the <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref> and describes the desired behavior of <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref> if enabled.</span></span> </p>'
    syntax:
      content: public enum SecondaryNotificationMode
  - uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onCopyComplete(KeyValueStoreEnumerator enumerator)
    nameWithType: KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    type: Method
    summary: "<p><span data-ttu-id=\"bfa03-385\">プライマリからのビルドが完了したら、レプリケーション操作の適用を開始する準備が整いましたときに、セカンダリ レプリカで、システムによって呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-385\">Called by the system on secondary replicas when they have finished building from the primary and are ready to start applying replication operations.</span></span></p>\n<p><span data-ttu-id=\"bfa03-386\">\r\n\r\n  <b>注釈:</b>、 <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref>オブジェクトは、レプリケーション操作が適用される前にこのメソッドのコンテキスト内で、セカンダリ上のデータの読み取りに使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-386\">\r\n\r\n  <b>Remarks:</b>The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object can be used to read data on the secondary within the context of this method before any replication operations are applied.</span></span> <span data-ttu-id=\"bfa03-387\"><xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトが正しく不要になった後、このメソッドを返し、このメソッドのコンテキストの外部で使用することはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-387\">The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object is no longer valid after this method returns and cannot be used outside the context of this method.</span></span> <span data-ttu-id=\"bfa03-388\">アプリケーションは、レプリケーション操作が、セカンダリ レプリカでキューに登録されているが、このメソッドが戻るまでに適用されるを取得するには開始されませんので、適切なタイミングでこのコールバックを完了する注意する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-388\">The application must take care to complete this callback in a timely manner since replication operations are being queued on the secondary replica and will not start getting applied until this method returns.</span></span> <span data-ttu-id=\"bfa03-389\"><xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトは 1 つの基になるローカル トランザクションによってバックアップされ、スレッド セーフではありません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-389\">The <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref> object is backed by a single underlying local transaction and is not thread-safe.</span></span> </p>"
    syntax: *ref_2
  - uid: system.fabric._transaction
    parent: system.fabric
    href: system.fabric._transaction.yml
    name: Transaction
    nameWithType: Transaction
    fullName: system.fabric.Transaction
    type: Class
    syntax:
      content: public class Transaction
  - uid: system.fabric._key_value_store_transaction_settings
    parent: system.fabric
    href: system.fabric._key_value_store_transaction_settings.yml
    name: KeyValueStoreTransactionSettings
    nameWithType: KeyValueStoreTransactionSettings
    fullName: system.fabric.KeyValueStoreTransactionSettings
    type: Class
    summary: <p><span data-ttu-id="bfa03-390">サポートされているトランザクションの動作を記述する省略可能な設定を指定<xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-390">Specifies the optional settings to describe the behavior of transactions supported by <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>.</span></span> </p>
    syntax:
      content: public class KeyValueStoreTransactionSettings
  - uid: system.fabric._transaction_base
    parent: system.fabric
    href: system.fabric._transaction_base.yml
    name: TransactionBase
    nameWithType: TransactionBase
    fullName: system.fabric.TransactionBase
    type: Class
    syntax:
      content: public class TransactionBase
  - uid: system.fabric._store_backup_option
    parent: system.fabric
    href: system.fabric._store_backup_option.yml
    name: StoreBackupOption
    nameWithType: StoreBackupOption
    fullName: system.fabric.StoreBackupOption
    type: Enum
    summary: <p><span data-ttu-id="bfa03-391">キー値ストアのバックアップ オプション。</span><span class="sxs-lookup"><span data-stu-id="bfa03-391">The backup option for the key-value store.</span></span> </p>
    syntax:
      content: public enum StoreBackupOption
  - uid: system.fabric._store_backup_info
    parent: system.fabric
    href: system.fabric._store_backup_info.yml
    name: StoreBackupInfo
    nameWithType: StoreBackupInfo
    fullName: system.fabric.StoreBackupInfo
    type: Class
    summary: <p><span data-ttu-id="bfa03-392">キー値ストアで作成したバックアップについての情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-392">Provides info about the backup created on the key-value store.</span></span> </p>
    syntax:
      content: public class StoreBackupInfo
  - uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    parent: system.fabric._store_backup_option
    href: system.fabric._store_backup_option.yml
    name: FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    nameWithType: StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    type: Field
    summary: "<p><span data-ttu-id=\"bfa03-393\">すべてのバックアップ ファイルを作成しなくても、キー値ストアのトランザクション ログの切り捨てを行うためのオプションです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-393\">Option to truncate the transaction logs of the key-value store without creating any backup files.</span></span> </p>\n<p><span data-ttu-id=\"bfa03-394\">\r\n\r\n  <b>注釈:</b>増分バックアップを有効にすると、セカンダリ レプリカでバックアップ ファイルの作成を回避する場合に便利です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-394\">\r\n\r\n  <b>Remarks:</b>This is useful in avoiding creation of backup files in secondary replicas when incremental backup is turned on.</span></span> <span data-ttu-id=\"bfa03-395\">増分バックアップが有効な場合は、ディスク領域がいっぱいのキー値ストアのトランザクション ログでします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-395\">If incremental backup is turned on, then disk space fills up with transaction logs of the key-value store.</span></span> <span data-ttu-id=\"bfa03-396\">これを防ぐためには、頻繁にバックアップを作成する必要はします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-396\">To prevent this, frequent backups have to be created.</span></span> <span data-ttu-id=\"bfa03-397\">ただし、セカンダリ レプリカでバックアップを作成できない可能性がありますキー値ストア サービスによっては便利です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-397\">However, creating backups on secondary replicas may not be useful for some key-value store services.</span></span> <span data-ttu-id=\"bfa03-398\">これらのサービスでは、バックアップ ディレクトリを破棄することに対処しなければなりませんもします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-398\">These services also have to deal with discarding the backup directory.</span></span> <span data-ttu-id=\"bfa03-399\">このオプションを使用すると場合、クリーンアップは、トランザクション ログ バックアップ ファイルを作成します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-399\">If this option is used, it cleans up the transaction logs without creating backup files.</span></span> </p>"
    syntax:
      content: public FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY=(3)
  - uid: system.fabric.exception._fabric_backup_directory_not_empty_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_backup_directory_not_empty_exception.yml
    name: FabricBackupDirectoryNotEmptyException
    nameWithType: FabricBackupDirectoryNotEmptyException
    fullName: system.fabric.exception.FabricBackupDirectoryNotEmptyException
    type: Class
    summary: <p><span data-ttu-id="bfa03-400">ユーザー指定のバックアップ ディレクトリが空でない場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="bfa03-400">The exception that is thrown when the user provided backup directory is not empty.</span></span> </p>
    syntax:
      content: public class FabricBackupDirectoryNotEmptyException extends FabricException
  - uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    parent: system.fabric._store_backup_option
    href: system.fabric._store_backup_option.yml
    name: FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    nameWithType: StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    type: Field
    summary: <p><span data-ttu-id="bfa03-401">キー値ストアの増分バックアップです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-401">Incremental backup of the key-value store.</span></span> <span data-ttu-id="bfa03-402">つまり、ログ ファイルのみ、最後のフルまたは増分バックアップがバックアップされるため、作成します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-402">i.e. only the log files created since the last full or incremental backup will be backed up.</span></span> </p>
    syntax:
      content: public FABRIC_STORE_BACKUP_OPTION_INCREMENTAL=(2)
  - uid: system.fabric.exception._fabric_backup_in_progress_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_backup_in_progress_exception.yml
    name: FabricBackupInProgressException
    nameWithType: FabricBackupInProgressException
    fullName: system.fabric.exception.FabricBackupInProgressException
    type: Class
    summary: <p><span data-ttu-id="bfa03-403">以前のバックアップが進行中のバックアップを作成する試行が行われたときにスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="bfa03-403">The exception that is thrown when an attempt is made to create a backup when a previous backup is in progress.</span></span> </p>
    syntax:
      content: public class FabricBackupInProgressException extends FabricException
  - uid: system.fabric._restore_settings
    parent: system.fabric
    href: system.fabric._restore_settings.yml
    name: RestoreSettings
    nameWithType: RestoreSettings
    fullName: system.fabric.RestoreSettings
    type: Class
    syntax:
      content: public class RestoreSettings
  - uid: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: StatefulServiceReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void system.fabric.StatefulServiceReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    type: Method
    summary: |-
      <p><span data-ttu-id="bfa03-404">新しく作成されたサービスのレプリカを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-404">Initializes a newly created service replica.</span></span></p>
      <p></p>
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: <p><span data-ttu-id="bfa03-405"><xref uid="system.fabric._stateful_service_initialization_parameters" data-throw-if-not-resolved="false">System.fabric.StatefulServiceInitializationParameters</xref>このレプリカにします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-405">The <xref uid="system.fabric._stateful_service_initialization_parameters" data-throw-if-not-resolved="false">system.fabric.StatefulServiceInitializationParameters</xref> for this replica.</span></span> </p>
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator
  - uid: 'system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> system.fabric.StatefulServiceReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p><span data-ttu-id="bfa03-406">その他の操作を実行できるように、初期化されたサービスのレプリカが開きます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-406">Opens an initialized service replica so that additional actions can be taken.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p><span data-ttu-id="bfa03-407">これは、は、Service Fabric インフラストラクチャをサポートし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="bfa03-407">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><span data-ttu-id="bfa03-408"><xref uid="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false">System.fabric.StatefulServicePartition</xref>このレプリカの情報です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-408">The <xref uid="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition</xref> information for this replica.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-409\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-409\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: '<p><span data-ttu-id="bfa03-410">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>&lt;<xref uid="system.fabric._replicator" data-throw-if-not-resolved="false">system.fabric.Replicator</xref>&gt;、 <xref uid="system.fabric._replicator" data-throw-if-not-resolved="false">system.fabric.Replicator</xref> stateful で使用されています。サービス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-410">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>&lt;<xref uid="system.fabric._replicator" data-throw-if-not-resolved="false">system.fabric.Replicator</xref>&gt;, the <xref uid="system.fabric._replicator" data-throw-if-not-resolved="false">system.fabric.Replicator</xref> that is used by the stateful service.</span></span> <span data-ttu-id="bfa03-411">Service Fabric の実装を使用する<xref uid="system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#openAsync (ReplicaOpenMode、StatefulServicePartition、CancellationToken)</xref> 、レプリカを返す必要があります、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>から取得した<xref uid="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#createReplicator (StateProvider、ReplicatorSettings)</xref></span><span class="sxs-lookup"><span data-stu-id="bfa03-411">To use the Service Fabric implementation, in <xref uid="system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#openAsync(ReplicaOpenMode, StatefulServicePartition, CancellationToken)</xref> , the replica should return a <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> that is obtained from <xref uid="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#createReplicator(StateProvider, ReplicatorSettings)</xref></span></span></p>'
  - uid: system.fabric._replica_open_mode
    parent: system.fabric
    href: system.fabric._replica_open_mode.yml
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: system.fabric.ReplicaOpenMode
    type: Enum
    syntax:
      content: public enum ReplicaOpenMode
  - uid: system.fabric._stateful_service_partition
    parent: system.fabric
    href: system.fabric._stateful_service_partition.yml
    name: StatefulServicePartition
    nameWithType: StatefulServicePartition
    fullName: system.fabric.StatefulServicePartition
    type: Interface
    syntax:
      content: public interface StatefulServicePartition
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="bfa03-412">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-412">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="bfa03-413">インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-413">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="bfa03-414">キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-414">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="bfa03-415">取り消しを開始するトークンを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="bfa03-415">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="bfa03-416">所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。</span><span class="sxs-lookup"><span data-stu-id="bfa03-416">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="bfa03-417">通知を受信するオブジェクトは、適切な方法で応答できます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-417">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: 'system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"bfa03-418\">プライマリまたはセカンダリ レプリカのロールを変更します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-418\">Changes the role of a Primary or Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"bfa03-419\">\r\n\r\n  <b>注釈:</b>をパラメーターとして、新しいロールが示されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-419\">\r\n\r\n  <b>Remarks:</b>The new role is indicated as a parameter.</span></span> <span data-ttu-id=\"bfa03-420\">ときに、サービス ロールに移行する、新しい、サービスが、現在リッスン アドレスを更新することです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-420\">When the service transitions to the new role, the service has a chance to update its current listening address.</span></span> <span data-ttu-id=\"bfa03-421\">リッスン アドレスは、クライアントが接続するアドレスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-421\">The listening address is the address where clients connect to it.</span></span> <span data-ttu-id=\"bfa03-422\">クライアントからの通信が予想される場合、ポートなどの一部のリソースを要求のみにプライマリ レプリカであるときに、サービスが有効にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-422\">This enables the service when it is a Primary replica to only claim some resources such as ports when communication from clients is expected.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p><span data-ttu-id="bfa03-423">更新された<xref uid="system.fabric._replica_role" data-throw-if-not-resolved="false">system.fabric.ReplicaRole</xref>このレプリカに遷移させなければならないことです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-423">The updated <xref uid="system.fabric._replica_role" data-throw-if-not-resolved="false">system.fabric.ReplicaRole</xref> that this replica should transition to.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-424\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-424\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 06be942d
        description: '<p><span data-ttu-id="bfa03-425">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>型の<xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>用の â €™ サービス ファブリックの名前付けを使用して、レプリカと関連付けられる s 新しい接続アドレス。</span><span class="sxs-lookup"><span data-stu-id="bfa03-425">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, the serviceâ€™s new connection address that is to be associated with the replica via Service Fabric Naming.</span></span> </p>'
  - uid: 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"bfa03-426\">このレプリカのロールが変更されることを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-426\">Indicates that this replica is changing roles.</span></span></p>\n<p><span data-ttu-id=\"bfa03-427\">\r\n\r\n  <b>注釈:</b>から派生している場合、アプリケーションのレプリカはこのメソッドをオーバーライドする必要があります<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>、これは、推奨パターン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-427\">\r\n\r\n  <b>Remarks:</b>The application replica should override this method if deriving from <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica</xref>, which is the recommended pattern.</span></span> <span data-ttu-id=\"bfa03-428\">アプリケーションのレプリカは、このレプリカのアドレスを結果のタスクを返す必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-428\">The application replica should return a Task whose result is the address of this replica.</span></span> <span data-ttu-id=\"bfa03-429\">同様に、取得できる、システムでこのレプリカのアドレスが格納されている (変更されていない) ResolveServiceAsync を使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-429\">This replica address is stored by the system as is and can be retrieved (unmodified) using ResolveServiceAsync.</span></span> <span data-ttu-id=\"bfa03-430\">アプリケーションは、未処理の変更の役割のすべての呼び出しの完了の背後にあるレプリカ セットの再構成がブロックされるため、適切なタイミングでロールの変更を終了する注意する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-430\">The application must take care to complete the role change in a timely manner since reconfiguration of the replica set will be blocked behind the completion of all outstanding change role calls.</span></span> </p>"
    syntax: *ref_3
  - uid: system.fabric._stateful_service_replica.closeAsync(CancellationToken)
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.StatefulServiceReplica.closeAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p><span data-ttu-id="bfa03-431">シャット ダウンすると、サービスのレプリカを閉じます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-431">Closes the service replica when it is being shut down.</span></span> <span data-ttu-id="bfa03-432">キャンセルが推奨でが取り消された場合でもは、操作を完了も可能性がありますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="bfa03-432">Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"bfa03-433\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-433\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: db03ee24
        description: <p><span data-ttu-id="bfa03-434">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-434">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span></span> </p>
  - uid: system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p><span data-ttu-id="bfa03-435">このサービス レプリカがシャット ダウンを閉じる必要があるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bfa03-435">Called when this service replica is being shut down and needs to close.</span></span></p>
      <p></p>
    syntax: *ref_4
  - uid: system.fabric._stateful_service_replica.abort()
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: abort()
    nameWithType: StatefulServiceReplica.abort()
    fullName: void system.fabric.StatefulServiceReplica.abort()
    type: Method
    summary: "<p><span data-ttu-id=\"bfa03-436\">インスタンスが異常終了します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-436\">Ungracefully terminates an instance.</span></span> </p>\n<p><span data-ttu-id=\"bfa03-437\">\r\n\r\n  <b>注釈:</b>リースが失われると、サービスの使用への応答<xref uid=\"system.fabric._service_partition.reportFault(FaultType)\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition#reportFault(FaultType)</xref>レポートに、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FaultType#Permanent</xref>エラー異常終了の例に示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-437\">\r\n\r\n  <b>Remarks:</b>Lease loss and, in response to the service, the use of <xref uid=\"system.fabric._service_partition.reportFault(FaultType)\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition#reportFault(FaultType)</xref> to report a <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FaultType#Permanent</xref> fault are examples of ungraceful termination.</span></span> <span data-ttu-id=\"bfa03-438\">このメソッドが呼び出されたときにサービス インスタンスをすぐにリリースしのすべての参照をクリーンアップしを返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-438\">When this method is invoked, the service instance should immediately release and clean up all references and return.</span></span> </p>"
    syntax:
      content: public void abort()
  - uid: system.fabric._key_value_store_replica.onDatalossReported()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onDatalossReported()
    nameWithType: KeyValueStoreReplica.onDatalossReported()
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
    type: Method
    summary: '<p><span data-ttu-id="bfa03-439">レプリカ セットのことを通知で、データの損失が発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-439">Signals that the replica set may have experienced data loss.</span></span> <span data-ttu-id="bfa03-440">アプリケーションのこのイベントをリッスンまたはオーバーライドできます<xref uid="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDataLossAsync(CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-440">The application can either listen for this event or override <xref uid="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDataLossAsync(CancellationToken)</xref> .</span></span> <span data-ttu-id="bfa03-441">両方は、同じイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-441">Both represent the same event.</span></span> </p>'
    syntax: *ref_5
  - uid: system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p><span data-ttu-id="bfa03-442">レプリカ セットのことを通知で、データの損失が発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-442">Signals that the replica set may have experienced data loss.</span></span> <span data-ttu-id="bfa03-443">アプリケーション イベントを非同期的に処理またはを使用するには、このメソッドをオーバーライドするか、 <xref uid="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDatalossReported()</xref>同期的に処理するイベントです。</span><span class="sxs-lookup"><span data-stu-id="bfa03-443">The application can either override this method to process the event asynchronously or use <xref uid="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onDatalossReported()</xref> event to process synchronously.</span></span> <span data-ttu-id="bfa03-444">両方は、同じイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="bfa03-444">Both represent the same event.</span></span></p>
      <p></p>
    syntax: *ref_6
  - uid: system.fabric._key_value_store_enumerator
    parent: system.fabric
    href: system.fabric._key_value_store_enumerator.yml
    name: KeyValueStoreEnumerator
    nameWithType: KeyValueStoreEnumerator
    fullName: system.fabric.KeyValueStoreEnumerator
    type: Class
    summary: '<p><span data-ttu-id="bfa03-445">コピー完了コールバックのコンテキスト内でセカンダリ レプリカのローカル ストアの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="bfa03-445">Reads the local store contents of a secondary replica within the context of a copy completion callback.</span></span> <span data-ttu-id="bfa03-446">参照してください<xref uid="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onCopyComplete(system.fabric.KeyValueStoreEnumerator)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bfa03-446">See <xref uid="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onCopyComplete(system.fabric.KeyValueStoreEnumerator)</xref>.</span></span> </p>'
    syntax:
      content: public class KeyValueStoreEnumerator
  - uid: system.fabric._key_value_store_notification
    parent: system.fabric
    href: system.fabric._key_value_store_notification.yml
    name: KeyValueStoreNotification
    nameWithType: KeyValueStoreNotification
    fullName: system.fabric.KeyValueStoreNotification
    type: Class
    summary: "<p><span data-ttu-id=\"bfa03-447\">セカンダリ レプリカによって受信された、レプリケートされた操作のすべての情報が含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-447\">Contains all the information for a replicated operation received by a secondary replica.</span></span> </p>\n<p><span data-ttu-id=\"bfa03-448\">\r\n\r\n  <b>注釈:</b>を参照してください<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bfa03-448\">\r\n\r\n  <b>Remarks:</b>See <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>.</span></span> </p>"
    syntax:
      content: public class KeyValueStoreNotification
  - uid: system.fabric.exception._fabric_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_exception.yml
    name: FabricException
    nameWithType: FabricException
    fullName: system.fabric.exception.FabricException
    type: Class
    syntax:
      content: public class FabricException