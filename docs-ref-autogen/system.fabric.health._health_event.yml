### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._health_event
    id: _health_event
    parent: system.fabric.health
    children:
      - system.fabric.health._health_event.getHealthInformation()
      - system.fabric.health._health_event.getLastErrorTransitionAt()
      - system.fabric.health._health_event.getLastModifiedUtcTimestamp()
      - system.fabric.health._health_event.getLastOkTransitionAt()
      - system.fabric.health._health_event.getLastWarningTransitionAt()
      - system.fabric.health._health_event.getSourceUtcTimestamp()
      - system.fabric.health._health_event.isExpired()
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 10
    package: system.fabric.health
    summary: <p><span data-ttu-id="c29a3-101">A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体</span><span class="sxs-lookup"><span data-stu-id="c29a3-101">A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API</span></span> </p>
    syntax: &ref_1
      content: public class HealthEvent
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._health_event.getHealthInformation()
    id: getHealthInformation()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getHealthInformation()
    nameWithType: HealthEvent.getHealthInformation()
    fullName: HealthInformation system.fabric.health.HealthEvent.getHealthInformation()
    overload: system.fabric.health._health_event.getHealthInformation*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 138
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="c29a3-102">報告されたヘルス情報です。</span><span class="sxs-lookup"><span data-stu-id="c29a3-102">Reported health information.</span></span></p>
      <p></p>
    syntax:
      content: public HealthInformation getHealthInformation()
      return:
        type: system.fabric.health._health_information
        description: "<p><span data-ttu-id=\"c29a3-103\">\r\n\r\n  <xref uid=\"system.fabric.health._health_information\" data-throw-if-not-resolved=\"false\">HealthInformation</xref>\r\n\r\n</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-103\">\r\n\r\n  <xref uid=\"system.fabric.health._health_information\" data-throw-if-not-resolved=\"false\">HealthInformation</xref>\r\n\r\n</span></span></p>"
  - uid: system.fabric.health._health_event.getLastErrorTransitionAt()
    id: getLastErrorTransitionAt()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getLastErrorTransitionAt()
    nameWithType: HealthEvent.getLastErrorTransitionAt()
    fullName: Calendar system.fabric.health.HealthEvent.getLastErrorTransitionAt()
    overload: system.fabric.health._health_event.getLastErrorTransitionAt*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 185
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"c29a3-104\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>で報告される正常性レポートが最初の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-104\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>, returns the time at which the health report was first reported with <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>.</span></span> <span data-ttu-id=\"c29a3-105\">定期的なレポートでは、同じ状態を持つ多数のレポートが生成された可能性がします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-105\">For periodic reporting, many reports with the same state may have been generated.</span></span> <span data-ttu-id=\"c29a3-106\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>、するヘルス状態が前回の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>、別の状態に遷移する前にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-106\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>, returns the time at which the health state was last in <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>, before transitioning to a different state.</span></span></p>\n<p><span data-ttu-id=\"c29a3-107\">\r\n\r\n  <b>注釈:</b>遷移フィールド、LastOkTransitionAt、LastWarningTransitionAt、LastErrorTransitionAt 付与正常性の履歴、イベントの状態の移行。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-107\">\r\n\r\n  <b>Remarks:</b>The transition fields, LastOkTransitionAt, LastWarningTransitionAt, LastErrorTransitionAt give the history of the health state transitions for the event.</span></span> <span data-ttu-id=\"c29a3-108\">スマートなアラートや「履歴」の正常性イベントに関する情報を使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-108\">They can be used for smarter alerts or \"historical\" health event information.</span></span> <span data-ttu-id=\"c29a3-109\">次のようなシナリオが可能です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-109\">They enable scenarios such as:</span></span> </p>\n\n<p>\n\n  <itemizedlist>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-110\">プロパティが X 分間以上警告/エラー状態の場合はアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-110\">Alert when a property has been at warning/error for more than X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-111\">一時的な状況でアラートを回避できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-111\">This avoids alerts on temporary conditions.</span></span> <span data-ttu-id=\"c29a3-112\">正常性状態が 5 分以上の警告された場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref>警告および -LastWarningTransitionTime を = =&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-112\">For example, an alert if the health state has been warning for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> == Warning and Now - LastWarningTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-113\">最後の X 分間に変更された条件のみに基づいてアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-113\">Alert only on conditions that have changed in the last X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-114\">指定した時刻より前に既にエラーの状態にあったレポートについては、既に通知されているため、無視できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-114\">If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-115\">プロパティは、警告およびエラーの切り替えは場合、は、どのくらいの期間が経過している問題のある (つまり問題あり) を決定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-115\">If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK).</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-116\">プロパティは、5 分以上の正常なされていない場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> ! = Ok と -LastOkTransitionTime&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-116\">For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> != Ok and Now - LastOkTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n  </itemizedlist>\n\n</p>"
    syntax:
      content: public Calendar getLastErrorTransitionAt()
      return:
        type: bb22f98f
        description: '<p><span data-ttu-id="c29a3-117">返します<xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref>関連する遷移時 (UTC) の最後を表す<xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Error</xref>です。</span><span class="sxs-lookup"><span data-stu-id="c29a3-117">Returns <xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref> representing the last transition time (UTC) involving <xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Error</xref>.</span></span> </p>'
  - uid: system.fabric.health._health_event.getLastModifiedUtcTimestamp()
    id: getLastModifiedUtcTimestamp()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getLastModifiedUtcTimestamp()
    nameWithType: HealthEvent.getLastModifiedUtcTimestamp()
    fullName: Calendar system.fabric.health.HealthEvent.getLastModifiedUtcTimestamp()
    overload: system.fabric.health._health_event.getLastModifiedUtcTimestamp*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 66
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="c29a3-118">日付と時刻の正常性ストアによって、正常性レポートの最終変更日時を取得します。</span><span class="sxs-lookup"><span data-stu-id="c29a3-118">Gets the date and time when the health report was last modified by the health store.</span></span></p>
      <p></p>
    syntax:
      content: public Calendar getLastModifiedUtcTimestamp()
      return:
        type: bb22f98f
        description: <p><span data-ttu-id="c29a3-119">日付と時刻の正常性ストアによって、正常性レポートの最終変更日時。</span><span class="sxs-lookup"><span data-stu-id="c29a3-119">The date and time when the health report was last modified by the health store.</span></span> </p>
  - uid: system.fabric.health._health_event.getLastOkTransitionAt()
    id: getLastOkTransitionAt()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getLastOkTransitionAt()
    nameWithType: HealthEvent.getLastOkTransitionAt()
    fullName: Calendar system.fabric.health.HealthEvent.getLastOkTransitionAt()
    overload: system.fabric.health._health_event.getLastOkTransitionAt*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 129
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"c29a3-120\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>で報告される正常性レポートが最初の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-120\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>, returns the time at which the health report was first reported with <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>.</span></span> <span data-ttu-id=\"c29a3-121\">定期的なレポートでは、同じ状態を持つ多数のレポートが生成された可能性がします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-121\">For periodic reporting, many reports with the same state may have been generated.</span></span> <span data-ttu-id=\"c29a3-122\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>、するヘルス状態が前回の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>、別の状態に遷移する前にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-122\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>, returns the time at which the health state was last in <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>, before transitioning to a different state.</span></span> <span data-ttu-id=\"c29a3-123\">場合、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>されていない<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>System.DateTime.FromFileTimeUtc(0) になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-123\">If the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> has never been <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>, the value will be System.DateTime.FromFileTimeUtc(0).</span></span></p>\n<p><span data-ttu-id=\"c29a3-124\">\r\n\r\n  <b>注釈:</b>遷移フィールド、LastOkTransitionAt、LastWarningTransitionAt、LastErrorTransitionAt 付与正常性の履歴、イベントの状態の移行。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-124\">\r\n\r\n  <b>Remarks:</b>The transition fields, LastOkTransitionAt, LastWarningTransitionAt, LastErrorTransitionAt give the history of the health state transitions for the event.</span></span> <span data-ttu-id=\"c29a3-125\">スマートなアラートや「履歴」の正常性イベントに関する情報を使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-125\">They can be used for smarter alerts or \"historical\" health event information.</span></span> <span data-ttu-id=\"c29a3-126\">次のようなシナリオが可能です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-126\">They enable scenarios such as:</span></span> </p>\n\n<p>\n\n  <itemizedlist>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-127\">プロパティが X 分間以上警告/エラー状態の場合はアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-127\">Alert when a property has been at warning/error for more than X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-128\">一時的な状況でアラートを回避できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-128\">This avoids alerts on temporary conditions.</span></span> <span data-ttu-id=\"c29a3-129\">正常性状態が 5 分以上の警告された場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref>警告および -LastWarningTransitionTime を = =&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-129\">For example, an alert if the health state has been warning for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> == Warning and Now - LastWarningTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-130\">最後の X 分間に変更された条件のみに基づいてアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-130\">Alert only on conditions that have changed in the last X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-131\">指定した時刻より前に既にエラーの状態にあったレポートについては、既に通知されているため、無視できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-131\">If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-132\">プロパティは、警告およびエラーの切り替えは場合、は、どのくらいの期間が経過している問題のある (つまり問題あり) を決定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-132\">If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK).</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-133\">プロパティは、5 分以上の正常なされていない場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> ! = Ok と -LastOkTransitionTime&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-133\">For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> != Ok and Now - LastOkTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n  </itemizedlist>\n\n</p>"
    syntax:
      content: public Calendar getLastOkTransitionAt()
      return:
        type: bb22f98f
        description: '<p><span data-ttu-id="c29a3-134">返します<xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref>関連する遷移時 (UTC) の最後を表す<xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Ok</xref>です。</span><span class="sxs-lookup"><span data-stu-id="c29a3-134">Returns <xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref> representing the last transition time (UTC) involving <xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Ok</xref>.</span></span> </p>'
  - uid: system.fabric.health._health_event.getLastWarningTransitionAt()
    id: getLastWarningTransitionAt()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getLastWarningTransitionAt()
    nameWithType: HealthEvent.getLastWarningTransitionAt()
    fullName: Calendar system.fabric.health.HealthEvent.getLastWarningTransitionAt()
    overload: system.fabric.health._health_event.getLastWarningTransitionAt*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 231
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"c29a3-135\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>で報告される正常性レポートが最初の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-135\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>, returns the time at which the health report was first reported with <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>.</span></span> <span data-ttu-id=\"c29a3-136\">定期的なレポートでは、同じ状態を持つ多数のレポートが生成された可能性がします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-136\">For periodic reporting, many reports with the same state may have been generated.</span></span> <span data-ttu-id=\"c29a3-137\">場合、現在<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref>は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref> 、するヘルス状態が前回の時刻を返します<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>、別の状態に遷移する前にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-137\">If the current <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#healthState</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref> , returns the time at which the health state was last in <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>, before transitioning to a different state.</span></span></p>\n<p><span data-ttu-id=\"c29a3-138\">\r\n\r\n  <b>注釈:</b>遷移フィールド、LastOkTransitionAt、LastWarningTransitionAt、LastErrorTransitionAt 付与正常性の履歴、イベントの状態の移行。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-138\">\r\n\r\n  <b>Remarks:</b>The transition fields, LastOkTransitionAt, LastWarningTransitionAt, LastErrorTransitionAt give the history of the health state transitions for the event.</span></span> <span data-ttu-id=\"c29a3-139\">スマートなアラートや「履歴」の正常性イベントに関する情報を使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-139\">They can be used for smarter alerts or \"historical\" health event information.</span></span> <span data-ttu-id=\"c29a3-140\">次のようなシナリオが可能です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-140\">They enable scenarios such as:</span></span> </p>\n\n<p>\n\n  <itemizedlist>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-141\">プロパティが X 分間以上警告/エラー状態の場合はアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-141\">Alert when a property has been at warning/error for more than X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-142\">一時的な状況でアラートを回避できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-142\">This avoids alerts on temporary conditions.</span></span> <span data-ttu-id=\"c29a3-143\">正常性状態が 5 分以上の警告された場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref>警告および -LastWarningTransitionTime を = =&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-143\">For example, an alert if the health state has been warning for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> == Warning and Now - LastWarningTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-144\">最後の X 分間に変更された条件のみに基づいてアラートを出す。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-144\">Alert only on conditions that have changed in the last X minutes.</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-145\">指定した時刻より前に既にエラーの状態にあったレポートについては、既に通知されているため、無視できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-145\">If a report was already at error before the specified time, it can be ignored because it was already signaled previously.</span></span> </p>\n\n    </listitem>\n\n    <listitem>\n\n      <p></p>\n\n      <p><span data-ttu-id=\"c29a3-146\">プロパティは、警告およびエラーの切り替えは場合、は、どのくらいの期間が経過している問題のある (つまり問題あり) を決定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-146\">If a property is toggling between warning and error, determine how long it has been unhealthy (i.e. not OK).</span></span> </p>\n\n      <p><span data-ttu-id=\"c29a3-147\">プロパティは、5 分以上の正常なされていない場合、アラートの変換など、(<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> ! = Ok と -LastOkTransitionTime&gt; 5 分) です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-147\">For example, an alert if the property hasn't been healthy for more than five minutes can be translated into (<xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">HealthState</xref> != Ok and Now - LastOkTransitionTime&gt; 5 minutes).</span></span> </p>\n\n    </listitem>\n\n  </itemizedlist>\n\n</p>"
    syntax:
      content: public Calendar getLastWarningTransitionAt()
      return:
        type: bb22f98f
        description: '<p><span data-ttu-id="c29a3-148">返します<xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref>関連する遷移時 (UTC) の最後を表す<xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Warning</xref>です。</span><span class="sxs-lookup"><span data-stu-id="c29a3-148">Returns <xref uid="" data-throw-if-not-resolved="false">java.util.Calendar</xref> representing the last transition time (UTC) involving <xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthState#Warning</xref>.</span></span> </p>'
  - uid: system.fabric.health._health_event.getSourceUtcTimestamp()
    id: getSourceUtcTimestamp()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: getSourceUtcTimestamp()
    nameWithType: HealthEvent.getSourceUtcTimestamp()
    fullName: Calendar system.fabric.health.HealthEvent.getSourceUtcTimestamp()
    overload: system.fabric.health._health_event.getSourceUtcTimestamp*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 57
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="c29a3-149">正常性レポートをソースから送信されたときの時刻。</span><span class="sxs-lookup"><span data-stu-id="c29a3-149">The time when the health report was sent by the source.</span></span></p>
      <p></p>
    syntax:
      content: public Calendar getSourceUtcTimestamp()
      return:
        type: bb22f98f
        description: <p><span data-ttu-id="c29a3-150">ソース UtcTimestamp を返す</span><span class="sxs-lookup"><span data-stu-id="c29a3-150">return Source UtcTimestamp</span></span> </p>
  - uid: system.fabric.health._health_event.isExpired()
    id: isExpired()
    parent: system.fabric.health._health_event
    href: system.fabric.health._health_event.yml
    langs:
      - java
    name: isExpired()
    nameWithType: HealthEvent.isExpired()
    fullName: boolean system.fabric.health.HealthEvent.isExpired()
    overload: system.fabric.health._health_event.isExpired*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthEvent.java
      startLine: 80
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"c29a3-151\">正常性イベントの有効期限が切れた whetherÂ を示す値を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-151\">Gets a value that indicates whetherÂ the health event has expired.</span></span></p>\n<p><span data-ttu-id=\"c29a3-152\">\r\n\r\n  <b>注釈:</b>RemoveWhenExpired が false の場合にのみ、イベントが期限切れことができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-152\">\r\n\r\n  <b>Remarks:</b>An event can be expired only if RemoveWhenExpired is false.</span></span> <span data-ttu-id=\"c29a3-153\">それ以外の場合、イベントはクエリによって返されずに、ストアから削除されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c29a3-153\">Otherwise, the event is not returned by query and is removed from the store.</span></span> </p>"
    syntax:
      content: public boolean isExpired()
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="c29a3-154">正常性イベントの有効期限が切れました。 場合は true。正常性イベントが、時に期限が切れていない場合は false、正常性ストアには、クエリが評価されます。</span><span class="sxs-lookup"><span data-stu-id="c29a3-154">true if the health event has expired; false if the health event was not expired at the time the health store evaluated the query.</span></span> </p>
references:
  - uid: bb22f98f
    spec.java:
      - name: Calendar
        fullName: Calendar
  - uid: system.fabric.health._health_event.getSourceUtcTimestamp*
    name: getSourceUtcTimestamp
    nameWithType: HealthEvent.getSourceUtcTimestamp
    fullName: Calendar system.fabric.health.HealthEvent.getSourceUtcTimestamp
    package: system.fabric.health
  - uid: system.fabric.health._health_event.getLastModifiedUtcTimestamp*
    name: getLastModifiedUtcTimestamp
    nameWithType: HealthEvent.getLastModifiedUtcTimestamp
    fullName: Calendar system.fabric.health.HealthEvent.getLastModifiedUtcTimestamp
    package: system.fabric.health
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric.health._health_event.isExpired*
    name: isExpired
    nameWithType: HealthEvent.isExpired
    fullName: boolean system.fabric.health.HealthEvent.isExpired
    package: system.fabric.health
  - uid: system.fabric.health._health_event.getLastOkTransitionAt*
    name: getLastOkTransitionAt
    nameWithType: HealthEvent.getLastOkTransitionAt
    fullName: Calendar system.fabric.health.HealthEvent.getLastOkTransitionAt
    package: system.fabric.health
  - uid: system.fabric.health._health_event.getHealthInformation*
    name: getHealthInformation
    nameWithType: HealthEvent.getHealthInformation
    fullName: HealthInformation system.fabric.health.HealthEvent.getHealthInformation
    package: system.fabric.health
  - uid: system.fabric.health._health_event.getLastErrorTransitionAt*
    name: getLastErrorTransitionAt
    nameWithType: HealthEvent.getLastErrorTransitionAt
    fullName: Calendar system.fabric.health.HealthEvent.getLastErrorTransitionAt
    package: system.fabric.health
  - uid: system.fabric.health._health_event.getLastWarningTransitionAt*
    name: getLastWarningTransitionAt
    nameWithType: HealthEvent.getLastWarningTransitionAt
    fullName: Calendar system.fabric.health.HealthEvent.getLastWarningTransitionAt
    package: system.fabric.health
  - uid: system.fabric.health._health_information
    parent: system.fabric.health
    href: system.fabric.health._health_information.yml
    name: HealthInformation
    nameWithType: HealthInformation
    fullName: system.fabric.health.HealthInformation
    type: Class
    summary: <p><span data-ttu-id="c29a3-155">エンティティのヘルス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c29a3-155">Contains the health information about the entity.</span></span> <span data-ttu-id="c29a3-156">この情報は、正常性レポートに含まれています。</span><span class="sxs-lookup"><span data-stu-id="c29a3-156">This information is included in the health report.</span></span> <span data-ttu-id="c29a3-157">正常性イベントの一部としても提供されます。</span><span class="sxs-lookup"><span data-stu-id="c29a3-157">It is also provided as part of the health event.</span></span> </p>
    syntax:
      content: public class HealthInformation
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: <p><span data-ttu-id="c29a3-158">A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体</span><span class="sxs-lookup"><span data-stu-id="c29a3-158">A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API</span></span> </p>
    syntax: *ref_1