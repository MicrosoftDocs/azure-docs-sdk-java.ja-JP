### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key
    id: _symmetric_key
    parent: com.microsoft.azure.keyvault.cryptography
    children:
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.close()
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.DefaultKeySize
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm()
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid()
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize128
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize192
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize256
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize384
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize512
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync(final byte [],final String)'
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey()
      - com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String)
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte [])'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte [],Provider)'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,int)'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,int,Provider)'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync(final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync(final byte [],final byte [],final String)'
      - 'com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync(final byte [],final String)'
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: SymmetricKey
    nameWithType: SymmetricKey
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey
    type: Class
    source:
      remote: &ref_0
        path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
        branch: bb950b2a0255c017040501de0c19e4849361ca1d
        repo: 'https://github.com/Azure/azure-keyvault-java'
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 35
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-101">単純な対称キーの実装</span><span class="sxs-lookup"><span data-stu-id="2d887-101">A simple symmetric key implementation</span></span> </p>
    syntax: &ref_1
      content: public class SymmetricKey implements IKey
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.keyvault.core._i_key
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.close()
    id: close()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: close()
    nameWithType: SymmetricKey.close()
    fullName: void com.microsoft.azure.keyvault.cryptography.SymmetricKey.close()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.close*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 386
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    id: 'decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'SymmetricKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 210
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-102">指定した暗号テキストを復号化します。</span><span class="sxs-lookup"><span data-stu-id="2d887-102">Decrypts the specified cipher text.</span></span> <span data-ttu-id="2d887-103">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="2d887-103">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p><span data-ttu-id="2d887-104">暗号化を解除する暗号テキスト</span><span class="sxs-lookup"><span data-stu-id="2d887-104">The cipher text to decrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="2d887-105">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-105">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="2d887-106">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-106">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: authenticationTag
          type: f549433f
          description: <p><span data-ttu-id="2d887-107">(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ</span><span class="sxs-lookup"><span data-stu-id="2d887-107">The authentication tag from the encrypt operation (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-108">を使用する暗号化アルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-108">The encryption algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="2d887-109">プレーン テキストを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-109">A ListenableFuture containing the plain text</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-110">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-110">the algorithm is not valid</span></span> </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.DefaultKeySize
    id: DefaultKeySize
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: DefaultKeySize
    nameWithType: SymmetricKey.DefaultKeySize
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.DefaultKeySize
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 45
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int DefaultKeySize= KeySize256
      return:
        type: cd225469
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    id: 'encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'SymmetricKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 253
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-111">指定されたプレーン テキストを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="2d887-111">Encrypts the specified plain text.</span></span> <span data-ttu-id="2d887-112">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="2d887-112">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p><span data-ttu-id="2d887-113">プレーン テキストを暗号化するには</span><span class="sxs-lookup"><span data-stu-id="2d887-113">The plain text to encrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="2d887-114">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-114">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="2d887-115">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-115">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-116">既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-116">The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm</span></span> </p>'
      return:
        type: 7356d169
        description: '<p><span data-ttu-id="2d887-117">暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-117">A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used</span></span> </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-118">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-118">the algorithm is not valid</span></span> </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm()
    id: getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: getDefaultEncryptionAlgorithm()
    nameWithType: SymmetricKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultEncryptionAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 150
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-119">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-119">The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-120">このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-120">The default encryption algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm()
    id: getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: SymmetricKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultKeyWrapAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 173
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-121">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-121">The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-122">既定のキーは、このキーのアルゴリズムをラップします。</span><span class="sxs-lookup"><span data-stu-id="2d887-122">The default key wrap algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm()
    id: getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: getDefaultSignatureAlgorithm()
    nameWithType: SymmetricKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultSignatureAlgorithm()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 198
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-123">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-123">The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-124">このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-124">The default signature algorithm for this key.</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid()
    id: getKid()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: getKid()
    nameWithType: SymmetricKey.getKid()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getKid()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 204
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-125">このキーの一意のキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-125">The unique key identifier for this key.</span></span></p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-126">キー識別子</span><span class="sxs-lookup"><span data-stu-id="2d887-126">The key identifier</span></span> </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getKid()
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize128
    id: KeySize128
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: KeySize128
    nameWithType: SymmetricKey.KeySize128
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize128
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 39
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int KeySize128= 128>> 3
      return:
        type: cd225469
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize192
    id: KeySize192
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: KeySize192
    nameWithType: SymmetricKey.KeySize192
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize192
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 40
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int KeySize192= 192>> 3
      return:
        type: cd225469
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize256
    id: KeySize256
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: KeySize256
    nameWithType: SymmetricKey.KeySize256
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize256
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 41
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int KeySize256= 256>> 3
      return:
        type: cd225469
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize384
    id: KeySize384
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: KeySize384
    nameWithType: SymmetricKey.KeySize384
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize384
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 42
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int KeySize384= 384>> 3
      return:
        type: cd225469
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize512
    id: KeySize512
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: KeySize512
    nameWithType: SymmetricKey.KeySize512
    fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize512
    type: Field
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 43
    package: com.microsoft.azure.keyvault.cryptography
    syntax:
      content: public static final int KeySize512= 512>> 3
      return:
        type: cd225469
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync(final byte [],final String)'
    id: 'signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'SymmetricKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.signAsync(final byte[] digest, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 376
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-127">指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</span><span class="sxs-lookup"><span data-stu-id="2d887-127">Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="2d887-128">署名するダイジェスト</span><span class="sxs-lookup"><span data-stu-id="2d887-128">The digest to sign</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: <p><span data-ttu-id="2d887-129">使用する署名アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-129">The signature algorithm to use</span></span> </p>
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="2d887-130">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="2d887-130">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-131">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-131">the algorithm is not valid</span></span> </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey()
    id: SymmetricKey()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: SymmetricKey()
    nameWithType: SymmetricKey.SymmetricKey()
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey()
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 55
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-132">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>ランダムなキー識別子と DefaultKeySize ビットのランダムなキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-132">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with a random key identifier and a random key with DefaultKeySize bits.</span></span> </p>
    syntax:
      content: public SymmetricKey()
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String)
    id: SymmetricKey(String)
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: SymmetricKey(String kid)
    nameWithType: SymmetricKey.SymmetricKey(String kid)
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid)
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 65
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-133">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>指定したキー識別子と DefaultKeySize ビットのランダムなキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-133">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with the specified key identifier and a random key with DefaultKeySize bits.</span></span> </p>
    syntax:
      content: public SymmetricKey(String kid)
      parameters:
        - id: kid
          type: '26831127'
          description: <p><span data-ttu-id="2d887-134">使用するキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-134">The key identifier to use.</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte [])'
    id: 'SymmetricKey(String,byte [])'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'SymmetricKey(String kid, byte[] keyBytes)'
    nameWithType: 'SymmetricKey.SymmetricKey(String kid, byte[] keyBytes)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, byte[] keyBytes)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 116
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-135">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>指定したキー識別子とキー マテリアルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-135">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with the specified key identifier and key material.</span></span> </p>
    syntax:
      content: 'public SymmetricKey(String kid, byte[] keyBytes)'
      parameters:
        - id: kid
          type: '26831127'
          description: <p><span data-ttu-id="2d887-136">使用するキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-136">The key identifier to use.</span></span> </p>
        - id: keyBytes
          type: ccd9418d
          description: <p><span data-ttu-id="2d887-137">使用するキー マテリアル。</span><span class="sxs-lookup"><span data-stu-id="2d887-137">The key material to use.</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte [],Provider)'
    id: 'SymmetricKey(String,byte [],Provider)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'SymmetricKey(String kid, byte[] keyBytes, Provider provider)'
    nameWithType: 'SymmetricKey.SymmetricKey(String kid, byte[] keyBytes, Provider provider)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, byte[] keyBytes, Provider provider)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 130
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-138">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>指定したキー識別子と、指定したプロバイダーを使用するキーのマテリアルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-138">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with the specified key identifier and key material that uses the specified Provider.</span></span> </p>
    syntax:
      content: 'public SymmetricKey(String kid, byte[] keyBytes, Provider provider)'
      parameters:
        - id: kid
          type: '26831127'
          description: <p><span data-ttu-id="2d887-139">使用するキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-139">The key identifier to use.</span></span> </p>
        - id: keyBytes
          type: ccd9418d
          description: <p><span data-ttu-id="2d887-140">使用するキー マテリアル。</span><span class="sxs-lookup"><span data-stu-id="2d887-140">The key material to use.</span></span> </p>
        - id: provider
          type: 8f3c7027
          description: '<p><span data-ttu-id="2d887-141">(省略可能、既定の null) を使用するプロバイダー</span><span class="sxs-lookup"><span data-stu-id="2d887-141">The Provider to use (optional, null for default)</span></span> </p>'
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,int)'
    id: 'SymmetricKey(String,int)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'SymmetricKey(String kid, int keySizeInBytes)'
    nameWithType: 'SymmetricKey.SymmetricKey(String kid, int keySizeInBytes)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, int keySizeInBytes)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 77
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-142">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>指定したキー識別子と指定したサイズでランダムなキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-142">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with the specified key identifier and a random key with the specified size.</span></span> </p>
    syntax:
      content: 'public SymmetricKey(String kid, int keySizeInBytes)'
      parameters:
        - id: kid
          type: '26831127'
          description: <p><span data-ttu-id="2d887-143">使用するキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-143">The key identifier to use.</span></span> </p>
        - id: keySizeInBytes
          type: f75371fa
          description: <p><span data-ttu-id="2d887-144">キーのサイズ (バイト単位) を使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-144">The key size to use in bytes.</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,int,Provider)'
    id: 'SymmetricKey(String,int,Provider)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'SymmetricKey(String kid, int keySizeInBytes, Provider provider)'
    nameWithType: 'SymmetricKey.SymmetricKey(String kid, int keySizeInBytes, Provider provider)'
    fullName: 'com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, int keySizeInBytes, Provider provider)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 91
    package: com.microsoft.azure.keyvault.cryptography
    summary: <p><span data-ttu-id="2d887-145">作成、 <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref>指定したキー識別子と、指定したプロバイダーを使用する指定したサイズでランダムなキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-145">Creates a <xref uid="com.microsoft.azure.keyvault.cryptography._symmetric_key" data-throw-if-not-resolved="false">SymmetricKey</xref> with the specified key identifier and a random key with the specified size that uses the specified provider.</span></span> </p>
    syntax:
      content: 'public SymmetricKey(String kid, int keySizeInBytes, Provider provider)'
      parameters:
        - id: kid
          type: '26831127'
          description: <p><span data-ttu-id="2d887-146">使用するキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-146">The key identifier to use.</span></span> </p>
        - id: keySizeInBytes
          type: f75371fa
          description: <p><span data-ttu-id="2d887-147">キーのサイズ (バイト単位) を使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-147">The key size to use in bytes.</span></span> </p>
        - id: provider
          type: 8f3c7027
          description: '<p><span data-ttu-id="2d887-148">(省略可能、既定の null) を使用するプロバイダー</span><span class="sxs-lookup"><span data-stu-id="2d887-148">The provider to use (optional, null for default)</span></span> </p>'
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync(final byte [],final String)'
    id: 'unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'SymmetricKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 338
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-149">(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="2d887-149">Unwraps (decrypts) the specified encryped key material.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p><span data-ttu-id="2d887-150">暗号化されたキーの暗号化を解除するには</span><span class="sxs-lookup"><span data-stu-id="2d887-150">The encrypted key to decrypt</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-151">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-151">The algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="2d887-152">ラップ解除されたキーを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-152">A ListenableFuture containing the unwrapped key</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-153">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-153">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync(final byte [],final byte [],final String)'
    id: 'verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'SymmetricKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.SymmetricKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 381
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-154">指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</span><span class="sxs-lookup"><span data-stu-id="2d887-154">Verifies the supplied signature value using the supplied digest and algorithm.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="2d887-155">入力ダイジェスト</span><span class="sxs-lookup"><span data-stu-id="2d887-155">The digest input</span></span> </p>
        - id: signature
          type: f549433f
          description: <p><span data-ttu-id="2d887-156">署名を検証します</span><span class="sxs-lookup"><span data-stu-id="2d887-156">The signature to verify</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-157">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-157">The algorithm to use, must be provided</span></span> </p>'
      return:
        type: 8779baad
        description: <p><span data-ttu-id="2d887-158">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="2d887-158">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-159">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-159">the algorithm is not valid</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync(final byte [],final String)'
    id: 'wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    langs:
      - java
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'SymmetricKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    overload: com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      startLine: 302
    package: com.microsoft.azure.keyvault.cryptography
    summary: |-
      <p><span data-ttu-id="2d887-160">ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-160">Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p><span data-ttu-id="2d887-161">ラップする対称キー</span><span class="sxs-lookup"><span data-stu-id="2d887-161">The symmetric key to wrap</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-162">使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-162">The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm</span></span> </p>'
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="2d887-163">暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-163">ListenableFuture containing the encrypted key and the algorithm that was used</span></span> </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p><span data-ttu-id="2d887-164">アルゴリズムが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="2d887-164">the algorithm is not valid</span></span> </p>
references:
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey*
    name: SymmetricKey
    nameWithType: SymmetricKey.SymmetricKey
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey
    package: com.microsoft.azure.keyvault.cryptography
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 8f3c7027
    spec.java:
      - name: Provider
        fullName: Provider
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm*
    name: getDefaultEncryptionAlgorithm
    nameWithType: SymmetricKey.getDefaultEncryptionAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultEncryptionAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm*
    name: getDefaultKeyWrapAlgorithm
    nameWithType: SymmetricKey.getDefaultKeyWrapAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultKeyWrapAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm*
    name: getDefaultSignatureAlgorithm
    nameWithType: SymmetricKey.getDefaultSignatureAlgorithm
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultSignatureAlgorithm
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid*
    name: getKid
    nameWithType: SymmetricKey.getKid
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getKid
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 456eb9d1
    spec.java:
      - name: NoSuchAlgorithmException
        fullName: NoSuchAlgorithmException
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: dfd3b0c8
    spec.java:
      - name: 'ListenableFuture<byte[]>'
        fullName: 'ListenableFuture<byte[]>'
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync*
    name: decryptAsync
    nameWithType: SymmetricKey.decryptAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.decryptAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 7356d169
    spec.java:
      - name: 'ListenableFuture<Triple<byte[], byte[], String>>'
        fullName: 'ListenableFuture<Triple<byte[], byte[], String>>'
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync*
    name: encryptAsync
    nameWithType: SymmetricKey.encryptAsync
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.encryptAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 32be89a6
    spec.java:
      - name: 'ListenableFuture<Pair<byte[], String>>'
        fullName: 'ListenableFuture<Pair<byte[], String>>'
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync*
    name: wrapKeyAsync
    nameWithType: SymmetricKey.wrapKeyAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.wrapKeyAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync*
    name: unwrapKeyAsync
    nameWithType: SymmetricKey.unwrapKeyAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.unwrapKeyAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync*
    name: signAsync
    nameWithType: SymmetricKey.signAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.signAsync'
    package: com.microsoft.azure.keyvault.cryptography
  - uid: 8779baad
    spec.java:
      - name: ListenableFuture<Boolean>
        fullName: ListenableFuture<Boolean>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync*
    name: verifyAsync
    nameWithType: SymmetricKey.verifyAsync
    fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.SymmetricKey.verifyAsync
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.close*
    name: close
    nameWithType: SymmetricKey.close
    fullName: void com.microsoft.azure.keyvault.cryptography.SymmetricKey.close
    package: com.microsoft.azure.keyvault.cryptography
  - uid: com.microsoft.azure.keyvault.core._i_key
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    summary: <p><span data-ttu-id="2d887-165">Microsoft Azure Key Vault ライブラリと暗号化キーを表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="2d887-165">Interface for representing cryptographic keys with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKey
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key
    parent: com.microsoft.azure.keyvault.cryptography
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: SymmetricKey
    nameWithType: SymmetricKey
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey
    type: Class
    summary: <p><span data-ttu-id="2d887-166">単純な対称キーの実装</span><span class="sxs-lookup"><span data-stu-id="2d887-166">A simple symmetric key implementation</span></span> </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: IKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-167">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-167">The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-168">このキーの既定の暗号化アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-168">The default encryption algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: IKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-169">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-169">The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-170">既定のキーは、このキーのアルゴリズムをラップします。</span><span class="sxs-lookup"><span data-stu-id="2d887-170">The default key wrap algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: IKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-171">Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-171">The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</span></span></p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-172">このキーの既定の署名アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="2d887-172">The default signature algorithm for this key.</span></span> </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getKid()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getKid()
    nameWithType: IKey.getKid()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getKid()
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-173">このキーの一意のキー識別子。</span><span class="sxs-lookup"><span data-stu-id="2d887-173">The unique key identifier for this key.</span></span></p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="2d887-174">キー識別子</span><span class="sxs-lookup"><span data-stu-id="2d887-174">The key identifier</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-175">指定した暗号テキストを復号化します。</span><span class="sxs-lookup"><span data-stu-id="2d887-175">Decrypts the specified cipher text.</span></span> <span data-ttu-id="2d887-176">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="2d887-176">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p><span data-ttu-id="2d887-177">暗号化を解除する暗号テキスト</span><span class="sxs-lookup"><span data-stu-id="2d887-177">The cipher text to decrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="2d887-178">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-178">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="2d887-179">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-179">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: authenticationTag
          type: f549433f
          description: <p><span data-ttu-id="2d887-180">(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ</span><span class="sxs-lookup"><span data-stu-id="2d887-180">The authentication tag from the encrypt operation (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-181">を使用する暗号化アルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-181">The encryption algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="2d887-182">プレーン テキストを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-182">A ListenableFuture containing the plain text</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.core.IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-183">指定されたプレーン テキストを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="2d887-183">Encrypts the specified plain text.</span></span> <span data-ttu-id="2d887-184">すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</span><span class="sxs-lookup"><span data-stu-id="2d887-184">Note that not all algorithms require, or support, all parameters.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p><span data-ttu-id="2d887-185">プレーン テキストを暗号化するには</span><span class="sxs-lookup"><span data-stu-id="2d887-185">The plain text to encrypt</span></span> </p>
        - id: iv
          type: f549433f
          description: <p><span data-ttu-id="2d887-186">初期化ベクター (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-186">The initialization vector (optional with some algorithms)</span></span> </p>
        - id: authenticationData
          type: f549433f
          description: <p><span data-ttu-id="2d887-187">追加の認証データ (一部のアルゴリズムで省略可能)</span><span class="sxs-lookup"><span data-stu-id="2d887-187">Additional authentication data (optional with some algorithms)</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-188">既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-188">The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm</span></span> </p>'
      return:
        type: 7356d169
        description: '<p><span data-ttu-id="2d887-189">暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-189">A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used</span></span> </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-190">ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</span><span class="sxs-lookup"><span data-stu-id="2d887-190">Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p><span data-ttu-id="2d887-191">ラップする対称キー</span><span class="sxs-lookup"><span data-stu-id="2d887-191">The symmetric key to wrap</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-192">使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-192">The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm</span></span> </p>'
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="2d887-193">暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-193">ListenableFuture containing the encrypted key and the algorithm that was used</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-194">(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="2d887-194">Unwraps (decrypts) the specified encryped key material.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p><span data-ttu-id="2d887-195">暗号化されたキーの暗号化を解除するには</span><span class="sxs-lookup"><span data-stu-id="2d887-195">The encrypted key to decrypt</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-196">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-196">The algorithm to use, must be supplied</span></span> </p>'
      return:
        type: dfd3b0c8
        description: <p><span data-ttu-id="2d887-197">ラップ解除されたキーを含む ListenableFuture</span><span class="sxs-lookup"><span data-stu-id="2d887-197">A ListenableFuture containing the unwrapped key</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'IKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.signAsync(final byte[] digest, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-198">指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</span><span class="sxs-lookup"><span data-stu-id="2d887-198">Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="2d887-199">署名するダイジェスト</span><span class="sxs-lookup"><span data-stu-id="2d887-199">The digest to sign</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: <p><span data-ttu-id="2d887-200">使用する署名アルゴリズム</span><span class="sxs-lookup"><span data-stu-id="2d887-200">The signature algorithm to use</span></span> </p>
      return:
        type: 32be89a6
        description: <p><span data-ttu-id="2d887-201">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="2d887-201">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    type: Method
    summary: |-
      <p><span data-ttu-id="2d887-202">指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</span><span class="sxs-lookup"><span data-stu-id="2d887-202">Verifies the supplied signature value using the supplied digest and algorithm.</span></span></p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p><span data-ttu-id="2d887-203">入力ダイジェスト</span><span class="sxs-lookup"><span data-stu-id="2d887-203">The digest input</span></span> </p>
        - id: signature
          type: f549433f
          description: <p><span data-ttu-id="2d887-204">署名を検証します</span><span class="sxs-lookup"><span data-stu-id="2d887-204">The signature to verify</span></span> </p>
        - id: algorithm
          type: 3d93591e
          description: '<p><span data-ttu-id="2d887-205">を使用するアルゴリズムを指定する必要があります</span><span class="sxs-lookup"><span data-stu-id="2d887-205">The algorithm to use, must be provided</span></span> </p>'
      return:
        type: 8779baad
        description: <p><span data-ttu-id="2d887-206">署名と使用されるアルゴリズムを含む ListenableFuture です。</span><span class="sxs-lookup"><span data-stu-id="2d887-206">A ListenableFuture containing the signature and the algorithm used.</span></span> </p>