### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy
    id: _queue_encryption_policy
    parent: com.microsoft.azure.storage.queue
    children:
      - com.microsoft.azure.storage.queue._queue_encryption_policy.getKey()
      - com.microsoft.azure.storage.queue._queue_encryption_policy.getKeyResolver()
      - com.microsoft.azure.storage.queue._queue_encryption_policy.keyResolver
      - com.microsoft.azure.storage.queue._queue_encryption_policy.keyWrapper
      - 'com.microsoft.azure.storage.queue._queue_encryption_policy.QueueEncryptionPolicy(IKey,IKeyResolver)'
      - com.microsoft.azure.storage.queue._queue_encryption_policy.setKey(IKey)
      - com.microsoft.azure.storage.queue._queue_encryption_policy.setKeyResolver(IKeyResolver)
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: QueueEncryptionPolicy
    nameWithType: QueueEncryptionPolicy
    fullName: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 42
    package: com.microsoft.azure.storage.queue
    summary: <p><span data-ttu-id="992bb-101">Azure キュー メッセージのエンベロープの暗号化/解読の実行に使用されるキューの暗号化ポリシーを表します。</span><span class="sxs-lookup"><span data-stu-id="992bb-101">Represents a queue encryption policy that is used to perform envelope encryption/decryption of Azure queue messages.</span></span> </p>
    syntax: &ref_1
      content: public class QueueEncryptionPolicy
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.getKey()
    id: getKey()
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: getKey()
    nameWithType: QueueEncryptionPolicy.getKey()
    fullName: IKey com.microsoft.azure.storage.queue.QueueEncryptionPolicy.getKey()
    overload: com.microsoft.azure.storage.queue._queue_encryption_policy.getKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 78
    package: com.microsoft.azure.storage.queue
    summary: |-
      <p><span data-ttu-id="992bb-102">取得、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="992bb-102">Gets the <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span></p>
      <p></p>
    syntax:
      content: public IKey getKey()
      return:
        type: com.microsoft.azure.keyvault.core._i_key
        description: <p><span data-ttu-id="992bb-103"><xref uid="" data-throw-if-not-resolved="false">IKey</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="992bb-103">An <xref uid="" data-throw-if-not-resolved="false">IKey</xref> object.</span></span> </p>
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.getKeyResolver()
    id: getKeyResolver()
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: getKeyResolver()
    nameWithType: QueueEncryptionPolicy.getKeyResolver()
    fullName: IKeyResolver com.microsoft.azure.storage.queue.QueueEncryptionPolicy.getKeyResolver()
    overload: com.microsoft.azure.storage.queue._queue_encryption_policy.getKeyResolver*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 87
    package: com.microsoft.azure.storage.queue
    summary: |-
      <p><span data-ttu-id="992bb-104">使用して、適切なキーの既存のキューのメッセージを復号化キーの競合回避モジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="992bb-104">Gets the key resolver used to select the correct key for decrypting existing queue messages.</span></span></p>
      <p></p>
    syntax:
      content: public IKeyResolver getKeyResolver()
      return:
        type: com.microsoft.azure.keyvault.core._i_key_resolver
        description: <p><span data-ttu-id="992bb-105">競合回避モジュールを返す、 <xref uid="" data-throw-if-not-resolved="false">SymmetricKey</xref>キー Id を指定します。</span><span class="sxs-lookup"><span data-stu-id="992bb-105">A resolver that returns an <xref uid="" data-throw-if-not-resolved="false">SymmetricKey</xref> given a keyId.</span></span> </p>
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.keyResolver
    id: keyResolver
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: keyResolver
    nameWithType: QueueEncryptionPolicy.keyResolver
    fullName: IKeyResolver com.microsoft.azure.storage.queue.QueueEncryptionPolicy.keyResolver
    type: Field
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 52
    package: com.microsoft.azure.storage.queue
    summary: <p><span data-ttu-id="992bb-106"><xref uid="" data-throw-if-not-resolved="false">IKeyResolver</xref>既存のキューのメッセージを解読するための正しいキーを選択するために使用します。</span><span class="sxs-lookup"><span data-stu-id="992bb-106">The <xref uid="" data-throw-if-not-resolved="false">IKeyResolver</xref> used to select the correct key for decrypting existing queue messages.</span></span> </p>
    syntax:
      content: public IKeyResolver keyResolver
      return:
        type: com.microsoft.azure.keyvault.core._i_key_resolver
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.keyWrapper
    id: keyWrapper
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: keyWrapper
    nameWithType: QueueEncryptionPolicy.keyWrapper
    fullName: IKey com.microsoft.azure.storage.queue.QueueEncryptionPolicy.keyWrapper
    type: Field
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 47
    package: com.microsoft.azure.storage.queue
    summary: <p><span data-ttu-id="992bb-107">型のオブジェクト<xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="992bb-107">An object of type <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span> </p>
    syntax:
      content: public IKey keyWrapper
      return:
        type: com.microsoft.azure.keyvault.core._i_key
  - uid: 'com.microsoft.azure.storage.queue._queue_encryption_policy.QueueEncryptionPolicy(IKey,IKeyResolver)'
    id: 'QueueEncryptionPolicy(IKey,IKeyResolver)'
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: 'QueueEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    nameWithType: 'QueueEncryptionPolicy.QueueEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    fullName: 'com.microsoft.azure.storage.queue.QueueEncryptionPolicy.QueueEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    overload: com.microsoft.azure.storage.queue._queue_encryption_policy.QueueEncryptionPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 68
    package: com.microsoft.azure.storage.queue
    summary: |-
      <p><span data-ttu-id="992bb-108">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref>クラスを指定したキーとの競合回避モジュールを使用します。</span><span class="sxs-lookup"><span data-stu-id="992bb-108">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> class with the specified key and resolver.</span></span> </p>
      <p><span data-ttu-id="992bb-109">生成されたポリシーは、暗号化に使用するためのもので、ユーザーは予想される場合に、少なくともキーを提供します。</span><span class="sxs-lookup"><span data-stu-id="992bb-109">If the generated policy is intended to be used for encryption, users are expected to provide a key at the minimum.</span></span> <span data-ttu-id="992bb-110">キーがない場合に、暗号化中にスローされる例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="992bb-110">The absence of key will cause an exception to be thrown during encryption.</span></span> <span data-ttu-id="992bb-111">生成されたポリシーを復号化に使用する場合は、ユーザーは、keyResolver を指定できます。</span><span class="sxs-lookup"><span data-stu-id="992bb-111">If the generated policy is intended to be used for decryption, users can provide a keyResolver.</span></span> <span data-ttu-id="992bb-112">クライアント ライブラリが - 1。</span><span class="sxs-lookup"><span data-stu-id="992bb-112">The client library will - 1.</span></span> <span data-ttu-id="992bb-113">キーを取得する指定した場合は、キーの競合回避モジュールを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="992bb-113">Invoke the key resolver if specified to get the key.</span></span> <span data-ttu-id="992bb-114">手順 2.</span><span class="sxs-lookup"><span data-stu-id="992bb-114">2.</span></span> <span data-ttu-id="992bb-115">競合回避モジュールが指定されていませんが、キーが指定されて、キーのキーの id と一致しを使用します。</span><span class="sxs-lookup"><span data-stu-id="992bb-115">If resolver is not specified but a key is specified, match the key id on the key and use it.</span></span></p>
      <p></p>
    syntax:
      content: 'public QueueEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
      parameters:
        - id: key
          type: com.microsoft.azure.keyvault.core._i_key
          description: <p><span data-ttu-id="992bb-116">型のオブジェクト<xref uid="" data-throw-if-not-resolved="false">IKey</xref>コンテンツ暗号化キーをラップ/ラップ解除するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="992bb-116">An object of type <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content encryption key.</span></span> </p>
        - id: keyResolver
          type: com.microsoft.azure.keyvault.core._i_key_resolver
          description: <p><span data-ttu-id="992bb-117">キーの競合回避モジュールを既存のキューのメッセージを解読するための正しいキーを選択します。</span><span class="sxs-lookup"><span data-stu-id="992bb-117">The key resolver used to select the correct key for decrypting existing queue messages.</span></span> </p>
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.setKey(IKey)
    id: setKey(IKey)
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: setKey(IKey key)
    nameWithType: QueueEncryptionPolicy.setKey(IKey key)
    fullName: void com.microsoft.azure.storage.queue.QueueEncryptionPolicy.setKey(IKey key)
    overload: com.microsoft.azure.storage.queue._queue_encryption_policy.setKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 97
    package: com.microsoft.azure.storage.queue
    summary: |-
      <p><span data-ttu-id="992bb-118">セット、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="992bb-118">Sets the <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span></p>
      <p></p>
    syntax:
      content: public void setKey(IKey key)
      parameters:
        - id: key
          type: com.microsoft.azure.keyvault.core._i_key
          description: <p><span data-ttu-id="992bb-119"><xref uid="" data-throw-if-not-resolved="false">IKey</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="992bb-119">An <xref uid="" data-throw-if-not-resolved="false">IKey</xref> object.</span></span> </p>
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.setKeyResolver(IKeyResolver)
    id: setKeyResolver(IKeyResolver)
    parent: com.microsoft.azure.storage.queue._queue_encryption_policy
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    langs:
      - java
    name: setKeyResolver(IKeyResolver keyResolver)
    nameWithType: QueueEncryptionPolicy.setKeyResolver(IKeyResolver keyResolver)
    fullName: void com.microsoft.azure.storage.queue.QueueEncryptionPolicy.setKeyResolver(IKeyResolver keyResolver)
    overload: com.microsoft.azure.storage.queue._queue_encryption_policy.setKeyResolver*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueEncryptionPolicy.java
      startLine: 107
    package: com.microsoft.azure.storage.queue
    summary: |-
      <p><span data-ttu-id="992bb-120">使用して、適切なキーの既存のキューのメッセージを復号化キーの競合回避モジュールを設定します。</span><span class="sxs-lookup"><span data-stu-id="992bb-120">Sets the key resolver used to select the correct key for decrypting existing queue messages.</span></span></p>
      <p></p>
    syntax:
      content: public void setKeyResolver(IKeyResolver keyResolver)
      parameters:
        - id: keyResolver
          type: com.microsoft.azure.keyvault.core._i_key_resolver
          description: <p><span data-ttu-id="992bb-121">競合回避モジュールを返す、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>キー Id を指定します。</span><span class="sxs-lookup"><span data-stu-id="992bb-121">A resolver that returns an <xref uid="" data-throw-if-not-resolved="false">IKey</xref> given a keyId.</span></span> </p>
references:
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.QueueEncryptionPolicy*
    name: QueueEncryptionPolicy
    nameWithType: QueueEncryptionPolicy.QueueEncryptionPolicy
    fullName: com.microsoft.azure.storage.queue.QueueEncryptionPolicy.QueueEncryptionPolicy
    package: com.microsoft.azure.storage.queue
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.getKey*
    name: getKey
    nameWithType: QueueEncryptionPolicy.getKey
    fullName: IKey com.microsoft.azure.storage.queue.QueueEncryptionPolicy.getKey
    package: com.microsoft.azure.storage.queue
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.getKeyResolver*
    name: getKeyResolver
    nameWithType: QueueEncryptionPolicy.getKeyResolver
    fullName: IKeyResolver com.microsoft.azure.storage.queue.QueueEncryptionPolicy.getKeyResolver
    package: com.microsoft.azure.storage.queue
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.setKey*
    name: setKey
    nameWithType: QueueEncryptionPolicy.setKey
    fullName: void com.microsoft.azure.storage.queue.QueueEncryptionPolicy.setKey
    package: com.microsoft.azure.storage.queue
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy.setKeyResolver*
    name: setKeyResolver
    nameWithType: QueueEncryptionPolicy.setKeyResolver
    fullName: void com.microsoft.azure.storage.queue.QueueEncryptionPolicy.setKeyResolver
    package: com.microsoft.azure.storage.queue
  - uid: com.microsoft.azure.keyvault.core._i_key
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    summary: <p><span data-ttu-id="992bb-122">Microsoft Azure Key Vault ライブラリと暗号化キーを表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="992bb-122">Interface for representing cryptographic keys with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKey
  - uid: com.microsoft.azure.keyvault.core._i_key_resolver
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key_resolver.yml
    name: IKeyResolver
    nameWithType: IKeyResolver
    fullName: com.microsoft.azure.keyvault.core.IKeyResolver
    type: Interface
    summary: <p><span data-ttu-id="992bb-123">Microsoft Azure Key Vault のライブラリを含むキーの解決操作を表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="992bb-123">Interface for representing key resolving operations with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKeyResolver
  - uid: com.microsoft.azure.storage.queue._queue_encryption_policy
    parent: com.microsoft.azure.storage.queue
    href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
    name: QueueEncryptionPolicy
    nameWithType: QueueEncryptionPolicy
    fullName: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
    type: Class
    summary: <p><span data-ttu-id="992bb-124">Azure キュー メッセージのエンベロープの暗号化/解読の実行に使用されるキューの暗号化ポリシーを表します。</span><span class="sxs-lookup"><span data-stu-id="992bb-124">Represents a queue encryption policy that is used to perform envelope encryption/decryption of Azure queue messages.</span></span> </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p><span data-ttu-id="992bb-125">Microsoft Azure ストレージ サービスの例外を表します。</span><span class="sxs-lookup"><span data-stu-id="992bb-125">Represents an exception for the Microsoft Azure storage service.</span></span> </p>
    syntax:
      content: public class StorageException