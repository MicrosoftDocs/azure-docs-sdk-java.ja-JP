### YamlMime:ManagedReference
items:
  - uid: system.fabric._partition_health_query_description
    id: _partition_health_query_description
    parent: system.fabric
    children:
      - system.fabric._partition_health_query_description.getApplicationHealthPolicy()
      - system.fabric._partition_health_query_description.getHealthEventsFilter()
      - system.fabric._partition_health_query_description.getPartitionId()
      - system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()
      - system.fabric._partition_health_query_description.PartitionHealthQueryDescription(UUID)
      - system.fabric._partition_health_query_description.setApplicationHealthPolicy(ApplicationHealthPolicy)
      - system.fabric._partition_health_query_description.setHealthEventsFilter(HealthEventsFilter)
      - system.fabric._partition_health_query_description.setReplicaHealthStatesFilter(ReplicaHealthStatesFilter)
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: PartitionHealthQueryDescription
    nameWithType: PartitionHealthQueryDescription
    fullName: system.fabric.PartitionHealthQueryDescription
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 9
    package: system.fabric
    summary: <p>説明を取得するためのクエリ入力<xref uid="system.fabric.health._partition_health" data-throw-if-not-resolved="false">system.fabric.health.PartitionHealth</xref>です。 </p>
    syntax:
      content: public class PartitionHealthQueryDescription
    inheritance:
      - java.lang.Object
  - uid: system.fabric._partition_health_query_description.getApplicationHealthPolicy()
    id: getApplicationHealthPolicy()
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: getApplicationHealthPolicy()
    nameWithType: PartitionHealthQueryDescription.getApplicationHealthPolicy()
    fullName: ApplicationHealthPolicy system.fabric.PartitionHealthQueryDescription.getApplicationHealthPolicy()
    overload: system.fabric._partition_health_query_description.getApplicationHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 67
    package: system.fabric
    summary: "<p>取得、 <xref uid=\"system.fabric._application_health_policy\" data-throw-if-not-resolved=\"false\">system.fabric.ApplicationHealthPolicy</xref>正常性を評価するために使用します。</p>\n<p>\r\n\r\n  <b>注釈:</b>パーティションの正常性を評価する正常性ストアが親アプリケーションのアプリケーションの正常性ポリシーを使用して指定されていない場合。 </p>"
    syntax:
      content: public ApplicationHealthPolicy getApplicationHealthPolicy()
      return:
        type: system.fabric._application_health_policy
        description: <p><xref uid="system.fabric._application_health_policy" data-throw-if-not-resolved="false">System.fabric.ApplicationHealthPolicy</xref>パーティションの正常性を評価するために使用します。 </p>
  - uid: system.fabric._partition_health_query_description.getHealthEventsFilter()
    id: getHealthEventsFilter()
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: getHealthEventsFilter()
    nameWithType: PartitionHealthQueryDescription.getHealthEventsFilter()
    fullName: HealthEventsFilter system.fabric.PartitionHealthQueryDescription.getHealthEventsFilter()
    overload: system.fabric._partition_health_query_description.getHealthEventsFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 96
    package: system.fabric
    summary: "<p>コレクションのフィルターを取得<xref uid=\"system.fabric.health._health_event\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthEvent</xref>パーティションに報告します。 フィルターに一致するイベントのみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するイベントのみが返されます。 すべてのイベントは、パーティションの集計された正常性状態の評価に使用されます。 フィルターが指定されていない場合は、すべてのイベントが返されます。 </p>"
    syntax:
      content: public HealthEventsFilter getHealthEventsFilter()
      return:
        type: system.fabric._health_events_filter
        description: <p><xref uid="system.fabric._health_events_filter" data-throw-if-not-resolved="false">System.fabric.HealthEventsFilter</xref>返されるイベントをフィルター処理するために使用します。 </p>
  - uid: system.fabric._partition_health_query_description.getPartitionId()
    id: getPartitionId()
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: PartitionHealthQueryDescription.getPartitionId()
    fullName: UUID system.fabric.PartitionHealthQueryDescription.getPartitionId()
    overload: system.fabric._partition_health_query_description.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 54
    package: system.fabric
    summary: |-
      <p>取得またはパーティションの識別子を設定します。</p>
      <p></p>
    syntax:
      content: public UUID getPartitionId()
      return:
        type: add9545a
        description: <p>パーティションの id を表す UUID。 </p>
  - uid: system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()
    id: getReplicaHealthStatesFilter()
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: getReplicaHealthStatesFilter()
    nameWithType: PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
    fullName: ReplicaHealthStatesFilter system.fabric.PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
    overload: system.fabric._partition_health_query_description.getReplicaHealthStatesFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 128
    package: system.fabric
    summary: "<p>フィルターを取得<xref uid=\"system.fabric.health._replica_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ReplicaHealthState</xref>子。 フィルターに一致する子のみが返されます。 すべての子は、パーティションの集計された正常性状態の評価に使用されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致する子のみが返されます。 すべての子は、パーティションの集計された正常性状態の評価に使用されます。 フィルターが指定されていない場合は、パーティションのすべての子が返されます。 </p>"
    syntax:
      content: public ReplicaHealthStatesFilter getReplicaHealthStatesFilter()
      return:
        type: system.fabric._replica_health_states_filter
        description: <p><xref uid="system.fabric._replica_health_states_filter" data-throw-if-not-resolved="false">System.fabric.ReplicaHealthStatesFilter</xref>返されたレプリカをフィルター処理するために使用します。 </p>
  - uid: system.fabric._partition_health_query_description.PartitionHealthQueryDescription(UUID)
    id: PartitionHealthQueryDescription(UUID)
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: PartitionHealthQueryDescription(UUID partitionId)
    nameWithType: PartitionHealthQueryDescription.PartitionHealthQueryDescription(UUID partitionId)
    fullName: system.fabric.PartitionHealthQueryDescription.PartitionHealthQueryDescription(UUID partitionId)
    overload: system.fabric._partition_health_query_description.PartitionHealthQueryDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 29
    package: system.fabric
    summary: |-
      <p>新しいインスタンスをインスタンス化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.PartitionHealthQueryDescription</xref>クラスです。</p>
      <p></p>
    syntax:
      content: public PartitionHealthQueryDescription(UUID partitionId)
      parameters:
        - id: partitionId
          type: add9545a
          description: <p>パーティションの識別子です。 </p>
  - uid: system.fabric._partition_health_query_description.setApplicationHealthPolicy(ApplicationHealthPolicy)
    id: setApplicationHealthPolicy(ApplicationHealthPolicy)
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: setApplicationHealthPolicy(ApplicationHealthPolicy applicationHealthPolicy)
    nameWithType: PartitionHealthQueryDescription.setApplicationHealthPolicy(ApplicationHealthPolicy applicationHealthPolicy)
    fullName: void system.fabric.PartitionHealthQueryDescription.setApplicationHealthPolicy(ApplicationHealthPolicy applicationHealthPolicy)
    overload: system.fabric._partition_health_query_description.setApplicationHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 81
    package: system.fabric
    summary: "<p>セット、 <xref uid=\"system.fabric._application_health_policy\" data-throw-if-not-resolved=\"false\">system.fabric.ApplicationHealthPolicy</xref>正常性を評価するために使用します。</p>\n<p>\r\n\r\n  <b>注釈:</b>パーティションの正常性を評価する正常性ストアが親アプリケーションのアプリケーションの正常性ポリシーを使用して指定されていない場合。 </p>"
    syntax:
      content: public void setApplicationHealthPolicy(ApplicationHealthPolicy applicationHealthPolicy)
      parameters:
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><xref uid="system.fabric._application_health_policy" data-throw-if-not-resolved="false">System.fabric.ApplicationHealthPolicy</xref>パーティションの正常性を評価するために使用します。 </p>
  - uid: system.fabric._partition_health_query_description.setHealthEventsFilter(HealthEventsFilter)
    id: setHealthEventsFilter(HealthEventsFilter)
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    nameWithType: PartitionHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    fullName: void system.fabric.PartitionHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    overload: system.fabric._partition_health_query_description.setHealthEventsFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 112
    package: system.fabric
    summary: "<p>コレクションのフィルター設定<xref uid=\"system.fabric.health._health_event\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthEvent</xref>パーティションに報告します。 フィルターに一致するイベントのみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するイベントのみが返されます。 すべてのイベントは、パーティションの集計された正常性状態の評価に使用されます。 フィルターが指定されていない場合は、すべてのイベントが返されます。 </p>"
    syntax:
      content: public void setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
      parameters:
        - id: healthEventsFilter
          type: system.fabric._health_events_filter
          description: <p><xref uid="system.fabric._health_events_filter" data-throw-if-not-resolved="false">System.fabric.HealthEventsFilter</xref>返されるイベントをフィルター処理するために使用します。 </p>
  - uid: system.fabric._partition_health_query_description.setReplicaHealthStatesFilter(ReplicaHealthStatesFilter)
    id: setReplicaHealthStatesFilter(ReplicaHealthStatesFilter)
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    langs:
      - java
    name: setReplicaHealthStatesFilter(ReplicaHealthStatesFilter replicaHealthStatesFilter)
    nameWithType: PartitionHealthQueryDescription.setReplicaHealthStatesFilter(ReplicaHealthStatesFilter replicaHealthStatesFilter)
    fullName: void system.fabric.PartitionHealthQueryDescription.setReplicaHealthStatesFilter(ReplicaHealthStatesFilter replicaHealthStatesFilter)
    overload: system.fabric._partition_health_query_description.setReplicaHealthStatesFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/PartitionHealthQueryDescription.java
      startLine: 145
    package: system.fabric
    summary: "<p>フィルター設定<xref uid=\"system.fabric.health._replica_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ReplicaHealthState</xref>子。 フィルターに一致する子のみが返されます。 すべての子は、パーティションの集計された正常性状態の評価に使用されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致する子のみが返されます。 すべての子は、パーティションの集計された正常性状態の評価に使用されます。 フィルターが指定されていない場合は、パーティションのすべての子が返されます。 </p>"
    syntax:
      content: public void setReplicaHealthStatesFilter(ReplicaHealthStatesFilter replicaHealthStatesFilter)
      parameters:
        - id: replicaHealthStatesFilter
          type: system.fabric._replica_health_states_filter
          description: <p><xref uid="system.fabric._replica_health_states_filter" data-throw-if-not-resolved="false">System.fabric.ReplicaHealthStatesFilter</xref>返されたレプリカをフィルター処理するために使用します。 </p>
references:
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: system.fabric._partition_health_query_description.PartitionHealthQueryDescription*
    name: PartitionHealthQueryDescription
    nameWithType: PartitionHealthQueryDescription.PartitionHealthQueryDescription
    fullName: system.fabric.PartitionHealthQueryDescription.PartitionHealthQueryDescription
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.getPartitionId*
    name: getPartitionId
    nameWithType: PartitionHealthQueryDescription.getPartitionId
    fullName: UUID system.fabric.PartitionHealthQueryDescription.getPartitionId
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.getApplicationHealthPolicy*
    name: getApplicationHealthPolicy
    nameWithType: PartitionHealthQueryDescription.getApplicationHealthPolicy
    fullName: ApplicationHealthPolicy system.fabric.PartitionHealthQueryDescription.getApplicationHealthPolicy
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.setApplicationHealthPolicy*
    name: setApplicationHealthPolicy
    nameWithType: PartitionHealthQueryDescription.setApplicationHealthPolicy
    fullName: void system.fabric.PartitionHealthQueryDescription.setApplicationHealthPolicy
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.getHealthEventsFilter*
    name: getHealthEventsFilter
    nameWithType: PartitionHealthQueryDescription.getHealthEventsFilter
    fullName: HealthEventsFilter system.fabric.PartitionHealthQueryDescription.getHealthEventsFilter
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.setHealthEventsFilter*
    name: setHealthEventsFilter
    nameWithType: PartitionHealthQueryDescription.setHealthEventsFilter
    fullName: void system.fabric.PartitionHealthQueryDescription.setHealthEventsFilter
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.getReplicaHealthStatesFilter*
    name: getReplicaHealthStatesFilter
    nameWithType: PartitionHealthQueryDescription.getReplicaHealthStatesFilter
    fullName: ReplicaHealthStatesFilter system.fabric.PartitionHealthQueryDescription.getReplicaHealthStatesFilter
    package: system.fabric
  - uid: system.fabric._partition_health_query_description.setReplicaHealthStatesFilter*
    name: setReplicaHealthStatesFilter
    nameWithType: PartitionHealthQueryDescription.setReplicaHealthStatesFilter
    fullName: void system.fabric.PartitionHealthQueryDescription.setReplicaHealthStatesFilter
    package: system.fabric
  - uid: system.fabric._application_health_policy
    parent: system.fabric
    href: system.fabric._application_health_policy.yml
    name: ApplicationHealthPolicy
    nameWithType: ApplicationHealthPolicy
    fullName: system.fabric.ApplicationHealthPolicy
    type: Class
    summary: <p>アプリケーションまたはその子エンティティを 1 つの正常性を評価する正常性ポリシーを定義します。 </p>
    syntax:
      content: public class ApplicationHealthPolicy
  - uid: system.fabric._health_events_filter
    parent: system.fabric
    href: system.fabric._health_events_filter.yml
    name: HealthEventsFilter
    nameWithType: HealthEventsFilter
    fullName: system.fabric.HealthEventsFilter
    type: Class
    syntax:
      content: public class HealthEventsFilter
  - uid: system.fabric._replica_health_states_filter
    parent: system.fabric
    href: system.fabric._replica_health_states_filter.yml
    name: ReplicaHealthStatesFilter
    nameWithType: ReplicaHealthStatesFilter
    fullName: system.fabric.ReplicaHealthStatesFilter
    type: Class
    syntax:
      content: public class ReplicaHealthStatesFilter
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: <p>A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体 </p>
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._replica_health_state
    parent: system.fabric.health
    href: system.fabric.health._replica_health_state.yml
    name: ReplicaHealthState
    nameWithType: ReplicaHealthState
    fullName: system.fabric.health.ReplicaHealthState
    type: Class
    summary: <p>ステートフル サービス レプリカまたはステートレス サービス インスタンスのヘルス状態の基本クラスを表します。 </p>
    syntax:
      content: public class ReplicaHealthState
  - uid: system.fabric.health._partition_health
    parent: system.fabric.health
    href: system.fabric.health._partition_health.yml
    name: PartitionHealth
    nameWithType: PartitionHealth
    fullName: system.fabric.health.PartitionHealth
    type: Class
    summary: '<p>によって返されるパーティションの正常性を説明<xref uid="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getPartitionHealthAsync(PartitionHealthQueryDescription)</xref>です。 </p>'
    syntax:
      content: public class PartitionHealth extends EntityHealth