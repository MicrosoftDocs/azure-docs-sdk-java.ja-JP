### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.runtime._stateful_service
    id: _stateful_service
    parent: microsoft.servicefabric.services.runtime
    children:
      - microsoft.servicefabric.services.runtime._stateful_service.getReliableStateManager()
      - microsoft.servicefabric.services.runtime._stateful_service.StatefulService(StatefulServiceContext)
      - 'microsoft.servicefabric.services.runtime._stateful_service.StatefulService(StatefulServiceContext,ReliableStateManagerReplica)'
    href: microsoft.servicefabric.services.runtime._stateful_service.yml
    langs:
      - java
    name: StatefulService
    nameWithType: StatefulService
    fullName: microsoft.servicefabric.services.runtime.StatefulService
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
      startLine: 14
    package: microsoft.servicefabric.services.runtime
    summary: <p>Microsoft Service Fabric ベースのステートフルの信頼性の高いサービスを提供する基本クラスを表します、 <xref uid="microsoft.servicefabric.data._reliable_state_manager" data-throw-if-not-resolved="false">microsoft.servicefabric.data.ReliableStateManager</xref>を実装するには、このクラスから派生を状態マネージャー サービスにはMicrosoft Service Fabric は、ステートフルな信頼性の高いサービスを基づいています。 </p>
    syntax:
      content: public class StatefulService extends StatefulServiceBase
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.runtime._stateful_service_base
    inheritedMembers:
      - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
      - microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)'
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)'
  - uid: microsoft.servicefabric.services.runtime._stateful_service.getReliableStateManager()
    id: getReliableStateManager()
    parent: microsoft.servicefabric.services.runtime._stateful_service
    href: microsoft.servicefabric.services.runtime._stateful_service.yml
    langs:
      - java
    name: getReliableStateManager()
    nameWithType: StatefulService.getReliableStateManager()
    fullName: ReliableStateManager microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager()
    overload: microsoft.servicefabric.services.runtime._stateful_service.getReliableStateManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
      startLine: 52
    package: microsoft.servicefabric.services.runtime
    summary: |-
      <p>レプリカの取得<xref uid="microsoft.servicefabric.data._reliable_state_manager" data-throw-if-not-resolved="false">microsoft.servicefabric.data.ReliableStateManager</xref></p>
      <p></p>
    syntax:
      content: public ReliableStateManager getReliableStateManager()
      return:
        type: microsoft.servicefabric.data._reliable_state_manager
        description: <p><xref uid="microsoft.servicefabric.data._reliable_state_manager" data-throw-if-not-resolved="false">Microsoft.servicefabric.data.ReliableStateManager</xref>レプリカの </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service.StatefulService(StatefulServiceContext)
    id: StatefulService(StatefulServiceContext)
    parent: microsoft.servicefabric.services.runtime._stateful_service
    href: microsoft.servicefabric.services.runtime._stateful_service.yml
    langs:
      - java
    name: StatefulService(StatefulServiceContext serviceContext)
    nameWithType: StatefulService.StatefulService(StatefulServiceContext serviceContext)
    fullName: microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext serviceContext)
    overload: microsoft.servicefabric.services.runtime._stateful_service.StatefulService*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
      startLine: 41
    package: microsoft.servicefabric.services.runtime
    summary: |-
      <p>既定値は、新しいステートフルなサービスを作成<xref uid="microsoft.servicefabric.data._reliable_state_manager" data-throw-if-not-resolved="false">microsoft.servicefabric.data.ReliableStateManager</xref></p>
      <p></p>
    syntax:
      content: protected StatefulService(StatefulServiceContext serviceContext)
      parameters:
        - id: serviceContext
          type: system.fabric._stateful_service_context
          description: <p>レプリカ ID、パーティション ID、サービス名のような情報を提供するステートフルなサービス コンテキストについて説明します。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service.StatefulService(StatefulServiceContext,ReliableStateManagerReplica)'
    id: 'StatefulService(StatefulServiceContext,ReliableStateManagerReplica)'
    parent: microsoft.servicefabric.services.runtime._stateful_service
    href: microsoft.servicefabric.services.runtime._stateful_service.yml
    langs:
      - java
    name: 'StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)'
    nameWithType: 'StatefulService.StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)'
    fullName: 'microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)'
    overload: microsoft.servicefabric.services.runtime._stateful_service.StatefulService*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
      startLine: 28
    package: microsoft.servicefabric.services.runtime
    summary: |-
      <p>既定ではないと新しいステートフルなサービスを作成<xref uid="microsoft.servicefabric.data._reliable_state_manager" data-throw-if-not-resolved="false">microsoft.servicefabric.data.ReliableStateManager</xref></p>
      <p></p>
    syntax:
      content: 'protected StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)'
      parameters:
        - id: serviceContext
          type: system.fabric._stateful_service_context
          description: <p>レプリカ ID、パーティション ID、サービス名のような情報を提供するステートフルなサービス コンテキストについて説明します。 </p>
        - id: stateManagerReplica
          type: 347f4db2
          description: <p>信頼性の高い状態プロバイダーの複製を表します。 </p>
references:
  - uid: 347f4db2
    spec.java:
      - name: ReliableStateManagerReplica
        fullName: ReliableStateManagerReplica
  - uid: microsoft.servicefabric.services.runtime._stateful_service.StatefulService*
    name: StatefulService
    nameWithType: StatefulService.StatefulService
    fullName: microsoft.servicefabric.services.runtime.StatefulService.StatefulService
    package: microsoft.servicefabric.services.runtime
  - uid: microsoft.servicefabric.services.runtime._stateful_service.getReliableStateManager*
    name: getReliableStateManager
    nameWithType: StatefulService.getReliableStateManager
    fullName: ReliableStateManager microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager
    package: microsoft.servicefabric.services.runtime
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: backupAsync(BackupDescription backupDescription)
    nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription)
    type: Method
    summary: |-
      <p>これによって管理されるすべての信頼性の高い状態のバックアップを実行<xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>です。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription)
      parameters:
        - id: backupDescription
          type: microsoft.servicefabric.data._backup_description
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref>バックアップ要求を記述します。 </p>
      return:
        type: 16409f84
        description: <p>非同期のバックアップ操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'backupAsync(BackupDescription backupDescription, Duration timeout)'
    nameWithType: 'StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)'
    type: Method
    summary: |-
      <p>これによって管理されるすべての信頼性の高い状態のバックアップを実行<xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>です。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BackupDescription backupDescription, Duration timeout)'
      parameters:
        - id: backupDescription
          type: microsoft.servicefabric.data._backup_description
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref>バックアップ要求を記述します。 </p>
        - id: timeout
          type: e02a2de0
          description: <p>この操作のタイムアウト。 </p>
      return:
        type: 16409f84
        description: <p>非同期のバックアップ操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.createServiceReplicaListeners()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: createServiceReplicaListeners()
    nameWithType: StatefulServiceBase.createServiceReplicaListeners()
    fullName: List<ServiceReplicaListener> microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners()
    type: Method
    summary: |-
      <p>サービス レプリカの通信リスナーを指定するには、このメソッドをオーバーライドします。 通信リスナーのによって返されるエンドポイントが ListenerName の JSON 文字列として格納されているなどの文字列のエンドポイントのペア {「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}</p>
      <p></p>
    syntax:
      content: protected List<ServiceReplicaListener> createServiceReplicaListeners()
      return:
        type: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
        description: <p>ServiceReplicaListeners の一覧 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getAddresses()
    nameWithType: StatefulServiceBase.getAddresses()
    fullName: 'Map<String, String> microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()'
    type: Method
    summary: |-
      <p>すべてのアドレスの一覧のこのサービス レプリカとして取得 (ListenerName、エンドポイント) キーと値のペア。</p>
      <p></p>
    syntax:
      content: 'protected Map<String, String> getAddresses()'
      return:
        type: 689c8cb5
        description: <p><xref uid="" data-throw-if-not-resolved="false">マップ</xref>(ListenerName、エンドポイント) とアドレスの一覧を含むキーと値のペア。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getPartition()
    nameWithType: StatefulServiceBase.getPartition()
    fullName: StatefulServicePartition microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
    type: Method
    summary: |-
      <p>サービスを現在のサービスのレプリカが属するパーティションをします。</p>
      <p></p>
    syntax:
      content: protected StatefulServicePartition getPartition()
      return:
        type: system.fabric._stateful_service_partition
        description: <p><xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref>を表す、このサービス レプリカが属しているパーティション。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getServiceContext()
    nameWithType: StatefulServiceBase.getServiceContext()
    fullName: StatefulServiceContext microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
    type: Method
    summary: |-
      <p>このステートフル サービスが動作しているサービス コンテキストを取得します。 ReplicaId、PartitionId ServiceName などのような情報を提供します。</p>
      <p></p>
    syntax:
      content: public StatefulServiceContext getServiceContext()
      return:
        type: system.fabric._stateful_service_context
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref>サービス コンテキストをについて説明します。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getStateProviderReplica()
    nameWithType: StatefulServiceBase.getStateProviderReplica()
    fullName: StateProviderReplica microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
    type: Method
    syntax:
      content: protected StateProviderReplica getStateProviderReplica()
      return:
        type: microsoft.servicefabric.data._state_provider_replica
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: onAbort()
    nameWithType: StatefulServiceBase.onAbort()
    fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
    type: Method
    summary: <p>通知サービスを中止しています。 RunAsync は、取り消し処理は中止パスには待機されなかったとして、このメソッドの実行と同時に実行可能性があります。 </p>
    syntax:
      content: protected void onAbort()
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>このメソッドは、最後の手順として完了する前に<xref uid="system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#changeRoleAsync (ReplicaRole、CancellationToken)</xref>です。 このレプリカの内部コンポーネントの ChangeRole が完了したことを通知するには、このメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>このサービス レプリカです。 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>サービスを閉じるための最後の手順として、このメソッドが呼び出されます。 このレプリカの内部コンポーネントの終了が完了したことを通知するには、このメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>このメソッドは、疑いのあるデータの消失時に呼び出されます。 データの損失が発生した場合、サービスを復元するには、このメソッドをオーバーライドすることができます。</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<Boolean> onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
      parameters:
        - id: context
          type: microsoft.servicefabric.data._restore_context
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">RestoreContext</xref>サービスを復元するために使用します。 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 7e53ac82
        description: <p>非同期の復元操作を表すタスク。 True は、状態が復元されていることを示します。 False は、レプリカの状態が変更されていないことを示します。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>このメソッドは、サービスを開くの最後の手順として呼び出されます。 このレプリカの内部コンポーネントのオープンが完了したことを通知するには、このメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<?> onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p>このサービス レプリカです。 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: runAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceBase.runAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>サービスが、プライマリで、書き込みの状態を持つときに実行される処理ループを実装するだけのロジックでこのメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'setAddresses(Map<String, String> addresses)'
    nameWithType: 'StatefulServiceBase.setAddresses(Map<String, String> addresses)'
    fullName: 'void microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String> addresses)'
    type: Method
    summary: |-
      <p>セットの一覧 (ListenerName、エンドポイント) としては、このサービス レプリカのすべてのアドレスのキー/値ペア。</p>
      <p></p>
    syntax:
      content: 'protected void setAddresses(Map<String, String> addresses)'
      parameters:
        - id: addresses
          type: 689c8cb5
          description: <p><xref uid="" data-throw-if-not-resolved="false">マップ</xref>(ListenerName、エンドポイント) とアドレスの一覧を含むキーと値のペア。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: setPartition(StatefulServicePartition partition)
    nameWithType: StatefulServiceBase.setPartition(StatefulServicePartition partition)
    fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition partition)
    type: Method
    summary: |-
      <p>サービスを現在のサービスのレプリカが属するパーティションをします。</p>
      <p></p>
    syntax:
      content: protected void setPartition(StatefulServicePartition partition)
      parameters:
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref>を表す、このサービス レプリカが属しているパーティション。 </p>
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    nameWithType: 'StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    fullName: 'microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    type: Constructor
    summary: |-
      <p>新たに作成<xref uid="microsoft.servicefabric.services.runtime._stateful_service" data-throw-if-not-resolved="false">StatefulService</xref>です。</p>
      <p></p>
    syntax:
      content: 'protected StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
      parameters:
        - id: serviceContext
          type: system.fabric._stateful_service_context
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref>サービス コンテキストをについて説明します。 </p>
        - id: stateProviderReplica
          type: microsoft.servicefabric.data._state_provider_replica
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">StateProviderReplica</xref>信頼性の高い状態プロバイダーの複製を表すです。 </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base
    parent: microsoft.servicefabric.services.runtime
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: StatefulServiceBase
    nameWithType: StatefulServiceBase
    fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
    type: Class
    summary: <p>ベースのステートフルな信頼性の高いサービスを Microsoft Service Fabric の基本クラスを表します。 </p>
    syntax:
      content: public class StatefulServiceBase
  - uid: microsoft.servicefabric.data._reliable_state_manager
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._reliable_state_manager.yml
    name: ReliableStateManager
    nameWithType: ReliableStateManager
    fullName: microsoft.servicefabric.data.ReliableStateManager
    type: Interface
    syntax:
      content: public interface ReliableStateManager
  - uid: system.fabric._stateful_service_context
    parent: system.fabric
    href: system.fabric._stateful_service_context.yml
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    type: Class
    syntax:
      content: public class StatefulServiceContext