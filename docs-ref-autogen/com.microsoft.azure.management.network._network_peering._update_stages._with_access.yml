### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.management.network._network_peering._update_stages._with_access
    id: _with_access
    parent: com.microsoft.azure.management.network
    children:
      - com.microsoft.azure.management.network._network_peering._update_stages._with_access.withAccessBetweenBothNetworks()
      - com.microsoft.azure.management.network._network_peering._update_stages._with_access.withoutAccessFromEitherNetwork()
    href: com.microsoft.azure.management.network._network_peering._update_stages._with_access.yml
    langs:
      - java
    name: NetworkPeering.UpdateStages.WithAccess
    nameWithType: NetworkPeering.UpdateStages.WithAccess
    fullName: com.microsoft.azure.management.network.NetworkPeering.UpdateStages.WithAccess
    type: Interface
    source:
      remote: &ref_0
        path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/NetworkPeering.java
        branch: v1.3.0
        repo: 'https://github.com/Azure/azure-sdk-for-java'
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/NetworkPeering.java
      startLine: 377
    package: com.microsoft.azure.management.network
    summary: <p><span data-ttu-id="39649-101">ネットワークのピアリングのステージからのアクセスを制御するか、およびリモート ネットワークに許可を更新します。</span><span class="sxs-lookup"><span data-stu-id="39649-101">The stage of a network peering update allowing to control access from and to the remote network.</span></span> </p>
    syntax:
      content: public interface WithAccess
  - uid: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withAccessBetweenBothNetworks()
    id: withAccessBetweenBothNetworks()
    parent: com.microsoft.azure.management.network._network_peering._update_stages._with_access
    href: com.microsoft.azure.management.network._network_peering._update_stages._with_access.yml
    langs:
      - java
    name: withAccessBetweenBothNetworks()
    nameWithType: NetworkPeering.UpdateStages.WithAccess.withAccessBetweenBothNetworks()
    fullName: Update com.microsoft.azure.management.network.NetworkPeering.UpdateStages.WithAccess.withAccessBetweenBothNetworks()
    overload: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withAccessBetweenBothNetworks*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/NetworkPeering.java
      startLine: 385
    package: com.microsoft.azure.management.network
    summary: |-
      <p><span data-ttu-id="39649-102">いずれかを他の仮想ネットワーク、ピアリングにアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="39649-102">Enables access to either peered virtual network from the other.</span></span> </p>
      <p><span data-ttu-id="39649-103">この設定は、リモート ネットワークが同じサブスクリプション内にある場合にのみ、リモート ネットワークへの影響があります。</span><span class="sxs-lookup"><span data-stu-id="39649-103">This setting will have effect on the remote network only if the remote network is in the same subscription.</span></span> <span data-ttu-id="39649-104">それ以外の場合は無視され、対応するアクセスを明示的にピアリングと一致するリモート ネットワークの設定を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39649-104">Otherwise, it will be ignored and you need to change the corresponding access setting on the remote network's matching peering explicitly.</span></span> </p>
    syntax:
      content: public Update withAccessBetweenBothNetworks()
      return:
        type: com.microsoft.azure.management.network._network_peering._update
        description: <p><span data-ttu-id="39649-105">更新プログラムの次のステージ</span><span class="sxs-lookup"><span data-stu-id="39649-105">the next stage of the update</span></span> </p>
  - uid: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withoutAccessFromEitherNetwork()
    id: withoutAccessFromEitherNetwork()
    parent: com.microsoft.azure.management.network._network_peering._update_stages._with_access
    href: com.microsoft.azure.management.network._network_peering._update_stages._with_access.yml
    langs:
      - java
    name: withoutAccessFromEitherNetwork()
    nameWithType: NetworkPeering.UpdateStages.WithAccess.withoutAccessFromEitherNetwork()
    fullName: Update com.microsoft.azure.management.network.NetworkPeering.UpdateStages.WithAccess.withoutAccessFromEitherNetwork()
    overload: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withoutAccessFromEitherNetwork*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/NetworkPeering.java
      startLine: 394
    package: com.microsoft.azure.management.network
    summary: |-
      <p><span data-ttu-id="39649-106">別のいずれかの peered ネットワークにアクセスを禁止します。</span><span class="sxs-lookup"><span data-stu-id="39649-106">Disallows access to either peered network from the other.</span></span> </p>
      <p><span data-ttu-id="39649-107">この設定は、リモート ネットワークが同じサブスクリプション内にある場合にのみ、リモート ネットワークへの影響があります。</span><span class="sxs-lookup"><span data-stu-id="39649-107">This setting will have effect on the remote network only if the remote network is in the same subscription.</span></span> <span data-ttu-id="39649-108">それ以外の場合は無視され、対応するアクセスを明示的にピアリングと一致するリモート ネットワークの設定を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39649-108">Otherwise, it will be ignored and you need to change the corresponding access setting on the remote network's matching peering explicitly.</span></span> </p>
    syntax:
      content: public Update withoutAccessFromEitherNetwork()
      return:
        type: com.microsoft.azure.management.network._network_peering._update
        description: <p><span data-ttu-id="39649-109">更新プログラムの次のステージ</span><span class="sxs-lookup"><span data-stu-id="39649-109">the next stage of the update</span></span> </p>
references:
  - uid: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withAccessBetweenBothNetworks*
    name: withAccessBetweenBothNetworks
    nameWithType: NetworkPeering.UpdateStages.WithAccess.withAccessBetweenBothNetworks
    fullName: Update com.microsoft.azure.management.network.NetworkPeering.UpdateStages.WithAccess.withAccessBetweenBothNetworks
    package: com.microsoft.azure.management.network
  - uid: com.microsoft.azure.management.network._network_peering._update_stages._with_access.withoutAccessFromEitherNetwork*
    name: withoutAccessFromEitherNetwork
    nameWithType: NetworkPeering.UpdateStages.WithAccess.withoutAccessFromEitherNetwork
    fullName: Update com.microsoft.azure.management.network.NetworkPeering.UpdateStages.WithAccess.withoutAccessFromEitherNetwork
    package: com.microsoft.azure.management.network
  - uid: com.microsoft.azure.management.network._network_peering._update
    parent: com.microsoft.azure.management.network
    href: com.microsoft.azure.management.network._network_peering._update.yml
    name: NetworkPeering.Update
    nameWithType: NetworkPeering.Update
    fullName: com.microsoft.azure.management.network.NetworkPeering.Update
    type: Interface
    summary: '<p><span data-ttu-id="39649-110">変更可能なすべての設定を含む、ロード バランサーの更新操作のテンプレートです。</span><span class="sxs-lookup"><span data-stu-id="39649-110">The template for a load balancer update operation, containing all the settings that can be modified.</span></span> </p>'
    syntax:
      content: 'public interface Update extends Appliable<NetworkPeering>,NetworkPeering.UpdateStages.WithTrafficForwarding,NetworkPeering.UpdateStages.WithAccess,NetworkPeering.UpdateStages.WithGatewayUse'