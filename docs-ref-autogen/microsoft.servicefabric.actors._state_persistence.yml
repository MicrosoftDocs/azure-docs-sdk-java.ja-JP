### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._state_persistence
    id: _state_persistence
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._state_persistence.None
      - microsoft.servicefabric.actors._state_persistence.Persisted
      - microsoft.servicefabric.actors._state_persistence.StatePersistence(int)
      - microsoft.servicefabric.actors._state_persistence.Volatile
    href: microsoft.servicefabric.actors._state_persistence.yml
    langs:
      - java
    name: StatePersistence
    nameWithType: StatePersistence
    fullName: microsoft.servicefabric.actors.StatePersistence
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
      startLine: 5
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="33511-101">アクター サービス用のアクター状態の格納方法を示します。</span><span class="sxs-lookup"><span data-stu-id="33511-101">Indicates how actor state is stored for an actor service.</span></span> </p>
    syntax:
      content: public enum StatePersistence
    inheritance:
      - java.lang.Object
      - java.lang.Enum<StatePersistence>
  - uid: microsoft.servicefabric.actors._state_persistence.None
    id: None
    parent: microsoft.servicefabric.actors._state_persistence
    href: microsoft.servicefabric.actors._state_persistence.yml
    langs:
      - java
    name: None
    nameWithType: StatePersistence.None
    fullName: microsoft.servicefabric.actors.StatePersistence.None
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
      startLine: 9
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="33511-102">アクターの状態が格納されることはありません。</span><span class="sxs-lookup"><span data-stu-id="33511-102">No state is stored for actor</span></span> </p>
    syntax:
      content: public None=(0)
  - uid: microsoft.servicefabric.actors._state_persistence.Persisted
    id: Persisted
    parent: microsoft.servicefabric.actors._state_persistence
    href: microsoft.servicefabric.actors._state_persistence.yml
    langs:
      - java
    name: Persisted
    nameWithType: StatePersistence.Persisted
    fullName: microsoft.servicefabric.actors.StatePersistence.Persisted
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
      startLine: 17
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"33511-103\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>状態が永続的な状態プロバイダーを使用してローカル ディスクに保存されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33511-103\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> state is persisted to local disk using a persistent state provider.</span></span> </p>"
    syntax:
      content: public Persisted=(2)
  - uid: microsoft.servicefabric.actors._state_persistence.StatePersistence(int)
    id: StatePersistence(int)
    parent: microsoft.servicefabric.actors._state_persistence
    href: microsoft.servicefabric.actors._state_persistence.yml
    langs:
      - java
    name: StatePersistence(int value)
    nameWithType: StatePersistence.StatePersistence(int value)
    fullName: microsoft.servicefabric.actors.StatePersistence.StatePersistence(int value)
    overload: microsoft.servicefabric.actors._state_persistence.StatePersistence*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
      startLine: 19
    package: microsoft.servicefabric.actors
    syntax:
      content: public StatePersistence(int value)
      parameters:
        - id: value
          type: f75371fa
  - uid: microsoft.servicefabric.actors._state_persistence.Volatile
    id: Volatile
    parent: microsoft.servicefabric.actors._state_persistence
    href: microsoft.servicefabric.actors._state_persistence.yml
    langs:
      - java
    name: Volatile
    nameWithType: StatePersistence.Volatile
    fullName: microsoft.servicefabric.actors.StatePersistence.Volatile
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/StatePersistence.java
      startLine: 13
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"33511-104\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>のみ、揮発性の状態プロバイダーを使用してメモリ内状態を保持します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33511-104\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> state is kept in-memory only using a volatile state provider.</span></span> </p>"
    syntax:
      content: public Volatile=(1)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.actors._state_persistence.StatePersistence*
    name: StatePersistence
    nameWithType: StatePersistence.StatePersistence
    fullName: microsoft.servicefabric.actors.StatePersistence.StatePersistence
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="33511-105">信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="33511-105">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor