### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.table._table_encryption_policy
    id: _table_encryption_policy
    parent: com.microsoft.azure.storage.table
    children:
      - com.microsoft.azure.storage.table._table_encryption_policy.getKey()
      - com.microsoft.azure.storage.table._table_encryption_policy.getKeyResolver()
      - com.microsoft.azure.storage.table._table_encryption_policy.keyResolver
      - com.microsoft.azure.storage.table._table_encryption_policy.keyWrapper
      - com.microsoft.azure.storage.table._table_encryption_policy.setKey(IKey)
      - com.microsoft.azure.storage.table._table_encryption_policy.setKeyResolver(IKeyResolver)
      - 'com.microsoft.azure.storage.table._table_encryption_policy.TableEncryptionPolicy(IKey,IKeyResolver)'
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: TableEncryptionPolicy
    nameWithType: TableEncryptionPolicy
    fullName: com.microsoft.azure.storage.table.TableEncryptionPolicy
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 47
    package: com.microsoft.azure.storage.table
    summary: <p><span data-ttu-id="9ed26-101">Azure テーブル エンティティのエンベロープの暗号化/復号化に使用されるテーブルの暗号化ポリシーを表します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-101">Represents a table encryption policy that is used to perform envelope encryption/decryption of Azure table entities.</span></span> </p>
    syntax: &ref_1
      content: public class TableEncryptionPolicy
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.getKey()
    id: getKey()
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: getKey()
    nameWithType: TableEncryptionPolicy.getKey()
    fullName: IKey com.microsoft.azure.storage.table.TableEncryptionPolicy.getKey()
    overload: com.microsoft.azure.storage.table._table_encryption_policy.getKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 83
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="9ed26-102">取得、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="9ed26-102">Gets the <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span></p>
      <p></p>
    syntax:
      content: public IKey getKey()
      return:
        type: com.microsoft.azure.keyvault.core._i_key
        description: <p><span data-ttu-id="9ed26-103"><xref uid="" data-throw-if-not-resolved="false">IKey</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9ed26-103">An <xref uid="" data-throw-if-not-resolved="false">IKey</xref> object.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.getKeyResolver()
    id: getKeyResolver()
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: getKeyResolver()
    nameWithType: TableEncryptionPolicy.getKeyResolver()
    fullName: IKeyResolver com.microsoft.azure.storage.table.TableEncryptionPolicy.getKeyResolver()
    overload: com.microsoft.azure.storage.table._table_encryption_policy.getKeyResolver*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 92
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="9ed26-104">使用して、適切なキーの既存のテーブル エンティティを復号化キーの競合回避モジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-104">Gets the key resolver used to select the correct key for decrypting existing table entities.</span></span></p>
      <p></p>
    syntax:
      content: public IKeyResolver getKeyResolver()
      return:
        type: com.microsoft.azure.keyvault.core._i_key_resolver
        description: <p><span data-ttu-id="9ed26-105">競合回避モジュールを返す、 <xref uid="" data-throw-if-not-resolved="false">SymmetricKey</xref>キー Id を指定します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-105">A resolver that returns an <xref uid="" data-throw-if-not-resolved="false">SymmetricKey</xref> given a keyId.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.keyResolver
    id: keyResolver
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: keyResolver
    nameWithType: TableEncryptionPolicy.keyResolver
    fullName: IKeyResolver com.microsoft.azure.storage.table.TableEncryptionPolicy.keyResolver
    type: Field
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 57
    package: com.microsoft.azure.storage.table
    summary: <p><span data-ttu-id="9ed26-106"><xref uid="" data-throw-if-not-resolved="false">IKeyResolver</xref>既存のテーブル エンティティを解読するための正しいキーを選択するために使用します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-106">The <xref uid="" data-throw-if-not-resolved="false">IKeyResolver</xref> used to select the correct key for decrypting existing table entities.</span></span> </p>
    syntax:
      content: public IKeyResolver keyResolver
      return:
        type: com.microsoft.azure.keyvault.core._i_key_resolver
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.keyWrapper
    id: keyWrapper
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: keyWrapper
    nameWithType: TableEncryptionPolicy.keyWrapper
    fullName: IKey com.microsoft.azure.storage.table.TableEncryptionPolicy.keyWrapper
    type: Field
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 52
    package: com.microsoft.azure.storage.table
    summary: <p><span data-ttu-id="9ed26-107">型のオブジェクト<xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="9ed26-107">An object of type <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span> </p>
    syntax:
      content: public IKey keyWrapper
      return:
        type: com.microsoft.azure.keyvault.core._i_key
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.setKey(IKey)
    id: setKey(IKey)
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: setKey(IKey key)
    nameWithType: TableEncryptionPolicy.setKey(IKey key)
    fullName: void com.microsoft.azure.storage.table.TableEncryptionPolicy.setKey(IKey key)
    overload: com.microsoft.azure.storage.table._table_encryption_policy.setKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 102
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="9ed26-108">セット、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>ラップ/ラップ解除コンテンツ キーの暗号化中に使用されます。</span><span class="sxs-lookup"><span data-stu-id="9ed26-108">Sets the <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content key during encryption.</span></span></p>
      <p></p>
    syntax:
      content: public void setKey(IKey key)
      parameters:
        - id: key
          type: com.microsoft.azure.keyvault.core._i_key
          description: <p><span data-ttu-id="9ed26-109"><xref uid="" data-throw-if-not-resolved="false">IKey</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9ed26-109">An <xref uid="" data-throw-if-not-resolved="false">IKey</xref> object.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.setKeyResolver(IKeyResolver)
    id: setKeyResolver(IKeyResolver)
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: setKeyResolver(IKeyResolver keyResolver)
    nameWithType: TableEncryptionPolicy.setKeyResolver(IKeyResolver keyResolver)
    fullName: void com.microsoft.azure.storage.table.TableEncryptionPolicy.setKeyResolver(IKeyResolver keyResolver)
    overload: com.microsoft.azure.storage.table._table_encryption_policy.setKeyResolver*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 112
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="9ed26-110">使用して、適切なキーの既存のテーブル エンティティを復号化キーの競合回避モジュールを設定します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-110">Sets the key resolver used to select the correct key for decrypting existing table entities.</span></span></p>
      <p></p>
    syntax:
      content: public void setKeyResolver(IKeyResolver keyResolver)
      parameters:
        - id: keyResolver
          type: com.microsoft.azure.keyvault.core._i_key_resolver
          description: <p><span data-ttu-id="9ed26-111">競合回避モジュールを返す、 <xref uid="" data-throw-if-not-resolved="false">IKey</xref>キー Id を指定します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-111">A resolver that returns an <xref uid="" data-throw-if-not-resolved="false">IKey</xref> given a keyId.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._table_encryption_policy.TableEncryptionPolicy(IKey,IKeyResolver)'
    id: 'TableEncryptionPolicy(IKey,IKeyResolver)'
    parent: com.microsoft.azure.storage.table._table_encryption_policy
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    langs:
      - java
    name: 'TableEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    nameWithType: 'TableEncryptionPolicy.TableEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    fullName: 'com.microsoft.azure.storage.table.TableEncryptionPolicy.TableEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
    overload: com.microsoft.azure.storage.table._table_encryption_policy.TableEncryptionPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEncryptionPolicy.java
      startLine: 73
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="9ed26-112">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false">TableEncryptionPolicy</xref>クラスを指定したキーとの競合回避モジュールを使用します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-112">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table._table_encryption_policy" data-throw-if-not-resolved="false">TableEncryptionPolicy</xref> class with the specified key and resolver.</span></span> </p>
      <p><span data-ttu-id="9ed26-113">生成されたポリシーは、暗号化に使用するためのもので、ユーザーは予想される場合に、少なくともキーを提供します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-113">If the generated policy is intended to be used for encryption, users are expected to provide a key at the minimum.</span></span> <span data-ttu-id="9ed26-114">キーがない場合に、暗号化中にスローされる例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-114">The absence of key will cause an exception to be thrown during encryption.</span></span> <span data-ttu-id="9ed26-115">生成されたポリシーを復号化に使用する場合は、ユーザーは、keyResolver を指定できます。</span><span class="sxs-lookup"><span data-stu-id="9ed26-115">If the generated policy is intended to be used for decryption, users can provide a keyResolver.</span></span> <span data-ttu-id="9ed26-116">クライアント ライブラリが - 1。</span><span class="sxs-lookup"><span data-stu-id="9ed26-116">The client library will - 1.</span></span> <span data-ttu-id="9ed26-117">キーを取得する指定した場合は、キーの競合回避モジュールを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-117">Invoke the key resolver if specified to get the key.</span></span> <span data-ttu-id="9ed26-118">手順 2.</span><span class="sxs-lookup"><span data-stu-id="9ed26-118">2.</span></span> <span data-ttu-id="9ed26-119">競合回避モジュールが指定されていませんが、キーが指定されて、キーのキーの id と一致しを使用します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-119">If resolver is not specified but a key is specified, match the key id on the key and use it.</span></span></p>
      <p></p>
    syntax:
      content: 'public TableEncryptionPolicy(IKey key, IKeyResolver keyResolver)'
      parameters:
        - id: key
          type: com.microsoft.azure.keyvault.core._i_key
          description: <p><span data-ttu-id="9ed26-120">型のオブジェクト<xref uid="" data-throw-if-not-resolved="false">IKey</xref>コンテンツ暗号化キーをラップ/ラップ解除するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="9ed26-120">An object of type <xref uid="" data-throw-if-not-resolved="false">IKey</xref> that is used to wrap/unwrap the content encryption key.</span></span> </p>
        - id: keyResolver
          type: com.microsoft.azure.keyvault.core._i_key_resolver
          description: <p><span data-ttu-id="9ed26-121">キーの競合回避モジュールを既存のテーブル エンティティを解読するための正しいキーを選択します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-121">The key resolver used to select the correct key for decrypting existing table entities.</span></span> </p>
references:
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.TableEncryptionPolicy*
    name: TableEncryptionPolicy
    nameWithType: TableEncryptionPolicy.TableEncryptionPolicy
    fullName: com.microsoft.azure.storage.table.TableEncryptionPolicy.TableEncryptionPolicy
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.getKey*
    name: getKey
    nameWithType: TableEncryptionPolicy.getKey
    fullName: IKey com.microsoft.azure.storage.table.TableEncryptionPolicy.getKey
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.getKeyResolver*
    name: getKeyResolver
    nameWithType: TableEncryptionPolicy.getKeyResolver
    fullName: IKeyResolver com.microsoft.azure.storage.table.TableEncryptionPolicy.getKeyResolver
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.setKey*
    name: setKey
    nameWithType: TableEncryptionPolicy.setKey
    fullName: void com.microsoft.azure.storage.table.TableEncryptionPolicy.setKey
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_encryption_policy.setKeyResolver*
    name: setKeyResolver
    nameWithType: TableEncryptionPolicy.setKeyResolver
    fullName: void com.microsoft.azure.storage.table.TableEncryptionPolicy.setKeyResolver
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.keyvault.core._i_key
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    summary: <p><span data-ttu-id="9ed26-122">Microsoft Azure Key Vault ライブラリと暗号化キーを表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="9ed26-122">Interface for representing cryptographic keys with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKey
  - uid: com.microsoft.azure.keyvault.core._i_key_resolver
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key_resolver.yml
    name: IKeyResolver
    nameWithType: IKeyResolver
    fullName: com.microsoft.azure.keyvault.core.IKeyResolver
    type: Interface
    summary: <p><span data-ttu-id="9ed26-123">Microsoft Azure Key Vault のライブラリを含むキーの解決操作を表すためのインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="9ed26-123">Interface for representing key resolving operations with the Microsoft Azure Key Vault libraries.</span></span> </p>
    syntax:
      content: public interface IKeyResolver
  - uid: com.microsoft.azure.storage.table._table_encryption_policy
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_encryption_policy.yml
    name: TableEncryptionPolicy
    nameWithType: TableEncryptionPolicy
    fullName: com.microsoft.azure.storage.table.TableEncryptionPolicy
    type: Class
    summary: <p><span data-ttu-id="9ed26-124">Azure テーブル エンティティのエンベロープの暗号化/復号化に使用されるテーブルの暗号化ポリシーを表します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-124">Represents a table encryption policy that is used to perform envelope encryption/decryption of Azure table entities.</span></span> </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.table._entity_property
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._entity_property.yml
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    type: Class
    summary: "<p><span data-ttu-id=\"9ed26-125\">テーブル エンティティの単一の型指定されたプロパティ値を表すクラス。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-125\">A class which represents a single typed property value in a table entity.</span></span> <span data-ttu-id=\"9ed26-126\"><xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>ストアのデータ型として、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-126\">An <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>.</span></span> <span data-ttu-id=\"9ed26-127\">可能性のあるオブジェクトの型がプリミティブ型ではなく、値がシリアル化およびとして格納されている、します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-127\">The value, which may be  for object types, but not for primitive types, is serialized and stored as a .</span></span> </p>\n<p><span data-ttu-id=\"9ed26-128\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>のサポートされている値の型のオーバー ロードされたコンス トラクターとメソッドのオーバー ロードを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-128\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> provides overloaded constructors and overloads of the  method for supported value types.</span></span> <span data-ttu-id=\"9ed26-129\">コンス トラクターまたはメソッドのセットの各オーバー ロードされた、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>とパラメーターの型に基づいて、適切な値をシリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-129\">Each overloaded constructor or  method sets the <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> and serializes the value appropriately based on the parameter type.</span></span> </p>\n\n<p><span data-ttu-id=\"9ed26-130\">いずれかを使用して、<em>型</em>逆シリアル化する方法、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>として適切な Java の型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-130\">Use one of the <em>Type</em> methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as the appropriate Java type.</span></span> <span data-ttu-id=\"9ed26-131\">メソッドがスローされます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref>場合、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> Java の型として逆シリアル化することはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9ed26-131\">The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> if the <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> cannot be deserialized as the Java type.</span></span> </p>"
    syntax:
      content: public class EntityProperty
  - uid: com.microsoft.azure.storage.table._table_request_options._encryption_resolver
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_request_options._encryption_resolver.yml
    name: TableRequestOptions.EncryptionResolver
    nameWithType: TableRequestOptions.EncryptionResolver
    fullName: com.microsoft.azure.storage.table.TableRequestOptions.EncryptionResolver
    type: Interface
    summary: '<p><span data-ttu-id="9ed26-132">プロパティを暗号化するか、パーティション キー、行キー、およびプロパティの名前を付与しないかどうかを示す値を取得する関数が使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="9ed26-132">The interface whose function is used to get the value indicating whether a property should be encrypted or not given the partition key, row key, and the property name.</span></span> </p>'
    syntax:
      content: public interface EncryptionResolver
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p><span data-ttu-id="9ed26-133">Microsoft Azure ストレージ サービスの例外を表します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-133">Represents an exception for the Microsoft Azure storage service.</span></span> </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.core._encryption_data
    parent: com.microsoft.azure.storage.core
    href: com.microsoft.azure.storage.core._encryption_data.yml
    name: EncryptionData
    nameWithType: EncryptionData
    fullName: com.microsoft.azure.storage.core.EncryptionData
    type: Class
    summary: <p><span data-ttu-id="9ed26-134">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="9ed26-134">RESERVED FOR INTERNAL USE.</span></span> <span data-ttu-id="9ed26-135">サービスに格納されている暗号化データを表します。</span><span class="sxs-lookup"><span data-stu-id="9ed26-135">Represents the encryption data that is stored on the service.</span></span> </p>
    syntax:
      content: public class EncryptionData