### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    id: _https_request
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    children:
      - com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest()
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest(URL,HttpsMethod,byte [])'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_request.send()
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField(String,String)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis(int)
      - com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext(SSLContext)
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: HttpsRequest
    nameWithType: HttpsRequest
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 16
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: <p>HTTPS 要求します。 </p>
    syntax: &ref_1
      content: public class HttpsRequest
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest()
    id: HttpsRequest()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: HttpsRequest()
    nameWithType: HttpsRequest.HttpsRequest()
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 137
    package: com.microsoft.azure.sdk.iot.device.transport.https
    syntax:
      content: protected HttpsRequest()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest(URL,HttpsMethod,byte [])'
    id: 'HttpsRequest(URL,HttpsMethod,byte [])'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: 'HttpsRequest(URL url, HttpsMethod method, byte[] body)'
    nameWithType: 'HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 35
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>コンス トラクターです。 引数として URL を受け取り、送信する準備が整っている HTTPS 要求を返します。</p>
      <p></p>
    syntax:
      content: 'public HttpsRequest(URL url, HttpsMethod method, byte[] body)'
      parameters:
        - id: url
          type: a891b3e6
          description: <p>要求の URL です。 </p>
        - id: method
          type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
          description: <p>HTTPS 要求メソッド (GET)。 </p>
        - id: body
          type: ccd9418d
          description: <p>要求の本文。 サイズが 0 の場合は、要求メソッドの配列を取得するか、削除する必要があります。</p>
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、HTTPS 接続の設定で IOException が発生します。 </p>
      - type: 3c87bd19
        description: <p>指定されたエンドポイントでは、HTTPS プロトコルを使用しません。 場合、 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send()
    id: send()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: send()
    nameWithType: HttpsRequest.send()
    fullName: HttpsResponse com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 55
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>HTTPS 要求を実行します。</p>
      <p></p>
    syntax:
      content: public HttpsResponse send()
      return:
        type: com.microsoft.azure.sdk.iot.device.transport.https._https_response
        description: <p>HTTPS 応答します。</p>
    exceptions:
      - type: cbf33bbe
        description: <p>接続を確立できませんでした、または入力/出力ストリームにアクセスできませんでした。 場合、 </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField(String,String)'
    id: 'setHeaderField(String,String)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: 'setHeaderField(String field, String value)'
    nameWithType: 'HttpsRequest.setHeaderField(String field, String value)'
    fullName: 'HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(String field, String value)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 101
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>ヘッダー フィールドを指定した値に設定します。</p>
      <p></p>
    syntax:
      content: 'public HttpsRequest setHeaderField(String field, String value)'
      parameters:
        - id: field
          type: '26831127'
          description: <p>ヘッダー フィールド名です。 </p>
        - id: value
          type: '26831127'
          description: <p>ヘッダー フィールドの値。</p>
      return:
        type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
        description: <p>fluent 設定できません。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis(int)
    id: setReadTimeoutMillis(int)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: setReadTimeoutMillis(int timeout)
    nameWithType: HttpsRequest.setReadTimeoutMillis(int timeout)
    fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeoutMillis(int timeout)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 117
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>要求のミリ秒単位で読み取りのタイムアウトを設定します。 読み取りのタイムアウトは、サーバーは要求を受信後し、サーバーが返されるデータを送信する前に、(ミリ秒) の数です。</p>
      <p></p>
    syntax:
      content: public HttpsRequest setReadTimeoutMillis(int timeout)
      parameters:
        - id: timeout
          type: f75371fa
          description: <p>読み取りのタイムアウト。</p>
      return:
        type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
        description: <p>fluent 設定できません。 </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext(SSLContext)
    id: setSSLContext(SSLContext)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    langs:
      - java
    name: setSSLContext(SSLContext sslContext)
    nameWithType: HttpsRequest.setSSLContext(SSLContext sslContext)
    fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(SSLContext sslContext)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsRequest.java
      startLine: 124
    package: com.microsoft.azure.sdk.iot.device.transport.https
    syntax:
      content: public HttpsRequest setSSLContext(SSLContext sslContext)
      parameters:
        - id: sslContext
          type: 13e89c07
      return:
        type: com.microsoft.azure.sdk.iot.device.transport.https._https_request
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: a891b3e6
    spec.java:
      - name: URL
        fullName: URL
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.HttpsRequest*
    name: HttpsRequest
    nameWithType: HttpsRequest.HttpsRequest
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.send*
    name: send
    nameWithType: HttpsRequest.send
    fullName: HttpsResponse com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setHeaderField*
    name: setHeaderField
    nameWithType: HttpsRequest.setHeaderField
    fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setReadTimeoutMillis*
    name: setReadTimeoutMillis
    nameWithType: HttpsRequest.setReadTimeoutMillis
    fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeoutMillis
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 13e89c07
    spec.java:
      - name: SSLContext
        fullName: SSLContext
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request.setSSLContext*
    name: setSSLContext
    nameWithType: HttpsRequest.setSSLContext
    fullName: HttpsRequest com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    name: HttpsConnection
    nameWithType: HttpsConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
    type: Class
    summary: |-
      <p>Java SE クラスのラッパー <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>です。 モック フレームワーク JMockit でテストするときに、互換性の問題を回避するだけでなく HttpsURLConnection を使用する場合は、いくつかドキュメントに未記載の副作用を回避するために使用します。 </p>
      <p>基になる<xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>は Java によって透過的に管理します。 時間ごとに、接続を再利用する<xref uid="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false">connect()</xref>が呼び出されると、入力ストリーム (入力ストリームまたは入力ストリームにアクセスできない場合、エラー ストリーム) を完全に読み取る必要があります。 それ以外の場合、データはストリームとの接続では再利用可能なできません。 </p>
    syntax:
      content: public class HttpsConnection
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_method
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_method.yml
    name: HttpsMethod
    nameWithType: HttpsMethod
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
    type: Enum
    summary: <p>HTTPS 要求メソッド (GET)。 </p>
    syntax:
      content: public enum HttpsMethod
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_response
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_response.yml
    name: HttpsResponse
    nameWithType: HttpsResponse
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
    type: Class
    summary: <p>HTTPS 応答します。 (存在する場合)、ステータス コード、本文、ヘッダー フィールド、およびエラーの原因が含まれています。 </p>
    syntax:
      content: public class HttpsResponse
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_request
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_request.yml
    name: HttpsRequest
    nameWithType: HttpsRequest
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
    type: Class
    summary: <p>HTTPS 要求します。 </p>
    syntax: *ref_1