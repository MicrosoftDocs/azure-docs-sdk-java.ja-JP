### YamlMime:ManagedReference
items:
  - uid: system.fabric._service_partition_resolution_change_handler
    id: _service_partition_resolution_change_handler
    parent: system.fabric
    children:
      - 'system.fabric._service_partition_resolution_change_handler.onChange(FabricClient,long,ResolvedServicePartition)'
    href: system.fabric._service_partition_resolution_change_handler.yml
    langs:
      - java
    name: ServicePartitionResolutionChangeHandler
    nameWithType: ServicePartitionResolutionChangeHandler
    fullName: system.fabric.ServicePartitionResolutionChangeHandler
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandler.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandler.java
      startLine: 2
    package: system.fabric
    syntax:
      content: public interface ServicePartitionResolutionChangeHandler
  - uid: 'system.fabric._service_partition_resolution_change_handler.onChange(FabricClient,long,ResolvedServicePartition)'
    id: 'onChange(FabricClient,long,ResolvedServicePartition)'
    parent: system.fabric._service_partition_resolution_change_handler
    href: system.fabric._service_partition_resolution_change_handler.yml
    langs:
      - java
    name: 'onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)'
    nameWithType: 'ServicePartitionResolutionChangeHandler.onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)'
    fullName: 'void system.fabric.ServicePartitionResolutionChangeHandler.onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)'
    overload: system.fabric._service_partition_resolution_change_handler.onChange*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandler.java
      startLine: 14
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="0f83a-101">ハンドラー メソッドを使用して、onChange が呼び出されるときに実行するには、どのような操作を指定するクラスを実装することでは上書きします。</span><span class="sxs-lookup"><span data-stu-id="0f83a-101">Handler method to be overriden by implementing class to specify what operation(s) to perform when onChange gets called.</span></span></p>
      <p></p>
    syntax:
      content: 'public void onChange(FabricClient fClient, long handlerId, ResolvedServicePartition partitionPtr)'
      parameters:
        - id: fClient
          type: system.fabric._fabric_client
          description: '<p><span data-ttu-id="0f83a-102">: <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">FabricClient</xref></span><span class="sxs-lookup"><span data-stu-id="0f83a-102">: <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">FabricClient</xref></span></span></p>'
        - id: handlerId
          type: 0364520f
          description: '<p><span data-ttu-id="0f83a-103">。 ServicePartitionResolutionChange ハンドラーの id</span><span class="sxs-lookup"><span data-stu-id="0f83a-103">: Id for ServicePartitionResolutionChange Handler</span></span> </p>'
        - id: partitionPtr
          type: system.fabric._resolved_service_partition
          description: '<p><span data-ttu-id="0f83a-104">: <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">ResolvedServicePartition</xref></span><span class="sxs-lookup"><span data-stu-id="0f83a-104">: <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">ResolvedServicePartition</xref></span></span></p>'
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._service_partition_resolution_change_handler.onChange*
    name: onChange
    nameWithType: ServicePartitionResolutionChangeHandler.onChange
    fullName: void system.fabric.ServicePartitionResolutionChangeHandler.onChange
    package: system.fabric
  - uid: system.fabric._fabric_client
    parent: system.fabric
    href: system.fabric._fabric_client.yml
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    summary: "<p><span data-ttu-id=\"0f83a-105\">作成し、Service Fabric サービスとその他のエンティティを管理します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f83a-105\">Creates and manages Service Fabric services and other entities.</span></span> </p>\n<p><span data-ttu-id=\"0f83a-106\">\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f83a-106\">\r\n\r\n  <b>Remarks:</b>It is highly recommended that you share FabricClients as much as possible.</span></span> <span data-ttu-id=\"0f83a-107\">これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f83a-107\">This is because the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise.</span></span> </p>"
    syntax:
      content: public class FabricClient
  - uid: system.fabric._resolved_service_partition
    parent: system.fabric
    href: system.fabric._resolved_service_partition.yml
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: system.fabric.ResolvedServicePartition
    type: Class
    summary: |-
      <p><span data-ttu-id="0f83a-108">指定したサービス パーティションがリッスンするエンドポイントの設定でパーティション分割情報が含まれるデータ構造を表します。</span><span class="sxs-lookup"><span data-stu-id="0f83a-108">Represents a data structure that contains information on the partitioning and set of endpoints to which the specified Service partition listens.</span></span></p>
      <p></p>
    syntax:
      content: public class ResolvedServicePartition