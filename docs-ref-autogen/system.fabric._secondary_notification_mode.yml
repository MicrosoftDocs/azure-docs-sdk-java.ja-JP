### YamlMime:ManagedReference
items:
  - uid: system.fabric._secondary_notification_mode
    id: _secondary_notification_mode
    parent: system.fabric
    children:
      - system.fabric._secondary_notification_mode.BlockSecondaryAck
      - system.fabric._secondary_notification_mode.get(int)
      - system.fabric._secondary_notification_mode.getValue()
      - system.fabric._secondary_notification_mode.Invalid
      - system.fabric._secondary_notification_mode.NonBlockingQuorumAcked
      - system.fabric._secondary_notification_mode.None
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: SecondaryNotificationMode
    nameWithType: SecondaryNotificationMode
    fullName: system.fabric.SecondaryNotificationMode
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 14
    package: system.fabric
    summary: '<p>セカンダリの通知を指定します、 <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>の目的の動作について説明しますと<xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation (java.util.Enumeration)</xref>有効になっている場合。 </p>'
    syntax: &ref_1
      content: public enum SecondaryNotificationMode
    inheritance:
      - java.lang.Object
      - java.lang.Enum<SecondaryNotificationMode>
  - uid: system.fabric._secondary_notification_mode.BlockSecondaryAck
    id: BlockSecondaryAck
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: BlockSecondaryAck
    nameWithType: SecondaryNotificationMode.BlockSecondaryAck
    fullName: system.fabric.SecondaryNotificationMode.BlockSecondaryAck
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 35
    package: system.fabric
    summary: '<p>セカンダリ レプリカに適用またはされませんまでレプリケーション操作の確認、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>コールバック メソッドを返します。 </p>'
    syntax:
      content: public BlockSecondaryAck=(3)
  - uid: system.fabric._secondary_notification_mode.get(int)
    id: get(int)
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: get(int value)
    nameWithType: SecondaryNotificationMode.get(int value)
    fullName: static SecondaryNotificationMode system.fabric.SecondaryNotificationMode.get(int value)
    overload: system.fabric._secondary_notification_mode.get*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 47
    package: system.fabric
    syntax:
      content: public static SecondaryNotificationMode get(int value)
      parameters:
        - id: value
          type: f75371fa
      return:
        type: system.fabric._secondary_notification_mode
  - uid: system.fabric._secondary_notification_mode.getValue()
    id: getValue()
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: getValue()
    nameWithType: SecondaryNotificationMode.getValue()
    fullName: int system.fabric.SecondaryNotificationMode.getValue()
    overload: system.fabric._secondary_notification_mode.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 43
    package: system.fabric
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: system.fabric._secondary_notification_mode.Invalid
    id: Invalid
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: Invalid
    nameWithType: SecondaryNotificationMode.Invalid
    fullName: system.fabric.SecondaryNotificationMode.Invalid
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 16
    package: system.fabric
    summary: <p>無効な通知モードです。 将来使用するために予約されています。 </p>
    syntax:
      content: public Invalid=(0)
  - uid: system.fabric._secondary_notification_mode.NonBlockingQuorumAcked
    id: NonBlockingQuorumAcked
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: NonBlockingQuorumAcked
    nameWithType: SecondaryNotificationMode.NonBlockingQuorumAcked
    fullName: system.fabric.SecondaryNotificationMode.NonBlockingQuorumAcked
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 29
    package: system.fabric
    summary: '<p>セカンダリ レプリカは既に適用してレプリケーション操作を確認して可能性があるときに、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>コールバック メソッドが呼び出されます。 </p>'
    syntax:
      content: public NonBlockingQuorumAcked=(2)
  - uid: system.fabric._secondary_notification_mode.None
    id: None
    parent: system.fabric._secondary_notification_mode
    href: system.fabric._secondary_notification_mode.yml
    langs:
      - java
    name: None
    nameWithType: SecondaryNotificationMode.None
    fullName: system.fabric.SecondaryNotificationMode.None
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/SecondaryNotificationMode.java
      startLine: 23
    package: system.fabric
    summary: '<p>セカンダリの通知が無効になります。 どちらも<xref uid="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onCopyComplete(KeyValueStoreEnumerator)</xref>も<xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</xref>されます呼び出されます。 </p>'
    syntax:
      content: public None=(1)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: system.fabric._secondary_notification_mode.getValue*
    name: getValue
    nameWithType: SecondaryNotificationMode.getValue
    fullName: int system.fabric.SecondaryNotificationMode.getValue
    package: system.fabric
  - uid: system.fabric._secondary_notification_mode.get*
    name: get
    nameWithType: SecondaryNotificationMode.get
    fullName: static SecondaryNotificationMode system.fabric.SecondaryNotificationMode.get
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onCopyComplete(KeyValueStoreEnumerator enumerator)
    nameWithType: KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    type: Method
    summary: "<p>プライマリからのビルドが完了したら、レプリケーション操作の適用を開始する準備が整いましたときに、セカンダリ レプリカで、システムによって呼び出されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>、 <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">system.fabric.KeyValueStoreEnumerator</xref>オブジェクトは、レプリケーション操作が適用される前にこのメソッドのコンテキスト内で、セカンダリ上のデータの読み取りに使用できます。 <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトが正しく不要になった後、このメソッドを返し、このメソッドのコンテキストの外部で使用することはできません。 アプリケーションは、レプリケーション操作が、セカンダリ レプリカでキューに登録されているが、このメソッドが戻るまでに適用されるを取得するには開始されませんので、適切なタイミングでこのコールバックを完了する注意する必要があります。 <xref uid=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\">System.fabric.KeyValueStoreEnumerator</xref>オブジェクトは 1 つの基になるローカル トランザクションによってバックアップされ、スレッド セーフではありません。 </p>"
    syntax:
      content: protected void onCopyComplete(KeyValueStoreEnumerator enumerator)
      parameters:
        - id: enumerator
          type: system.fabric._key_value_store_enumerator
          description: <p>セカンダリ上のデータの読み取りに使用される列挙子。 </p>
  - uid: system.fabric._secondary_notification_mode
    parent: system.fabric
    href: system.fabric._secondary_notification_mode.yml
    name: SecondaryNotificationMode
    nameWithType: SecondaryNotificationMode
    fullName: system.fabric.SecondaryNotificationMode
    type: Enum
    summary: '<p>セカンダリの通知を指定します、 <xref uid="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica</xref>の目的の動作について説明しますと<xref uid="" data-throw-if-not-resolved="false">system.fabric.KeyValueStoreReplica#onReplicationOperation (java.util.Enumeration)</xref>有効になっている場合。 </p>'
    syntax: *ref_1
  - uid: system.fabric._key_value_store_replica
    parent: system.fabric
    href: system.fabric._key_value_store_replica.yml
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica
    type: Class
    summary: <p>」のサービスのライターに、レプリケートされたトランザクション関連のデータ記憶域を提供"任意の Service Fabric サービスに統合するための準備ができています。 </p>
    syntax:
      content: public class KeyValueStoreReplica implements StatefulServiceReplica