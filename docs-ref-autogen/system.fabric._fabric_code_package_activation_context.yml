### YamlMime:ManagedReference
items:
  - uid: system.fabric._fabric_code_package_activation_context
    id: _fabric_code_package_activation_context
    parent: system.fabric
    children:
      - system.fabric._fabric_code_package_activation_context.close()
      - system.fabric._fabric_code_package_activation_context.create()
      - system.fabric._fabric_code_package_activation_context.getApplicationName()
      - system.fabric._fabric_code_package_activation_context.getApplicationPrincipals()
      - system.fabric._fabric_code_package_activation_context.getApplicationTypeName()
      - system.fabric._fabric_code_package_activation_context.getCodeActivationContextPtr()
      - system.fabric._fabric_code_package_activation_context.getCodePackageAddedEvent()
      - system.fabric._fabric_code_package_activation_context.getCodePackageModifiedEvent()
      - system.fabric._fabric_code_package_activation_context.getCodePackageName()
      - system.fabric._fabric_code_package_activation_context.getCodePackageNames()
      - system.fabric._fabric_code_package_activation_context.getCodePackageObject(String)
      - system.fabric._fabric_code_package_activation_context.getCodePackageRemovedEvent()
      - system.fabric._fabric_code_package_activation_context.getCodePackageVersion()
      - system.fabric._fabric_code_package_activation_context.getConfigurationPackageAddedEvent()
      - system.fabric._fabric_code_package_activation_context.getConfigurationPackageModifiedEvent()
      - system.fabric._fabric_code_package_activation_context.getConfigurationPackageNames()
      - system.fabric._fabric_code_package_activation_context.getConfigurationPackageObject(String)
      - system.fabric._fabric_code_package_activation_context.getConfigurationPackageRemovedEvent()
      - system.fabric._fabric_code_package_activation_context.getContextId()
      - system.fabric._fabric_code_package_activation_context.getDataPackageAddedEvent()
      - system.fabric._fabric_code_package_activation_context.getDataPackageModifiedEvent()
      - system.fabric._fabric_code_package_activation_context.getDataPackageNames()
      - system.fabric._fabric_code_package_activation_context.getDataPackageObject(String)
      - system.fabric._fabric_code_package_activation_context.getDataPackageRemovedEvent()
      - system.fabric._fabric_code_package_activation_context.getEndpoint(String)
      - system.fabric._fabric_code_package_activation_context.getEndpoints()
      - system.fabric._fabric_code_package_activation_context.getLogDirectory()
      - system.fabric._fabric_code_package_activation_context.getServiceManifestName()
      - system.fabric._fabric_code_package_activation_context.getServiceManifestVersion()
      - system.fabric._fabric_code_package_activation_context.getServiceTypes()
      - system.fabric._fabric_code_package_activation_context.getTempDirectory()
      - system.fabric._fabric_code_package_activation_context.getWorkDirectory()
      - system.fabric._fabric_code_package_activation_context.reportApplicationHealth(HealthInformation)
      - system.fabric._fabric_code_package_activation_context.reportDeployedApplicationHealth(HealthInformation)
      - system.fabric._fabric_code_package_activation_context.reportDeployedServicePackageHealth(HealthInformation)
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: FabricCodePackageActivationContext
    nameWithType: FabricCodePackageActivationContext
    fullName: system.fabric.FabricCodePackageActivationContext
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 22
    package: system.fabric
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax: &ref_1
      content: public class FabricCodePackageActivationContext implements CodePackageActivationContext
    inheritance:
      - java.lang.Object
      - AutoCloseable
      - system.fabric._code_package_activation_context
  - uid: system.fabric._fabric_code_package_activation_context.close()
    id: close()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: close()
    nameWithType: FabricCodePackageActivationContext.close()
    fullName: void system.fabric.FabricCodePackageActivationContext.close()
    overload: system.fabric._fabric_code_package_activation_context.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 390
    package: system.fabric
    summary: <p>このオブジェクトによって保持されているリソースをクリーンアップします。 1) Unregisters コード、構成、およびデータは、ハンドラーを変更します。 2) コード、構成およびデータのブローカーのネイティブ ポインターを解放します。 3) リリース CodeActivationContext ネイティブ ポインターです。 </p>
    syntax:
      content: public void close()
  - uid: system.fabric._fabric_code_package_activation_context.create()
    id: create()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: create()
    nameWithType: FabricCodePackageActivationContext.create()
    fullName: static FabricCodePackageActivationContext system.fabric.FabricCodePackageActivationContext.create()
    overload: system.fabric._fabric_code_package_activation_context.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 244
    package: system.fabric
    syntax:
      content: public static FabricCodePackageActivationContext create()
      return:
        type: system.fabric._fabric_code_package_activation_context
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationName()
    id: getApplicationName()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: FabricCodePackageActivationContext.getApplicationName()
    fullName: String system.fabric.FabricCodePackageActivationContext.getApplicationName()
    overload: system.fabric._fabric_code_package_activation_context.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 187
    package: system.fabric
    summary: |-
      <p>アプリケーションの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p>アプリケーションの名前です。 </p>
    overridden: system.fabric._code_package_activation_context.getApplicationName()
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationPrincipals()
    id: getApplicationPrincipals()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getApplicationPrincipals()
    nameWithType: FabricCodePackageActivationContext.getApplicationPrincipals()
    fullName: ApplicationPrincipalsDescription system.fabric.FabricCodePackageActivationContext.getApplicationPrincipals()
    overload: system.fabric._fabric_code_package_activation_context.getApplicationPrincipals*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 269
    package: system.fabric
    summary: |-
      <p>アプリケーション マニフェストで定義されているすべてのプリンシパルを取得します。</p>
      <p></p>
    syntax:
      content: public ApplicationPrincipalsDescription getApplicationPrincipals()
      return:
        type: system.fabric._application_principals_description
        description: <p>アプリケーション マニフェストで定義されているプリンシパル。 </p>
    overridden: system.fabric._code_package_activation_context.getApplicationPrincipals()
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationTypeName()
    id: getApplicationTypeName()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getApplicationTypeName()
    nameWithType: FabricCodePackageActivationContext.getApplicationTypeName()
    fullName: String system.fabric.FabricCodePackageActivationContext.getApplicationTypeName()
    overload: system.fabric._fabric_code_package_activation_context.getApplicationTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 196
    package: system.fabric
    summary: |-
      <p>アプリケーションの種類の名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getApplicationTypeName()
      return:
        type: '26831127'
        description: <p>アプリケーションの種類名。 </p>
    overridden: system.fabric._code_package_activation_context.getApplicationTypeName()
  - uid: system.fabric._fabric_code_package_activation_context.getCodeActivationContextPtr()
    id: getCodeActivationContextPtr()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodeActivationContextPtr()
    nameWithType: FabricCodePackageActivationContext.getCodeActivationContextPtr()
    fullName: long system.fabric.FabricCodePackageActivationContext.getCodeActivationContextPtr()
    overload: system.fabric._fabric_code_package_activation_context.getCodeActivationContextPtr*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 124
    package: system.fabric
    summary: <p>CodePackageActicationPointer の get アクセス操作子 </p>
    syntax:
      content: public long getCodeActivationContextPtr()
      return:
        type: 0364520f
        description: <p>CodePackageActicationPointer </p>
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageAddedEvent()
    id: getCodePackageAddedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageAddedEvent()
    nameWithType: FabricCodePackageActivationContext.getCodePackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageAddedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 407
    package: system.fabric
    summary: |-
      <p>サービス マニフェストに新しいコード パッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、CodePackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<CodePackage>> getCodePackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageAddedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageModifiedEvent()
    id: getCodePackageModifiedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageModifiedEvent()
    nameWithType: FabricCodePackageActivationContext.getCodePackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageModifiedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageModifiedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 427
    package: system.fabric
    summary: |-
      <p>サービス マニフェスト内のコード パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、CodePackageRemovedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<CodePackage>> getCodePackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageRemovedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageModifiedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageName()
    id: getCodePackageName()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageName()
    nameWithType: FabricCodePackageActivationContext.getCodePackageName()
    fullName: String system.fabric.FabricCodePackageActivationContext.getCodePackageName()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 169
    package: system.fabric
    summary: |-
      <p>アクティブ化されてファブリック コード パッケージの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getCodePackageName()
      return:
        type: '26831127'
        description: <p>ファブリックの名前には、コード パッケージがアクティブになります。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageName()
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageNames()
    id: getCodePackageNames()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageNames()
    nameWithType: FabricCodePackageActivationContext.getCodePackageNames()
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getCodePackageNames()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageNames*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 305
    package: system.fabric
    summary: |-
      <p>サービス マニフェスト内のコード パッケージ名の一覧を取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getCodePackageNames()
      return:
        type: 7d60c20e
        description: <p>サービス マニフェスト内のコード パッケージ名の一覧です。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageNames()
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageObject(String)
    id: getCodePackageObject(String)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageObject(String packageName)
    nameWithType: FabricCodePackageActivationContext.getCodePackageObject(String packageName)
    fullName: CodePackage system.fabric.FabricCodePackageActivationContext.getCodePackageObject(String packageName)
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageObject*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 337
    package: system.fabric
    summary: |-
      <p>返します、 <xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">CodePackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public CodePackage getCodePackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">CodePackage</xref></p>
      return:
        type: system.fabric._code_package
        description: <p>返します<xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref></p>
    overridden: system.fabric._code_package_activation_context.getCodePackageObject(String)
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageRemovedEvent()
    id: getCodePackageRemovedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageRemovedEvent()
    nameWithType: FabricCodePackageActivationContext.getCodePackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageRemovedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageRemovedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 417
    package: system.fabric
    summary: |-
      <p>サービス マニフェストのコード パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、CodePackageRemovedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<CodePackage>> getCodePackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageRemovedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageRemovedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageVersion()
    id: getCodePackageVersion()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getCodePackageVersion()
    nameWithType: FabricCodePackageActivationContext.getCodePackageVersion()
    fullName: String system.fabric.FabricCodePackageActivationContext.getCodePackageVersion()
    overload: system.fabric._fabric_code_package_activation_context.getCodePackageVersion*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 178
    package: system.fabric
    summary: |-
      <p>アクティブ化されてファブリック コード パッケージのバージョンを取得します。</p>
      <p></p>
    syntax:
      content: public String getCodePackageVersion()
      return:
        type: '26831127'
        description: <p>ファブリックのバージョンでは、コード パッケージがアクティブになります。 </p>
    overridden: system.fabric._code_package_activation_context.getCodePackageVersion()
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageAddedEvent()
    id: getConfigurationPackageAddedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getConfigurationPackageAddedEvent()
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageAddedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getConfigurationPackageAddedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 437
    package: system.fabric
    summary: |-
      <p>サービス マニフェストに新しい構成パッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<ConfigurationPackage>> getConfigurationPackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getConfigurationPackageAddedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageModifiedEvent()
    id: getConfigurationPackageModifiedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getConfigurationPackageModifiedEvent()
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageModifiedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getConfigurationPackageModifiedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 457
    package: system.fabric
    summary: |-
      <p>サービス マニフェストの構成パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<ConfigurationPackage>> getConfigurationPackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getConfigurationPackageModifiedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageNames()
    id: getConfigurationPackageNames()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getConfigurationPackageNames()
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageNames()
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageNames()
    overload: system.fabric._fabric_code_package_activation_context.getConfigurationPackageNames*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 315
    package: system.fabric
    summary: |-
      <p>サービス マニフェストの構成パッケージ名の一覧を取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getConfigurationPackageNames()
      return:
        type: 7d60c20e
        description: <p>サービス マニフェスト内の構成パッケージ名の一覧です。 </p>
    overridden: system.fabric._code_package_activation_context.getConfigurationPackageNames()
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageObject(String)
    id: getConfigurationPackageObject(String)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getConfigurationPackageObject(String packageName)
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageObject(String packageName)
    fullName: ConfigurationPackage system.fabric.FabricCodePackageActivationContext.getConfigurationPackageObject(String packageName)
    overload: system.fabric._fabric_code_package_activation_context.getConfigurationPackageObject*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 349
    package: system.fabric
    summary: |-
      <p>返します<xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">ConfigurationPackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public ConfigurationPackage getConfigurationPackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">ConfigurationPackage</xref></p>
      return:
        type: system.fabric._configuration_package
        description: <p>返します<xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref></p>
    overridden: system.fabric._code_package_activation_context.getConfigurationPackageObject(String)
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageRemovedEvent()
    id: getConfigurationPackageRemovedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getConfigurationPackageRemovedEvent()
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageRemovedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getConfigurationPackageRemovedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 447
    package: system.fabric
    summary: |-
      <p>サービス マニフェストの構成パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<ConfigurationPackage>> getConfigurationPackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getConfigurationPackageRemovedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getContextId()
    id: getContextId()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getContextId()
    nameWithType: FabricCodePackageActivationContext.getContextId()
    fullName: String system.fabric.FabricCodePackageActivationContext.getContextId()
    overload: system.fabric._fabric_code_package_activation_context.getContextId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 160
    package: system.fabric
    summary: |-
      <p>アプリケーション パッケージ名を持つには、サービス パッケージ名が修飾を表す ID を取得します。</p>
      <p></p>
    syntax:
      content: public String getContextId()
      return:
        type: '26831127'
        description: <p>コンテキスト id。 </p>
    overridden: system.fabric._code_package_activation_context.getContextId()
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageAddedEvent()
    id: getDataPackageAddedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getDataPackageAddedEvent()
    nameWithType: FabricCodePackageActivationContext.getDataPackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageAddedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getDataPackageAddedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 467
    package: system.fabric
    summary: |-
      <p>サービス マニフェストに新しいデータのパッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<DataPackage>> getDataPackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getDataPackageAddedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageModifiedEvent()
    id: getDataPackageModifiedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getDataPackageModifiedEvent()
    nameWithType: FabricCodePackageActivationContext.getDataPackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageModifiedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getDataPackageModifiedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 487
    package: system.fabric
    summary: |-
      <p>サービス マニフェストに、データ パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<DataPackage>> getDataPackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getDataPackageModifiedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageNames()
    id: getDataPackageNames()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getDataPackageNames()
    nameWithType: FabricCodePackageActivationContext.getDataPackageNames()
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getDataPackageNames()
    overload: system.fabric._fabric_code_package_activation_context.getDataPackageNames*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 325
    package: system.fabric
    summary: |-
      <p>名前、データのすべてのパッケージを取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getDataPackageNames()
      return:
        type: 7d60c20e
        description: <p>データ パッケージの一覧。 </p>
    overridden: system.fabric._code_package_activation_context.getDataPackageNames()
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageObject(String)
    id: getDataPackageObject(String)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getDataPackageObject(String packageName)
    nameWithType: FabricCodePackageActivationContext.getDataPackageObject(String packageName)
    fullName: DataPackage system.fabric.FabricCodePackageActivationContext.getDataPackageObject(String packageName)
    overload: system.fabric._fabric_code_package_activation_context.getDataPackageObject*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 361
    package: system.fabric
    summary: |-
      <p>返します<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public DataPackage getDataPackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref></p>
      return:
        type: system.fabric._data_package
        description: <p>返します<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref> packageName パラメーターに一致するサービス パッケージからのオブジェクト。 </p>
    overridden: system.fabric._code_package_activation_context.getDataPackageObject(String)
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageRemovedEvent()
    id: getDataPackageRemovedEvent()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getDataPackageRemovedEvent()
    nameWithType: FabricCodePackageActivationContext.getDataPackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageRemovedEvent()
    overload: system.fabric._fabric_code_package_activation_context.getDataPackageRemovedEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 477
    package: system.fabric
    summary: |-
      <p>サービス マニフェストに、データ パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<DataPackage>> getDataPackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
    overridden: system.fabric._code_package_activation_context.getDataPackageRemovedEvent()
  - uid: system.fabric._fabric_code_package_activation_context.getEndpoint(String)
    id: getEndpoint(String)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getEndpoint(String endpointName)
    nameWithType: FabricCodePackageActivationContext.getEndpoint(String endpointName)
    fullName: EndpointResourceDescription system.fabric.FabricCodePackageActivationContext.getEndpoint(String endpointName)
    overload: system.fabric._fabric_code_package_activation_context.getEndpoint*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 296
    package: system.fabric
    summary: |-
      <p>名前によって、エンドポイントを取得します。</p>
      <p></p>
    syntax:
      content: public EndpointResourceDescription getEndpoint(String endpointName)
      parameters:
        - id: endpointName
          type: '26831127'
          description: <p>エンドポイントの名前です。 </p>
      return:
        type: system.fabric.description._endpoint_resource_description
        description: <p>指定した名前のエンドポイントです。 </p>
    overridden: system.fabric._code_package_activation_context.getEndpoint(String)
  - uid: system.fabric._fabric_code_package_activation_context.getEndpoints()
    id: getEndpoints()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getEndpoints()
    nameWithType: FabricCodePackageActivationContext.getEndpoints()
    fullName: 'LinkedHashMap<String, EndpointResourceDescription> system.fabric.FabricCodePackageActivationContext.getEndpoints()'
    overload: system.fabric._fabric_code_package_activation_context.getEndpoints*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 278
    package: system.fabric
    summary: |-
      <p>サービス マニフェスト内のすべてのエンド ポイント名を取得します。</p>
      <p></p>
    syntax:
      content: 'public LinkedHashMap<String, EndpointResourceDescription> getEndpoints()'
      return:
        type: fc43dbf8system.fabric.description._endpoint_resource_descriptiona08ddfce
        description: <p>サービス マニフェストの終点の名前です。 </p>
    overridden: system.fabric._code_package_activation_context.getEndpoints()
  - uid: system.fabric._fabric_code_package_activation_context.getLogDirectory()
    id: getLogDirectory()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getLogDirectory()
    nameWithType: FabricCodePackageActivationContext.getLogDirectory()
    fullName: String system.fabric.FabricCodePackageActivationContext.getLogDirectory()
    overload: system.fabric._fabric_code_package_activation_context.getLogDirectory*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 142
    package: system.fabric
    summary: |-
      <p>アプリケーションを使用してログ ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getLogDirectory()
      return:
        type: '26831127'
        description: <p>アプリケーションへのパスは、ディレクトリを記録します。 </p>
    overridden: system.fabric._code_package_activation_context.getLogDirectory()
  - uid: system.fabric._fabric_code_package_activation_context.getServiceManifestName()
    id: getServiceManifestName()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getServiceManifestName()
    nameWithType: FabricCodePackageActivationContext.getServiceManifestName()
    fullName: String system.fabric.FabricCodePackageActivationContext.getServiceManifestName()
    overload: system.fabric._fabric_code_package_activation_context.getServiceManifestName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 370
    package: system.fabric
    summary: |-
      <p>サービス マニフェストの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getServiceManifestName()
      return:
        type: '26831127'
        description: <p>サービス マニフェストの名前。 </p>
    overridden: system.fabric._code_package_activation_context.getServiceManifestName()
  - uid: system.fabric._fabric_code_package_activation_context.getServiceManifestVersion()
    id: getServiceManifestVersion()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getServiceManifestVersion()
    nameWithType: FabricCodePackageActivationContext.getServiceManifestVersion()
    fullName: String system.fabric.FabricCodePackageActivationContext.getServiceManifestVersion()
    overload: system.fabric._fabric_code_package_activation_context.getServiceManifestVersion*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 379
    package: system.fabric
    summary: |-
      <p>サービス マニフェストのバージョンを取得します。</p>
      <p></p>
    syntax:
      content: public String getServiceManifestVersion()
      return:
        type: '26831127'
        description: <p>サービス マニフェストのバージョン。 </p>
    overridden: system.fabric._code_package_activation_context.getServiceManifestVersion()
  - uid: system.fabric._fabric_code_package_activation_context.getServiceTypes()
    id: getServiceTypes()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getServiceTypes()
    nameWithType: FabricCodePackageActivationContext.getServiceTypes()
    fullName: 'LinkedHashMap<String, ServiceTypeDescription> system.fabric.FabricCodePackageActivationContext.getServiceTypes()'
    overload: system.fabric._fabric_code_package_activation_context.getServiceTypes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 253
    package: system.fabric
    summary: |-
      <p>サービス マニフェスト内のサービス グループの種類の一覧を取得します。</p>
      <p></p>
    syntax:
      content: 'public LinkedHashMap<String, ServiceTypeDescription> getServiceTypes()'
      return:
        type: fc43dbf8system.fabric.description._service_type_descriptiona08ddfce
        description: <p>サービス マニフェスト内のサービス グループの種類の一覧。 </p>
    overridden: system.fabric._code_package_activation_context.getServiceTypes()
  - uid: system.fabric._fabric_code_package_activation_context.getTempDirectory()
    id: getTempDirectory()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getTempDirectory()
    nameWithType: FabricCodePackageActivationContext.getTempDirectory()
    fullName: String system.fabric.FabricCodePackageActivationContext.getTempDirectory()
    overload: system.fabric._fabric_code_package_activation_context.getTempDirectory*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 151
    package: system.fabric
    summary: |-
      <p>アプリケーションを使用して Temp ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getTempDirectory()
      return:
        type: '26831127'
        description: <p>Temp ディレクトリへのパス。 </p>
    overridden: system.fabric._code_package_activation_context.getTempDirectory()
  - uid: system.fabric._fabric_code_package_activation_context.getWorkDirectory()
    id: getWorkDirectory()
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: getWorkDirectory()
    nameWithType: FabricCodePackageActivationContext.getWorkDirectory()
    fullName: String system.fabric.FabricCodePackageActivationContext.getWorkDirectory()
    overload: system.fabric._fabric_code_package_activation_context.getWorkDirectory*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 133
    package: system.fabric
    summary: |-
      <p>アプリケーションを使用して作業ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getWorkDirectory()
      return:
        type: '26831127'
        description: <p>作業ディレクトリへのパス。 </p>
    overridden: system.fabric._code_package_activation_context.getWorkDirectory()
  - uid: system.fabric._fabric_code_package_activation_context.reportApplicationHealth(HealthInformation)
    id: reportApplicationHealth(HealthInformation)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: reportApplicationHealth(HealthInformation healthInfo)
    nameWithType: FabricCodePackageActivationContext.reportApplicationHealth(HealthInformation healthInfo)
    fullName: void system.fabric.FabricCodePackageActivationContext.reportApplicationHealth(HealthInformation healthInfo)
    overload: system.fabric._fabric_code_package_activation_context.reportApplicationHealth*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 496
    package: system.fabric
    summary: <p>現在のアプリケーションの正常性を報告します。 </p>
    syntax:
      content: public void reportApplicationHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>
    overridden: system.fabric._code_package_activation_context.reportApplicationHealth(HealthInformation)
  - uid: system.fabric._fabric_code_package_activation_context.reportDeployedApplicationHealth(HealthInformation)
    id: reportDeployedApplicationHealth(HealthInformation)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: reportDeployedApplicationHealth(HealthInformation healthInfo)
    nameWithType: FabricCodePackageActivationContext.reportDeployedApplicationHealth(HealthInformation healthInfo)
    fullName: void system.fabric.FabricCodePackageActivationContext.reportDeployedApplicationHealth(HealthInformation healthInfo)
    overload: system.fabric._fabric_code_package_activation_context.reportDeployedApplicationHealth*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 511
    package: system.fabric
    summary: <p>現在展開済みのアプリケーションの正常性を報告します。 </p>
    syntax:
      content: public void reportDeployedApplicationHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>
    overridden: system.fabric._code_package_activation_context.reportDeployedApplicationHealth(HealthInformation)
  - uid: system.fabric._fabric_code_package_activation_context.reportDeployedServicePackageHealth(HealthInformation)
    id: reportDeployedServicePackageHealth(HealthInformation)
    parent: system.fabric._fabric_code_package_activation_context
    href: system.fabric._fabric_code_package_activation_context.yml
    langs:
      - java
    name: reportDeployedServicePackageHealth(HealthInformation healthInfo)
    nameWithType: FabricCodePackageActivationContext.reportDeployedServicePackageHealth(HealthInformation healthInfo)
    fullName: void system.fabric.FabricCodePackageActivationContext.reportDeployedServicePackageHealth(HealthInformation healthInfo)
    overload: system.fabric._fabric_code_package_activation_context.reportDeployedServicePackageHealth*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricCodePackageActivationContext.java
      startLine: 526
    package: system.fabric
    summary: <p>現在の展開済みサービス パッケージの正常性を報告します。 </p>
    syntax:
      content: public void reportDeployedServicePackageHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>
    overridden: system.fabric._code_package_activation_context.reportDeployedServicePackageHealth(HealthInformation)
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._fabric_code_package_activation_context.getCodeActivationContextPtr*
    name: getCodeActivationContextPtr
    nameWithType: FabricCodePackageActivationContext.getCodeActivationContextPtr
    fullName: long system.fabric.FabricCodePackageActivationContext.getCodeActivationContextPtr
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._fabric_code_package_activation_context.getWorkDirectory*
    name: getWorkDirectory
    nameWithType: FabricCodePackageActivationContext.getWorkDirectory
    fullName: String system.fabric.FabricCodePackageActivationContext.getWorkDirectory
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getLogDirectory*
    name: getLogDirectory
    nameWithType: FabricCodePackageActivationContext.getLogDirectory
    fullName: String system.fabric.FabricCodePackageActivationContext.getLogDirectory
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getTempDirectory*
    name: getTempDirectory
    nameWithType: FabricCodePackageActivationContext.getTempDirectory
    fullName: String system.fabric.FabricCodePackageActivationContext.getTempDirectory
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getContextId*
    name: getContextId
    nameWithType: FabricCodePackageActivationContext.getContextId
    fullName: String system.fabric.FabricCodePackageActivationContext.getContextId
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageName*
    name: getCodePackageName
    nameWithType: FabricCodePackageActivationContext.getCodePackageName
    fullName: String system.fabric.FabricCodePackageActivationContext.getCodePackageName
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageVersion*
    name: getCodePackageVersion
    nameWithType: FabricCodePackageActivationContext.getCodePackageVersion
    fullName: String system.fabric.FabricCodePackageActivationContext.getCodePackageVersion
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationName*
    name: getApplicationName
    nameWithType: FabricCodePackageActivationContext.getApplicationName
    fullName: String system.fabric.FabricCodePackageActivationContext.getApplicationName
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationTypeName*
    name: getApplicationTypeName
    nameWithType: FabricCodePackageActivationContext.getApplicationTypeName
    fullName: String system.fabric.FabricCodePackageActivationContext.getApplicationTypeName
    package: system.fabric
  - uid: fc43dbf8system.fabric.description._service_type_descriptiona08ddfce
    spec.java:
      - name: 'LinkedHashMap<String, '
        fullName: 'LinkedHashMap<String, '
      - uid: system.fabric.description._service_type_description
        name: ServiceTypeDescription
        fullName: system.fabric.description.ServiceTypeDescription
        href: system.fabric.description._service_type_description.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_code_package_activation_context.getServiceTypes*
    name: getServiceTypes
    nameWithType: FabricCodePackageActivationContext.getServiceTypes
    fullName: 'LinkedHashMap<String, ServiceTypeDescription> system.fabric.FabricCodePackageActivationContext.getServiceTypes'
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getApplicationPrincipals*
    name: getApplicationPrincipals
    nameWithType: FabricCodePackageActivationContext.getApplicationPrincipals
    fullName: ApplicationPrincipalsDescription system.fabric.FabricCodePackageActivationContext.getApplicationPrincipals
    package: system.fabric
  - uid: fc43dbf8system.fabric.description._endpoint_resource_descriptiona08ddfce
    spec.java:
      - name: 'LinkedHashMap<String, '
        fullName: 'LinkedHashMap<String, '
      - uid: system.fabric.description._endpoint_resource_description
        name: EndpointResourceDescription
        fullName: system.fabric.description.EndpointResourceDescription
        href: system.fabric.description._endpoint_resource_description.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_code_package_activation_context.getEndpoints*
    name: getEndpoints
    nameWithType: FabricCodePackageActivationContext.getEndpoints
    fullName: 'LinkedHashMap<String, EndpointResourceDescription> system.fabric.FabricCodePackageActivationContext.getEndpoints'
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getEndpoint*
    name: getEndpoint
    nameWithType: FabricCodePackageActivationContext.getEndpoint
    fullName: EndpointResourceDescription system.fabric.FabricCodePackageActivationContext.getEndpoint
    package: system.fabric
  - uid: 7d60c20e
    spec.java:
      - name: List<String>
        fullName: List<String>
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageNames*
    name: getCodePackageNames
    nameWithType: FabricCodePackageActivationContext.getCodePackageNames
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getCodePackageNames
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageNames*
    name: getConfigurationPackageNames
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageNames
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageNames
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageNames*
    name: getDataPackageNames
    nameWithType: FabricCodePackageActivationContext.getDataPackageNames
    fullName: List<String> system.fabric.FabricCodePackageActivationContext.getDataPackageNames
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageObject*
    name: getCodePackageObject
    nameWithType: FabricCodePackageActivationContext.getCodePackageObject
    fullName: CodePackage system.fabric.FabricCodePackageActivationContext.getCodePackageObject
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageObject*
    name: getConfigurationPackageObject
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageObject
    fullName: ConfigurationPackage system.fabric.FabricCodePackageActivationContext.getConfigurationPackageObject
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageObject*
    name: getDataPackageObject
    nameWithType: FabricCodePackageActivationContext.getDataPackageObject
    fullName: DataPackage system.fabric.FabricCodePackageActivationContext.getDataPackageObject
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getServiceManifestName*
    name: getServiceManifestName
    nameWithType: FabricCodePackageActivationContext.getServiceManifestName
    fullName: String system.fabric.FabricCodePackageActivationContext.getServiceManifestName
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.getServiceManifestVersion*
    name: getServiceManifestVersion
    nameWithType: FabricCodePackageActivationContext.getServiceManifestVersion
    fullName: String system.fabric.FabricCodePackageActivationContext.getServiceManifestVersion
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.close*
    name: close
    nameWithType: FabricCodePackageActivationContext.close
    fullName: void system.fabric.FabricCodePackageActivationContext.close
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._code_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_added_event_args
        name: PackageAddedEventArgs
        fullName: system.fabric.PackageAddedEventArgs
        href: system.fabric._package_added_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._code_package
        name: CodePackage
        fullName: system.fabric.CodePackage
        href: system.fabric._code_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageAddedEvent*
    name: getCodePackageAddedEvent
    nameWithType: FabricCodePackageActivationContext.getCodePackageAddedEvent
    fullName: Observable<PackageAddedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageAddedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._code_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_removed_event_args
        name: PackageRemovedEventArgs
        fullName: system.fabric.PackageRemovedEventArgs
        href: system.fabric._package_removed_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._code_package
        name: CodePackage
        fullName: system.fabric.CodePackage
        href: system.fabric._code_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageRemovedEvent*
    name: getCodePackageRemovedEvent
    nameWithType: FabricCodePackageActivationContext.getCodePackageRemovedEvent
    fullName: Observable<PackageRemovedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageRemovedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._code_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_modified_event_args
        name: PackageModifiedEventArgs
        fullName: system.fabric.PackageModifiedEventArgs
        href: system.fabric._package_modified_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._code_package
        name: CodePackage
        fullName: system.fabric.CodePackage
        href: system.fabric._code_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getCodePackageModifiedEvent*
    name: getCodePackageModifiedEvent
    nameWithType: FabricCodePackageActivationContext.getCodePackageModifiedEvent
    fullName: Observable<PackageModifiedEventArgs<CodePackage>> system.fabric.FabricCodePackageActivationContext.getCodePackageModifiedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._configuration_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_added_event_args
        name: PackageAddedEventArgs
        fullName: system.fabric.PackageAddedEventArgs
        href: system.fabric._package_added_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._configuration_package
        name: ConfigurationPackage
        fullName: system.fabric.ConfigurationPackage
        href: system.fabric._configuration_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageAddedEvent*
    name: getConfigurationPackageAddedEvent
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageAddedEvent
    fullName: Observable<PackageAddedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageAddedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._configuration_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_removed_event_args
        name: PackageRemovedEventArgs
        fullName: system.fabric.PackageRemovedEventArgs
        href: system.fabric._package_removed_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._configuration_package
        name: ConfigurationPackage
        fullName: system.fabric.ConfigurationPackage
        href: system.fabric._configuration_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageRemovedEvent*
    name: getConfigurationPackageRemovedEvent
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageRemovedEvent
    fullName: Observable<PackageRemovedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageRemovedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._configuration_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_modified_event_args
        name: PackageModifiedEventArgs
        fullName: system.fabric.PackageModifiedEventArgs
        href: system.fabric._package_modified_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._configuration_package
        name: ConfigurationPackage
        fullName: system.fabric.ConfigurationPackage
        href: system.fabric._configuration_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getConfigurationPackageModifiedEvent*
    name: getConfigurationPackageModifiedEvent
    nameWithType: FabricCodePackageActivationContext.getConfigurationPackageModifiedEvent
    fullName: Observable<PackageModifiedEventArgs<ConfigurationPackage>> system.fabric.FabricCodePackageActivationContext.getConfigurationPackageModifiedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._data_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_added_event_args
        name: PackageAddedEventArgs
        fullName: system.fabric.PackageAddedEventArgs
        href: system.fabric._package_added_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._data_package
        name: DataPackage
        fullName: system.fabric.DataPackage
        href: system.fabric._data_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageAddedEvent*
    name: getDataPackageAddedEvent
    nameWithType: FabricCodePackageActivationContext.getDataPackageAddedEvent
    fullName: Observable<PackageAddedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageAddedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._data_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_removed_event_args
        name: PackageRemovedEventArgs
        fullName: system.fabric.PackageRemovedEventArgs
        href: system.fabric._package_removed_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._data_package
        name: DataPackage
        fullName: system.fabric.DataPackage
        href: system.fabric._data_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageRemovedEvent*
    name: getDataPackageRemovedEvent
    nameWithType: FabricCodePackageActivationContext.getDataPackageRemovedEvent
    fullName: Observable<PackageRemovedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageRemovedEvent
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._data_packagee7daa122
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._package_modified_event_args
        name: PackageModifiedEventArgs
        fullName: system.fabric.PackageModifiedEventArgs
        href: system.fabric._package_modified_event_args.yml
      - name: <
        fullName: <
      - uid: system.fabric._data_package
        name: DataPackage
        fullName: system.fabric.DataPackage
        href: system.fabric._data_package.yml
      - name: '>>'
        fullName: '>>'
  - uid: system.fabric._fabric_code_package_activation_context.getDataPackageModifiedEvent*
    name: getDataPackageModifiedEvent
    nameWithType: FabricCodePackageActivationContext.getDataPackageModifiedEvent
    fullName: Observable<PackageModifiedEventArgs<DataPackage>> system.fabric.FabricCodePackageActivationContext.getDataPackageModifiedEvent
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.reportApplicationHealth*
    name: reportApplicationHealth
    nameWithType: FabricCodePackageActivationContext.reportApplicationHealth
    fullName: void system.fabric.FabricCodePackageActivationContext.reportApplicationHealth
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.reportDeployedApplicationHealth*
    name: reportDeployedApplicationHealth
    nameWithType: FabricCodePackageActivationContext.reportDeployedApplicationHealth
    fullName: void system.fabric.FabricCodePackageActivationContext.reportDeployedApplicationHealth
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.reportDeployedServicePackageHealth*
    name: reportDeployedServicePackageHealth
    nameWithType: FabricCodePackageActivationContext.reportDeployedServicePackageHealth
    fullName: void system.fabric.FabricCodePackageActivationContext.reportDeployedServicePackageHealth
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context.create*
    name: create
    nameWithType: FabricCodePackageActivationContext.create
    fullName: static FabricCodePackageActivationContext system.fabric.FabricCodePackageActivationContext.create
    package: system.fabric
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax:
      content: public interface CodePackageActivationContext
  - uid: system.fabric._observable
    parent: system.fabric
    href: system.fabric._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: system.fabric.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: system.fabric._package_added_event_args
    parent: system.fabric
    href: system.fabric._package_added_event_args.yml
    name: PackageAddedEventArgs<T>
    nameWithType: PackageAddedEventArgs<T>
    fullName: system.fabric.PackageAddedEventArgs<T>
    type: Class
    summary: <p>パッケージの追加されたイベントをについて説明します。 </p>
    syntax:
      content: public class PackageAddedEventArgs<T>
      typeParameters:
        - type: 8ce1ecb9
          description: '<p>説明されているパッケージの種類です。 参照してください<xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref>、 <xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref>と<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">system.fabric.DataPackage</xref>です。 参照してください<xref uid="system.fabric._code_package_activation_context.getCodePackageAddedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getCodePackageAddedEvent()</xref>、 <xref uid="system.fabric._code_package_activation_context.getConfigurationPackageAddedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getConfigurationPackageAddedEvent()</xref>と<xref uid="system.fabric._code_package_activation_context.getDataPackageAddedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getDataPackageAddedEvent()</xref>です。 </p>'
  - uid: system.fabric._code_package
    parent: system.fabric
    href: system.fabric._code_package.yml
    name: CodePackage
    nameWithType: CodePackage
    fullName: system.fabric.CodePackage
    type: Class
    summary: <p>コード パッケージ定義を表します。 </p>
    syntax:
      content: public class CodePackage
  - uid: system.fabric._package_removed_event_args
    parent: system.fabric
    href: system.fabric._package_removed_event_args.yml
    name: PackageRemovedEventArgs<T>
    nameWithType: PackageRemovedEventArgs<T>
    fullName: system.fabric.PackageRemovedEventArgs<T>
    type: Class
    summary: <p>パッケージを削除イベントについて説明します。 </p>
    syntax:
      content: public class PackageRemovedEventArgs<T>
      typeParameters:
        - type: 8ce1ecb9
          description: '<p>説明されているパッケージの種類です。 参照してください<xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref>、 <xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref>と<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">system.fabric.DataPackage</xref>です。 参照してください<xref uid="system.fabric._code_package_activation_context.getCodePackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getCodePackageRemovedEvent()</xref>、 <xref uid="system.fabric._code_package_activation_context.getConfigurationPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getConfigurationPackageRemovedEvent()</xref>と<xref uid="system.fabric._code_package_activation_context.getDataPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getDataPackageRemovedEvent()</xref>です。 </p>'
  - uid: system.fabric._package_modified_event_args
    parent: system.fabric
    href: system.fabric._package_modified_event_args.yml
    name: PackageModifiedEventArgs<T>
    nameWithType: PackageModifiedEventArgs<T>
    fullName: system.fabric.PackageModifiedEventArgs<T>
    type: Class
    summary: <p>パッケージの変更イベントをについて説明します。 </p>
    syntax:
      content: public class PackageModifiedEventArgs<T>
      typeParameters:
        - type: 8ce1ecb9
          description: '<p>説明されているパッケージの種類です。 参照してください<xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref>、 <xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref>と<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">system.fabric.DataPackage</xref>です。 参照してください<xref uid="system.fabric._code_package_activation_context.getCodePackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getCodePackageRemovedEvent()</xref>、 <xref uid="system.fabric._code_package_activation_context.getConfigurationPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getConfigurationPackageRemovedEvent()</xref>と<xref uid="system.fabric._code_package_activation_context.getDataPackageRemovedEvent()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getDataPackageRemovedEvent()</xref>です。 </p>'
  - uid: system.fabric._configuration_package
    parent: system.fabric
    href: system.fabric._configuration_package.yml
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: system.fabric.ConfigurationPackage
    type: Class
    summary: <p>構成パッケージを表します。 </p>
    syntax:
      content: public class ConfigurationPackage
  - uid: system.fabric._data_package
    parent: system.fabric
    href: system.fabric._data_package.yml
    name: DataPackage
    nameWithType: DataPackage
    fullName: system.fabric.DataPackage
    type: Class
    syntax:
      content: public class DataPackage
  - uid: system.fabric._fabric_code_package_activation_context
    parent: system.fabric
    href: system.fabric._fabric_code_package_activation_context.yml
    name: FabricCodePackageActivationContext
    nameWithType: FabricCodePackageActivationContext
    fullName: system.fabric.FabricCodePackageActivationContext
    type: Class
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax: *ref_1
  - uid: system.fabric.description._service_type_description
    parent: system.fabric.description
    href: system.fabric.description._service_type_description.yml
    name: ServiceTypeDescription
    nameWithType: ServiceTypeDescription
    fullName: system.fabric.description.ServiceTypeDescription
    type: Class
    summary: <p>サービスの種類について説明します。 </p>
    syntax:
      content: public class ServiceTypeDescription
  - uid: system.fabric.description._endpoint_resource_description
    parent: system.fabric.description
    href: system.fabric.description._endpoint_resource_description.yml
    name: EndpointResourceDescription
    nameWithType: EndpointResourceDescription
    fullName: system.fabric.description.EndpointResourceDescription
    type: Class
    syntax:
      content: public class EndpointResourceDescription
  - uid: system.fabric._code_package_activation_context.getWorkDirectory()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getWorkDirectory()
    nameWithType: CodePackageActivationContext.getWorkDirectory()
    fullName: String system.fabric.CodePackageActivationContext.getWorkDirectory()
    type: Method
    summary: |-
      <p>アプリケーションを使用して作業ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getWorkDirectory()
      return:
        type: '26831127'
        description: <p>作業ディレクトリへのパス。 </p>
  - uid: system.fabric._code_package_activation_context.getLogDirectory()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getLogDirectory()
    nameWithType: CodePackageActivationContext.getLogDirectory()
    fullName: String system.fabric.CodePackageActivationContext.getLogDirectory()
    type: Method
    summary: |-
      <p>アプリケーションを使用してログ ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getLogDirectory()
      return:
        type: '26831127'
        description: <p>アプリケーションへのパスは、ディレクトリを記録します。 </p>
  - uid: system.fabric._code_package_activation_context.getTempDirectory()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getTempDirectory()
    nameWithType: CodePackageActivationContext.getTempDirectory()
    fullName: String system.fabric.CodePackageActivationContext.getTempDirectory()
    type: Method
    summary: |-
      <p>アプリケーションを使用して Temp ディレクトリへのパスを取得します。</p>
      <p></p>
    syntax:
      content: public String getTempDirectory()
      return:
        type: '26831127'
        description: <p>Temp ディレクトリへのパス。 </p>
  - uid: system.fabric._code_package_activation_context.getContextId()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getContextId()
    nameWithType: CodePackageActivationContext.getContextId()
    fullName: String system.fabric.CodePackageActivationContext.getContextId()
    type: Method
    summary: |-
      <p>アプリケーション パッケージ名を持つには、サービス パッケージ名が修飾を表す ID を取得します。</p>
      <p></p>
    syntax:
      content: public String getContextId()
      return:
        type: '26831127'
        description: <p>コンテキスト id。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageName()
    nameWithType: CodePackageActivationContext.getCodePackageName()
    fullName: String system.fabric.CodePackageActivationContext.getCodePackageName()
    type: Method
    summary: |-
      <p>アクティブ化されてファブリック コード パッケージの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getCodePackageName()
      return:
        type: '26831127'
        description: <p>ファブリックの名前には、コード パッケージがアクティブになります。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageVersion()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageVersion()
    nameWithType: CodePackageActivationContext.getCodePackageVersion()
    fullName: String system.fabric.CodePackageActivationContext.getCodePackageVersion()
    type: Method
    summary: |-
      <p>アクティブ化されてファブリック コード パッケージのバージョンを取得します。</p>
      <p></p>
    syntax:
      content: public String getCodePackageVersion()
      return:
        type: '26831127'
        description: <p>ファブリックのバージョンでは、コード パッケージがアクティブになります。 </p>
  - uid: system.fabric._code_package_activation_context.getApplicationName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationName()
    nameWithType: CodePackageActivationContext.getApplicationName()
    fullName: String system.fabric.CodePackageActivationContext.getApplicationName()
    type: Method
    summary: |-
      <p>アプリケーションの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p>アプリケーションの名前です。 </p>
  - uid: system.fabric._code_package_activation_context.getApplicationTypeName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationTypeName()
    nameWithType: CodePackageActivationContext.getApplicationTypeName()
    fullName: String system.fabric.CodePackageActivationContext.getApplicationTypeName()
    type: Method
    summary: |-
      <p>アプリケーションの種類の名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getApplicationTypeName()
      return:
        type: '26831127'
        description: <p>アプリケーションの種類名。 </p>
  - uid: system.fabric._code_package_activation_context.getServiceTypes()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getServiceTypes()
    nameWithType: CodePackageActivationContext.getServiceTypes()
    fullName: 'LinkedHashMap<String, ServiceTypeDescription> system.fabric.CodePackageActivationContext.getServiceTypes()'
    type: Method
    summary: |-
      <p>サービス マニフェスト内のサービス グループの種類の一覧を取得します。</p>
      <p></p>
    syntax:
      content: 'public LinkedHashMap<String, ServiceTypeDescription> getServiceTypes()'
      return:
        type: fc43dbf8system.fabric.description._service_type_descriptiona08ddfce
        description: <p>サービス マニフェスト内のサービス グループの種類の一覧。 </p>
  - uid: system.fabric._application_principals_description
    parent: system.fabric
    href: system.fabric._application_principals_description.yml
    name: ApplicationPrincipalsDescription
    nameWithType: ApplicationPrincipalsDescription
    fullName: system.fabric.ApplicationPrincipalsDescription
    type: Class
    syntax:
      content: public class ApplicationPrincipalsDescription
  - uid: system.fabric._code_package_activation_context.getApplicationPrincipals()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationPrincipals()
    nameWithType: CodePackageActivationContext.getApplicationPrincipals()
    fullName: ApplicationPrincipalsDescription system.fabric.CodePackageActivationContext.getApplicationPrincipals()
    type: Method
    summary: |-
      <p>アプリケーション マニフェストで定義されているすべてのプリンシパルを取得します。</p>
      <p></p>
    syntax:
      content: public ApplicationPrincipalsDescription getApplicationPrincipals()
      return:
        type: system.fabric._application_principals_description
        description: <p>アプリケーション マニフェストで定義されているプリンシパル。 </p>
  - uid: system.fabric._code_package_activation_context.getEndpoints()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getEndpoints()
    nameWithType: CodePackageActivationContext.getEndpoints()
    fullName: 'LinkedHashMap<String, EndpointResourceDescription> system.fabric.CodePackageActivationContext.getEndpoints()'
    type: Method
    summary: |-
      <p>サービス マニフェスト内のすべてのエンド ポイント名を取得します。</p>
      <p></p>
    syntax:
      content: 'public LinkedHashMap<String, EndpointResourceDescription> getEndpoints()'
      return:
        type: fc43dbf8system.fabric.description._endpoint_resource_descriptiona08ddfce
        description: <p>サービス マニフェストの終点の名前です。 </p>
  - uid: system.fabric._code_package_activation_context.getEndpoint(String)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getEndpoint(String endpointName)
    nameWithType: CodePackageActivationContext.getEndpoint(String endpointName)
    fullName: EndpointResourceDescription system.fabric.CodePackageActivationContext.getEndpoint(String endpointName)
    type: Method
    summary: |-
      <p>名前によって、エンドポイントを取得します。</p>
      <p></p>
    syntax:
      content: public EndpointResourceDescription getEndpoint(String endpointName)
      parameters:
        - id: endpointName
          type: '26831127'
          description: <p>エンドポイントの名前です。 </p>
      return:
        type: system.fabric.description._endpoint_resource_description
        description: <p>指定した名前のエンドポイントです。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageNames()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageNames()
    nameWithType: CodePackageActivationContext.getCodePackageNames()
    fullName: List<String> system.fabric.CodePackageActivationContext.getCodePackageNames()
    type: Method
    summary: |-
      <p>サービス マニフェスト内のコード パッケージ名の一覧を取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getCodePackageNames()
      return:
        type: 7d60c20e
        description: <p>サービス マニフェスト内のコード パッケージ名の一覧です。 </p>
  - uid: system.fabric._code_package_activation_context.getConfigurationPackageNames()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getConfigurationPackageNames()
    nameWithType: CodePackageActivationContext.getConfigurationPackageNames()
    fullName: List<String> system.fabric.CodePackageActivationContext.getConfigurationPackageNames()
    type: Method
    summary: |-
      <p>サービス マニフェストの構成パッケージ名の一覧を取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getConfigurationPackageNames()
      return:
        type: 7d60c20e
        description: <p>サービス マニフェスト内の構成パッケージ名の一覧です。 </p>
  - uid: system.fabric._code_package_activation_context.getDataPackageNames()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getDataPackageNames()
    nameWithType: CodePackageActivationContext.getDataPackageNames()
    fullName: List<String> system.fabric.CodePackageActivationContext.getDataPackageNames()
    type: Method
    summary: |-
      <p>名前、データのすべてのパッケージを取得します。</p>
      <p></p>
    syntax:
      content: public List<String> getDataPackageNames()
      return:
        type: 7d60c20e
        description: <p>データ パッケージの一覧。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageObject(String)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageObject(String packageName)
    nameWithType: CodePackageActivationContext.getCodePackageObject(String packageName)
    fullName: CodePackage system.fabric.CodePackageActivationContext.getCodePackageObject(String packageName)
    type: Method
    summary: |-
      <p>返します、 <xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">CodePackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public CodePackage getCodePackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">CodePackage</xref></p>
      return:
        type: system.fabric._code_package
        description: <p>返します<xref uid="system.fabric._code_package" data-throw-if-not-resolved="false">system.fabric.CodePackage</xref></p>
  - uid: system.fabric._code_package_activation_context.getConfigurationPackageObject(String)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getConfigurationPackageObject(String packageName)
    nameWithType: CodePackageActivationContext.getConfigurationPackageObject(String packageName)
    fullName: ConfigurationPackage system.fabric.CodePackageActivationContext.getConfigurationPackageObject(String packageName)
    type: Method
    summary: |-
      <p>返します<xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">ConfigurationPackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public ConfigurationPackage getConfigurationPackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">ConfigurationPackage</xref></p>
      return:
        type: system.fabric._configuration_package
        description: <p>返します<xref uid="system.fabric._configuration_package" data-throw-if-not-resolved="false">system.fabric.ConfigurationPackage</xref></p>
  - uid: system.fabric._code_package_activation_context.getDataPackageObject(String)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getDataPackageObject(String packageName)
    nameWithType: CodePackageActivationContext.getDataPackageObject(String packageName)
    fullName: DataPackage system.fabric.CodePackageActivationContext.getDataPackageObject(String packageName)
    type: Method
    summary: |-
      <p>返します<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref> packageName パラメーターに一致するサービス パッケージからオブジェクト</p>
      <p></p>
    syntax:
      content: public DataPackage getDataPackageObject(String packageName)
      parameters:
        - id: packageName
          type: '26831127'
          description: <p>名前、 <xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref></p>
      return:
        type: system.fabric._data_package
        description: <p>返します<xref uid="system.fabric._data_package" data-throw-if-not-resolved="false">DataPackage</xref> packageName パラメーターに一致するサービス パッケージからのオブジェクト。 </p>
  - uid: system.fabric._code_package_activation_context.getServiceManifestName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getServiceManifestName()
    nameWithType: CodePackageActivationContext.getServiceManifestName()
    fullName: String system.fabric.CodePackageActivationContext.getServiceManifestName()
    type: Method
    summary: |-
      <p>サービス マニフェストの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getServiceManifestName()
      return:
        type: '26831127'
        description: <p>サービス マニフェストの名前。 </p>
  - uid: system.fabric._code_package_activation_context.getServiceManifestVersion()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getServiceManifestVersion()
    nameWithType: CodePackageActivationContext.getServiceManifestVersion()
    fullName: String system.fabric.CodePackageActivationContext.getServiceManifestVersion()
    type: Method
    summary: |-
      <p>サービス マニフェストのバージョンを取得します。</p>
      <p></p>
    syntax:
      content: public String getServiceManifestVersion()
      return:
        type: '26831127'
        description: <p>サービス マニフェストのバージョン。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageAddedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageAddedEvent()
    nameWithType: CodePackageActivationContext.getCodePackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<CodePackage>> system.fabric.CodePackageActivationContext.getCodePackageAddedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストに新しいコード パッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、CodePackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<CodePackage>> getCodePackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageRemovedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageRemovedEvent()
    nameWithType: CodePackageActivationContext.getCodePackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<CodePackage>> system.fabric.CodePackageActivationContext.getCodePackageRemovedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストのコード パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、CodePackageRemovedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<CodePackage>> getCodePackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageRemovedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getCodePackageModifiedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getCodePackageModifiedEvent()
    nameWithType: CodePackageActivationContext.getCodePackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<CodePackage>> system.fabric.CodePackageActivationContext.getCodePackageModifiedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェスト内のコード パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、CodePackageRemovedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<CodePackage>> getCodePackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._code_packagee7daa122
        description: <p>Get アクセス操作子、CodePackageRemovedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getConfigurationPackageAddedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getConfigurationPackageAddedEvent()
    nameWithType: CodePackageActivationContext.getConfigurationPackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<ConfigurationPackage>> system.fabric.CodePackageActivationContext.getConfigurationPackageAddedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストに新しい構成パッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<ConfigurationPackage>> getConfigurationPackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getConfigurationPackageRemovedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getConfigurationPackageRemovedEvent()
    nameWithType: CodePackageActivationContext.getConfigurationPackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<ConfigurationPackage>> system.fabric.CodePackageActivationContext.getConfigurationPackageRemovedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストの構成パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<ConfigurationPackage>> getConfigurationPackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getConfigurationPackageModifiedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getConfigurationPackageModifiedEvent()
    nameWithType: CodePackageActivationContext.getConfigurationPackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<ConfigurationPackage>> system.fabric.CodePackageActivationContext.getConfigurationPackageModifiedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストの構成パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、ConfigurationPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<ConfigurationPackage>> getConfigurationPackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._configuration_packagee7daa122
        description: <p>Get アクセス操作子、ConfigurationPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getDataPackageAddedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getDataPackageAddedEvent()
    nameWithType: CodePackageActivationContext.getDataPackageAddedEvent()
    fullName: Observable<PackageAddedEventArgs<DataPackage>> system.fabric.CodePackageActivationContext.getDataPackageAddedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストに新しいデータのパッケージを追加することで生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageAddedEventArgs<DataPackage>> getDataPackageAddedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_added_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getDataPackageRemovedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getDataPackageRemovedEvent()
    nameWithType: CodePackageActivationContext.getDataPackageRemovedEvent()
    fullName: Observable<PackageRemovedEventArgs<DataPackage>> system.fabric.CodePackageActivationContext.getDataPackageRemovedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストに、データ パッケージの削除で生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageRemovedEventArgs<DataPackage>> getDataPackageRemovedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_removed_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.getDataPackageModifiedEvent()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getDataPackageModifiedEvent()
    nameWithType: CodePackageActivationContext.getDataPackageModifiedEvent()
    fullName: Observable<PackageModifiedEventArgs<DataPackage>> system.fabric.CodePackageActivationContext.getDataPackageModifiedEvent()
    type: Method
    summary: |-
      <p>サービス マニフェストに、データ パッケージの変更で生成されるイベントをリッスンするリスナーを登録するには、DataPackageAddedEvent を使用してください。</p>
      <p></p>
    syntax:
      content: public Observable<PackageModifiedEventArgs<DataPackage>> getDataPackageModifiedEvent()
      return:
        type: system.fabric._observable78504a52system.fabric._package_modified_event_args78504a52system.fabric._data_packagee7daa122
        description: <p>Get アクセス操作子、DataPackageAddedEvent の<xref uid="system.fabric._observable" data-throw-if-not-resolved="false">system.fabric.Observable</xref>です。 </p>
  - uid: system.fabric._code_package_activation_context.reportApplicationHealth(HealthInformation)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: reportApplicationHealth(HealthInformation healthInfo)
    nameWithType: CodePackageActivationContext.reportApplicationHealth(HealthInformation healthInfo)
    fullName: void system.fabric.CodePackageActivationContext.reportApplicationHealth(HealthInformation healthInfo)
    type: Method
    summary: <p>現在のアプリケーションの正常性を報告します。 </p>
    syntax:
      content: public void reportApplicationHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>
  - uid: system.fabric.health._health_information
    parent: system.fabric.health
    href: system.fabric.health._health_information.yml
    name: HealthInformation
    nameWithType: HealthInformation
    fullName: system.fabric.health.HealthInformation
    type: Class
    summary: <p>エンティティのヘルス情報が含まれています。 この情報は、正常性レポートに含まれています。 正常性イベントの一部としても提供されます。 </p>
    syntax:
      content: public class HealthInformation
  - uid: system.fabric._code_package_activation_context.reportDeployedApplicationHealth(HealthInformation)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: reportDeployedApplicationHealth(HealthInformation healthInfo)
    nameWithType: CodePackageActivationContext.reportDeployedApplicationHealth(HealthInformation healthInfo)
    fullName: void system.fabric.CodePackageActivationContext.reportDeployedApplicationHealth(HealthInformation healthInfo)
    type: Method
    summary: <p>現在展開済みのアプリケーションの正常性を報告します。 </p>
    syntax:
      content: public void reportDeployedApplicationHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>
  - uid: system.fabric._code_package_activation_context.reportDeployedServicePackageHealth(HealthInformation)
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: reportDeployedServicePackageHealth(HealthInformation healthInfo)
    nameWithType: CodePackageActivationContext.reportDeployedServicePackageHealth(HealthInformation healthInfo)
    fullName: void system.fabric.CodePackageActivationContext.reportDeployedServicePackageHealth(HealthInformation healthInfo)
    type: Method
    summary: <p>現在の展開済みサービス パッケージの正常性を報告します。 </p>
    syntax:
      content: public void reportDeployedServicePackageHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p>ヘルス情報をレポートします。 </p>