### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    id: _contract_a_p_i_mqtt
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    children:
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close()
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished()
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost(Throwable)
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig)
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus(RequestData,ResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived(MqttMessage)
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open(RequestData)
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM(RequestData,ResponseCallback,Object)'
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: ContractAPIMqtt
    nameWithType: ContractAPIMqtt
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt
    type: Class
    source:
      remote: &ref_0
        path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 21
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    syntax:
      content: public class ContractAPIMqtt extends ProvisioningDeviceClientContract implements MqttListener
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    inheritedMembers:
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.createProvisioningContract(ProvisioningDeviceClientConfig)
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
    id: 'authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    nameWithType: 'ContractAPIMqtt.authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 173
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-101">この接続の認証し、MQTT 経由で登録プロセスを開始する要求ハブ</span><span class="sxs-lookup"><span data-stu-id="b2170-101">Requests hub to authenticate this connection and start the registration process over MQTT</span></span> </p>
    syntax:
      content: 'public synchronized void authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: "<p><span data-ttu-id=\"b2170-102\">非<code>null \r\n\r\n    </code>すべての必要な要求データの値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-102\">A non<code>null \r\n\r\n    </code> value with all the required request data</span></span> </p>"
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"b2170-103\">非<code>null \r\n\r\n    </code>コールバックの値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-103\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"b2170-104\">コンテキストのオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-104\">An object for context.</span></span> <span data-ttu-id=\"b2170-105\">指定できます。<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-105\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"b2170-106\">パラメーターのいずれかが有効ではない場合 (<code>null \r\n\r\n    </code>または空)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-106\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="b2170-107">トランスポートへの API 呼び出しの失敗した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-107">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="b2170-108">無効な状態で戻しますハブが応答した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-108">If hub responds back with an invalid status</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: close()
    nameWithType: ContractAPIMqtt.close()
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.close()
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 149
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-109">接続を閉じることを示します</span><span class="sxs-lookup"><span data-stu-id="b2170-109">Indicates to close the connection</span></span> </p>
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    exceptions:
      - type: 1e2d9f84
        description: <p><span data-ttu-id="b2170-110">エラーを切断する場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="b2170-110">thrown if a failure in disconnect</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished()
    id: connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: connectionEstablished()
    nameWithType: ContractAPIMqtt.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionEstablished()
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 306
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-111">PAHO サーバーへの接続を確立するときに呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-111">Called when PAHO establishes a connection to a server</span></span> </p>
    syntax:
      content: public void connectionEstablished()
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost(Throwable)
    id: connectionLost(Throwable)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: connectionLost(Throwable throwable)
    nameWithType: ContractAPIMqtt.connectionLost(Throwable throwable)
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionLost(Throwable throwable)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 311
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-112">接続が失われた場合、PAHO によって呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-112">Called by PAHO when the connection is lost</span></span> </p>
    syntax:
      content: public void connectionLost(Throwable throwable)
      parameters:
        - id: throwable
          type: a04fafd7
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionLost(Throwable)
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig)
    id: ContractAPIMqtt(ProvisioningDeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    nameWithType: ContractAPIMqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 47
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-113">このコンス トラクターが Mqtt クラスのインスタンスを作成し、メンバー変数を初期化します</span><span class="sxs-lookup"><span data-stu-id="b2170-113">This constructor creates an instance of Mqtt class and initializes member variables</span></span> </p>
    syntax:
      content: public ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
      parameters:
        - id: provisioningDeviceClientConfig
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
          description: "<p><span data-ttu-id=\"b2170-114\">プロビジョニングに使用されている構成にすることはできません<code>null \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-114\">Config used for provisioning Cannot be<code>null \r\n\r\n    </code> .</span></span> </p>"
    exceptions:
      - type: 352f005b
        description: <p><span data-ttu-id="b2170-115">有効な入力パラメーターのいずれかがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="b2170-115">is thrown when any of the input parameters are invalid</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus(RequestData,ResponseCallback,Object)'
    id: 'getRegistrationStatus(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    nameWithType: 'ContractAPIMqtt.getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 209
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-116">MQTT 経由で登録状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2170-116">Gets the registration status over MQTT</span></span> </p>
    syntax:
      content: 'public synchronized void getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: "<p><span data-ttu-id=\"b2170-117\">非<code>null \r\n\r\n    </code>すべての要求データの値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-117\">A non<code>null \r\n\r\n    </code> value with all the request data</span></span> </p>"
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"b2170-118\">非<code>null \r\n\r\n    </code>コールバックの値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-118\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"b2170-119\">コンテキストのオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-119\">An object for context.</span></span> <span data-ttu-id=\"b2170-120\">指定できます。<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-120\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"b2170-121\">パラメーターのいずれかが有効ではない場合 (<code>null \r\n\r\n    </code>または空)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-121\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="b2170-122">トランスポートへの API 呼び出しの失敗した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-122">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="b2170-123">無効な状態で戻しますハブが応答した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-123">If hub responds back with an invalid status</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived(MqttMessage)
    id: messageReceived(MqttMessage)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: messageReceived(MqttMessage message)
    nameWithType: ContractAPIMqtt.messageReceived(MqttMessage message)
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.messageReceived(MqttMessage message)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 294
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-124">メッセージを取得 PAHO が受信したときに呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-124">Called when the message gets received by PAHO</span></span> </p>
    syntax:
      content: public void messageReceived(MqttMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.messageReceived(MqttMessage)
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open(RequestData)
    id: open(RequestData)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: open(RequestData requestData)
    nameWithType: ContractAPIMqtt.open(RequestData requestData)
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.open(RequestData requestData)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 108
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-125">MQTT 接続を開く必要性を示します</span><span class="sxs-lookup"><span data-stu-id="b2170-125">Indicates need to open MQTT connection</span></span> </p>
    syntax:
      content: public synchronized void open(RequestData requestData)
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: <p><span data-ttu-id="b2170-126">接続の初期化に使用されるデータ</span><span class="sxs-lookup"><span data-stu-id="b2170-126">Data used for the connection initialization</span></span> </p>
      return:
        type: 5c0b90ca
    exceptions:
      - type: 1e2d9f84
        description: <p><span data-ttu-id="b2170-127">有効な入力パラメーターのいずれかがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="b2170-127">is thrown when any of the input parameters are invalid</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM(RequestData,ResponseCallback,Object)'
    id: 'requestNonceForTPM(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    nameWithType: 'ContractAPIMqtt.requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 260
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="b2170-128">(TPM) の場合のみ MQTT 経由で認証を開始するデバイスのキーを提供する要求ハブ</span><span class="sxs-lookup"><span data-stu-id="b2170-128">Requests hub to provide a device key to begin authentication over MQTT (Only for TPM)</span></span> </p>
    syntax:
      content: 'public synchronized void requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"b2170-129\">非<code>null \r\n\r\n    </code>コールバックの値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-129\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: authorizationCallbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"b2170-130\">コンテキストのオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-130\">An object for context.</span></span> <span data-ttu-id=\"b2170-131\">指定できます。<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-131\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"b2170-132\">パラメーターのいずれかが有効ではない場合 (<code>null \r\n\r\n    </code>または空)</span><span class=\"sxs-lookup\"><span data-stu-id=\"b2170-132\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="b2170-133">トランスポートへの API 呼び出しの失敗した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-133">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="b2170-134">無効な状態で戻しますハブが応答した場合</span><span class="sxs-lookup"><span data-stu-id="b2170-134">If hub responds back with an invalid status</span></span> </p>
references:
  - uid: 352f005b
    spec.java:
      - name: ProvisioningDeviceClientException
        fullName: ProvisioningDeviceClientException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt*
    name: ContractAPIMqtt
    nameWithType: ContractAPIMqtt.ContractAPIMqtt
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.ContractAPIMqtt
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: 1e2d9f84
    spec.java:
      - name: ProvisioningDeviceConnectionException
        fullName: ProvisioningDeviceConnectionException
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open*
    name: open
    nameWithType: ContractAPIMqtt.open
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.open
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close*
    name: close
    nameWithType: ContractAPIMqtt.close
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.close
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: c577ab43
    spec.java:
      - name: ProvisioningDeviceTransportException
        fullName: ProvisioningDeviceTransportException
  - uid: dcc21490
    spec.java:
      - name: ProvisioningDeviceHubException
        fullName: ProvisioningDeviceHubException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService*
    name: authenticateWithProvisioningService
    nameWithType: ContractAPIMqtt.authenticateWithProvisioningService
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.authenticateWithProvisioningService
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus*
    name: getRegistrationStatus
    nameWithType: ContractAPIMqtt.getRegistrationStatus
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.getRegistrationStatus
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM*
    name: requestNonceForTPM
    nameWithType: ContractAPIMqtt.requestNonceForTPM
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.requestNonceForTPM
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived*
    name: messageReceived
    nameWithType: ContractAPIMqtt.messageReceived
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.messageReceived
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished*
    name: connectionEstablished
    nameWithType: ContractAPIMqtt.connectionEstablished
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionEstablished
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: a04fafd7
    spec.java:
      - name: Throwable
        fullName: Throwable
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost*
    name: connectionLost
    nameWithType: ContractAPIMqtt.connectionLost
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionLost
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.createProvisioningContract(ProvisioningDeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.yml
    name: createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    nameWithType: ProvisioningDeviceClientContract.createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    fullName: static ProvisioningDeviceClientContract com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract.createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    type: Method
    summary: <p><span data-ttu-id="b2170-135">指定されたプロトコル経由でサービスとコントラクトを作成する静的メソッド</span><span class="sxs-lookup"><span data-stu-id="b2170-135">Static method to create contracts with the service over the specified protocol</span></span> </p>
    syntax:
      content: public static ProvisioningDeviceClientContract createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
      parameters:
        - id: provisioningDeviceClientConfig
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
          description: <p><span data-ttu-id="b2170-136">プロビジョニングに使用されている構成</span><span class="sxs-lookup"><span data-stu-id="b2170-136">Config used for provisioning</span></span> </p>
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
        description: <p><span data-ttu-id="b2170-137">要求されたプロトコルの関連するコントラクトの実装</span><span class="sxs-lookup"><span data-stu-id="b2170-137">Implementation of the relevant contract for the requested protocol</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.yml
    name: ProvisioningDeviceClientContract
    nameWithType: ProvisioningDeviceClientContract
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientContract
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: MqttListener
    nameWithType: MqttListener
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener
    type: Interface
    syntax:
      content: public interface MqttListener
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_connection
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_connection.yml
    name: MqttConnection
    nameWithType: MqttConnection
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
    type: Class
    syntax:
      content: public class MqttConnection
  - uid: com.microsoft.azure.sdk.iot.deps.util._object_lock
    parent: com.microsoft.azure.sdk.iot.deps.util
    href: com.microsoft.azure.sdk.iot.deps.util._object_lock.yml
    name: ObjectLock
    nameWithType: ObjectLock
    fullName: com.microsoft.azure.sdk.iot.deps.util.ObjectLock
    type: Class
    summary: <p><span data-ttu-id="b2170-138">このクラスは基底クラスの待機のモック作成を有効にし、関数を通知します。</span><span class="sxs-lookup"><span data-stu-id="b2170-138">This class enables mocking of the base class wait and notify functions</span></span> </p>
    syntax:
      content: public class ObjectLock
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message.yml
    name: MqttMessage
    nameWithType: MqttMessage
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage
    type: Class
    syntax:
      content: public class MqttMessage
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config.yml
    name: ProvisioningDeviceClientConfig
    nameWithType: ProvisioningDeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptionsd36cafd51885aee2517556b0ba23cbd3
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptionsd36cafd51885aee2517556b0ba23cbd3.yml
    name: ProvisioningDeviceClientException
    nameWithType: ProvisioningDeviceClientException
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceClientException
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.task
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data.yml
    name: RequestData
    nameWithType: RequestData
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RequestData
    type: Class
    syntax:
      content: public class RequestData
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions7a80624b1e6fbd89436aedac142fb79c
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions7a80624b1e6fbd89436aedac142fb79c.yml
    name: ProvisioningDeviceConnectionException
    nameWithType: ProvisioningDeviceConnectionException
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceConnectionException
    type: Class
    syntax:
      content: public class ProvisioningDeviceConnectionException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback.yml
    name: ResponseCallback
    nameWithType: ResponseCallback
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ResponseCallback
    type: Interface
    syntax:
      content: public interface ResponseCallback
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.messageReceived(MqttMessage)
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: messageReceived(MqttMessage message)
    nameWithType: MqttListener.messageReceived(MqttMessage message)
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.messageReceived(MqttMessage message)
    type: Method
    summary: <p><span data-ttu-id="b2170-139">メッセージを取得 PAHO が受信したときに呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-139">Called when the message gets received by PAHO</span></span> </p>
    syntax:
      content: public void messageReceived(MqttMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: connectionEstablished()
    nameWithType: MqttListener.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.connectionEstablished()
    type: Method
    summary: <p><span data-ttu-id="b2170-140">PAHO サーバーへの接続を確立するときに呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-140">Called when PAHO establishes a connection to a server</span></span> </p>
    syntax:
      content: public void connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionLost(Throwable)
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: connectionLost(Throwable throwable)
    nameWithType: MqttListener.connectionLost(Throwable throwable)
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.connectionLost(Throwable throwable)
    type: Method
    summary: <p><span data-ttu-id="b2170-141">接続が失われた場合、PAHO によって呼び出されます</span><span class="sxs-lookup"><span data-stu-id="b2170-141">Called by PAHO when the connection is lost</span></span> </p>
    syntax:
      content: public void connectionLost(Throwable throwable)
      parameters:
        - id: throwable
          type: a04fafd7