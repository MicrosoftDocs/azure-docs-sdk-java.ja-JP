### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._deployed_application_health_state_chunk
    id: _deployed_application_health_state_chunk
    parent: system.fabric.health
    children:
      - system.fabric.health._deployed_application_health_state_chunk.getDeployedServicePackageHealthStateChunks()
      - system.fabric.health._deployed_application_health_state_chunk.getHealthState()
      - system.fabric.health._deployed_application_health_state_chunk.getNodeName()
    href: system.fabric.health._deployed_application_health_state_chunk.yml
    langs:
      - java
    name: DeployedApplicationHealthStateChunk
    nameWithType: DeployedApplicationHealthStateChunk
    fullName: system.fabric.health.DeployedApplicationHealthStateChunk
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealthStateChunk.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealthStateChunk.java
      startLine: 6
    package: system.fabric.health
    summary: <p>展開済みアプリケーションに関する基本的な正常性の情報を含む、展開済みアプリケーションの正常性の状態チャンクを表します。 アプリケーションの子として含まれます。 </p>
    syntax:
      content: public class DeployedApplicationHealthStateChunk
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._deployed_application_health_state_chunk.getDeployedServicePackageHealthStateChunks()
    id: getDeployedServicePackageHealthStateChunks()
    parent: system.fabric.health._deployed_application_health_state_chunk
    href: system.fabric.health._deployed_application_health_state_chunk.yml
    langs:
      - java
    name: getDeployedServicePackageHealthStateChunks()
    nameWithType: DeployedApplicationHealthStateChunk.getDeployedServicePackageHealthStateChunks()
    fullName: DeployedServicePackageHealthStateChunkList system.fabric.health.DeployedApplicationHealthStateChunk.getDeployedServicePackageHealthStateChunks()
    overload: system.fabric.health._deployed_application_health_state_chunk.getDeployedServicePackageHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealthStateChunk.java
      startLine: 53
    package: system.fabric.health
    summary: "<p>展開済みサービス パッケージのヘルス状態チャンク子入力フィルターを適用するの一覧を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>既定では、子に含まれていない結果です。 ユーザーは、必要な正常性アドインまたはその他の情報に基づく子の一部を含めるように要求できます。 たとえば、ユーザーは、ヘルス状態のエラーのあるすべての展開済みサービス パッケージを含める要求できます。 フィルター値に関係なく、すべての子は、エンティティで集計された正常性が計算に使用されます。 </p>"
    syntax:
      content: public DeployedServicePackageHealthStateChunkList getDeployedServicePackageHealthStateChunks()
      return:
        type: system.fabric.health._deployed_service_package_health_state_chunk_list
        description: <p>展開済みサービス パッケージのレプリカのヘルス状態の一覧は、入力のフィルターを適用する子を分割します。 </p>
  - uid: system.fabric.health._deployed_application_health_state_chunk.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._deployed_application_health_state_chunk
    href: system.fabric.health._deployed_application_health_state_chunk.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: DeployedApplicationHealthStateChunk.getHealthState()
    fullName: HealthState system.fabric.health.DeployedApplicationHealthStateChunk.getHealthState()
    overload: system.fabric.health._deployed_application_health_state_chunk.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealthStateChunk.java
      startLine: 35
    package: system.fabric.health
    summary: |-
      <p>報告された状態のすべてのイベント、子、およびアプリケーションの正常性ポリシーに基づく計算された、展開されたアプリケーションの集計されたヘルス状態を取得します。</p>
      <p></p>
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p>展開済みアプリケーションの集計された正常性状態 </p>
  - uid: system.fabric.health._deployed_application_health_state_chunk.getNodeName()
    id: getNodeName()
    parent: system.fabric.health._deployed_application_health_state_chunk
    href: system.fabric.health._deployed_application_health_state_chunk.yml
    langs:
      - java
    name: getNodeName()
    nameWithType: DeployedApplicationHealthStateChunk.getNodeName()
    fullName: String system.fabric.health.DeployedApplicationHealthStateChunk.getNodeName()
    overload: system.fabric.health._deployed_application_health_state_chunk.getNodeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/DeployedApplicationHealthStateChunk.java
      startLine: 25
    package: system.fabric.health
    summary: |-
      <p>ノード名を取得します。</p>
      <p></p>
    syntax:
      content: public String getNodeName()
      return:
        type: '26831127'
        description: <p>ノード名。 </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric.health._deployed_application_health_state_chunk.getNodeName*
    name: getNodeName
    nameWithType: DeployedApplicationHealthStateChunk.getNodeName
    fullName: String system.fabric.health.DeployedApplicationHealthStateChunk.getNodeName
    package: system.fabric.health
  - uid: system.fabric.health._deployed_application_health_state_chunk.getHealthState*
    name: getHealthState
    nameWithType: DeployedApplicationHealthStateChunk.getHealthState
    fullName: HealthState system.fabric.health.DeployedApplicationHealthStateChunk.getHealthState
    package: system.fabric.health
  - uid: system.fabric.health._deployed_application_health_state_chunk.getDeployedServicePackageHealthStateChunks*
    name: getDeployedServicePackageHealthStateChunks
    nameWithType: DeployedApplicationHealthStateChunk.getDeployedServicePackageHealthStateChunks
    fullName: DeployedServicePackageHealthStateChunkList system.fabric.health.DeployedApplicationHealthStateChunk.getDeployedServicePackageHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._deployed_service_package_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._deployed_service_package_health_state_chunk_list.yml
    name: DeployedServicePackageHealthStateChunkList
    nameWithType: DeployedServicePackageHealthStateChunkList
    fullName: system.fabric.health.DeployedServicePackageHealthStateChunkList
    type: Class
    summary: "<p>含むリストを表す<xref uid=\"system.fabric.health._deployed_service_package_health_state_chunk\" data-throw-if-not-resolved=\"false\">DeployedServicePackageHealthStateChunk</xref>項目。 </p>\n<p>\r\n\r\n  <b>注釈:</b>ヘルス状態のチャンク クエリを通じて、一覧を取得できます。 クエリは、メッセージを格納できる以上のチャンクを結果として必要があります。 この場合、メッセージに一致する項目の一覧が返されます、合計項目の数を示すカウントを利用できます。 </p>"
    syntax:
      content: public class DeployedServicePackageHealthStateChunkList