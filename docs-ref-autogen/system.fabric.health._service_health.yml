### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._service_health
    id: _service_health
    parent: system.fabric.health
    children:
      - system.fabric.health._service_health.getPartitionHealthState()
      - system.fabric.health._service_health.getServiceName()
    href: system.fabric.health._service_health.yml
    langs:
      - java
    name: ServiceHealth
    nameWithType: ServiceHealth
    fullName: system.fabric.health.ServiceHealth
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealth.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealth.java
      startLine: 10
    package: system.fabric.health
    summary: '<p>によって返されるように、サービスのヘルスをについて説明します<xref uid="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getServiceHealthAsync(ServiceHealthQueryDescription)</xref>です。 </p>'
    syntax:
      content: public class ServiceHealth extends EntityHealth
    inheritance:
      - java.lang.Object
      - system.fabric.health._entity_health
    inheritedMembers:
      - 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
      - system.fabric.health._entity_health.getAggregatedHealthState()
      - system.fabric.health._entity_health.getHealthEvents()
      - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - uid: system.fabric.health._service_health.getPartitionHealthState()
    id: getPartitionHealthState()
    parent: system.fabric.health._service_health
    href: system.fabric.health._service_health.yml
    langs:
      - java
    name: getPartitionHealthState()
    nameWithType: ServiceHealth.getPartitionHealthState()
    fullName: List<PartitionHealthState> system.fabric.health.ServiceHealth.getPartitionHealthState()
    overload: system.fabric.health._service_health.getPartitionHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealth.java
      startLine: 52
    package: system.fabric.health
    summary: "<p>現在のサービスのパーティションの正常性状態を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>のみその点をパーティション分割、 <xref uid=\"system.fabric._service_health_query_description.getPartitionHealthStatesFilter()\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceHealthQueryDescription#getPartitionHealthStatesFilter()</xref> (指定した場合) が返されます。 入力のフィルターが指定されていない場合は、すべてのパーティションが返されます。 すべてのパーティションを評価すると、集計されたサービスの正常性を決定します。 </p>"
    syntax:
      content: public List<PartitionHealthState> getPartitionHealthState()
      return:
        type: 5618da2dsystem.fabric.health._partition_health_statea08ddfce
        description: <p>現在のサービスのパーティションの正常性の状態。 </p>
  - uid: system.fabric.health._service_health.getServiceName()
    id: getServiceName()
    parent: system.fabric.health._service_health
    href: system.fabric.health._service_health.yml
    langs:
      - java
    name: getServiceName()
    nameWithType: ServiceHealth.getServiceName()
    fullName: URI system.fabric.health.ServiceHealth.getServiceName()
    overload: system.fabric.health._service_health.getServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealth.java
      startLine: 37
    package: system.fabric.health
    summary: |-
      <p>サービス正常性エンティティを一意に識別するサービス名を取得します。</p>
      <p></p>
    syntax:
      content: public URI getServiceName()
      return:
        type: '62304784'
        description: <p>サービス正常性エンティティを一意に識別するサービスの名前。 </p>
references:
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric.health._service_health.getServiceName*
    name: getServiceName
    nameWithType: ServiceHealth.getServiceName
    fullName: URI system.fabric.health.ServiceHealth.getServiceName
    package: system.fabric.health
  - uid: 5618da2dsystem.fabric.health._partition_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._partition_health_state
        name: PartitionHealthState
        fullName: system.fabric.health.PartitionHealthState
        href: system.fabric.health._partition_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._service_health.getPartitionHealthState*
    name: getPartitionHealthState
    nameWithType: ServiceHealth.getPartitionHealthState
    fullName: List<PartitionHealthState> system.fabric.health.ServiceHealth.getPartitionHealthState
    package: system.fabric.health
  - uid: 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: 'EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    nameWithType: 'EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    fullName: 'system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    type: Constructor
    syntax:
      content: 'protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
      parameters:
        - id: aggregatedHealthState
          type: f75371fa
        - id: healthEvents
          type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        - id: unhealthyEvaluations
          type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  - uid: system.fabric.health._entity_health.getAggregatedHealthState()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getAggregatedHealthState()
    nameWithType: EntityHealth.getAggregatedHealthState()
    fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
    type: Method
    summary: |-
      <p>エンティティで集計された正常性状態を取得します。</p>
      <p></p>
    syntax:
      content: public HealthState getAggregatedHealthState()
      return:
        type: system.fabric.health._health_state
        description: "<p>\r\n\r\n  <xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState</xref>に基づいて Health Manager によって計算された集計された正常性状態を表す (存在する場合)、エンティティとその子でイベントを報告し、正常性ポリシーを必要に応じて。 </p>"
  - uid: system.fabric.health._entity_health.getHealthEvents()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getHealthEvents()
    nameWithType: EntityHealth.getHealthEvents()
    fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
    type: Method
    summary: "<p>エンティティで報告される正常性イベントを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>正常性イベントは、正常性ストアに送信される正常性レポートをに基づいて作成されます。 正常性ストアによって追加された追加のメタデータが含まれます。 </p>"
    syntax:
      content: public List<HealthEvent> getHealthEvents()
      return:
        type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        description: <p>エンティティの正常性イベントが報告されました。 </p>
  - uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getUnhealthyEvaluations()
    nameWithType: EntityHealth.getUnhealthyEvaluations()
    fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
    type: Method
    summary: |-
      <p>現在の集計された正常性状態が正常性マネージャーによってに返された理由を示す異常な評価を取得します。</p>
      <p></p>
    syntax:
      content: public List<HealthEvaluation> getUnhealthyEvaluations()
      return:
        type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
        description: <p>現在の集計された正常性状態が正常性マネージャーによってに返された理由を説明する異常な評価。 </p>
  - uid: system.fabric.health._entity_health
    parent: system.fabric.health
    href: system.fabric.health._entity_health.yml
    name: EntityHealth
    nameWithType: EntityHealth
    fullName: system.fabric.health.EntityHealth
    type: Class
    summary: <p>関連するクラスをすべてのエンティティのヘルスの基本クラスを表します。 </p>
    syntax:
      content: public class EntityHealth
  - uid: system.fabric.health._partition_health_state
    parent: system.fabric.health
    href: system.fabric.health._partition_health_state.yml
    name: PartitionHealthState
    nameWithType: PartitionHealthState
    fullName: system.fabric.health.PartitionHealthState
    type: Class
    summary: <p>パーティション識別子および集計された正常性状態を含むパーティションのヘルス状態を表します。 </p>
    syntax:
      content: public class PartitionHealthState extends EntityHealthState
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: <p>A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体 </p>
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._health_evaluation
    parent: system.fabric.health
    href: system.fabric.health._health_evaluation.yml
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    type: Class
    summary: <p>データとエンティティのヘルスを評価する正常性ストアによって使用されるアルゴリズムを記述する正常性評価を表します。 </p>
    syntax:
      content: public class HealthEvaluation
  - uid: system.fabric._service_health_query_description.getPartitionHealthStatesFilter()
    parent: system.fabric._service_health_query_description
    href: system.fabric._service_health_query_description.yml
    name: getPartitionHealthStatesFilter()
    nameWithType: ServiceHealthQueryDescription.getPartitionHealthStatesFilter()
    fullName: PartitionHealthStatesFilter system.fabric.ServiceHealthQueryDescription.getPartitionHealthStatesFilter()
    type: Method
    summary: "<p>フィルターを取得<xref uid=\"system.fabric.health._partition_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.PartitionHealthState</xref>子。 フィルターに一致する子のみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致する子のみが返されます。 すべての子は、集計されたサービスのヘルス状態を評価する使用されます。 フィルターが指定されていない場合は、パーティションのすべての子が返されます。 </p>"
    syntax:
      content: public PartitionHealthStatesFilter getPartitionHealthStatesFilter()
      return:
        type: system.fabric._partition_health_states_filter
        description: <p><xref uid="system.fabric._partition_health_states_filter" data-throw-if-not-resolved="false">System.fabric.PartitionHealthStatesFilter</xref>返されるパーティションの正常性状態をフィルター処理するために使用します。 </p>
  - uid: system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    name: getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    type: Method
    summary: |-
      <p>非同期的に、Service Fabric サービスのヘルス、指定したタイムアウト時間および取り消しを使用してトークン取得します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ServiceHealth> getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._service_health_query_description
          description: <p>クエリの説明。 </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p>Service Fabric サービスの正常性。 </p>