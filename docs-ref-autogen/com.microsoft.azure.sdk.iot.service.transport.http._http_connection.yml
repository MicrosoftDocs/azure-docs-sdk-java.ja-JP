### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    id: _http_connection
    parent: com.microsoft.azure.sdk.iot.service.transport.http
    children:
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.body
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connection
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection()
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection(URL,HttpMethod)'
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream(InputStream)
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis(int)
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader(String,String)'
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod(HttpMethod)
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput(byte [])'
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: HttpConnection
    nameWithType: HttpConnection
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
    type: Class
    source:
      remote: &ref_0
        path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 28
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-101">Java SE クラス HttpsURLConnection のラッパーです。</span><span class="sxs-lookup"><span data-stu-id="e31c8-101">A wrapper for the Java SE class HttpsURLConnection.</span></span> <span data-ttu-id="e31c8-102">モック フレームワーク JMockit でテストするときに、互換性の問題を回避するだけでなく HttpsURLConnection を使用する場合は、いくつかドキュメントに未記載の副作用を回避するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-102">Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection.</span></span> </p>
      <p><span data-ttu-id="e31c8-103">基になる HttpsURLConnection は、Java で透過的に管理されます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-103">The underlying HttpsURLConnection is transparently managed by Java.</span></span> <span data-ttu-id="e31c8-104">時間ごとに、接続を再利用する<xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref>が呼び出されると、入力ストリーム (入力ストリームまたは入力ストリームにアクセスできない場合、エラー ストリーム) を完全に読み取る必要があります。</span><span class="sxs-lookup"><span data-stu-id="e31c8-104">To reuse connections, for each time <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read.</span></span> <span data-ttu-id="e31c8-105">それ以外の場合、データはストリームとの接続では再利用可能なできません。</span><span class="sxs-lookup"><span data-stu-id="e31c8-105">Otherwise, the data remains in the stream and the connection will not be reusable.</span></span> </p>
    syntax:
      content: public class HttpConnection
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.body
    id: body
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: body
    nameWithType: HttpConnection.body
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body'
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 38
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: <p><span data-ttu-id="e31c8-106">本文。</span><span class="sxs-lookup"><span data-stu-id="e31c8-106">The body.</span></span> <span data-ttu-id="e31c8-107">HttpsURLConnection をサイレント モードで呼び出す<xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref>に出力ストリームが書き込まれたとき。</span><span class="sxs-lookup"><span data-stu-id="e31c8-107">HttpsURLConnection silently calls <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> when the output stream is written to.</span></span> <span data-ttu-id="e31c8-108">本文をバッファーし、まで出力ストリームに書き込みを遅延<xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-108">We buffer the body and defer writing to the output stream until <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> is called.</span></span> </p>
    syntax:
      content: 'protected byte [] body'
      return:
        type: ccd9418d
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
    id: connect()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: connect()
    nameWithType: HttpConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 89
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-109">コンス トラクターで指定された URL に要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-109">Sends the request to the URL given in the constructor.</span></span></p>
      <p></p>
    syntax: &ref_1
      content: public void connect()
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="e31c8-110">この例外は、接続を確立できませんでした、または不適切なステータス コードで、サーバーが応答した場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-110">This exception thrown if the connection could not be established, or the server responded with a bad status code.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connection
    id: connection
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: connection
    nameWithType: HttpConnection.connection
    fullName: final HttpsURLConnection com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 31
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: <p><span data-ttu-id="e31c8-111">基になる HTTPS 接続します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-111">The underlying HTTPS connection.</span></span> </p>
    syntax:
      content: protected final HttpsURLConnection connection
      return:
        type: 9d854a40
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders()
    id: getResponseHeaders()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: getResponseHeaders()
    nameWithType: HttpConnection.getResponseHeaders()
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 261
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-112">キーがヘッダー フィールドの名前、値は、ヘッダー フィールド名に関連付けられている値をマップとして応答ヘッダーを返します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-112">Returns the response headers as a Map, where the key is the header field name and the values are the values associated with the header field name.</span></span></p>
      <p></p>
    syntax:
      content: 'public Map<String, List<String>> getResponseHeaders()'
      return:
        type: b2319095
        description: <p><span data-ttu-id="e31c8-113">応答ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="e31c8-113">the response headers.</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="e31c8-114">この例外は、応答を受信しなかった場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-114">This exception thrown if no response was received.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus()
    id: getResponseStatus()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: getResponseStatus()
    nameWithType: HttpConnection.getResponseStatus()
    fullName: int com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 245
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-115">応答のステータス コードを返します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-115">Returns the response status code.</span></span></p>
      <p></p>
    syntax:
      content: public int getResponseStatus()
      return:
        type: f75371fa
        description: <p><span data-ttu-id="e31c8-116">応答ステータス コード。</span><span class="sxs-lookup"><span data-stu-id="e31c8-116">The response status code.</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="e31c8-117">この例外は、応答を受信しなかった場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-117">This exception thrown if no response was received.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection()
    id: HttpConnection()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: HttpConnection()
    nameWithType: HttpConnection.HttpConnection()
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 299
    package: com.microsoft.azure.sdk.iot.service.transport.http
    syntax:
      content: protected HttpConnection()
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection(URL,HttpMethod)'
    id: 'HttpConnection(URL,HttpMethod)'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'HttpConnection(URL url, HttpMethod method)'
    nameWithType: 'HttpConnection.HttpConnection(URL url, HttpMethod method)'
    fullName: 'com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 48
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-118">コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e31c8-118">Constructor.</span></span> <span data-ttu-id="e31c8-119">指定された URL への接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-119">Opens a connection to the given URL.</span></span></p>
      <p></p>
    syntax:
      content: 'public HttpConnection(URL url, HttpMethod method)'
      parameters:
        - id: url
          type: a891b3e6
          description: <p><span data-ttu-id="e31c8-120">HTTPS 接続の URL です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-120">The URL for the HTTPS connection.</span></span> </p>
        - id: method
          type: com.microsoft.azure.sdk.iot.service.transport.http._http_method
          description: <p><span data-ttu-id="e31c8-121">HTTPS メソッド (GET)。</span><span class="sxs-lookup"><span data-stu-id="e31c8-121">The HTTPS method (i.e. GET).</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="e31c8-122">接続が開かれるできなかった場合は、この例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-122">This exception is thrown if the connection was unable to be opened.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError()
    id: readError()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readError()
    nameWithType: HttpConnection.readError()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 220
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-123">エラー ストリームから読み取り、エラーの原因を返します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-123">Reads from the error stream and returns the error reason.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] readError()'
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="e31c8-124">エラーの理由です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-124">The error reason.</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="e31c8-125">この例外はスローされた場合は、入力ストリームにアクセスできませんでした、たとえば、サーバーに到達できませんでした。</span><span class="sxs-lookup"><span data-stu-id="e31c8-125">This exception thrown if the input stream could not be accessed, for example if the server could not be reached.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput()
    id: readInput()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readInput()
    nameWithType: HttpConnection.readInput()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 200
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-126">入力ストリーム (応答ストリーム) から読み取り、応答を返します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-126">Reads from the input stream (response stream) and returns the response.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] readInput()'
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="e31c8-127">応答本文です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-127">The response body.</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="e31c8-128">この例外はスローされた場合は、入力ストリームにアクセスできませんでした、たとえば、サーバーに到達できませんでした。</span><span class="sxs-lookup"><span data-stu-id="e31c8-128">This exception thrown if the input stream could not be accessed, for example if the server could not be reached.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream(InputStream)
    id: readInputStream(InputStream)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readInputStream(InputStream stream)
    nameWithType: HttpConnection.readInputStream(InputStream stream)
    fullName: 'static byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream stream)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 277
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-129">ストリームが空になるまでは、入力ストリームを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e31c8-129">Reads the input stream until the stream is empty.</span></span></p>
      <p></p>
    syntax:
      content: 'protected static byte [] readInputStream(InputStream stream)'
      parameters:
        - id: stream
          type: 76fcb9b7
          description: <p><span data-ttu-id="e31c8-130">入力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="e31c8-130">The input stream.</span></span></p>
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="e31c8-131">入力ストリームの内容。</span><span class="sxs-lookup"><span data-stu-id="e31c8-131">The content of the input stream.</span></span></p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="e31c8-132">この例外から入力ストリームを読み取れなかった場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="e31c8-132">This exception thrown if the input stream could not be read from.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis(int)
    id: setReadTimeoutMillis(int)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: setReadTimeoutMillis(int timeout)
    nameWithType: HttpConnection.setReadTimeoutMillis(int timeout)
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int timeout)
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 155
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-133">読み取りのタイムアウトをミリ秒単位で設定します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-133">Sets the read timeout in milliseconds.</span></span> <span data-ttu-id="e31c8-134">読み取りのタイムアウトは、サーバーは要求を受信後し、サーバーが返されるデータを送信する前に、(ミリ秒) の数です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-134">The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</span></span></p>
      <p></p>
    syntax:
      content: public void setReadTimeoutMillis(int timeout)
      parameters:
        - id: timeout
          type: f75371fa
          description: <p><span data-ttu-id="e31c8-135">読み取りのタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="e31c8-135">The read timeout.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader(String,String)'
    id: 'setRequestHeader(String,String)'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'setRequestHeader(String field, String value)'
    nameWithType: 'HttpConnection.setRequestHeader(String field, String value)'
    fullName: 'void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String field, String value)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 142
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-136">要求ヘッダー フィールドを指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-136">Sets the request header field to the given value.</span></span></p>
      <p></p>
    syntax:
      content: 'public void setRequestHeader(String field, String value)'
      parameters:
        - id: field
          type: '26831127'
          description: <p><span data-ttu-id="e31c8-137">ヘッダー フィールド名です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-137">The header field name.</span></span> </p>
        - id: value
          type: '26831127'
          description: <p><span data-ttu-id="e31c8-138">ヘッダー フィールドの値。</span><span class="sxs-lookup"><span data-stu-id="e31c8-138">The header field value.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod(HttpMethod)
    id: setRequestMethod(HttpMethod)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: setRequestMethod(HttpMethod method)
    nameWithType: HttpConnection.setRequestMethod(HttpMethod method)
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod method)
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 112
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-139">(つまり POST)、要求メソッドを設定します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-139">Sets the request method (i.e. POST).</span></span></p>
      <p></p>
    syntax:
      content: public void setRequestMethod(HttpMethod method)
      parameters:
        - id: method
          type: com.microsoft.azure.sdk.iot.service.transport.http._http_method
          description: <p><span data-ttu-id="e31c8-140">要求メソッド。</span><span class="sxs-lookup"><span data-stu-id="e31c8-140">The request method.</span></span></p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="e31c8-141">この例外を要求空でない本体と、新しいメソッドを持っている場合にスローされますが、POST または PUT です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-141">This exception thrown if the request currently has a non-empty body and the new method is not a POST or a PUT.</span></span> <span data-ttu-id="e31c8-142">これは、Java の HttpsURLConnection サイレントが変換されるため、HTTPS メソッド POST または PUT 要求に本文が記述されている場合です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-142">This is because Java's HttpsURLConnection silently converts the HTTPS method to POST or PUT if a body is written to the request.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput(byte [])'
    id: 'writeOutput(byte [])'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'writeOutput(byte[] body)'
    nameWithType: 'HttpConnection.writeOutput(byte[] body)'
    fullName: 'void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[] body)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 171
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p><span data-ttu-id="e31c8-143">要求で送信される本文を保存します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-143">Saves the body to be sent with the request.</span></span></p>
      <p></p>
    syntax:
      content: 'public void writeOutput(byte[] body)'
      parameters:
        - id: body
          type: ccd9418d
          description: <p><span data-ttu-id="e31c8-144">要求本文。</span><span class="sxs-lookup"><span data-stu-id="e31c8-144">The request body.</span></span></p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="e31c8-145">現在、要求に POST または PUT メソッドが使用していない、本文は空でない場合。</span><span class="sxs-lookup"><span data-stu-id="e31c8-145">if the request does not currently use method POST or PUT and the body is non-empty.</span></span> <span data-ttu-id="e31c8-146">これは、Java の HttpsURLConnection サイレントが変換されるため、HTTPS メソッド POST または PUT 要求に本文が記述されている場合です。</span><span class="sxs-lookup"><span data-stu-id="e31c8-146">This is because Java's HttpsURLConnection silently converts the HTTPS method to POST or PUT if a body is written to the request.</span></span> </p>
references:
  - uid: 9d854a40
    spec.java:
      - name: final HttpsURLConnection
        fullName: final HttpsURLConnection
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: a891b3e6
    spec.java:
      - name: URL
        fullName: URL
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    name: HttpConnection
    nameWithType: HttpConnection.HttpConnection
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect*
    name: connect
    nameWithType: HttpConnection.connect
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod*
    name: setRequestMethod
    nameWithType: HttpConnection.setRequestMethod
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader*
    name: setRequestHeader
    nameWithType: HttpConnection.setRequestHeader
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis*
    name: setReadTimeoutMillis
    nameWithType: HttpConnection.setReadTimeoutMillis
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput*
    name: writeOutput
    nameWithType: HttpConnection.writeOutput
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput*
    name: readInput
    nameWithType: HttpConnection.readInput
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError*
    name: readError
    nameWithType: HttpConnection.readError
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus*
    name: getResponseStatus
    nameWithType: HttpConnection.getResponseStatus
    fullName: int com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: b2319095
    spec.java:
      - name: 'Map<String, List<String>>'
        fullName: 'Map<String, List<String>>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders*
    name: getResponseHeaders
    nameWithType: HttpConnection.getResponseHeaders
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream*
    name: readInputStream
    nameWithType: HttpConnection.readInputStream
    fullName: 'static byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    name: connect()
    nameWithType: HttpConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
    type: Method
    summary: |-
      <p><span data-ttu-id="e31c8-147">コンス トラクターで指定された URL に要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="e31c8-147">Sends the request to the URL given in the constructor.</span></span></p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_method
    parent: com.microsoft.azure.sdk.iot.service.transport.http
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_method.yml
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
    type: Enum
    summary: <p><span data-ttu-id="e31c8-148">HTTPS 要求メソッド (GET)。</span><span class="sxs-lookup"><span data-stu-id="e31c8-148">The HTTPS request method (i.e. GET).</span></span> </p>
    syntax:
      content: public enum HttpMethod