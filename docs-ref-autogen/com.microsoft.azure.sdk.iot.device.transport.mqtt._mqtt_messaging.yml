### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging
    id: _mqtt_messaging
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.MqttMessaging(MqttConnection,String)'
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.send(Message)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.start()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.stop()
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.yml
    langs:
      - java
    name: MqttMessaging
    nameWithType: MqttMessaging
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
      startLine: 10
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: public class MqttMessaging extends Mqtt
    inheritance:
      - java.lang.Object
      - MqttCallback
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    inheritedMembers:
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connect()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connectionLost(Throwable)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.deliveryComplete(IMqttDeliveryToken)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.disconnect()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.isConnected()
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.messageArrived(String,MqttMessage)'
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.Mqtt(MqttConnection)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.peekMessage()
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.publish(String,byte [])'
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.receive()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.setDeviceClientConfig(DeviceClientConfig)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.subscribe(String)
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.MqttMessaging(MqttConnection,String)'
    id: 'MqttMessaging(MqttConnection,String)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.yml
    langs:
      - java
    name: 'MqttMessaging(MqttConnection mqttConnection, String deviceId)'
    nameWithType: 'MqttMessaging.MqttMessaging(MqttConnection mqttConnection, String deviceId)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.MqttMessaging(MqttConnection mqttConnection, String deviceId)'
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.MqttMessaging*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
      startLine: 16
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: 'public MqttMessaging(MqttConnection mqttConnection, String deviceId)'
      parameters:
        - id: mqttConnection
          type: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
        - id: deviceId
          type: '26831127'
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.send(Message)
    id: send(Message)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.yml
    langs:
      - java
    name: send(Message message)
    nameWithType: MqttMessaging.send(Message message)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.send(Message message)
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.send*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
      startLine: 59
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: public void send(Message message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.start()
    id: start()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.yml
    langs:
      - java
    name: start()
    nameWithType: MqttMessaging.start()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.start*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
      startLine: 39
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: public void start()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.stop()
    id: stop()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.yml
    langs:
      - java
    name: stop()
    nameWithType: MqttMessaging.stop()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.stop()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.stop*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java
      startLine: 51
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: public void stop()
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.MqttMessaging*
    name: MqttMessaging
    nameWithType: MqttMessaging.MqttMessaging
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.MqttMessaging
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.start*
    name: start
    nameWithType: MqttMessaging.start
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.stop*
    name: stop
    nameWithType: MqttMessaging.stop
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.stop
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_messaging.send*
    name: send
    nameWithType: MqttMessaging.send
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.send
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connect()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: connect()
    nameWithType: Mqtt.connect()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()
    type: Method
    summary: |-
      <p><span data-ttu-id="a26b7-101">Mqtt broker の接続に接続する方法です。</span><span class="sxs-lookup"><span data-stu-id="a26b7-101">Method to connect to mqtt broker connection.</span></span></p>
      <p></p>
    syntax:
      content: protected void connect()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.connectionLost(Throwable)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: connectionLost(Throwable throwable)
    nameWithType: Mqtt.connectionLost(Throwable throwable)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Throwable throwable)
    type: Method
    summary: <p><span data-ttu-id="a26b7-102">イベントは、MQTT ブローカーとの接続が失われた場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="a26b7-102">Event fired when the connection with the MQTT broker is lost.</span></span> </p>
    syntax:
      content: public void connectionLost(Throwable throwable)
      parameters:
        - id: throwable
          type: a04fafd7
          description: <p><span data-ttu-id="a26b7-103">接続を失うことの理由です。</span><span class="sxs-lookup"><span data-stu-id="a26b7-103">Reason for losing the connection.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.deliveryComplete(IMqttDeliveryToken)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    nameWithType: Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    type: Method
    summary: <p><span data-ttu-id="a26b7-104">イベントは、MQTT broker にメッセージが到着したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="a26b7-104">Event fired when the message arrived on the MQTT broker.</span></span> </p>
    syntax:
      content: public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
      parameters:
        - id: iMqttDeliveryToken
          type: 60649e1d
          description: <p><span data-ttu-id="a26b7-105">対象のメッセージが正常に送信 MqttDeliveryToken です。</span><span class="sxs-lookup"><span data-stu-id="a26b7-105">the MqttDeliveryToken for which the message was successfully sent.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.disconnect()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: disconnect()
    nameWithType: Mqtt.disconnect()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()
    type: Method
    summary: |-
      <p><span data-ttu-id="a26b7-106">Mqtt broker の接続を切断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="a26b7-106">Method to disconnect to mqtt broker connection.</span></span></p>
      <p></p>
    syntax:
      content: protected void disconnect()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.isConnected()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: isConnected()
    nameWithType: Mqtt.isConnected()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.isConnected()
    type: Method
    syntax:
      content: protected boolean isConnected()
      return:
        type: 4fc6e284
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.messageArrived(String,MqttMessage)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: 'messageArrived(String topic, MqttMessage mqttMessage)'
    nameWithType: 'Mqtt.messageArrived(String topic, MqttMessage mqttMessage)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.messageArrived(String topic, MqttMessage mqttMessage)'
    type: Method
    summary: <p><span data-ttu-id="a26b7-107">イベントは、MQTT broker にメッセージが到着したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="a26b7-107">Event fired when the message arrived on the MQTT broker.</span></span> </p>
    syntax:
      content: 'public void messageArrived(String topic, MqttMessage mqttMessage)'
      parameters:
        - id: topic
          type: '26831127'
          description: <p><span data-ttu-id="a26b7-108">どのようなメッセージのトピックに到着します。</span><span class="sxs-lookup"><span data-stu-id="a26b7-108">the topic on which message arrived.</span></span> </p>
        - id: mqttMessage
          type: e1250987
          description: <p><span data-ttu-id="a26b7-109">メッセージが到着した、 <xref uid="com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt" data-throw-if-not-resolved="false">Mqtt</xref> broker です。</span><span class="sxs-lookup"><span data-stu-id="a26b7-109">the message arrived on the <xref uid="com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt" data-throw-if-not-resolved="false">Mqtt</xref> broker.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.Mqtt(MqttConnection)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: Mqtt(MqttConnection mqttConnection)
    nameWithType: Mqtt.Mqtt(MqttConnection mqttConnection)
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.Mqtt(MqttConnection mqttConnection)
    type: Constructor
    summary: <p><span data-ttu-id="a26b7-110">Mqtt broker の接続をインスタンス化するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="a26b7-110">Constructor to instantiate mqtt broker connection.</span></span> </p>
    syntax:
      content: public Mqtt(MqttConnection mqttConnection)
      parameters:
        - id: mqttConnection
          type: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
          description: <p><span data-ttu-id="a26b7-111">接続を使用するには</span><span class="sxs-lookup"><span data-stu-id="a26b7-111">the connection to use</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.peekMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: peekMessage()
    nameWithType: Mqtt.peekMessage()
    fullName: 'Pair<String, byte[]> com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.peekMessage()'
    type: Method
    syntax:
      content: 'public Pair<String, byte[]> peekMessage()'
      return:
        type: 667c7c32
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.publish(String,byte [])'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: 'publish(String publishTopic, byte[] payload)'
    nameWithType: 'Mqtt.publish(String publishTopic, byte[] payload)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.publish(String publishTopic, byte[] payload)'
    type: Method
    summary: |-
      <p><span data-ttu-id="a26b7-112">Mqtt broker の接続に公開するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a26b7-112">Method to publish to mqtt broker connection.</span></span></p>
      <p></p>
    syntax:
      content: 'protected void publish(String publishTopic, byte[] payload)'
      parameters:
        - id: publishTopic
          type: '26831127'
          description: <p><span data-ttu-id="a26b7-113">mqtt broker 接続上でパブリッシュするトピックです。</span><span class="sxs-lookup"><span data-stu-id="a26b7-113">the topic to publish on mqtt broker connection.</span></span> </p>
        - id: payload
          type: ccd9418d
          description: <p><span data-ttu-id="a26b7-114">mqtt broker 接続の publishTopic 上でパブリッシュするペイロード。</span><span class="sxs-lookup"><span data-stu-id="a26b7-114">the payload to publish on publishTopic of mqtt broker connection.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.receive()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: receive()
    nameWithType: Mqtt.receive()
    fullName: Message com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.receive()
    type: Method
    summary: |-
      <p><span data-ttu-id="a26b7-115">Mqtt broker の接続でメッセージを受信するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a26b7-115">Method to receive messages on mqtt broker connection.</span></span></p>
      <p></p>
    syntax:
      content: public Message receive()
      return:
        type: com.microsoft.azure.sdk.iot.device._message
        description: "<p><span data-ttu-id=\"a26b7-116\">受信したメッセージ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a26b7-116\">a received message.</span></span> <span data-ttu-id=\"a26b7-117\">できます。<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"a26b7-117\">It can be<code>null \r\n\r\n    </code></span></span></p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.setDeviceClientConfig(DeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: setDeviceClientConfig(DeviceClientConfig deviceConfig)
    nameWithType: Mqtt.setDeviceClientConfig(DeviceClientConfig deviceConfig)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.setDeviceClientConfig(DeviceClientConfig deviceConfig)
    type: Method
    summary: <p><span data-ttu-id="a26b7-118">SAS トークンの検証に使用するデバイス クライアントの構成を設定します。</span><span class="sxs-lookup"><span data-stu-id="a26b7-118">Set device client configuration used for SAS token validation.</span></span> </p>
    syntax:
      content: protected void setDeviceClientConfig(DeviceClientConfig deviceConfig)
      parameters:
        - id: deviceConfig
          type: com.microsoft.azure.sdk.iot.device._device_client_config
          description: <p><span data-ttu-id="a26b7-119">デバイス クライアントの構成を設定するには</span><span class="sxs-lookup"><span data-stu-id="a26b7-119">is the device client configuration to be set</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.subscribe(String)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: subscribe(String topic)
    nameWithType: Mqtt.subscribe(String topic)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(String topic)
    type: Method
    summary: |-
      <p><span data-ttu-id="a26b7-120">Mqtt broker の接続をサブスクライブするメソッド。</span><span class="sxs-lookup"><span data-stu-id="a26b7-120">Method to subscribe to mqtt broker connection.</span></span></p>
      <p></p>
    syntax:
      content: protected void subscribe(String topic)
      parameters:
        - id: topic
          type: '26831127'
          description: <p><span data-ttu-id="a26b7-121">mqtt broker の接続にサブスクライブするトピックです。</span><span class="sxs-lookup"><span data-stu-id="a26b7-121">the topic to subscribe on mqtt broker connection.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt.yml
    name: Mqtt
    nameWithType: Mqtt
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt
    type: Class
    syntax:
      content: public class Mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_connection.yml
    name: MqttConnection
    nameWithType: MqttConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttConnection
    type: Class
    syntax:
      content: public class MqttConnection
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message