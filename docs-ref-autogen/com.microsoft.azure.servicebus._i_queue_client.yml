### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._i_queue_client
    id: _i_queue_client
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._i_queue_client.getQueueName()
      - com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: IQueueClient
    nameWithType: IQueueClient
    fullName: com.microsoft.azure.servicebus.IQueueClient
    type: Interface
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 8
    package: com.microsoft.azure.servicebus
    summary: "<p><span data-ttu-id=\"b65e1-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._queue_client\" data-throw-if-not-resolved=\"false\">QueueClient</xref> Service Bus キューとすべての基本的な対話に使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b65e1-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._queue_client\" data-throw-if-not-resolved=\"false\">QueueClient</xref> can be used for all basic interactions with a Service Bus Queue.</span></span> </p>"
    syntax:
      content: 'public interface IQueueClient extends IMessageSender,IMessageEntityClient'
    inheritedMembers:
      - com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
      - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.complete(UUID)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.completeAsync(UUID)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.getPrefetchCount()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
      - 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
      - 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
      - com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
      - com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
      - com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.setPrefetchCount(int)
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
    id: getQueueName()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: getQueueName()
    nameWithType: IQueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName()
    overload: com.microsoft.azure.servicebus._i_queue_client.getQueueName*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 22
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="b65e1-102">キューの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-102">Gets the name of the queue.</span></span></p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b65e1-103">キューの名前。</span><span class="sxs-lookup"><span data-stu-id="b65e1-103">The name of the queue.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    id: getReceiveMode()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: getReceiveMode()
    nameWithType: IQueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode()
    overload: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 15
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="b65e1-104">取得、 <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref>現在受信機の</span><span class="sxs-lookup"><span data-stu-id="b65e1-104">Gets the <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> of the current receiver</span></span></p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p><span data-ttu-id="b65e1-105">受信モードです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-105">The receive mode.</span></span> </p>
references:
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode*
    name: getReceiveMode
    nameWithType: IQueueClient.getReceiveMode
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName*
    name: getQueueName
    nameWithType: IQueueClient.getQueueName
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-106">まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-106">Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued.</span></span> <span data-ttu-id="b65e1-107">このメソッドは、エンティティにメッセージが送信されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-107">This method blocks until the message is sent to the entity.</span></span> <span data-ttu-id="b65e1-108">このメソッドを呼び出すことを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-108">Calling this method is equivalent to calling .</span></span> <span data-ttu-id="b65e1-109">パフォーマンス向上のためには、非同期メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-109">For better performance, use async methods.</span></span></p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="b65e1-110">スケジュールされたメッセージのシーケンス番号</span><span class="sxs-lookup"><span data-stu-id="b65e1-110">sequence number of the scheduled message</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-111">まだいなかったにキュー入れられた場合は、送信済みのスケジュールされたメッセージのキューに登録をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-111">Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued.</span></span> <span data-ttu-id="b65e1-112">これは、メッセージが取り消されたときに完了する CompletableFuture を返す非同期メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-112">This is an asynchronous method returning a CompletableFuture which completes when the message is cancelled.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p><span data-ttu-id="b65e1-113">スケジュールされたメッセージのシーケンス番号</span><span class="sxs-lookup"><span data-stu-id="b65e1-113">sequence number of the scheduled message</span></span> </p>
      return:
        type: db03ee24
        description: <p><span data-ttu-id="b65e1-114">保留中の取り消しを表す CompletableFuture</span><span class="sxs-lookup"><span data-stu-id="b65e1-114">a CompletableFuture representing the pending cancellation</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: <p><span data-ttu-id="b65e1-115">同期的に終了し、このオブジェクトに関連付けられているすべてのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-115">Synchronously closes and disposes any resources associated with this object.</span></span> <span data-ttu-id="b65e1-116">このメソッドを呼び出すことは、呼び出し元のと同じです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-116">Calling this method is equivalent of calling .</span></span> <span data-ttu-id="b65e1-117">このメソッドはブロックされるまでオブジェクトが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b65e1-117">This method blocks until this object is closed.</span></span> </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: <p><span data-ttu-id="b65e1-118">終了し、このオブジェクトに関連付けられているすべてのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-118">Closes and disposes any resources associated with this object.</span></span> <span data-ttu-id="b65e1-119">閉じられた後、オブジェクトを使用できません。</span><span class="sxs-lookup"><span data-stu-id="b65e1-119">An object cannot be used after it is closed.</span></span> <span data-ttu-id="b65e1-120">これは、すぐに、CompletableFuture を返す非同期メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-120">This is an asynchronous method that returns a CompletableFuture immediately.</span></span> <span data-ttu-id="b65e1-121">このオブジェクトは、返された CompletableFuture が完了したときに完全に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b65e1-121">This object is completely closed when the returned CompletableFuture is completed.</span></span> </p>
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: <p><span data-ttu-id="b65e1-122">このオブジェクトの終了を表す CompletableFuture です。</span><span class="sxs-lookup"><span data-stu-id="b65e1-122">a CompletableFuture representing the closing of this object.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.complete(UUID)
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.completeAsync(UUID)
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-123">メッセージが送信または受信側のメッセージをこのクライアントは、エンティティのパスを取得します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-123">Gets the path of the entity this client is sending messages to or receiving messages from.</span></span></p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b65e1-124">このクライアントが接続するエンティティのパス</span><span class="sxs-lookup"><span data-stu-id="b65e1-124">path of the entity this client is connecting to</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.getPrefetchCount()
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-125">接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-125">Sends a scheduled message to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-126">スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-126">A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time.</span></span> <span data-ttu-id="b65e1-127">このメソッドは、エンティティにメッセージが送信されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-127">This method blocks until the message is sent to the entity.</span></span> <span data-ttu-id="b65e1-128">このメソッドを呼び出すことを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-128">Calling this method is equivalent to calling .</span></span> <span data-ttu-id="b65e1-129">パフォーマンス向上のためには、非同期メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-129">For better performance, use async methods.</span></span></p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p><span data-ttu-id="b65e1-130">エンティティに送信されるメッセージ</span><span class="sxs-lookup"><span data-stu-id="b65e1-130">message to be sent to the entity</span></span> </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p><span data-ttu-id="b65e1-131">インスタント メッセージをエンティティにエンキューをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b65e1-131">instant at which the message should be enqueued in the entity</span></span> </p>
      return:
        type: 0364520f
        description: <p><span data-ttu-id="b65e1-132">スケジュールされたメッセージのシーケンス番号</span><span class="sxs-lookup"><span data-stu-id="b65e1-132">sequence number of the scheduled message</span></span> </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-133">接続されているこのセンダーで、Azure Service Bus エンティティにスケジュールされたメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-133">Sends a scheduled message to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-134">スケジュールされたメッセージ キューに入れられるされレシーバー スケジュール エンキュー時にのみです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-134">A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time.</span></span> <span data-ttu-id="b65e1-135">これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-135">This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity.</span></span> <span data-ttu-id="b65e1-136">完了時に、CompletableFuture では、メッセージのスケジュールをキャンセルするために使用するスケジュールされたメッセージのシーケンス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-136">The CompletableFuture, on completion, returns the sequence number of the scheduled message which can be used to cancel the scheduling of the message.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p><span data-ttu-id="b65e1-137">エンティティに送信されるメッセージ</span><span class="sxs-lookup"><span data-stu-id="b65e1-137">message to be sent to the entity</span></span> </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: <p><span data-ttu-id="b65e1-138">インスタント メッセージをエンティティにエンキューをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b65e1-138">instant at which the message should be enqueued in the entity</span></span> </p>
      return:
        type: 30822cb1
        description: '<p><span data-ttu-id="b65e1-139">スケジュールされたメッセージのシーケンス番号を返しますの保留中の送信を表す CompletableFuture です。</span><span class="sxs-lookup"><span data-stu-id="b65e1-139">a CompletableFuture representing the pending send, which returns the sequence number of the scheduled message.</span></span> <span data-ttu-id="b65e1-140">このシーケンス番号は、メッセージのスケジュール設定 [キャンセル] を使用できます。</span><span class="sxs-lookup"><span data-stu-id="b65e1-140">This sequence number can be used to cancel the scheduling of the message.</span></span> </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: send(IMessage message)
    nameWithType: IMessageSender.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-141">接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-141">Sends a message to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-142">このメソッドは、エンティティにメッセージが送信されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-142">This method blocks until the message is sent to the entity.</span></span> <span data-ttu-id="b65e1-143">このメソッドを呼び出すことを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-143">Calling this method is equivalent to calling .</span></span> <span data-ttu-id="b65e1-144">パフォーマンス向上のためには、非同期メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-144">For better performance, use async methods.</span></span></p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p><span data-ttu-id="b65e1-145">エンティティに送信されるメッセージ</span><span class="sxs-lookup"><span data-stu-id="b65e1-145">message to be sent to the entity</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendAsync(IMessage message)
    nameWithType: IMessageSender.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-146">接続されているこのセンダーで、Azure Service Bus エンティティにメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-146">Sends a message to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-147">これは、エンティティにメッセージが送信されるときに完了する CompletableFuture を返す非同期メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-147">This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p><span data-ttu-id="b65e1-148">エンティティに送信されるメッセージ</span><span class="sxs-lookup"><span data-stu-id="b65e1-148">message to be sent to the entity</span></span> </p>
      return:
        type: db03ee24
        description: <p><span data-ttu-id="b65e1-149">保留中の送信を表す CompletableFuture</span><span class="sxs-lookup"><span data-stu-id="b65e1-149">a CompletableFuture representing the pending send</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-150">接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-150">Sends a batch of messages to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-151">このメソッドは、バッチが、エンティティに送信されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="b65e1-151">This method blocks until the batch is sent to the entity.</span></span> <span data-ttu-id="b65e1-152">このメソッドを呼び出すことを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-152">Calling this method is equivalent to calling .</span></span> <span data-ttu-id="b65e1-153">パフォーマンス向上のためには、非同期メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-153">For better performance, use async methods.</span></span></p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p><span data-ttu-id="b65e1-154">エンティティに送信されるメッセージのコレクション</span><span class="sxs-lookup"><span data-stu-id="b65e1-154">collection of messages to be sent to the entity</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-155">接続されているこのセンダーで、Azure Service Bus エンティティにメッセージのバッチを送信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-155">Sends a batch of messages to the Azure Service Bus entity this sender is connected to.</span></span> <span data-ttu-id="b65e1-156">これは、エンティティに送信されると、バッチが完了 CompletableFuture を返す非同期メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-156">This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p><span data-ttu-id="b65e1-157">エンティティに送信されるメッセージのコレクション</span><span class="sxs-lookup"><span data-stu-id="b65e1-157">collection of messages to be sent to the entity</span></span> </p>
      return:
        type: db03ee24
        description: <p><span data-ttu-id="b65e1-158">保留中の送信を表す CompletableFuture</span><span class="sxs-lookup"><span data-stu-id="b65e1-158">a CompletableFuture representing the pending send</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.setPrefetchCount(int)
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p><span data-ttu-id="b65e1-159">Azure Service Bus にメッセージを送信するメッセージの送信者を表します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-159">Represents a message sender that sends messages to Azure Service Bus.</span></span></p>
      <p></p>
    syntax:
      content: public interface IMessageSender extends IMessageEntityClient
  - uid: com.microsoft.azure.servicebus._i_message_entity_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: IMessageEntityClient
    nameWithType: IMessageEntityClient
    fullName: com.microsoft.azure.servicebus.IMessageEntityClient
    type: Interface
    summary: |-
      <p><span data-ttu-id="b65e1-160">Azure Service Bus エンティティには、メッセージング クライアントを表します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-160">Represents a messaging client to an Azure Service Bus entity.</span></span></p>
      <p></p>
    syntax:
      content: public interface IMessageEntityClient extends ICloseable
  - uid: com.microsoft.azure.servicebus._queue_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: QueueClient
    nameWithType: QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient
    type: Class
    syntax:
      content: public class QueueClient
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p><span data-ttu-id="b65e1-161">2 つを表す列挙体は、Azure Service Bus をサポートしているモードを受信します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-161">Enumeration to represent the two receive modes Azure Service Bus supports.</span></span></p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: getReceiveMode()
    nameWithType: QueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode()
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-162">取得、 <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref>現在受信機の</span><span class="sxs-lookup"><span data-stu-id="b65e1-162">Gets the <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> of the current receiver</span></span></p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p><span data-ttu-id="b65e1-163">受信モードです。</span><span class="sxs-lookup"><span data-stu-id="b65e1-163">The receive mode.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: getQueueName()
    nameWithType: QueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName()
    type: Method
    summary: |-
      <p><span data-ttu-id="b65e1-164">キューの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b65e1-164">Gets the name of the queue.</span></span></p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b65e1-165">キューの名前。</span><span class="sxs-lookup"><span data-stu-id="b65e1-165">The name of the queue.</span></span> </p>