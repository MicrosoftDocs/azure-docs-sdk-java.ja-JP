### YamlMime:ManagedReference
items:
  - uid: system.fabric._stateful_service_partition
    id: _stateful_service_partition
    parent: system.fabric
    children:
      - 'system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)'
      - 'system.fabric._stateful_service_partition.createTransactionalReplicator(ReplicatorSettings,TransactionalReplicatorSettings,KtlLoggerSharedLogSettings)'
      - system.fabric._stateful_service_partition.getReadStatus()
      - system.fabric._stateful_service_partition.getwriteStatus()
      - system.fabric._stateful_service_partition.reportReplicaHealth(HealthInformation)
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: StatefulServicePartition
    nameWithType: StatefulServicePartition
    fullName: system.fabric.StatefulServicePartition
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 5
    package: system.fabric
    syntax:
      content: public interface StatefulServicePartition extends ServicePartition
    inheritedMembers:
      - system.fabric._service_partition.getPartitionInfo()
      - system.fabric._service_partition.reportFault(FaultType)
      - system.fabric._service_partition.reportLoad(Collection<LoadMetric>)
      - system.fabric._service_partition.reportMoveCost(MoveCost)
      - system.fabric._service_partition.reportPartitionHealth(HealthInformation)
  - uid: 'system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)'
    id: 'createReplicator(StateProvider,ReplicatorSettings)'
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: 'createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    nameWithType: 'StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    fullName: 'FabricReplicator system.fabric.StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    overload: system.fabric._stateful_service_partition.createReplicator*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 51
    package: system.fabric
    summary: "<p><span data-ttu-id=\"33f81-101\">作成、 <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>指定された設定で、レプリカに返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-101\">Creates a <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> with the specified settings and returns it to the replica.</span></span></p>\n<p><span data-ttu-id=\"33f81-102\">\r\n\r\n  <b>注釈:</b>の作成にこのメソッドを使用する必要があります、 <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>サービスとして、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> を実装するステートフルなサービス<xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-102\">\r\n\r\n  <b>Remarks:</b>This method should be used to create a <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> to service as the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for a stateful service that implements <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>.</span></span> </p>"
    syntax:
      content: 'public FabricReplicator createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: stateProvider
          type: system.fabric._state_provider
          description: '<p><span data-ttu-id="33f81-103"><xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">System.fabric.StateProvider</xref>いる、返された<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>関連付けする必要があります。</span><span class="sxs-lookup"><span data-stu-id="33f81-103">The <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> with which the returned <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> should be associated.</span></span> <span data-ttu-id="33f81-104">これは、多くの場合、同じオブジェクトを実装する<xref uid="system.fabric._stateful_service_replica" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica</xref>、特定のサービスを異なる方法で考慮することがありますが、します。</span><span class="sxs-lookup"><span data-stu-id="33f81-104">This is often the same object that implements <xref uid="system.fabric._stateful_service_replica" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica</xref>, but certain services might be factored differently.</span></span> </p>'
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: "<p><span data-ttu-id=\"33f81-105\">\r\n\r\n  <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref>いる、返された<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>構成する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-105\">\r\n\r\n  <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref> with which the returned <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> should be configured.</span></span> </p>"
      return:
        type: system.fabric._fabric_replicator
        description: <p><span data-ttu-id="33f81-106">返します<xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>です。</span><span class="sxs-lookup"><span data-stu-id="33f81-106">Returns <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>
  - uid: 'system.fabric._stateful_service_partition.createTransactionalReplicator(ReplicatorSettings,TransactionalReplicatorSettings,KtlLoggerSharedLogSettings)'
    id: 'createTransactionalReplicator(ReplicatorSettings,TransactionalReplicatorSettings,KtlLoggerSharedLogSettings)'
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: 'createTransactionalReplicator(ReplicatorSettings replicatorSettings, TransactionalReplicatorSettings txReplicatorSettings, KtlLoggerSharedLogSettings ktLogSettings)'
    nameWithType: 'StatefulServicePartition.createTransactionalReplicator(ReplicatorSettings replicatorSettings, TransactionalReplicatorSettings txReplicatorSettings, KtlLoggerSharedLogSettings ktLogSettings)'
    fullName: 'FabricReplicator system.fabric.StatefulServicePartition.createTransactionalReplicator(ReplicatorSettings replicatorSettings, TransactionalReplicatorSettings txReplicatorSettings, KtlLoggerSharedLogSettings ktLogSettings)'
    overload: system.fabric._stateful_service_partition.createTransactionalReplicator*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 53
    package: system.fabric
    syntax:
      content: 'public FabricReplicator createTransactionalReplicator(ReplicatorSettings replicatorSettings, TransactionalReplicatorSettings txReplicatorSettings, KtlLoggerSharedLogSettings ktLogSettings)'
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
        - id: txReplicatorSettings
          type: system.fabric._transactional_replicator_settings
        - id: ktLogSettings
          type: system.fabric._ktl_logger_shared_log_settings
      return:
        type: system.fabric._fabric_replicator
  - uid: system.fabric._stateful_service_partition.getReadStatus()
    id: getReadStatus()
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: getReadStatus()
    nameWithType: StatefulServicePartition.getReadStatus()
    fullName: PartitionAccessStatus system.fabric.StatefulServicePartition.getReadStatus()
    overload: system.fabric._stateful_service_partition.getReadStatus*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 17
    package: system.fabric
    summary: "<p><span data-ttu-id=\"33f81-107\">読み取り操作に関して、レプリカの準備の確認に使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-107\">Used to check the readiness of the replica in regard to read operations.</span></span></p>\n<p><span data-ttu-id=\"33f81-108\">\r\n\r\n  <b>注釈:</b>レプリカが読み取り操作は、顧客の要求を処理する前に、readStatus をチェックする必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-108\">\r\n\r\n  <b>Remarks:</b>The readStatus should be checked before the replica is servicing a customer request that is a read operation.</span></span> </p>"
    syntax:
      content: public PartitionAccessStatus getReadStatus()
      return:
        type: system.fabric._partition_access_status
        description: "<p><span data-ttu-id=\"33f81-109\">\r\n\r\n  <xref uid=\"system.fabric._partition_access_status\" data-throw-if-not-resolved=\"false\">system.fabric.PartitionAccessStatus</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-109\">\r\n\r\n  <xref uid=\"system.fabric._partition_access_status\" data-throw-if-not-resolved=\"false\">system.fabric.PartitionAccessStatus</xref>.</span></span> </p>"
    exceptions:
      - type: system.fabric.exception._fabric_object_closed_exception
        description: <p><span data-ttu-id="33f81-110">これは、パーティション オブジェクトが閉じていることを示します。</span><span class="sxs-lookup"><span data-stu-id="33f81-110">This indicates that the partition object is closed.</span></span> <span data-ttu-id="33f81-111">レプリカ/レプリケーター/インスタンスが閉じられたか、またはは閉じられます。</span><span class="sxs-lookup"><span data-stu-id="33f81-111">The replica/replicator/instance has either been closed or is about to be closed.</span></span> </p>
  - uid: system.fabric._stateful_service_partition.getwriteStatus()
    id: getwriteStatus()
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: getwriteStatus()
    nameWithType: StatefulServicePartition.getwriteStatus()
    fullName: PartitionAccessStatus system.fabric.StatefulServicePartition.getwriteStatus()
    overload: system.fabric._stateful_service_partition.getwriteStatus*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 30
    package: system.fabric
    summary: "<p><span data-ttu-id=\"33f81-112\">書き込み操作についてそのパーティションの準備の確認に使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-112\">Used to check the readiness of the partition in regard to write operations.</span></span></p>\n<p><span data-ttu-id=\"33f81-113\">\r\n\r\n  <b>注釈:</b>レプリカは、書き込み操作は、顧客の要求をサービスする前に、WriteStatus をチェックする必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-113\">\r\n\r\n  <b>Remarks:</b>The WriteStatus should be checked before the replica services a customer request that is a write operation.</span></span> </p>"
    syntax:
      content: public PartitionAccessStatus getwriteStatus()
      return:
        type: system.fabric._partition_access_status
        description: "<p><span data-ttu-id=\"33f81-114\">\r\n\r\n  <xref uid=\"system.fabric._partition_access_status\" data-throw-if-not-resolved=\"false\">system.fabric.PartitionAccessStatus</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-114\">\r\n\r\n  <xref uid=\"system.fabric._partition_access_status\" data-throw-if-not-resolved=\"false\">system.fabric.PartitionAccessStatus</xref>.</span></span> </p>"
    exceptions:
      - type: system.fabric.exception._fabric_object_closed_exception
        description: <p><span data-ttu-id="33f81-115">これは、パーティション オブジェクトが閉じていることを示します。</span><span class="sxs-lookup"><span data-stu-id="33f81-115">This indicates that the partition object is closed.</span></span> <span data-ttu-id="33f81-116">レプリカ/レプリケーター/インスタンスが閉じられたか、またはは閉じられます。</span><span class="sxs-lookup"><span data-stu-id="33f81-116">The replica/replicator/instance has either been closed or is about to be closed.</span></span> </p>
  - uid: system.fabric._stateful_service_partition.reportReplicaHealth(HealthInformation)
    id: reportReplicaHealth(HealthInformation)
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    langs:
      - java
    name: reportReplicaHealth(HealthInformation healthInfo)
    nameWithType: StatefulServicePartition.reportReplicaHealth(HealthInformation healthInfo)
    fullName: void system.fabric.StatefulServicePartition.reportReplicaHealth(HealthInformation healthInfo)
    overload: system.fabric._stateful_service_partition.reportReplicaHealth*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServicePartition.java
      startLine: 61
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="33f81-117">このパーティションに関連付けられている現在のレプリカの正常性を報告します。</span><span class="sxs-lookup"><span data-stu-id="33f81-117">Reports health of the current replica associated with this partition.</span></span></p>
      <p></p>
    syntax:
      content: public void reportReplicaHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p><span data-ttu-id="33f81-118">ヘルス情報をレポートします。</span><span class="sxs-lookup"><span data-stu-id="33f81-118">Health information that is to be reported.</span></span> </p>
references:
  - uid: system.fabric._stateful_service_partition.getReadStatus*
    name: getReadStatus
    nameWithType: StatefulServicePartition.getReadStatus
    fullName: PartitionAccessStatus system.fabric.StatefulServicePartition.getReadStatus
    package: system.fabric
  - uid: system.fabric._stateful_service_partition.getwriteStatus*
    name: getwriteStatus
    nameWithType: StatefulServicePartition.getwriteStatus
    fullName: PartitionAccessStatus system.fabric.StatefulServicePartition.getwriteStatus
    package: system.fabric
  - uid: system.fabric._stateful_service_partition.createReplicator*
    name: createReplicator
    nameWithType: StatefulServicePartition.createReplicator
    fullName: FabricReplicator system.fabric.StatefulServicePartition.createReplicator
    package: system.fabric
  - uid: system.fabric._stateful_service_partition.createTransactionalReplicator*
    name: createTransactionalReplicator
    nameWithType: StatefulServicePartition.createTransactionalReplicator
    fullName: FabricReplicator system.fabric.StatefulServicePartition.createTransactionalReplicator
    package: system.fabric
  - uid: system.fabric._stateful_service_partition.reportReplicaHealth*
    name: reportReplicaHealth
    nameWithType: StatefulServicePartition.reportReplicaHealth
    fullName: void system.fabric.StatefulServicePartition.reportReplicaHealth
    package: system.fabric
  - uid: system.fabric._service_partition.getPartitionInfo()
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: getPartitionInfo()
    nameWithType: ServicePartition.getPartitionInfo()
    fullName: ServicePartitionInformation system.fabric.ServicePartition.getPartitionInfo()
    type: Method
    summary: |-
      <p><span data-ttu-id="33f81-119">アクセスできるように、 <xref uid="system.fabric._service_partition_information" data-throw-if-not-resolved="false">system.fabric.ServicePartitionInformation</xref>パーティションの種類および ID を格納する、サービスの</span><span class="sxs-lookup"><span data-stu-id="33f81-119">Provides access to the <xref uid="system.fabric._service_partition_information" data-throw-if-not-resolved="false">system.fabric.ServicePartitionInformation</xref> of the service, which contains the partition type and ID.</span></span></p>
      <p></p>
    syntax:
      content: public ServicePartitionInformation getPartitionInfo()
      return:
        type: system.fabric._service_partition_information
        description: <p><span data-ttu-id="33f81-120">返します<xref uid="system.fabric._service_partition_information" data-throw-if-not-resolved="false">system.fabric.ServicePartitionInformation</xref>です。</span><span class="sxs-lookup"><span data-stu-id="33f81-120">Returns <xref uid="system.fabric._service_partition_information" data-throw-if-not-resolved="false">system.fabric.ServicePartitionInformation</xref>.</span></span> </p>
  - uid: system.fabric._service_partition.reportFault(FaultType)
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: reportFault(FaultType faultType)
    nameWithType: ServicePartition.reportFault(FaultType faultType)
    fullName: void system.fabric.ServicePartition.reportFault(FaultType faultType)
    type: Method
    summary: "<p><span data-ttu-id=\"33f81-121\">負荷分散のメトリックのセットの負荷を報告します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-121\">Reports the load for a set of load balancing metrics.</span></span> <span data-ttu-id=\"33f81-122\">いつでも、負荷を報告することができます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref>の<xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref>メソッドの 1 つまたは複数のプロパティを提供し、 <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref>メソッド.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-122\">The load can be reported at any time via the <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref> of <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref> method and provides one or more properties of the <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref> method.</span></span></p>\n<p><span data-ttu-id=\"33f81-123\">\r\n\r\n  <b>注釈:</b>エラーは通常報告サービス コードが検出したときに回復できませんから一部を発行します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-123\">\r\n\r\n  <b>Remarks:</b>A fault is typically reported when the service code encounters some issue from which it cannot recover.</span></span> </p>"
    syntax:
      content: public void reportFault(FaultType faultType)
      parameters:
        - id: faultType
          type: system.fabric._fault_type
          description: <p><span data-ttu-id="33f81-124"><xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">System.fabric.LoadMetric</xref>サービスで検出されました。</span><span class="sxs-lookup"><span data-stu-id="33f81-124">The <xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">system.fabric.LoadMetric</xref> that the service has encountered.</span></span> </p>
  - uid: system.fabric._service_partition.reportLoad(Collection<LoadMetric>)
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: reportLoad(Collection<LoadMetric> metrics)
    nameWithType: ServicePartition.reportLoad(Collection<LoadMetric> metrics)
    fullName: void system.fabric.ServicePartition.reportLoad(Collection<LoadMetric> metrics)
    type: Method
    summary: "<p><span data-ttu-id=\"33f81-125\">負荷分散のメトリックのセットの負荷を報告します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-125\">Reports the load for a set of load balancing metrics.</span></span> <span data-ttu-id=\"33f81-126\">いつでも、負荷を報告することができます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref>の<xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref>メソッドの 1 つまたは複数のプロパティを提供し、 <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref>メソッド.</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-126\">The load can be reported at any time via the <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref> of <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref> method and provides one or more properties of the <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref> method.</span></span></p>\n<p><span data-ttu-id=\"33f81-127\">\r\n\r\n  <b>注釈:</b>に用意されているものに対応する、報告されたメトリック、 <xref uid=\"system.fabric._service_load_metric_description\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceLoadMetricDescription</xref>の一部として、 <xref uid=\"system.fabric._service_description\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceDescription</xref>サービスの作成に使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-127\">\r\n\r\n  <b>Remarks:</b>The reported metrics should correspond to those that are provided in the <xref uid=\"system.fabric._service_load_metric_description\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceLoadMetricDescription</xref> as a part of the <xref uid=\"system.fabric._service_description\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceDescription</xref> that is used to create the service.</span></span> <span data-ttu-id=\"33f81-128\">説明には存在しない負荷メトリックは無視されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-128\">Load metrics that are not present in the description are ignored.</span></span> <span data-ttu-id=\"33f81-129\">カスタム メトリックを報告機能では、サービスを分散させる追加のカスタム情報を基にした Service Fabric を使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-129\">Reporting custom metrics allows Service Fabric to balance services that are based on additional custom information.</span></span> </p>"
    syntax:
      content: public void reportLoad(Collection<LoadMetric> metrics)
      parameters:
        - id: metrics
          type: 12ebb11asystem.fabric._load_metrica08ddfce
          description: <p><span data-ttu-id="33f81-130">コレクション<xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">system.fabric.LoadMetric</xref>の負荷を報告します。</span><span class="sxs-lookup"><span data-stu-id="33f81-130">collection of <xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">system.fabric.LoadMetric</xref> to report the load for.</span></span> </p>
  - uid: system.fabric._service_partition.reportMoveCost(MoveCost)
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: reportMoveCost(MoveCost moveCost)
    nameWithType: ServicePartition.reportMoveCost(MoveCost moveCost)
    fullName: void system.fabric.ServicePartition.reportMoveCost(MoveCost moveCost)
    type: Method
    summary: "<p><span data-ttu-id=\"33f81-131\">レプリカの移動コストを報告します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-131\">Reports the move cost for a replica.</span></span></p>\n<p><span data-ttu-id=\"33f81-132\">\r\n\r\n  <b>注釈:</b>Services は、このメソッドを使用してレプリカの移動コストをレポートできます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-132\">\r\n\r\n  <b>Remarks:</b>Services can report move cost of a replica using this method.</span></span> <span data-ttu-id=\"33f81-133\">サービス ファブリック リソース残高は、クラスター内の最適なバランスを検索するときに、読み込み情報と、各レプリカの移動コストの両方を調べます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-133\">While the Service Fabric Resource Balances searches for the best balance in the cluster, it examines both load information and move cost of each replica.</span></span> <span data-ttu-id=\"33f81-134\">リソースの残高は分散を実現するために低コストでレプリカを移動たいとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-134\">Resource balances will prefer to move replicas with lower cost in order to achieve balance.</span></span> </p>"
    syntax:
      content: public void reportMoveCost(MoveCost moveCost)
      parameters:
        - id: moveCost
          type: system.fabric._move_cost
          description: <p><span data-ttu-id="33f81-135">報告<xref uid="system.fabric._move_cost" data-throw-if-not-resolved="false">system.fabric.MoveCost</xref>です。</span><span class="sxs-lookup"><span data-stu-id="33f81-135">The reported <xref uid="system.fabric._move_cost" data-throw-if-not-resolved="false">system.fabric.MoveCost</xref>.</span></span> </p>
  - uid: system.fabric._service_partition.reportPartitionHealth(HealthInformation)
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: reportPartitionHealth(HealthInformation healthInfo)
    nameWithType: ServicePartition.reportPartitionHealth(HealthInformation healthInfo)
    fullName: void system.fabric.ServicePartition.reportPartitionHealth(HealthInformation healthInfo)
    type: Method
    summary: |-
      <p><span data-ttu-id="33f81-136">現在のパーティションの正常性を報告します。</span><span class="sxs-lookup"><span data-stu-id="33f81-136">Reports current partition health.</span></span></p>
      <p></p>
    syntax:
      content: public void reportPartitionHealth(HealthInformation healthInfo)
      parameters:
        - id: healthInfo
          type: system.fabric.health._health_information
          description: <p><span data-ttu-id="33f81-137"><xref uid="" data-throw-if-not-resolved="false">HealthInformation</xref></span><span class="sxs-lookup"><span data-stu-id="33f81-137">is <xref uid="" data-throw-if-not-resolved="false">HealthInformation</xref></span></span></p>
  - uid: system.fabric._service_partition
    parent: system.fabric
    href: system.fabric._service_partition.yml
    name: ServicePartition
    nameWithType: ServicePartition
    fullName: system.fabric.ServicePartition
    type: Interface
    summary: <p><span data-ttu-id="33f81-138">パーティションに属しを実行時に、システムとの対話をサービスのメソッドを提供に関する情報をサービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="33f81-138">Provides information to the service about the partition to which it belongs and provides methods for the service to interact with the system during runtime.</span></span> </p>
    syntax:
      content: public interface ServicePartition
  - uid: system.fabric._partition_access_status
    parent: system.fabric
    href: system.fabric._partition_access_status.yml
    name: PartitionAccessStatus
    nameWithType: PartitionAccessStatus
    fullName: system.fabric.PartitionAccessStatus
    type: Enum
    syntax:
      content: public enum PartitionAccessStatus
  - uid: system.fabric.exception._fabric_object_closed_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_object_closed_exception.yml
    name: FabricObjectClosedException
    nameWithType: FabricObjectClosedException
    fullName: system.fabric.exception.FabricObjectClosedException
    type: Class
    syntax:
      content: public class FabricObjectClosedException extends FabricException
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"33f81-139\">高可用性と信頼性のレプリケート状態です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-139\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"33f81-140\">\r\n\r\n  <b>注釈:</b>の既定の実装を提供、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>、 <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>、および<xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref>インターフェイスの実装と共に、ユーザーのサービスが使用できる、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>インターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-140\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"33f81-141\">インスタンス、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスが経由で取得した、 <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider、system.fabric.ReplicatorSettings)</xref>メソッドにキャストできる<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-141\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: <p><span data-ttu-id="33f81-142">サービスが対話するために実装する必要がありますの動作を定義、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>です。</span><span class="sxs-lookup"><span data-stu-id="33f81-142">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>
    syntax:
      content: public interface StateProvider
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: system.fabric._stateful_service_replica
    parent: system.fabric
    href: system.fabric._stateful_service_replica.yml
    name: StatefulServiceReplica
    nameWithType: StatefulServiceReplica
    fullName: system.fabric.StatefulServiceReplica
    type: Interface
    summary: "<p><span data-ttu-id=\"33f81-143\">スタートアップ、初期化、ロールの変更、およびシャット ダウンなど、レプリカのライフ サイクルを制御する動作を定義します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-143\">Defines behavior that governs the lifecycle of a replica, such as startup, initialization, role changes, and shutdown.</span></span> </p>\n<p><span data-ttu-id=\"33f81-144\">\r\n\r\n  <b>注釈:</b>ステートフル サービスの種類は、このインターフェイスを実装する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-144\">\r\n\r\n  <b>Remarks:</b>Stateful service types must implement this interface.</span></span> <span data-ttu-id=\"33f81-145\">ステートフルなサービスの種類のロジックには、プライマリ レプリカ上で呼び出される動作とセカンダリ レプリカで呼び出される動作が含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-145\">The logic of a stateful service type includes behavior that is invoked on Primary replicas and behavior that is invoked on Secondary replicas.</span></span> <span data-ttu-id=\"33f81-146\">サービスの作成者が作成する場合は、指定された使用<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>、サービスを実装する必要がありますも、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> の実装を使用する<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>はによって提供される<xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"33f81-146\">If the service author wants to make use of the provided <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, then the service must also implement <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> to use the implementation of <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> that is provided by <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref></span></span></p>"
    syntax:
      content: public interface StatefulServiceReplica
  - uid: system.fabric._state_replicator
    parent: system.fabric
    href: system.fabric._state_replicator.yml
    name: StateReplicator
    nameWithType: StateReplicator
    fullName: system.fabric.StateReplicator
    type: Interface
    summary: <p><span data-ttu-id="33f81-147">公開のレプリケーション関連の機能、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>クラスによって使用されている<xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref>を高可用性を保証する状態をレプリケートします。</span><span class="sxs-lookup"><span data-stu-id="33f81-147">Exposes replication related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>
    syntax:
      content: public interface StateReplicator
  - uid: system.fabric._transactional_replicator_settings
    parent: system.fabric
    href: system.fabric._transactional_replicator_settings.yml
    name: TransactionalReplicatorSettings
    nameWithType: TransactionalReplicatorSettings
    fullName: system.fabric.TransactionalReplicatorSettings
    type: Class
    syntax:
      content: public class TransactionalReplicatorSettings
  - uid: system.fabric._ktl_logger_shared_log_settings
    parent: system.fabric
    href: system.fabric._ktl_logger_shared_log_settings.yml
    name: KtlLoggerSharedLogSettings
    nameWithType: KtlLoggerSharedLogSettings
    fullName: system.fabric.KtlLoggerSharedLogSettings
    type: Class
    syntax:
      content: public class KtlLoggerSharedLogSettings
  - uid: system.fabric.health._health_information
    parent: system.fabric.health
    href: system.fabric.health._health_information.yml
    name: HealthInformation
    nameWithType: HealthInformation
    fullName: system.fabric.health.HealthInformation
    type: Class
    summary: <p><span data-ttu-id="33f81-148">エンティティのヘルス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="33f81-148">Contains the health information about the entity.</span></span> <span data-ttu-id="33f81-149">この情報は、正常性レポートに含まれています。</span><span class="sxs-lookup"><span data-stu-id="33f81-149">This information is included in the health report.</span></span> <span data-ttu-id="33f81-150">正常性イベントの一部としても提供されます。</span><span class="sxs-lookup"><span data-stu-id="33f81-150">It is also provided as part of the health event.</span></span> </p>
    syntax:
      content: public class HealthInformation