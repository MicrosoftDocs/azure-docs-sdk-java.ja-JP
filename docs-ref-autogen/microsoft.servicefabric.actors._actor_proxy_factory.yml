### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_proxy_factory
    id: _actor_proxy_factory
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,ActorId)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,ActorId,String,String,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long)'
      - 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long,String)'
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: ActorProxyFactory
    nameWithType: ActorProxyFactory
    fullName: microsoft.servicefabric.actors.ActorProxyFactory
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 8
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="e14d0-101">アクター プロキシ ファクトリ クラスを作成するメソッドを含むインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-101">Defines the interface containing methods to create actor proxy factory class.</span></span> </p>
    syntax:
      content: public interface ActorProxyFactory
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,ActorId)'
    id: 'createActorProxy(Class<T>,ActorId)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    nameWithType: 'ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 69
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-102">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-102">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Actor> T createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-103">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-103">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-104">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-104">The returned proxy object will implement this interface.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-105\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-105\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-106\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-106\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
      return:
        type: 21d1468cmicrosoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-107">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-107">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,ActorId,String,String,String)'
    id: 'createActorProxy(Class<T>,ActorId,String,String,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    nameWithType: 'ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 103
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-108">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-108">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Actor> T createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-109">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-109">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-110">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-110">The returned proxy object will implement this interface.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-111\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-111\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-112\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-112\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
        - id: applicationName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-113">アクター オブジェクトをホストするアクター サービスを含む Service Fabric アプリケーションの名前です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-113">Name of the Service Fabric application that contains the actor service hosting the actor objects.</span></span> <span data-ttu-id="e14d0-114">このパラメーターは、クライアントがその同じ Service Fabric アプリケーションの一部として実行されている場合は null にすることはできます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-114">This parameter can be null if the client is running as part of that same Service Fabric application.</span></span> <span data-ttu-id="e14d0-115">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e14d0-115">For more information, see Remarks.</span></span> </p>'
        - id: serviceName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-116">Service Fabric サービスによって構成されたとおりの名前<xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>アクターの実装にします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-116">Name of the Service Fabric service as configured by <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> on the actor implementation.</span></span> <span data-ttu-id="e14d0-117">既定では、サービスの名前は、アクター インターフェイスの名前から派生します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-117">By default, the name of the service is derived from the name of the actor interface.</span></span> <span data-ttu-id="e14d0-118">ただし<xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>はアクターが 1 つ以上にアクター インターフェイスを実装するか、serviceName の決定は自動的に加えられることはできません、アクター インターフェイスが別のアクター インターフェイスから派生した場合に必要です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-118">However <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> is required when an actor implements more than one actor interfaces or an actor interface derives from another actor interface as the determination of the serviceName cannot be made automatically.</span></span> </p>'
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-119">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-119">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-120">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-120">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 21d1468cmicrosoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-121">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-121">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
    exceptions:
      - type: '44102508'
        description: <p><span data-ttu-id="e14d0-122">無効な URI の形式が applicationName として渡されるときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-122">Throws exception when invalid URI format is passed as applicationName</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId)'
    id: 'createActorProxy(Class<T>,URI,ActorId)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    nameWithType: 'ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 26
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-123">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-123">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Actor> T createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-124">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-124">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-125">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-125">The returned proxy object will implement this interface.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-126">アクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-126">Uri of the actor service.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-127\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-127\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-128\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-128\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
      return:
        type: 21d1468cmicrosoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-129">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-129">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId,String)'
    id: 'createActorProxy(Class<T>,URI,ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    nameWithType: 'ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.ActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 49
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-130">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-130">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Actor> T createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-131">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-131">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-132">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-132">The returned proxy object will implement this interface.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-133">アクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-133">Uri of the actor service.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-134\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-134\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-135\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-135\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-136">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-136">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-137">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-137">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 21d1468cmicrosoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-138">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-138">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId)'
    id: 'createActorServiceProxy(Class<T>,URI,ActorId)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    nameWithType: 'ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 126
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-139">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-139">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-140">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-140">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-141">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-141">Uri of the actor service to connect to.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="e14d0-142">アクターの id です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-142">Id of the actor.</span></span> <span data-ttu-id="e14d0-143">作成されたプロキシは、この id を持つアクターをホストするアクター サービスのパーティションに接続されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-143">The created proxy will be connected to the partition of the actor service hosting actor with this id.</span></span> </p>
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: "<p><span data-ttu-id=\"e14d0-144\">実装するサービス プロキシ オブジェクト<xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>と<code>&lt;T&gt; \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-144\">A service proxy object that implements <xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> and<code>&lt;T&gt; \r\n\r\n    </code> .</span></span> </p>"
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId,String)'
    id: 'createActorServiceProxy(Class<T>,URI,ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    nameWithType: 'ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 152
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-145">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-145">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-146">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-146">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-147">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-147">Uri of the actor service to connect to.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="e14d0-148">アクターの id です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-148">Id of the actor.</span></span> <span data-ttu-id="e14d0-149">作成されたプロキシは、この id を持つアクターをホストするアクター サービスのパーティションに接続されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-149">The created proxy will be connected to the partition of the actor service hosting actor with this id.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-150">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-150">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-151">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-151">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: "<p><span data-ttu-id=\"e14d0-152\">実装するサービス プロキシ オブジェクト<xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>と<code>&lt;T&gt; \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-152\">A service proxy object that implements <xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> and<code>&lt;T&gt; \r\n\r\n    </code> .</span></span> </p>"
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long)'
    id: 'createActorServiceProxy(Class<T>,URI,long)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    nameWithType: 'ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 173
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-153">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-153">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-154">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-154">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-155">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-155">Uri of the actor service to connect to.</span></span> </p>
        - id: partitionKey
          type: 0364520f
          description: <p><span data-ttu-id="e14d0-156">接続するアクター サービス パーティションのキー。</span><span class="sxs-lookup"><span data-stu-id="e14d0-156">The key of the actor service partition to connect to.</span></span> </p>
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: "<p><span data-ttu-id=\"e14d0-157\">実装するサービス プロキシ オブジェクト<xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>と<code>&lt;T&gt; \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-157\">A service proxy object that implements <xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> and<code>&lt;T&gt; \r\n\r\n    </code> .</span></span> </p>"
  - uid: 'microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long,String)'
    id: 'createActorServiceProxy(Class<T>,URI,long,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_factory
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    langs:
      - java
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    nameWithType: 'ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.ActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyFactory.java
      startLine: 198
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="e14d0-158">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-158">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public public<T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-159">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-159">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-160">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-160">Uri of the actor service to connect to.</span></span> </p>
        - id: partitionKey
          type: 0364520f
          description: <p><span data-ttu-id="e14d0-161">接続するアクター サービス パーティションのキー。</span><span class="sxs-lookup"><span data-stu-id="e14d0-161">The key of the actor service partition to connect to.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-162">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-162">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-163">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-163">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: "<p><span data-ttu-id=\"e14d0-164\">実装するサービス プロキシ オブジェクト<xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>と<code>&lt;T&gt; \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-164\">A service proxy object that implements <xref uid=\"microsoft.servicefabric.services.remoting.client._service_proxy\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> and<code>&lt;T&gt; \r\n\r\n    </code> .</span></span> </p>"
references:
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 21d1468cmicrosoft.servicefabric.actors._actor21353812
    spec.java:
      - name: 'public<T extends '
        fullName: 'public<T extends '
      - uid: microsoft.servicefabric.actors._actor
        name: Actor
        fullName: microsoft.servicefabric.actors.Actor
        href: microsoft.servicefabric.actors._actor.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.actors._actor_proxy_factory.createActorProxy*
    name: createActorProxy
    nameWithType: ActorProxyFactory.createActorProxy
    fullName: public<T extends Actor> T microsoft.servicefabric.actors.ActorProxyFactory.createActorProxy
    package: microsoft.servicefabric.actors
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: '44102508'
    spec.java:
      - name: URISyntaxException
        fullName: URISyntaxException
  - uid: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
    spec.java:
      - name: 'public<T extends '
        fullName: 'public<T extends '
      - uid: microsoft.servicefabric.services.remoting._service
        name: Service
        fullName: microsoft.servicefabric.services.remoting.Service
        href: microsoft.servicefabric.services.remoting._service.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.actors._actor_proxy_factory.createActorServiceProxy*
    name: createActorServiceProxy
    nameWithType: ActorProxyFactory.createActorServiceProxy
    fullName: public<T extends Service> T microsoft.servicefabric.actors.ActorProxyFactory.createActorServiceProxy
    package: microsoft.servicefabric.actors
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: FabricActorProxyFactory
    nameWithType: FabricActorProxyFactory
    fullName: microsoft.servicefabric.actors.FabricActorProxyFactory
    type: Class
    summary: <p><span data-ttu-id="e14d0-165">リモートのアクターのオブジェクトへのプロキシを作成するファクトリ クラスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-165">Factory class to create a proxy to the remote actor objects.</span></span> </p>
    syntax:
      content: public class FabricActorProxyFactory
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="e14d0-166">信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-166">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    nameWithType: 'FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-167">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-167">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Actor> T createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-168">リモートのアクター オブジェクトによって実装されるアクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-168">The actor interface type implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-169">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-169">The returned proxy object will implement this interface.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-170">アクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-170">Uri of the actor service.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-171\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-171\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-172\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-172\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
      return:
        type: 36136266microsoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-173">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-173">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p><span data-ttu-id=\"e14d0-174\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-174\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> represents identity of an actor within an actor service.</span></span> <span data-ttu-id=\"e14d0-175\">アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-175\">The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> or long.</span></span> </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor_proxy
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy.yml
    name: ActorProxy
    nameWithType: ActorProxy
    fullName: microsoft.servicefabric.actors.ActorProxy
    type: Interface
    summary: <p><span data-ttu-id="e14d0-176">アクター サービスに対するプロキシ アクセスを実装するため、インターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-176">Provides the interface for implementation of proxy access for actor service.</span></span> </p>
    syntax:
      content: public interface ActorProxy
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorProxy(Class<T>,URI,ActorId,String)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    nameWithType: 'FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-177">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-177">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Actor> T createActorProxy(Class<T> actorInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-178">リモートのアクター オブジェクトによって実装されるアクター インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-178">The actor interface type implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-179">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-179">The returned proxy object will implement this interface.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-180">アクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-180">Uri of the actor service.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-181\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-181\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-182\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-182\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-183">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-183">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-184">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-184">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 36136266microsoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-185">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-185">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorProxy(Class<T>,ActorId)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    nameWithType: 'FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-186">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-186">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Actor> T createActorProxy(Class<T> actorInterfaceType, ActorId actorId)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-187">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-187">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-188">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-188">The returned proxy object will implement this interface.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-189\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-189\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-190\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-190\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
      return:
        type: 36136266microsoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-191">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-191">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorProxy(Class<T>,ActorId,String,String,String)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    nameWithType: 'FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    fullName: 'public<T extends Actor> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-192">アクター インターフェイスを実装するアクター オブジェクトへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-192">Creates a proxy to the actor object that implements an actor interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Actor> T createActorProxy(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-193">リモートのアクター オブジェクトによって実装されるアクター インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-193">The actor interface implemented by the remote actor object.</span></span> <span data-ttu-id="e14d0-194">返されるプロキシ オブジェクトでは、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-194">The returned proxy object will implement this interface.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"e14d0-195\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>プロキシ アクター オブジェクトの Id。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-195\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> Id of the proxy actor object.</span></span> <span data-ttu-id=\"e14d0-196\">このプロキシで呼び出されるメソッドは、この id を持つアクターに送信される要求になります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e14d0-196\">Methods called on this proxy will result in requests being sent to the actor with this id.</span></span> </p>"
        - id: applicationName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-197">アクター オブジェクトをホストするアクター サービスを含む Service Fabric アプリケーションの名前です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-197">Name of the Service Fabric application that contains the actor service hosting the actor objects.</span></span> <span data-ttu-id="e14d0-198">このパラメーターは、クライアントがその同じ Service Fabric アプリケーションの一部として実行されている場合は null にすることはできます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-198">This parameter can be null if the client is running as part of that same Service Fabric application.</span></span> <span data-ttu-id="e14d0-199">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e14d0-199">For more information, see Remarks.</span></span> </p>'
        - id: serviceName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-200">Service Fabric サービスによって構成されたとおりの名前<xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>アクターの実装にします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-200">Name of the Service Fabric service as configured by <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> on the actor implementation.</span></span> <span data-ttu-id="e14d0-201">既定では、サービスの名前は、アクター インターフェイスの名前から派生します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-201">By default, the name of the service is derived from the name of the actor interface.</span></span> <span data-ttu-id="e14d0-202">ただし<xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>はアクターが 1 つ以上にアクター インターフェイスを実装するか、serviceName の決定は自動的に加えられることはできません、アクター インターフェイスが別のアクター インターフェイスから派生した場合に必要です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-202">However <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> is required when an actor implements more than one actor interfaces or an actor interface derives from another actor interface as the determination of the serviceName cannot be made automatically.</span></span> </p>'
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-203">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-203">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-204">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-204">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 36136266microsoft.servicefabric.actors._actor21353812
        description: <p><span data-ttu-id="e14d0-205">実装するアクター プロキシ オブジェクト<xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref>と<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-205">An actor proxy object that implements <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> and <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Interface.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_service_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_attribute.yml
    name: ActorServiceAttribute
    nameWithType: ActorServiceAttribute
    fullName: microsoft.servicefabric.actors.ActorServiceAttribute
    type: Interface
    summary: <p><span data-ttu-id="e14d0-206">この属性は、アクター サービスのプロパティを構成できます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-206">This attributes allows configuring the properties of the actor service.</span></span> <span data-ttu-id="e14d0-207">属性は、アクターの型に適用されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-207">The attribute is applied on the actor type.</span></span> </p>
    syntax:
      content: public interface ActorServiceAttribute
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: <p><span data-ttu-id="e14d0-208">これは、サービスのインターフェイスのリモート処理を有効にするためのマーカー インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-208">This is the marker interface for enabling interface Remoting for services.</span></span> <span data-ttu-id="e14d0-209"><xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>このインターフェイスから派生する、サービスによって実装されたすべてのインターフェイスのリモート処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-209">An <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> provides remoting for all interfaces implemented by the service that derive from this interface.</span></span> <span data-ttu-id="e14d0-210">リモート インターフェイスは、クライアント側プロキシを経由してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-210">The remoted interfaces can be accessed via Proxy on the client side.</span></span> </p>
    syntax:
      content: public interface Service
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    nameWithType: 'FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-211">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-211">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-212">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-212">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-213">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-213">Uri of the actor service to connect to.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="e14d0-214">アクターの id です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-214">Id of the actor.</span></span> <span data-ttu-id="e14d0-215">作成されたプロキシは、この id を持つアクターをホストするアクター サービスのパーティションに接続されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-215">The created proxy will be connected to the partition of the actor service hosting actor with this id.</span></span> </p>
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="e14d0-216">実装するサービス プロキシ オブジェクト<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref>と T (サービス インターフェイス)。</span><span class="sxs-lookup"><span data-stu-id="e14d0-216">A service proxy object that implements <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref> and T (Service Interface).</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: ServiceProxy
    nameWithType: ServiceProxy
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
    type: Interface
    summary: <p><span data-ttu-id="e14d0-217">これは、リモート処理の基本のクライアント側インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-217">This is the base Client side interface for Remoting.</span></span> <span data-ttu-id="e14d0-218">フレームワークのリモート処理インフラストラクチャを通じて IService から継承するすべてのサービス コントラクトを提供<xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>と<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-218">The framework provides the Remoting infrastructure for all the service contracts inheriting from IService through <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> and <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>.</span></span> </p>
    syntax:
      content: public interface ServiceProxy
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorServiceProxy(Class<T>,URI,ActorId,String)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    nameWithType: 'FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-219">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-219">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ActorId actorId, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-220">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-220">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-221">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-221">Uri of the actor service to connect to.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="e14d0-222">アクターの id です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-222">Id of the actor.</span></span> <span data-ttu-id="e14d0-223">作成されたプロキシは、この id を持つアクターをホストするアクター サービスのパーティションに接続されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-223">The created proxy will be connected to the partition of the actor service hosting actor with this id.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-224">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-224">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-225">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-225">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="e14d0-226">実装するサービス プロキシ オブジェクト<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref>と T (サービス インターフェイス)。</span><span class="sxs-lookup"><span data-stu-id="e14d0-226">A service proxy object that implements <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref> and T (Service Interface).</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    nameWithType: 'FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-227">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-227">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-228">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-228">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-229">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-229">Uri of the actor service to connect to.</span></span> </p>
        - id: partitionKey
          type: 0364520f
          description: <p><span data-ttu-id="e14d0-230">接続するアクター サービス パーティションのキー。</span><span class="sxs-lookup"><span data-stu-id="e14d0-230">The key of the actor service partition to connect to.</span></span> </p>
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="e14d0-231">実装するサービス プロキシ オブジェクト<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref>と T (サービス インターフェイス)。</span><span class="sxs-lookup"><span data-stu-id="e14d0-231">A service proxy object that implements <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref> and T (Service Interface).</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_proxy_factory.createActorServiceProxy(Class<T>,URI,long,String)'
    parent: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: 'createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    nameWithType: 'FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.actors.FabricActorProxyFactory.createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="e14d0-232">指定したアクターの id をホストしているおよび指定した種類のサービス インターフェイスを実装しているアクター サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-232">Create a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends Service> T createActorServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, long partitionKey, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="e14d0-233">アクター サービスによって実装されるサービス インターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="e14d0-233">The service interface type implemented by the actor service.</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="e14d0-234">接続するアクター サービスの Uri。</span><span class="sxs-lookup"><span data-stu-id="e14d0-234">Uri of the actor service to connect to.</span></span> </p>
        - id: partitionKey
          type: 0364520f
          description: <p><span data-ttu-id="e14d0-235">接続するアクター サービス パーティションのキー。</span><span class="sxs-lookup"><span data-stu-id="e14d0-235">The key of the actor service partition to connect to.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="e14d0-236">既定では、アクター サービスは、1 つだけリスナーに接続して通信するクライアントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-236">By default an actor service has only one listener for clients to connect to and communicate with.</span></span> <span data-ttu-id="e14d0-237">複数のリスナーをアクター サービスを構成することは、listenerName パラメーターへの接続にリスナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-237">However it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.</span></span> </p>'
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="e14d0-238">実装するサービス プロキシ オブジェクト<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref>と T (サービス インターフェイス)。</span><span class="sxs-lookup"><span data-stu-id="e14d0-238">A service proxy object that implements <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy_base" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxyBase</xref> and T (Service Interface).</span></span> </p>