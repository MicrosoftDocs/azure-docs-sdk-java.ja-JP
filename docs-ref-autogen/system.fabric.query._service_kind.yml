### YamlMime:ManagedReference
items:
  - uid: system.fabric.query._service_kind
    id: _service_kind
    parent: system.fabric.query
    children:
      - system.fabric.query._service_kind.get(int)
      - system.fabric.query._service_kind.getValue()
      - system.fabric.query._service_kind.Invalid
      - system.fabric.query._service_kind.Stateful
      - system.fabric.query._service_kind.Stateless
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: ServiceKind
    nameWithType: ServiceKind
    fullName: system.fabric.query.ServiceKind
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 5
    package: system.fabric.query
    summary: <p>サービスの種類を指定します。 </p>
    syntax: &ref_1
      content: public enum ServiceKind
    inheritance:
      - java.lang.Object
      - java.lang.Enum<ServiceKind>
  - uid: system.fabric.query._service_kind.get(int)
    id: get(int)
    parent: system.fabric.query._service_kind
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: get(int value)
    nameWithType: ServiceKind.get(int value)
    fullName: static ServiceKind system.fabric.query.ServiceKind.get(int value)
    overload: system.fabric.query._service_kind.get*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 23
    package: system.fabric.query
    syntax:
      content: public static ServiceKind get(int value)
      parameters:
        - id: value
          type: f75371fa
      return:
        type: system.fabric.query._service_kind
  - uid: system.fabric.query._service_kind.getValue()
    id: getValue()
    parent: system.fabric.query._service_kind
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: getValue()
    nameWithType: ServiceKind.getValue()
    fullName: int system.fabric.query.ServiceKind.getValue()
    overload: system.fabric.query._service_kind.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 19
    package: system.fabric.query
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: system.fabric.query._service_kind.Invalid
    id: Invalid
    parent: system.fabric.query._service_kind
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: Invalid
    nameWithType: ServiceKind.Invalid
    fullName: system.fabric.query.ServiceKind.Invalid
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 7
    package: system.fabric.query
    summary: <p>無効です。 </p>
    syntax:
      content: public Invalid=(0)
  - uid: system.fabric.query._service_kind.Stateful
    id: Stateful
    parent: system.fabric.query._service_kind
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: Stateful
    nameWithType: ServiceKind.Stateful
    fullName: system.fabric.query.ServiceKind.Stateful
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 11
    package: system.fabric.query
    summary: <p>使用して<xref uid="system.fabric.query._service" data-throw-if-not-resolved="false">サービス</xref>高可用性と信頼性の高い状態または状態の一部になるようにファブリックします。 </p>
    syntax:
      content: public Stateful=(2)
  - uid: system.fabric.query._service_kind.Stateless
    id: Stateless
    parent: system.fabric.query._service_kind
    href: system.fabric.query._service_kind.yml
    langs:
      - java
    name: Stateless
    nameWithType: ServiceKind.Stateless
    fullName: system.fabric.query.ServiceKind.Stateless
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/ServiceKind.java
      startLine: 9
    package: system.fabric.query
    summary: <p>使用しません<xref uid="system.fabric.query._service" data-throw-if-not-resolved="false">サービス</xref>ファブリックを高可用性または信頼性の高い、その状態を作成します。 </p>
    syntax:
      content: public Stateless=(1)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: system.fabric.query._service_kind.getValue*
    name: getValue
    nameWithType: ServiceKind.getValue
    fullName: int system.fabric.query.ServiceKind.getValue
    package: system.fabric.query
  - uid: system.fabric.query._service_kind.get*
    name: get
    nameWithType: ServiceKind.get
    fullName: static ServiceKind system.fabric.query.ServiceKind.get
    package: system.fabric.query
  - uid: system.fabric.query._service
    parent: system.fabric.query
    href: system.fabric.query._service.yml
    name: Service
    nameWithType: Service
    fullName: system.fabric.query.Service
    type: Class
    summary: <p>サービスを表します。 </p>
    syntax:
      content: public class Service
  - uid: system.fabric.query._service_kind
    parent: system.fabric.query
    href: system.fabric.query._service_kind.yml
    name: ServiceKind
    nameWithType: ServiceKind
    fullName: system.fabric.query.ServiceKind
    type: Enum
    summary: <p>サービスの種類を指定します。 </p>
    syntax: *ref_1