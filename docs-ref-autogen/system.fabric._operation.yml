### YamlMime:ManagedReference
items:
  - uid: system.fabric._operation
    id: _operation
    parent: system.fabric
    children:
      - system.fabric._operation.acknowledge()
      - system.fabric._operation.getAtomicGroupId()
      - system.fabric._operation.getData()
      - system.fabric._operation.getOperationType()
      - system.fabric._operation.getSequenceNumber()
    href: system.fabric._operation.yml
    langs:
      - java
    name: Operation
    nameWithType: Operation
    fullName: system.fabric.Operation
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 16
    package: system.fabric
    summary: "<p><span data-ttu-id=\"e366a-101\">\r\n\r\n  <b>注釈:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>セカンダリ レプリカに配信される状態の変化を説明する基本インターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-101\">\r\n\r\n  <b>Remarks:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> is the base interface that describes state changes that are delivered to a Secondary replica.</span></span> <span data-ttu-id=\"e366a-102\">含まれている、 <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>とシーケンス番号およびその他の情報を識別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-102\">They contain the <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> and the sequence number and other identifying information.</span></span> </p>"
    syntax:
      content: public interface Operation
  - uid: system.fabric._operation.acknowledge()
    id: acknowledge()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    langs:
      - java
    name: acknowledge()
    nameWithType: Operation.acknowledge()
    fullName: void system.fabric.Operation.acknowledge()
    overload: system.fabric._operation.acknowledge*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 77
    package: system.fabric
    summary: "<p><span data-ttu-id=\"e366a-103\">この操作が、セカンダリ レプリカに正常に適用されたことを確認します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-103\">Acknowledges that this operation has been successfully applied at the Secondary replica.</span></span> </p>\n<p><span data-ttu-id=\"e366a-104\">\r\n\r\n  <b>注釈:</b>取得したときに、サービスはこのメソッドを呼び出す必要があります、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>複製物作成会社と正常にローカル ストアに適用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-104\">\r\n\r\n  <b>Remarks:</b>Services should call this method when they have obtained an <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> from the replicator and successfully applied it to their local store.</span></span> <span data-ttu-id=\"e366a-105\">永続化されたサービスでは、このメソッドを呼び出すことが必須ため、 <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>を実装するその他のオブジェクトを解放しない<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-105\">For persisted services, calling this method is mandatory because the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> does not release additional objects that implement <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>.</span></span> <span data-ttu-id=\"e366a-106\">揮発性サービスでは、レプリケーターに暗黙的に承認されると operations 値の設定でそれ以外の場合は構成しない限り、受信したとき<xref uid=\"system.fabric._replicator_settings.isRequireServiceAck()\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#isRequireServiceAck()</xref> true に設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-106\">For volatile services, the replicator implicitly acknowledges operations when they are received unless they are configured otherwise by setting the value <xref uid=\"system.fabric._replicator_settings.isRequireServiceAck()\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#isRequireServiceAck()</xref> to true.</span></span> <span data-ttu-id=\"e366a-107\">プライマリ レプリカを受け取る前に、レプリカのクォーラム操作を確認する必要があります、 <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>操作完了の応答。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-107\">An operation must be acknowledged by a quorum of replicas before the Primary replica receives the <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> operation complete responses.</span></span> </p>"
    syntax:
      content: public void acknowledge()
  - uid: system.fabric._operation.getAtomicGroupId()
    id: getAtomicGroupId()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    langs:
      - java
    name: getAtomicGroupId()
    nameWithType: Operation.getAtomicGroupId()
    fullName: long system.fabric.Operation.getAtomicGroupId()
    overload: system.fabric._operation.getAtomicGroupId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 52
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="e366a-108">このオブジェクトを実装している場合、分割不可能なグループを識別<xref uid="" data-throw-if-not-resolved="false">system.fabric.Operation</xref>アトミック グループの一部です。</span><span class="sxs-lookup"><span data-stu-id="e366a-108">Identifies the atomic group, if this object that implements <xref uid="" data-throw-if-not-resolved="false">system.fabric.Operation</xref> is a part of an atomic group.</span></span> <span data-ttu-id="e366a-109">分割不可能なグループはサービスがサービス グループの一部であるときにのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e366a-109">Atomic groups are only available when a service is a part of service group.</span></span></p>
      <p></p>
    syntax:
      content: public long getAtomicGroupId()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="e366a-110">長さを返します。</span><span class="sxs-lookup"><span data-stu-id="e366a-110">Returns long.</span></span> </p>
  - uid: system.fabric._operation.getData()
    id: getData()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    langs:
      - java
    name: getData()
    nameWithType: Operation.getData()
    fullName: OperationData system.fabric.Operation.getData()
    overload: system.fabric._operation.getData*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 59
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="e366a-111">取得、 <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref>プライマリ レプリカによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="e366a-111">Gets the <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> that are provided by the Primary replica.</span></span></p>
      <p></p>
    syntax:
      content: public OperationData getData()
      return:
        type: system.fabric._operation_data
        description: <p><span data-ttu-id="e366a-112">返します<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-112">Returns <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref>.</span></span> </p>
  - uid: system.fabric._operation.getOperationType()
    id: getOperationType()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    langs:
      - java
    name: getOperationType()
    nameWithType: Operation.getOperationType()
    fullName: OperationType system.fabric.Operation.getOperationType()
    overload: system.fabric._operation.getOperationType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 28
    package: system.fabric
    summary: "<p><span data-ttu-id=\"e366a-113\">この操作の種類を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-113\">Gets the type of this operation.</span></span></p>\n<p><span data-ttu-id=\"e366a-114\">\r\n\r\n  <b>注釈:</b>、 <xref uid=\"system.fabric._operation_type\" data-throw-if-not-resolved=\"false\">system.fabric.OperationType</xref>操作の種類を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-114\">\r\n\r\n  <b>Remarks:</b>The <xref uid=\"system.fabric._operation_type\" data-throw-if-not-resolved=\"false\">system.fabric.OperationType</xref> indicates the type of operation.</span></span> <span data-ttu-id=\"e366a-115\">\"Normal\"操作は、コピーまたはレプリケーション ストリームの一部としてグループ化のサービスによって送信されるこれらの操作です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-115\">\"Normal\" operations are those operations that are sent by non-service grouped services as part of either the copy or replication streams.</span></span> <span data-ttu-id=\"e366a-116\">その他の種類の操作は、サービス グループに固有の管理操作を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-116\">Other types of operations represent control operations that are specific to service groups.</span></span> </p>"
    syntax:
      content: public OperationType getOperationType()
      return:
        type: system.fabric._operation_type
        description: <p><span data-ttu-id="e366a-117">返します<xref uid="system.fabric._operation_type" data-throw-if-not-resolved="false">system.fabric.OperationType</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-117">Returns <xref uid="system.fabric._operation_type" data-throw-if-not-resolved="false">system.fabric.OperationType</xref>.</span></span> </p>
  - uid: system.fabric._operation.getSequenceNumber()
    id: getSequenceNumber()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    langs:
      - java
    name: getSequenceNumber()
    nameWithType: Operation.getSequenceNumber()
    fullName: long system.fabric.Operation.getSequenceNumber()
    overload: system.fabric._operation.getSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Operation.java
      startLine: 43
    package: system.fabric
    summary: "<p><span data-ttu-id=\"e366a-118\">この操作のシーケンス番号を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-118\">Gets the sequence number of this operation.</span></span></p>\n<p><span data-ttu-id=\"e366a-119\">\r\n\r\n  <b>注釈:</b>シーケンス番号がの一部として提供される、 <xref uid=\"system.fabric._operation.getSequenceNumber()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#getSequenceNumber()</xref>レプリケーション ストリームから受信した操作 (<xref uid=\"system.fabric._state_replicator.getReplicationStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getReplicationStream()</xref>) からは、プライマリ レプリカを受信すると、同じシーケンス番号は<xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>メソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-119\">\r\n\r\n  <b>Remarks:</b>The sequence number is provided as a part of the <xref uid=\"system.fabric._operation.getSequenceNumber()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#getSequenceNumber()</xref> For operations received from the replication stream (<xref uid=\"system.fabric._state_replicator.getReplicationStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getReplicationStream()</xref>) the sequence number is the same that the Primary replica that are receives from <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> </p>"
    syntax: &ref_1
      content: public long getSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="e366a-120">長さを返します。</span><span class="sxs-lookup"><span data-stu-id="e366a-120">Returns long.</span></span> </p>
references:
  - uid: system.fabric._operation.getOperationType*
    name: getOperationType
    nameWithType: Operation.getOperationType
    fullName: OperationType system.fabric.Operation.getOperationType
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._operation.getSequenceNumber*
    name: getSequenceNumber
    nameWithType: Operation.getSequenceNumber
    fullName: long system.fabric.Operation.getSequenceNumber
    package: system.fabric
  - uid: system.fabric._operation.getAtomicGroupId*
    name: getAtomicGroupId
    nameWithType: Operation.getAtomicGroupId
    fullName: long system.fabric.Operation.getAtomicGroupId
    package: system.fabric
  - uid: system.fabric._operation.getData*
    name: getData
    nameWithType: Operation.getData
    fullName: OperationData system.fabric.Operation.getData
    package: system.fabric
  - uid: system.fabric._operation.acknowledge*
    name: acknowledge
    nameWithType: Operation.acknowledge
    fullName: void system.fabric.Operation.acknowledge
    package: system.fabric
  - uid: system.fabric._j_operation
  - uid: system.fabric._operation_type
    parent: system.fabric
    href: system.fabric._operation_type.yml
    name: OperationType
    nameWithType: OperationType
    fullName: system.fabric.OperationType
    type: Enum
    syntax:
      content: public enum OperationType
  - uid: system.fabric._operation.getSequenceNumber()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    name: getSequenceNumber()
    nameWithType: Operation.getSequenceNumber()
    fullName: long system.fabric.Operation.getSequenceNumber()
    type: Method
    summary: "<p><span data-ttu-id=\"e366a-121\">この操作のシーケンス番号を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-121\">Gets the sequence number of this operation.</span></span></p>\n<p><span data-ttu-id=\"e366a-122\">\r\n\r\n  <b>注釈:</b>シーケンス番号がの一部として提供される、 <xref uid=\"system.fabric._operation.getSequenceNumber()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#getSequenceNumber()</xref>レプリケーション ストリームから受信した操作 (<xref uid=\"system.fabric._state_replicator.getReplicationStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getReplicationStream()</xref>) からは、プライマリ レプリカを受信すると、同じシーケンス番号は<xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData、SequenceNumber、system.fabric.CancellationToken)</xref>メソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-122\">\r\n\r\n  <b>Remarks:</b>The sequence number is provided as a part of the <xref uid=\"system.fabric._operation.getSequenceNumber()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#getSequenceNumber()</xref> For operations received from the replication stream (<xref uid=\"system.fabric._state_replicator.getReplicationStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getReplicationStream()</xref>) the sequence number is the same that the Primary replica that are receives from <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> </p>"
    syntax: *ref_1
  - uid: system.fabric._state_replicator.getReplicationStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getReplicationStream()
    nameWithType: StateReplicator.getReplicationStream()
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
    type: Method
    summary: <p><span data-ttu-id="e366a-123">レプリケーション ストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="e366a-123">Gets replication stream.</span></span> </p>
    syntax:
      content: public OperationStream getReplicationStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="e366a-124">ReplicationStream 実装<xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-124">The ReplicationStream implements <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span></span> <span data-ttu-id="e366a-125">含まれています、ReplicationStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>を実装するオブジェクト<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-125">The ReplicationStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="e366a-126">オブジェクトが経由でプライマリ レプリカによって提供される<xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator #replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-126">The objects are provided by the Primary replica via <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator#replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span></span> <span data-ttu-id="e366a-127">一般に、セカンダリ レプリカを送信する必要があります<xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="e366a-127">Generally a Secondary replica should send <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span></span> <span data-ttu-id="e366a-128">Service Fabric では、これを行うサービスは必要ありません、一般にサービスがすべて転送<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>コピーからオブジェクトが最初に、ストリームし、レプリケーション ストリームからの操作を転送します。</span><span class="sxs-lookup"><span data-stu-id="e366a-128">Although Service Fabric does not require services to do so, generally services should transfer all <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects out of the copy stream first, and then transfer operations out of the replication stream.</span></span> <span data-ttu-id="e366a-129">同時に両方のコピーからの転送がサポートされていますが、増加状態を適用する際の複雑さは正しく更新し、高度なサービスにのみ推奨されます。</span><span class="sxs-lookup"><span data-stu-id="e366a-129">The transfer from both copies in parallel is supported but increases the complexity of applying state updates correctly and is recommended only for advanced services.</span></span> <span data-ttu-id="e366a-130">ストリームが空ときに、返された<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>メソッドは null です。</span><span class="sxs-lookup"><span data-stu-id="e366a-130">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: 'replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: <p><span data-ttu-id="e366a-131">セカンダリ レプリカにプライマリ レプリカから状態の変更をレプリケートし、それらの状態の変更が適用されているクォーラムの受信確認を受信します。</span><span class="sxs-lookup"><span data-stu-id="e366a-131">Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied.</span></span> </p>
    syntax:
      content: 'public CompletableFuture<SequenceNumber> replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: operationData
          type: system.fabric._operation_data
          description: <p><span data-ttu-id="e366a-132">プライマリ レプリカは、レプリケートする必要がある状態の変化を表します。</span><span class="sxs-lookup"><span data-stu-id="e366a-132">Represents the state change that the Primary replica wants to replicate.</span></span> </p>
        - id: sequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="e366a-133">Long、操作の LSN です。</span><span class="sxs-lookup"><span data-stu-id="e366a-133">Long, the LSN of the operation.</span></span> <span data-ttu-id="e366a-134">これは、タスクによって返される同じ値であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e366a-134">Note that this is the same value which is returned by the task.</span></span> <span data-ttu-id="e366a-135">Out パラメーターとして指定することは、ローカル記録するには、タスクが終了する場合はコミットの準備をするサービスに便利です。</span><span class="sxs-lookup"><span data-stu-id="e366a-135">Providing it as an out parameter is useful for services which want to prepare the local write to commit when the task finishes.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: <p><span data-ttu-id="e366a-136">失われているレプリカの書き込みクォーラムです。</span><span class="sxs-lookup"><span data-stu-id="e366a-136">A write quorum of replicas that have been lost.</span></span> <span data-ttu-id="e366a-137">操作を取り消す必要がある通知を送信するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e366a-137">It can be used to send a notification that the operation should be canceled.</span></span> <span data-ttu-id="e366a-138">キャンセルが推奨でが取り消された場合でもは、操作を完了も可能性がありますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e366a-138">Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric._sequence_numbera08ddfce
        description: '<p><span data-ttu-id="e366a-139">Completable の将来の long 型で、操作の LSN を返します。</span><span class="sxs-lookup"><span data-stu-id="e366a-139">Returns completable future of type long, the LSN of the operation.</span></span> </p>'
  - uid: system.fabric._operation_data
    parent: system.fabric
    href: system.fabric._operation_data.yml
    name: OperationData
    nameWithType: OperationData
    fullName: system.fabric.OperationData
    type: Class
    syntax:
      content: public class OperationData
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"e366a-140\">高可用性と信頼性のレプリケート状態です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-140\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"e366a-141\">\r\n\r\n  <b>注釈:</b>の既定の実装を提供、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>、 <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>、および<xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref>インターフェイスの実装と共に、ユーザーのサービスが使用できる、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>インターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-141\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"e366a-142\">インスタンス、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスが経由で取得した、 <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider、system.fabric.ReplicatorSettings)</xref>メソッドにキャストできる<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-142\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._replicator_settings.isRequireServiceAck()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    name: isRequireServiceAck()
    nameWithType: ReplicatorSettings.isRequireServiceAck()
    fullName: boolean system.fabric.ReplicatorSettings.isRequireServiceAck()
    type: Method
    summary: "<p><span data-ttu-id=\"e366a-143\">により、サービスを呼び出すオプティミスティックの受信確認要求することで非永続的なサービスの操作の<xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref>次の操作をポンプする前にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-143\">Prevents the optimistic acknowledgment of operations in non-persistent services by requiring that the service calls <xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref> before it pumps the next operation.</span></span></p>\n<p><span data-ttu-id=\"e366a-144\">\r\n\r\n  <b>注釈:</b>明示的な受信確認を必要とする非永続的サービスはオプティミスティックの受信確認して、操作を防ぐために True にこのプロパティを設定することができます、<xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">レプリケーター</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-144\">\r\n\r\n  <b>Remarks:</b>Non-persistent services which require explicit acknowledgment can set this property to True in order to prevent optimistic acknowledgment of the operations by the <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replicator</xref>.</span></span> <span data-ttu-id=\"e366a-145\">この設定は、永続的なサービスの影響を与えません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-145\">This setting has no effect for persistent services.</span></span> <span data-ttu-id=\"e366a-146\">既定値は false です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"e366a-146\">The default value is false.</span></span> </p>"
    syntax:
      content: public boolean isRequireServiceAck()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="e366a-147">true の場合、オプティミスティックの受信確認の非永続的なサービス操作のそれ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="e366a-147">true if the optimistic acknowledgment of operations in non-persistent services;otherwise, false.</span></span> </p>'