### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_metric_description
    id: _application_metric_description
    parent: system.fabric
    children:
      - system.fabric._application_metric_description.ApplicationMetricDescription()
      - system.fabric._application_metric_description.getMaximumNodeCapacity()
      - system.fabric._application_metric_description.getName()
      - system.fabric._application_metric_description.getNodeReservationCapacity()
      - system.fabric._application_metric_description.getTotalApplicationCapacity()
      - system.fabric._application_metric_description.setMaximumNodeCapacity(long)
      - system.fabric._application_metric_description.setName(String)
      - system.fabric._application_metric_description.setNodeReservationCapacity(long)
      - system.fabric._application_metric_description.setTotalApplicationCapacity(long)
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 8
    package: system.fabric
    summary: <p>1 つのメトリックの容量のアプリケーションを指定します。 <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
    syntax: &ref_1
      content: public class ApplicationMetricDescription
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_metric_description.ApplicationMetricDescription()
    id: ApplicationMetricDescription()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: ApplicationMetricDescription()
    nameWithType: ApplicationMetricDescription.ApplicationMetricDescription()
    fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription()
    overload: system.fabric._application_metric_description.ApplicationMetricDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 18
    package: system.fabric
    syntax:
      content: public ApplicationMetricDescription()
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
    id: getMaximumNodeCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getMaximumNodeCapacity()
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
    overload: system.fabric._application_metric_description.getMaximumNodeCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 116
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションの最大ノード容量を取得します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
      <p>アプリケーションの性能の製品の既存のアプリケーションを更新中に<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
    syntax: &ref_2
      content: public long getMaximumNodeCapacity()
      return:
        type: 0364520f
        description: <p>1 つのノードでこのアプリケーションのインスタンスの最大負荷を指定します。 ノードの容量がこの値よりも大きい場合でも、この値を各ノードで、アプリケーション内のサービスでの合計の負荷が Service Fabric に制限されます。 0 に設定すると、この指標の容量は無制限に各ノードにします。 </p>
  - uid: system.fabric._application_metric_description.getName()
    id: getName()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getName()
    nameWithType: ApplicationMetricDescription.getName()
    fullName: String system.fabric.ApplicationMetricDescription.getName()
    overload: system.fabric._application_metric_description.getName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 41
    package: system.fabric
    summary: |-
      <p>メトリックの名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getName()
      return:
        type: '26831127'
        description: <p>メトリックの名前。 </p>
  - uid: system.fabric._application_metric_description.getNodeReservationCapacity()
    id: getNodeReservationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getNodeReservationCapacity()
    nameWithType: ApplicationMetricDescription.getNodeReservationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity()
    overload: system.fabric._application_metric_description.getNodeReservationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 72
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションのノードの予約容量を取得します。</p>
      <p>
      アプリケーションの性能を設定するときに (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) アプリケーションの性能を更新するときに、または (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) この値を小さくする必要があります以上<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>メトリックごとにします。 </p>
    syntax:
      content: public long getNodeReservationCapacity()
      return:
        type: 0364520f
        description: '<p>このアプリケーションのインスタンスである必要がノードで予約されているメトリック負荷の量を指定します。 場合<xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref>が指定されて、これらの値の積は、アプリケーションのクラスター内で予約された容量になります。 かどうかゼロに設定すると、容量は予約されていません、この指標です。 </p>'
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
    id: getTotalApplicationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getTotalApplicationCapacity()
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
    overload: system.fabric._application_metric_description.getTotalApplicationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 164
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションの容量のメトリックを取得します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
      <p>アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
    syntax: &ref_3
      content: public long getTotalApplicationCapacity()
      return:
        type: 0364520f
        description: <p>クラスターでは、このアプリケーションの指標合計容量を指定します。 Service Fabric は、この値にアプリケーション内でサービスの負荷の合計を制限しようとしています。 </p>
  - uid: system.fabric._application_metric_description.setMaximumNodeCapacity(long)
    id: setMaximumNodeCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setMaximumNodeCapacity(long maximumNodeCapacity)
    nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
    overload: system.fabric._application_metric_description.setMaximumNodeCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 141
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションの最大ノード容量を設定します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
      <p>アプリケーションの性能の製品の既存のアプリケーションを更新中に<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
    syntax:
      content: public void setMaximumNodeCapacity(long maximumNodeCapacity)
      parameters:
        - id: maximumNodeCapacity
          type: 0364520f
          description: <p>1 つのノードでこのアプリケーションのインスタンスの最大負荷を指定します。 ノードの容量がこの値よりも大きい場合でも、この値を各ノードで、アプリケーション内のサービスでの合計の負荷が Service Fabric に制限されます。 0 に設定すると、この指標の容量は無制限に各ノードにします。 </p>
  - uid: system.fabric._application_metric_description.setName(String)
    id: setName(String)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setName(String name)
    nameWithType: ApplicationMetricDescription.setName(String name)
    fullName: void system.fabric.ApplicationMetricDescription.setName(String name)
    overload: system.fabric._application_metric_description.setName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 51
    package: system.fabric
    summary: |-
      <p>メトリックの名前を設定します。</p>
      <p></p>
    syntax:
      content: public void setName(String name)
      parameters:
        - id: name
          type: '26831127'
          description: <p>メトリックの名前。 </p>
  - uid: system.fabric._application_metric_description.setNodeReservationCapacity(long)
    id: setNodeReservationCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setNodeReservationCapacity(long nodeReservationCapacity)
    nameWithType: ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
    overload: system.fabric._application_metric_description.setNodeReservationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 92
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションのノードの予約容量を取得します。</p>
      <p>
      アプリケーションの性能を設定するときに (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) アプリケーションの性能を更新するときに、または (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) この値を小さくする必要があります以上<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>メトリックごとにします。 </p>
    syntax:
      content: public void setNodeReservationCapacity(long nodeReservationCapacity)
      parameters:
        - id: nodeReservationCapacity
          type: 0364520f
          description: '<p>このアプリケーションのインスタンスである必要がノードで予約されているメトリック負荷の量を指定します。 場合<xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref>が指定されて、これらの値の積は、アプリケーションのクラスター内で予約された容量になります。 かどうかゼロに設定すると、容量は予約されていません、この指標です。 </p>'
  - uid: system.fabric._application_metric_description.setTotalApplicationCapacity(long)
    id: setTotalApplicationCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setTotalApplicationCapacity(long totalApplicationCapacity)
    nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
    overload: system.fabric._application_metric_description.setTotalApplicationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 188
    package: system.fabric
    summary: |-
      <p>Service Fabric アプリケーションの指標合計容量を設定します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
      <p>アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
    syntax:
      content: public void setTotalApplicationCapacity(long totalApplicationCapacity)
      parameters:
        - id: totalApplicationCapacity
          type: 0364520f
          description: <p>クラスターでは、このアプリケーションの指標合計容量を指定します。 Service Fabric は、この値にアプリケーション内でサービスの負荷の合計を制限しようとしています。 </p>
references:
  - uid: system.fabric._application_metric_description.ApplicationMetricDescription*
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription.ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._application_metric_description.getName*
    name: getName
    nameWithType: ApplicationMetricDescription.getName
    fullName: String system.fabric.ApplicationMetricDescription.getName
    package: system.fabric
  - uid: system.fabric._application_metric_description.setName*
    name: setName
    nameWithType: ApplicationMetricDescription.setName
    fullName: void system.fabric.ApplicationMetricDescription.setName
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._application_metric_description.getNodeReservationCapacity*
    name: getNodeReservationCapacity
    nameWithType: ApplicationMetricDescription.getNodeReservationCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setNodeReservationCapacity*
    name: setNodeReservationCapacity
    nameWithType: ApplicationMetricDescription.setNodeReservationCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity*
    name: getMaximumNodeCapacity
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setMaximumNodeCapacity*
    name: setMaximumNodeCapacity
    nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity*
    name: getTotalApplicationCapacity
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setTotalApplicationCapacity*
    name: setTotalApplicationCapacity
    nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description
    parent: system.fabric
    href: system.fabric._application_metric_description.yml
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    type: Class
    summary: <p>1 つのメトリックの容量のアプリケーションを指定します。 <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
    syntax: *ref_1
  - uid: system.fabric._application_description.getMinimumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMinimumNodes()
    nameWithType: ApplicationDescription.getMinimumNodes()
    fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
    type: Method
    summary: |-
      <p>Service Fabric がこのアプリケーションの容量を予約はノードの最小数を取得します。</p>
      <p></p>
    syntax:
      content: public long getMinimumNodes()
      return:
        type: 0364520f
        description: '<p>Service Fabric が、クラスター内のこのアプリケーションを配置する容量を予約、ノードの数。 ある意味ではありませんこれらすべてのノード上のレプリカを保持するアプリケーションが保証されるに注意してください。 このパラメーターが 0 に設定されている場合は、容量は予約されません。 このパラメーターがより大きい場合<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> 、 <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref>場合にスローされます<xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref>と呼びます。 </p>'
  - uid: system.fabric._application_description
    parent: system.fabric
    href: system.fabric._application_description.yml
    name: ApplicationDescription
    nameWithType: ApplicationDescription
    fullName: system.fabric.ApplicationDescription
    type: Class
    summary: '<p>使用して作成するアプリケーションについて説明<xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>'
    syntax:
      content: public class ApplicationDescription
  - uid: system.fabric._application_update_description
    parent: system.fabric
    href: system.fabric._application_update_description.yml
    name: ApplicationUpdateDescription
    nameWithType: ApplicationUpdateDescription
    fullName: system.fabric.ApplicationUpdateDescription
    type: Class
    summary: '<p>使用して更新されるアプリケーション容量の更新プログラムを説明<xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref></p>'
    syntax:
      content: public class ApplicationUpdateDescription
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    name: getMaximumNodeCapacity()
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
    type: Method
    summary: |-
      <p>Service Fabric アプリケーションの最大ノード容量を取得します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
      <p>アプリケーションの性能の製品の既存のアプリケーションを更新中に<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>し、この値よりも小さいか等しい必ず<xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>です。 </p>
    syntax: *ref_2
  - uid: system.fabric._application_description.getMaximumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMaximumNodes()
    nameWithType: ApplicationDescription.getMaximumNodes()
    fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
    type: Method
    summary: |-
      <p>このアプリケーションをインスタンス化するノードの最大数を取得します。</p>
      <p></p>
    syntax:
      content: public long getMaximumNodes()
      return:
        type: 0364520f
        description: '<p>スパンするこのアプリケーションが許可されているノードの数。 既定値は 0 です。 0 の場合、アプリケーションは任意の数のクラスター内のノードにまたがることができます。 このパラメーターがより小さい場合<xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> 、 <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref>場合にスローされます<xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref>と呼びます。 </p>'
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    name: getTotalApplicationCapacity()
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
    type: Method
    summary: |-
      <p>Service Fabric アプリケーションの容量のメトリックを取得します。</p>
      <p>
      アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
      <p>アプリケーションの容量を持つ新しいアプリケーションを作成する定義されている場合の製品<xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref>と<xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref>よりも小さいか、この値に等しいを常にする必要があります。 </p>
    syntax: *ref_3
  - uid: system.fabric._application_update_description.getMaximumNodes()
    parent: system.fabric._application_update_description
    href: system.fabric._application_update_description.yml
    name: getMaximumNodes()
    nameWithType: ApplicationUpdateDescription.getMaximumNodes()
    fullName: Long system.fabric.ApplicationUpdateDescription.getMaximumNodes()
    type: Method
    summary: |-
      <p>このアプリケーションをインスタンス化するノードの最大数を取得します。</p>
      <p>
      ゼロになった場合は、クラスター内のノードの数にかかわらずアプリケーションを配置することができます。 </p>
      <p>アプリケーションを更新するときにこのパラメーターが指定されていない場合は、ノードの最大数は変更されません。 </p>
      <p>このパラメーターがより小さい場合<xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> 、 <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref>場合にスローされます<xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref>と呼びます。 </p>
    syntax:
      content: public Long getMaximumNodes()
      return:
        type: 34f09483
        description: <p>スパンするこのアプリケーションが許可されているノードの数。 既定値は 0 です。 </p>
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection