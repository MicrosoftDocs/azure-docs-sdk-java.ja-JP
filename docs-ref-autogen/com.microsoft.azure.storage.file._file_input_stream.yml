### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.file._file_input_stream
    id: _file_input_stream
    parent: com.microsoft.azure.storage.file
    children:
      - com.microsoft.azure.storage.file._file_input_stream.available()
      - com.microsoft.azure.storage.file._file_input_stream.close()
      - 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
      - com.microsoft.azure.storage.file._file_input_stream.mark(final int)
      - com.microsoft.azure.storage.file._file_input_stream.markSupported()
      - com.microsoft.azure.storage.file._file_input_stream.read()
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
      - com.microsoft.azure.storage.file._file_input_stream.reset()
      - com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 37
    package: com.microsoft.azure.storage.file
    summary: <p>指定されたファイルのリソースを読み取る入力ストリームを提供します。 </p>
    syntax: &ref_1
      content: public class FileInputStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.file._file_input_stream.available()
    id: available()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: available()
    nameWithType: FileInputStream.available()
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available()
    overload: com.microsoft.azure.storage.file._file_input_stream.available*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 197
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>この入力ストリームのメソッドの次の呼び出し時にブロックすることがなく、この入力ストリームからバイトを読み取る (したりできるスキップ) の数の推定値を返します。 次の呼び出しには、同じスレッドまたは別のスレッドがあります。 1 つの読み取りまたはこのバイト数のスキップをいないブロックしますが、可能性がありますの読み取りまたは以下のバイト数をスキップします。</p>
      <p></p>
    syntax:
      content: public synchronized int available()
      return:
        type: 3d3ee726
        description: <p><code>int</code>入力ストリームの末尾に達すると、ブロックすることがなくこの入力ストリームまたは 0 からの読み取り (したりスキップ) をバイト数の推定値を表すです。</p>
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、I/O エラーが発生します。 </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: close()
    nameWithType: FileInputStream.close()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close()
    overload: com.microsoft.azure.storage.file._file_input_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 221
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>この入力ストリームを終了し、ストリームに関連付けられているすべてのシステム リソースを解放します。</p>
      <p></p>
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、I/O エラーが発生します。 </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    id: 'FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    nameWithType: 'FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    fullName: 'com.microsoft.azure.storage.file.FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    overload: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 140
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false">FileInputStream</xref>クラスです。</p>
      <p></p>
    syntax:
      content: 'protected FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
      parameters:
        - id: parentFile
          type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
          description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref>このストリームに関連付けられているファイルを表すオブジェクト。 </p>
        - id: accessCondition
          type: 93de0ef9com.microsoft.azure.storage._access_condition
          description: <p><xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref>ファイルのアクセス条件を表すオブジェクト。 </p>
        - id: options
          type: 93de0ef9com.microsoft.azure.storage.file._file_request_options
          description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref>を表すオブジェクトを要求の他のオプションを指定します。 </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>オブジェクトであり、操作の実行を追跡するために使用します。</p>
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: <p>操作中に発生したすべてのエラーを表す例外。 </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark(final int)
    id: mark(final int)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: mark(final int readlimit)
    nameWithType: FileInputStream.mark(final int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark(final int readlimit)
    overload: com.microsoft.azure.storage.file._file_input_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 272
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>この入力ストリーム内の現在位置をマークします。 Reset メソッドを後続の呼び出し後の読み取りは、同じバイトを再表示されるように、マークされた最後の位置からのこのストリームを再配置します。</p>
      <p></p>
    syntax:
      content: public synchronized void mark(final int readlimit)
      parameters:
        - id: readlimit
          type: cd225469
          description: <p><code>int</code>マークの位置が無効になる前に読み取り可能バイト数の上限を表します。 </p>
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: FileInputStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported()
    overload: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 286
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>この入力ストリームがマークとリセットのメソッドをサポートしているかどうか。 マークとリセットがサポートされているかどうかは、特定の入力ストリームのインスタンスのインバリアント プロパティです。 MarkSupported メソッド<xref uid="" data-throw-if-not-resolved="false">InputStream</xref> false を返します。</p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <code>True</code>このストリームのインスタンスは、マークとリセットのメソッドをサポートしている場合<code>False</code>それ以外の場合。 </p>"
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 303
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>入力ストリームから次のデータ バイトを読み取ります。 値のバイトは、0 ~ 255 の範囲の整数として返されます。 バイトが使用できない場合、ストリームの末尾に達しているため、値-1 が返されます。 このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: <p><code>int</code>ストリームの末尾に達している以上のデータがあるかどうか、バッファーを-1 に読み取る合計バイト数を表します。</p>
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、I/O エラーが発生します。 </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
    id: 'read(final byte [])'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b)'
    nameWithType: 'FileInputStream.read(final byte[] b)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 346
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>入力ストリームからバイト数を読み取り、バッファーの配列に格納します。 実際に読み取られたバイト数は、整数として返されます。 このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。 長さが 0 の場合は、バイトが読み取られることはありませんし、0 が返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。 バイトが使用できない場合、ストリームがあるため、値-1 をファイルの末尾が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</p>
      <p>読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。 読み取ったバイト数は最大の長さに一致します。 実際に読み取るバイト数これらのバイトは、影響を受けていないを通じて要素のままでは、要素に保存されます。</p>
      <p>、 </p>
      <p></p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b)'
      parameters:
        - id: b
          type: f549433f
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
    id: 'read(final byte [],final int,final int)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b, final int off, final int len)'
    nameWithType: 'FileInputStream.read(final byte[] b, final int off, final int len)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b, final int off, final int len)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 399
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>入力ストリームからバイトの配列にデータのバイト読み取ります。 しようとしましたが読み取るバイト数だけより小さい数値を読み取ることができます。 実際に読み取られたバイト数は、整数として返されます。 このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。</p>
      <p>かどうかは、0、バイトが読み取られることはありませんし、0 が返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。 バイトが使用できない場合、ストリームがあるため、値-1 のファイルの末尾が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</p>
      <p>読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。 最大で読み取られたバイト数と等しい。 実際に読み取るバイト数これらのバイトは、影響を受けていないを通じて要素のままでは、要素に保存されます。</p>
      <p>すべてのケースでを使用して要素と要素から影響を受けません。</p>
      <p>クラスのメソッド<xref uid="" data-throw-if-not-resolved="false">InputStream</xref>繰り返しメソッドを呼び出すだけです。 場合、最初にこのような呼び出しの結果、例外が、メソッドの呼び出しから返されることです。 場合は、例外が発生するすべての後続の呼び出しがキャッチされ、ファイルの終わりが以外の場合と同様に扱われます読み取ったバイト数までにポイントが格納されていること、および、例外が発生する前に読み取られたバイト数が返されます。 この要求の量の入力データが読み取られた、ファイルの終わりが検出されると、または例外がスローされるまでは、メソッドのブロックの既定の実装です。 サブクラスはこのメソッドの方が効率的な実装を提供することをお勧めします。</p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b, final int off, final int len)'
      parameters:
        - id: b
          type: f549433f
          description: <p>A<code>byte</code>データの読み取り先のバッファーを表す配列。 </p>
        - id: 'off'
          type: cd225469
          description: <p><code>int</code>の開始オフセットを表す、<code>byte</code>配列のデータが書き込まれます。 </p>
        - id: len
          type: cd225469
          description: <p><code>int</code>読み取るバイトの最大数を表します。</p>
      return:
        type: f75371fa
        description: <p><code>int</code>ストリームの末尾に達している以上のデータがあるかどうか、バッファーを-1 に読み取る合計バイト数を表します。</p>
    exceptions:
      - type: cbf33bbe
        description: <p>ファイルの最後以外の何らかの理由で、最初のバイトを読み取ることができない場合、入力ストリームが閉じられた、またはその他の場合は、I/O エラーが発生します。 </p>
      - type: 17c54119
        description: <p>場合、<code>byte</code>配列<code>b</code>が null です。 </p>
      - type: 473ec288
        description: <p>場合<code>off</code>が負の値、<code>len</code>が負の値、または<code>len</code>がより大きい<code>b.length - off</code>です。 </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: FileInputStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset()
    overload: com.microsoft.azure.storage.file._file_input_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 492
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>この入力ストリームにマーク メソッドが最後に呼び出された時点でのこのストリームの位置に移動します。 ストリームがファイル MD5 確認を無効になりますが読み取るファイルの位置を変更に注意してください。</p>
      <p></p>
    syntax:
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p>このストリームがマークされていない場合、または場合は、マークは無効にされました。 </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    id: skip(final long)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: skip(final long n)
    nameWithType: FileInputStream.skip(final long n)
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip(final long n)
    overload: com.microsoft.azure.storage.file._file_input_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 514
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>スキップし、n バイトの入力ストリームからデータを破棄します。 Skip メソッドなる可能性があります、さまざまな理由により、小規模ないくつかの可能性のある 0 バイトをスキップすることをします。 さまざまな条件のいずれかから可能性があります。1 つだけの可能性は、ファイルの終わりに達する前に、n バイトがスキップされました。 実際のスキップされたバイト数が返されます。 N が負の場合は、バイトはスキップされません。</p>
      <p>ストリームがファイル MD5 確認を無効になりますが読み取るファイルの位置を変更に注意してください。</p>
      <p></p>
    syntax:
      content: public synchronized long skip(final long n)
      parameters:
        - id: 'n'
          type: 4c60ae65
          description: <p>A<code>long</code>スキップするバイトの数を表します。 </p>
      return:
        type: ab67f27f
references:
  - uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._cloud_file
        name: CloudFile
        fullName: com.microsoft.azure.storage.file.CloudFile
        href: com.microsoft.azure.storage.file._cloud_file.yml
  - uid: 93de0ef9com.microsoft.azure.storage._access_condition
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._access_condition
        name: AccessCondition
        fullName: com.microsoft.azure.storage.AccessCondition
        href: com.microsoft.azure.storage._access_condition.yml
  - uid: 93de0ef9com.microsoft.azure.storage.file._file_request_options
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._file_request_options
        name: FileRequestOptions
        fullName: com.microsoft.azure.storage.file.FileRequestOptions
        href: com.microsoft.azure.storage.file._file_request_options.yml
  - uid: 93de0ef9com.microsoft.azure.storage._operation_context
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._operation_context
        name: OperationContext
        fullName: com.microsoft.azure.storage.OperationContext
        href: com.microsoft.azure.storage._operation_context.yml
  - uid: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    name: FileInputStream
    nameWithType: FileInputStream.FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream.FileInputStream
    package: com.microsoft.azure.storage.file
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: com.microsoft.azure.storage.file._file_input_stream.available*
    name: available
    nameWithType: FileInputStream.available
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available
    package: com.microsoft.azure.storage.file
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.file._file_input_stream.close*
    name: close
    nameWithType: FileInputStream.close
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close
    package: com.microsoft.azure.storage.file
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark*
    name: mark
    nameWithType: FileInputStream.mark
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark
    package: com.microsoft.azure.storage.file
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    name: markSupported
    nameWithType: FileInputStream.markSupported
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported
    package: com.microsoft.azure.storage.file
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.file._file_input_stream.read*
    name: read
    nameWithType: FileInputStream.read
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read
    package: com.microsoft.azure.storage.file
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset*
    name: reset
    nameWithType: FileInputStream.reset
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset
    package: com.microsoft.azure.storage.file
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: ab67f27f
    spec.java:
      - name: synchronized long
        fullName: synchronized long
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip*
    name: skip
    nameWithType: FileInputStream.skip
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip
    package: com.microsoft.azure.storage.file
  - uid: com.microsoft.azure.storage.file._cloud_file
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._cloud_file.yml
    name: CloudFile
    nameWithType: CloudFile
    fullName: com.microsoft.azure.storage.file.CloudFile
    type: Class
    summary: <p>Microsoft Azure ファイルを表します。 </p>
    syntax:
      content: public class CloudFile implements ListFileItem
  - uid: com.microsoft.azure.storage._operation_context
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._operation_context.yml
    name: OperationContext
    nameWithType: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    type: Class
    summary: <p>現在の論理演算を表します。 論理操作では、複数の個別の物理的な要求と一対多リレーションシップがあります。 </p>
    syntax:
      content: public class OperationContext
  - uid: com.microsoft.azure.storage.file._file_request_options
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_request_options.yml
    name: FileRequestOptions
    nameWithType: FileRequestOptions
    fullName: com.microsoft.azure.storage.file.FileRequestOptions
    type: Class
    summary: <p>要求時に指定できるオプションのセットを表します。 </p>
    syntax:
      content: public class FileRequestOptions
  - uid: com.microsoft.azure.storage._access_condition
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._access_condition.yml
    name: AccessCondition
    nameWithType: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    type: Class
    summary: <p>ストレージ サービスに対して操作をするためのアクセス条件のセットを表します。 </p>
    syntax:
      content: public class AccessCondition
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p>Microsoft Azure ストレージ サービスの例外を表します。 </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.file._file_input_stream
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    summary: <p>指定されたファイルのリソースを読み取る入力ストリームを提供します。 </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    type: Method
    summary: |-
      <p>入力ストリームから次のデータ バイトを読み取ります。 値のバイトは、0 ~ 255 の範囲の整数として返されます。 バイトが使用できない場合、ストリームの末尾に達しているため、値-1 が返されます。 このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</p>
      <p></p>
    syntax: *ref_2