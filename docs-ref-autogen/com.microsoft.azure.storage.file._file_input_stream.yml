### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.file._file_input_stream
    id: _file_input_stream
    parent: com.microsoft.azure.storage.file
    children:
      - com.microsoft.azure.storage.file._file_input_stream.available()
      - com.microsoft.azure.storage.file._file_input_stream.close()
      - 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
      - com.microsoft.azure.storage.file._file_input_stream.mark(final int)
      - com.microsoft.azure.storage.file._file_input_stream.markSupported()
      - com.microsoft.azure.storage.file._file_input_stream.read()
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
      - com.microsoft.azure.storage.file._file_input_stream.reset()
      - com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 37
    package: com.microsoft.azure.storage.file
    summary: <p><span data-ttu-id="fc0c4-101">指定されたファイルのリソースを読み取る入力ストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-101">Provides an input stream to read a given file resource.</span></span> </p>
    syntax: &ref_1
      content: public class FileInputStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.file._file_input_stream.available()
    id: available()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: available()
    nameWithType: FileInputStream.available()
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available()
    overload: com.microsoft.azure.storage.file._file_input_stream.available*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 197
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-102">この入力ストリームのメソッドの次の呼び出し時にブロックすることがなく、この入力ストリームからバイトを読み取る (したりできるスキップ) の数の推定値を返します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-102">Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.</span></span> <span data-ttu-id="fc0c4-103">次の呼び出しには、同じスレッドまたは別のスレッドがあります。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-103">The next invocation might be the same thread or another thread.</span></span> <span data-ttu-id="fc0c4-104">1 つの読み取りまたはこのバイト数のスキップをいないブロックしますが、可能性がありますの読み取りまたは以下のバイト数をスキップします。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-104">A single read or skip of this many bytes will not block, but may read or skip fewer bytes.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized int available()
      return:
        type: 3d3ee726
        description: '<p><span data-ttu-id="fc0c4-105"><code>int</code>入力ストリームの末尾に達すると、ブロックすることがなくこの入力ストリームまたは 0 からの読み取り (したりスキップ) をバイト数の推定値を表すです。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-105">An <code>int</code> which represents an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking, or 0 when it reaches the end of the input stream.</span></span></p>'
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="fc0c4-106">場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-106">If an I/O error occurs.</span></span> </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: close()
    nameWithType: FileInputStream.close()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close()
    overload: com.microsoft.azure.storage.file._file_input_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 221
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-107">この入力ストリームを終了し、ストリームに関連付けられているすべてのシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-107">Closes this input stream and releases any system resources associated with the stream.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="fc0c4-108">場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-108">If an I/O error occurs.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    id: 'FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    nameWithType: 'FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    fullName: 'com.microsoft.azure.storage.file.FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    overload: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 140
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-109">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false">FileInputStream</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-109">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false">FileInputStream</xref> class.</span></span></p>
      <p></p>
    syntax:
      content: 'protected FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
      parameters:
        - id: parentFile
          type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
          description: <p><span data-ttu-id="fc0c4-110">A <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref>このストリームに関連付けられているファイルを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-110">A <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref> object which represents the file that this stream is associated with.</span></span> </p>
        - id: accessCondition
          type: 93de0ef9com.microsoft.azure.storage._access_condition
          description: <p><span data-ttu-id="fc0c4-111"><xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref>ファイルのアクセス条件を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-111">An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object which represents the access conditions for the file.</span></span> </p>
        - id: options
          type: 93de0ef9com.microsoft.azure.storage.file._file_request_options
          description: <p><span data-ttu-id="fc0c4-112">A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref>を表すオブジェクトを要求の他のオプションを指定します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-112">A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object which represents that specifies any additional options for the request.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="fc0c4-113"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>オブジェクトであり、操作の実行を追跡するために使用します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-113">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object which is used to track the execution of the operation.</span></span></p>
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: <p><span data-ttu-id="fc0c4-114">操作中に発生したすべてのエラーを表す例外。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-114">An exception representing any error which occurred during the operation.</span></span> </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark(final int)
    id: mark(final int)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: mark(final int readlimit)
    nameWithType: FileInputStream.mark(final int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark(final int readlimit)
    overload: com.microsoft.azure.storage.file._file_input_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 272
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-115">この入力ストリーム内の現在位置をマークします。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-115">Marks the current position in this input stream.</span></span> <span data-ttu-id="fc0c4-116">Reset メソッドを後続の呼び出し後の読み取りは、同じバイトを再表示されるように、マークされた最後の位置からのこのストリームを再配置します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-116">A subsequent call to the reset method repositions this stream at the last marked position so that subsequent reads re-read the same bytes.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized void mark(final int readlimit)
      parameters:
        - id: readlimit
          type: cd225469
          description: <p><span data-ttu-id="fc0c4-117"><code>int</code>マークの位置が無効になる前に読み取り可能バイト数の上限を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-117">An <code>int</code> which represents the maximum limit of bytes that can be read before the mark position becomes invalid.</span></span> </p>
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: FileInputStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported()
    overload: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 286
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-118">この入力ストリームがマークとリセットのメソッドをサポートしているかどうか。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-118">Tests if this input stream supports the mark and reset methods.</span></span> <span data-ttu-id="fc0c4-119">マークとリセットがサポートされているかどうかは、特定の入力ストリームのインスタンスのインバリアント プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-119">Whether or not mark and reset are supported is an invariant property of a particular input stream instance.</span></span> <span data-ttu-id="fc0c4-120">MarkSupported メソッド<xref uid="" data-throw-if-not-resolved="false">InputStream</xref> false を返します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-120">The markSupported method of <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> returns false.</span></span></p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"fc0c4-121\">\r\n\r\n  <code>True</code>このストリームのインスタンスは、マークとリセットのメソッドをサポートしている場合<code>False</code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"fc0c4-121\">\r\n\r\n  <code>True</code> if this stream instance supports the mark and reset methods; <code>False</code> otherwise.</span></span> </p>"
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 303
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-122">入力ストリームから次のデータ バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-122">Reads the next byte of data from the input stream.</span></span> <span data-ttu-id="fc0c4-123">値のバイトは、0 ~ 255 の範囲の整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-123">The value byte is returned as an int in the range 0 to 255.</span></span> <span data-ttu-id="fc0c4-124">バイトが使用できない場合、ストリームの末尾に達しているため、値-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-124">If no byte is available because the end of the stream has been reached, the value -1 is returned.</span></span> <span data-ttu-id="fc0c4-125">このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-125">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: '<p><span data-ttu-id="fc0c4-126"><code>int</code>ストリームの末尾に達している以上のデータがあるかどうか、バッファーを-1 に読み取る合計バイト数を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-126">An <code>int</code> which represents the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.</span></span></p>'
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="fc0c4-127">場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-127">If an I/O error occurs.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
    id: 'read(final byte [])'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b)'
    nameWithType: 'FileInputStream.read(final byte[] b)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 346
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-128">入力ストリームからバイト数を読み取り、バッファーの配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-128">Reads some number of bytes from the input stream and stores them into the buffer array .</span></span> <span data-ttu-id="fc0c4-129">実際に読み取られたバイト数は、整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-129">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="fc0c4-130">このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-130">This method blocks until input data is available, end of file is detected, or an exception is thrown.</span></span> <span data-ttu-id="fc0c4-131">長さが 0 の場合は、バイトが読み取られることはありませんし、0 が返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-131">If the length of  is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="fc0c4-132">バイトが使用できない場合、ストリームがあるため、値-1 をファイルの末尾が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-132">If no byte is available because the stream is at the end of the file, the value -1 is returned; otherwise, at least one byte is read and stored into .</span></span></p>
      <p><span data-ttu-id="fc0c4-133">読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-133">The first byte read is stored into element , the next one into , and so on.</span></span> <span data-ttu-id="fc0c4-134">読み取ったバイト数は最大の長さに一致します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-134">The number of bytes read is, at most, equal to the length of .</span></span> <span data-ttu-id="fc0c4-135">実際に読み取るバイト数これらのバイトは、影響を受けていないを通じて要素のままでは、要素に保存されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-135">Let  be the number of bytes actually read; these bytes will be stored in elements  through , leaving elements  through  unaffected.</span></span></p>
      <p><span data-ttu-id="fc0c4-136">、</span><span class="sxs-lookup"><span data-stu-id="fc0c4-136">The</span></span> </p>
      <p></p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b)'
      parameters:
        - id: b
          type: f549433f
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
    id: 'read(final byte [],final int,final int)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b, final int off, final int len)'
    nameWithType: 'FileInputStream.read(final byte[] b, final int off, final int len)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b, final int off, final int len)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 399
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-137">入力ストリームからバイトの配列にデータのバイト読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-137">Reads up to  bytes of data from the input stream into an array of bytes.</span></span> <span data-ttu-id="fc0c4-138">しようとしましたが読み取るバイト数だけより小さい数値を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-138">An attempt is made to read as many as  bytes, but a smaller number may be read.</span></span> <span data-ttu-id="fc0c4-139">実際に読み取られたバイト数は、整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-139">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="fc0c4-140">このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-140">This method blocks until input data is available, end of file is detected, or an exception is thrown.</span></span></p>
      <p><span data-ttu-id="fc0c4-141">かどうかは、0、バイトが読み取られることはありませんし、0 が返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-141">If  is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="fc0c4-142">バイトが使用できない場合、ストリームがあるため、値-1 のファイルの末尾が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-142">If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into .</span></span></p>
      <p><span data-ttu-id="fc0c4-143">読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-143">The first byte read is stored into element , the next one into , and so on.</span></span> <span data-ttu-id="fc0c4-144">最大で読み取られたバイト数と等しい。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-144">The number of bytes read is, at most, equal to .</span></span> <span data-ttu-id="fc0c4-145">実際に読み取るバイト数これらのバイトは、影響を受けていないを通じて要素のままでは、要素に保存されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-145">Let  be the number of bytes actually read; these bytes will be stored in elements  through , leaving elements  through  unaffected.</span></span></p>
      <p><span data-ttu-id="fc0c4-146">すべてのケースでを使用して要素と要素から影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-146">In every case, elements  through  and elements  through  are unaffected.</span></span></p>
      <p><span data-ttu-id="fc0c4-147">クラスのメソッド<xref uid="" data-throw-if-not-resolved="false">InputStream</xref>繰り返しメソッドを呼び出すだけです。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-147">The  method for class <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> simply calls the method  repeatedly.</span></span> <span data-ttu-id="fc0c4-148">場合、最初にこのような呼び出しの結果、例外が、メソッドの呼び出しから返されることです。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-148">If the first such call results in an , that exception is returned from the call to the  method.</span></span> <span data-ttu-id="fc0c4-149">場合は、例外が発生するすべての後続の呼び出しがキャッチされ、ファイルの終わりが以外の場合と同様に扱われます読み取ったバイト数までにポイントが格納されていること、および、例外が発生する前に読み取られたバイト数が返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-149">If any subsequent call to  results in a , the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into  and the number of bytes read before the exception occurred is returned.</span></span> <span data-ttu-id="fc0c4-150">この要求の量の入力データが読み取られた、ファイルの終わりが検出されると、または例外がスローされるまでは、メソッドのブロックの既定の実装です。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-150">The default implementation of this method blocks until the requested amount of input data  has been read, end of file is detected, or an exception is thrown.</span></span> <span data-ttu-id="fc0c4-151">サブクラスはこのメソッドの方が効率的な実装を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-151">Subclasses are encouraged to provide a more efficient implementation of this method.</span></span></p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b, final int off, final int len)'
      parameters:
        - id: b
          type: f549433f
          description: <p><span data-ttu-id="fc0c4-152">A<code>byte</code>データの読み取り先のバッファーを表す配列。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-152">A <code>byte</code> array which represents the buffer into which the data is read.</span></span> </p>
        - id: 'off'
          type: cd225469
          description: <p><span data-ttu-id="fc0c4-153"><code>int</code>の開始オフセットを表す、<code>byte</code>配列のデータが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-153">An <code>int</code> which represents the start offset in the <code>byte</code> array at which the data is written.</span></span> </p>
        - id: len
          type: cd225469
          description: <p><span data-ttu-id="fc0c4-154"><code>int</code>読み取るバイトの最大数を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-154">An <code>int</code> which represents the maximum number of bytes to read.</span></span></p>
      return:
        type: f75371fa
        description: '<p><span data-ttu-id="fc0c4-155"><code>int</code>ストリームの末尾に達している以上のデータがあるかどうか、バッファーを-1 に読み取る合計バイト数を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-155">An <code>int</code> which represents the total number of bytes read into the buffer, or -1 if there is no more data because the end of the stream has been reached.</span></span></p>'
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="fc0c4-156">ファイルの最後以外の何らかの理由で、最初のバイトを読み取ることができない場合、入力ストリームが閉じられた、またはその他の場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-156">If the first byte cannot be read for any reason other than end of file, or if the input stream has been closed, or if some other I/O error occurs.</span></span> </p>'
      - type: 17c54119
        description: <p><span data-ttu-id="fc0c4-157">場合、<code>byte</code>配列<code>b</code>が null です。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-157">If the <code>byte</code> array <code>b</code> is null.</span></span> </p>
      - type: 473ec288
        description: '<p><span data-ttu-id="fc0c4-158">場合<code>off</code>が負の値、<code>len</code>が負の値、または<code>len</code>がより大きい<code>b.length - off</code>です。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-158">If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off</code>.</span></span> </p>'
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: FileInputStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset()
    overload: com.microsoft.azure.storage.file._file_input_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 492
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-159">この入力ストリームにマーク メソッドが最後に呼び出された時点でのこのストリームの位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-159">Repositions this stream to the position at the time the mark method was last called on this input stream.</span></span> <span data-ttu-id="fc0c4-160">ストリームがファイル MD5 確認を無効になりますが読み取るファイルの位置を変更に注意してください。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-160">Note repositioning the file read stream will disable file MD5 checking.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="fc0c4-161">このストリームがマークされていない場合、または場合は、マークは無効にされました。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-161">If this stream has not been marked or if the mark has been invalidated.</span></span> </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    id: skip(final long)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: skip(final long n)
    nameWithType: FileInputStream.skip(final long n)
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip(final long n)
    overload: com.microsoft.azure.storage.file._file_input_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 514
    package: com.microsoft.azure.storage.file
    summary: |-
      <p><span data-ttu-id="fc0c4-162">スキップし、n バイトの入力ストリームからデータを破棄します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-162">Skips over and discards n bytes of data from this input stream.</span></span> <span data-ttu-id="fc0c4-163">Skip メソッドなる可能性があります、さまざまな理由により、小規模ないくつかの可能性のある 0 バイトをスキップすることをします。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-163">The skip method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly 0.</span></span> <span data-ttu-id="fc0c4-164">さまざまな条件のいずれかから可能性があります。1 つだけの可能性は、ファイルの終わりに達する前に、n バイトがスキップされました。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-164">This may result from any of a number of conditions; reaching end of file before n bytes have been skipped is only one possibility.</span></span> <span data-ttu-id="fc0c4-165">実際のスキップされたバイト数が返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-165">The actual number of bytes skipped is returned.</span></span> <span data-ttu-id="fc0c4-166">N が負の場合は、バイトはスキップされません。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-166">If n is negative, no bytes are skipped.</span></span></p>
      <p><span data-ttu-id="fc0c4-167">ストリームがファイル MD5 確認を無効になりますが読み取るファイルの位置を変更に注意してください。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-167">Note repositioning the file read stream will disable file MD5 checking.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized long skip(final long n)
      parameters:
        - id: 'n'
          type: 4c60ae65
          description: <p><span data-ttu-id="fc0c4-168">A<code>long</code>スキップするバイトの数を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-168">A <code>long</code> which represents the number of bytes to skip.</span></span> </p>
      return:
        type: ab67f27f
references:
  - uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._cloud_file
        name: CloudFile
        fullName: com.microsoft.azure.storage.file.CloudFile
        href: com.microsoft.azure.storage.file._cloud_file.yml
  - uid: 93de0ef9com.microsoft.azure.storage._access_condition
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._access_condition
        name: AccessCondition
        fullName: com.microsoft.azure.storage.AccessCondition
        href: com.microsoft.azure.storage._access_condition.yml
  - uid: 93de0ef9com.microsoft.azure.storage.file._file_request_options
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._file_request_options
        name: FileRequestOptions
        fullName: com.microsoft.azure.storage.file.FileRequestOptions
        href: com.microsoft.azure.storage.file._file_request_options.yml
  - uid: 93de0ef9com.microsoft.azure.storage._operation_context
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._operation_context
        name: OperationContext
        fullName: com.microsoft.azure.storage.OperationContext
        href: com.microsoft.azure.storage._operation_context.yml
  - uid: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    name: FileInputStream
    nameWithType: FileInputStream.FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream.FileInputStream
    package: com.microsoft.azure.storage.file
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: com.microsoft.azure.storage.file._file_input_stream.available*
    name: available
    nameWithType: FileInputStream.available
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available
    package: com.microsoft.azure.storage.file
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.file._file_input_stream.close*
    name: close
    nameWithType: FileInputStream.close
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close
    package: com.microsoft.azure.storage.file
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark*
    name: mark
    nameWithType: FileInputStream.mark
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark
    package: com.microsoft.azure.storage.file
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    name: markSupported
    nameWithType: FileInputStream.markSupported
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported
    package: com.microsoft.azure.storage.file
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.file._file_input_stream.read*
    name: read
    nameWithType: FileInputStream.read
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read
    package: com.microsoft.azure.storage.file
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset*
    name: reset
    nameWithType: FileInputStream.reset
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset
    package: com.microsoft.azure.storage.file
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: ab67f27f
    spec.java:
      - name: synchronized long
        fullName: synchronized long
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip*
    name: skip
    nameWithType: FileInputStream.skip
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip
    package: com.microsoft.azure.storage.file
  - uid: com.microsoft.azure.storage.file._cloud_file
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._cloud_file.yml
    name: CloudFile
    nameWithType: CloudFile
    fullName: com.microsoft.azure.storage.file.CloudFile
    type: Class
    summary: <p><span data-ttu-id="fc0c4-169">Microsoft Azure ファイルを表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-169">Represents a Microsoft Azure File.</span></span> </p>
    syntax:
      content: public class CloudFile implements ListFileItem
  - uid: com.microsoft.azure.storage._operation_context
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._operation_context.yml
    name: OperationContext
    nameWithType: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    type: Class
    summary: <p><span data-ttu-id="fc0c4-170">現在の論理演算を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-170">Represents the current logical operation.</span></span> <span data-ttu-id="fc0c4-171">論理操作では、複数の個別の物理的な要求と一対多リレーションシップがあります。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-171">A logical operation may have a one-to-many relationship with multiple individual physical requests.</span></span> </p>
    syntax:
      content: public class OperationContext
  - uid: com.microsoft.azure.storage.file._file_request_options
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_request_options.yml
    name: FileRequestOptions
    nameWithType: FileRequestOptions
    fullName: com.microsoft.azure.storage.file.FileRequestOptions
    type: Class
    summary: <p><span data-ttu-id="fc0c4-172">要求時に指定できるオプションのセットを表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-172">Represents a set of options that may be specified on a request.</span></span> </p>
    syntax:
      content: public class FileRequestOptions
  - uid: com.microsoft.azure.storage._access_condition
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._access_condition.yml
    name: AccessCondition
    nameWithType: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    type: Class
    summary: <p><span data-ttu-id="fc0c4-173">ストレージ サービスに対して操作をするためのアクセス条件のセットを表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-173">Represents a set of access conditions to be used for operations against the storage services.</span></span> </p>
    syntax:
      content: public class AccessCondition
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p><span data-ttu-id="fc0c4-174">Microsoft Azure ストレージ サービスの例外を表します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-174">Represents an exception for the Microsoft Azure storage service.</span></span> </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.file._file_input_stream
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    summary: <p><span data-ttu-id="fc0c4-175">指定されたファイルのリソースを読み取る入力ストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-175">Provides an input stream to read a given file resource.</span></span> </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    type: Method
    summary: |-
      <p><span data-ttu-id="fc0c4-176">入力ストリームから次のデータ バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-176">Reads the next byte of data from the input stream.</span></span> <span data-ttu-id="fc0c4-177">値のバイトは、0 ~ 255 の範囲の整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-177">The value byte is returned as an int in the range 0 to 255.</span></span> <span data-ttu-id="fc0c4-178">バイトが使用できない場合、ストリームの末尾に達しているため、値-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-178">If no byte is available because the end of the stream has been reached, the value -1 is returned.</span></span> <span data-ttu-id="fc0c4-179">このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc0c4-179">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: *ref_2