### YamlMime:ManagedReference
items:
  - uid: system.fabric._service_management_client
    id: _service_management_client
    parent: system.fabric
    children:
      - system.fabric._service_management_client.close()
      - system.fabric._service_management_client.createService(ServiceDescription)
      - 'system.fabric._service_management_client.createService(ServiceDescription,Duration)'
      - 'system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [])'
      - 'system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [],Duration)'
      - system.fabric._service_management_client.deleteService(URI)
      - 'system.fabric._service_management_client.deleteService(URI,Duration)'
      - system.fabric._service_management_client.getServiceDescription(URI)
      - 'system.fabric._service_management_client.getServiceDescription(URI,Duration)'
      - 'system.fabric._service_management_client.getServiceManifest(String,String,String)'
      - 'system.fabric._service_management_client.getServiceManifest(String,String,String,Duration)'
      - system.fabric._service_management_client.getServiceNotificationFilterMatched()
      - 'system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags)'
      - 'system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)'
      - 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)'
      - 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)'
      - 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)'
      - 'system.fabric._service_management_client.removeReplica(String,UUID,long,boolean)'
      - 'system.fabric._service_management_client.removeReplica(String,UUID,long,boolean,Duration)'
      - system.fabric._service_management_client.resolveServicePartitionAsync(URI)
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,Duration)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,Duration)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,Duration)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition)'
      - 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)'
      - 'system.fabric._service_management_client.restartReplica(String,UUID,long)'
      - 'system.fabric._service_management_client.restartReplica(String,UUID,long,Duration)'
      - system.fabric._service_management_client.unRegisterServiceNotificationFilter(long)
      - 'system.fabric._service_management_client.unRegisterServiceNotificationFilter(long,Duration)'
      - system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long)
      - 'system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription)'
      - 'system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription,Duration)'
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: ServiceManagementClient
    nameWithType: ServiceManagementClient
    fullName: system.fabric.ServiceManagementClient
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 19
    package: system.fabric
    syntax:
      content: public class ServiceManagementClient
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: system.fabric._service_management_client.close()
    id: close()
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: close()
    nameWithType: ServiceManagementClient.close()
    fullName: void system.fabric.ServiceManagementClient.close()
    overload: system.fabric._service_management_client.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1434
    package: system.fabric
    syntax:
      content: public void close()
  - uid: system.fabric._service_management_client.createService(ServiceDescription)
    id: createService(ServiceDescription)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: createService(ServiceDescription servicedesc)
    nameWithType: ServiceManagementClient.createService(ServiceDescription servicedesc)
    fullName: CompletableFuture system.fabric.ServiceManagementClient.createService(ServiceDescription servicedesc)
    overload: system.fabric._service_management_client.createService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 205
    package: system.fabric
    summary: "<p>指定された説明とサービスをインスタンス化します。</p>\n<p>\r\n\r\n  <b>注釈:</b>が既に存在しない場合にサービス ファブリック名が暗黙的に作成します。 </p>"
    syntax:
      content: public CompletableFuture createService(ServiceDescription servicedesc)
      parameters:
        - id: servicedesc
          type: system.fabric._service_description
          description: <p>サービスの構成。 </p>
      return:
        type: 5f2aaa64
        description: <p>インスタンス化されたサービスです。 </p>
  - uid: 'system.fabric._service_management_client.createService(ServiceDescription,Duration)'
    id: 'createService(ServiceDescription,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.createService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 223
    package: system.fabric
    summary: "<p>指定された説明とサービスをインスタンス化します。</p>\n<p>\r\n\r\n  <b>注釈:</b>が既に存在しない場合にサービス ファブリック名が暗黙的に作成します。 </p>"
    syntax:
      content: 'public CompletableFuture createService(ServiceDescription servicedesc, Duration timeoutMilliSeconds)'
      parameters:
        - id: servicedesc
          type: system.fabric._service_description
          description: <p>サービスの構成。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 5f2aaa64
        description: <p>インスタンス化されたサービスです。 </p>
  - uid: 'system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [])'
    id: 'createServiceFromTemplate(URI,URI,String,long,byte [])'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)'
    nameWithType: 'ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)'
    overload: system.fabric._service_management_client.createServiceFromTemplate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 267
    package: system.fabric
    summary: "<p>アプリケーション マニフェストで指定されたテンプレートからサービスをインスタンス化します。</p>\n<p>\r\n\r\n  <b>注釈:</b>が既に存在しない場合にサービス ファブリック名が暗黙的に作成します。 </p>"
    syntax:
      content: 'public CompletableFuture createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>サービスが作成されるアプリケーションのサービス ファブリック名。 </p>
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: serviceTypeName
          type: '26831127'
          description: <p>サービスの種類の名前。 サービス マニフェストで指定された ServiceTypeName と同じにする必要があります。 </p>
        - id: initializationDataSize
          type: 0364520f
          description: <p>初期化データのサイズ </p>
        - id: initializationData
          type: ccd9418d
          description: <p>新しいサービスに渡される初期化データ。 </p>
      return:
        type: 5f2aaa64
        description: <p>CompletableFuture </p>
  - uid: 'system.fabric._service_management_client.createServiceFromTemplate(URI,URI,String,long,byte [],Duration)'
    id: 'createServiceFromTemplate(URI,URI,String,long,byte [],Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.createServiceFromTemplate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 305
    package: system.fabric
    summary: "<p>アプリケーション マニフェストで指定されたテンプレートからサービスをインスタンス化します。</p>\n<p>\r\n\r\n  <b>注釈:</b>が既に存在しない場合にサービス ファブリック名が暗黙的に作成します。 </p>"
    syntax:
      content: 'public CompletableFuture createServiceFromTemplate(URI applicationName, URI serviceName, String serviceTypeName, long initializationDataSize, byte[] initializationData, Duration timeoutMilliSeconds)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>サービスが作成されるアプリケーションのサービス ファブリック名。 </p>
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: serviceTypeName
          type: '26831127'
          description: <p>サービスの種類の名前。 サービス マニフェストで指定された ServiceTypeName と同じにする必要があります。 </p>
        - id: initializationDataSize
          type: 0364520f
          description: <p>初期化データのサイズ </p>
        - id: initializationData
          type: ccd9418d
          description: <p>新しいサービスに渡される初期化データ。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 5f2aaa64
        description: <p>CompletableFuture </p>
  - uid: system.fabric._service_management_client.deleteService(URI)
    id: deleteService(URI)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: deleteService(URI serviceName)
    nameWithType: ServiceManagementClient.deleteService(URI serviceName)
    fullName: CompletableFuture system.fabric.ServiceManagementClient.deleteService(URI serviceName)
    overload: system.fabric._service_management_client.deleteService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 350
    package: system.fabric
    summary: "<p>指定されたサービス インスタンスを削除します。</p>\n<p>\r\n\r\n  <b>注釈:</b>サービス ファブリック名は暗黙的になり、アプリケーションが Service Fabric である場合は削除を再帰的に管理します。 </p>"
    syntax:
      content: public CompletableFuture deleteService(URI serviceName)
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
      return:
        type: 5f2aaa64
        description: <p>削除されたサービス インスタンス。 </p>
  - uid: 'system.fabric._service_management_client.deleteService(URI,Duration)'
    id: 'deleteService(URI,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'deleteService(URI serviceName, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.deleteService(URI serviceName, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.deleteService(URI serviceName, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.deleteService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 368
    package: system.fabric
    summary: "<p>指定されたサービス インスタンスを削除します。</p>\n<p>\r\n\r\n  <b>注釈:</b>サービス ファブリック名は暗黙的になり、アプリケーションが Service Fabric である場合は削除を再帰的に管理します。 </p>"
    syntax:
      content: 'public CompletableFuture deleteService(URI serviceName, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 5f2aaa64
        description: <p>削除されたサービス インスタンス。 </p>
  - uid: system.fabric._service_management_client.getServiceDescription(URI)
    id: getServiceDescription(URI)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: getServiceDescription(URI serviceName)
    nameWithType: ServiceManagementClient.getServiceDescription(URI serviceName)
    fullName: CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription(URI serviceName)
    overload: system.fabric._service_management_client.getServiceDescription*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 400
    package: system.fabric
    summary: "<p>指定されたサービス インスタンスのサービスの説明を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceManagementClient#getServiceDescription(java.net.URI)</xref>名前がサービスに関連付けられているかどうかを判断する最も効果的な方法です。 </p>"
    syntax:
      content: public CompletableFuture<ServiceDescription> getServiceDescription(URI serviceName)
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
      return:
        type: 9cdf14d0system.fabric._service_descriptiona08ddfce
        description: <p>指定されたサービス インスタンスのサービスの説明。 </p>
  - uid: 'system.fabric._service_management_client.getServiceDescription(URI,Duration)'
    id: 'getServiceDescription(URI,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.getServiceDescription*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 419
    package: system.fabric
    summary: "<p>指定されたサービス インスタンスのサービスの説明を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceManagementClient#getServiceDescription(java.net.URI)</xref>名前がサービスに関連付けられているかどうかを判断する最も効果的な方法です。 </p>"
    syntax:
      content: 'public CompletableFuture<ServiceDescription> getServiceDescription(URI serviceName, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._service_descriptiona08ddfce
        description: <p>指定されたサービス インスタンスのサービスの説明。 </p>
  - uid: 'system.fabric._service_management_client.getServiceManifest(String,String,String)'
    id: 'getServiceManifest(String,String,String)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)'
    nameWithType: 'ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)'
    fullName: 'CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)'
    overload: system.fabric._service_management_client.getServiceManifest*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 990
    package: system.fabric
    summary: |-
      <p>指定した ApplicationTypeName および ApplicationTypeVersion でプロビジョニングされたサービス マニフェスト ドキュメントを取得します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<String> getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName)'
      parameters:
        - id: applicationTypeName
          type: '26831127'
          description: <p>プロビジョニング済みのアプリケーション マニフェストの名前。 </p>
        - id: applicationTypeVersion
          type: '26831127'
          description: <p>プロビジョニング済みのアプリケーション マニフェストのバージョン。 </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p>アプリケーション マニフェストで参照されたサービス マニフェストの名前。 </p>
      return:
        type: 06be942d
        description: <p>プロビジョニングされたサービス マニフェストのドキュメント。 </p>
  - uid: 'system.fabric._service_management_client.getServiceManifest(String,String,String,Duration)'
    id: 'getServiceManifest(String,String,String,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.getServiceManifest*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1019
    package: system.fabric
    summary: |-
      <p>指定した ApplicationTypeName および ApplicationTypeVersion でプロビジョニングされたサービス マニフェスト ドキュメントを取得します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<String> getServiceManifest(String applicationTypeName, String applicationTypeVersion, String serviceManifestName, Duration timeoutMilliSeconds)'
      parameters:
        - id: applicationTypeName
          type: '26831127'
          description: <p>プロビジョニング済みのアプリケーション マニフェストの名前。 </p>
        - id: applicationTypeVersion
          type: '26831127'
          description: <p>プロビジョニング済みのアプリケーション マニフェストのバージョン。 </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p>アプリケーション マニフェストで参照されたサービス マニフェストの名前。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 06be942d
        description: <p>プロビジョニングされたサービス マニフェストのドキュメント。 </p>
  - uid: system.fabric._service_management_client.getServiceNotificationFilterMatched()
    id: getServiceNotificationFilterMatched()
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: getServiceNotificationFilterMatched()
    nameWithType: ServiceManagementClient.getServiceNotificationFilterMatched()
    fullName: Observable<ServiceNotification> system.fabric.ServiceManagementClient.getServiceNotificationFilterMatched()
    overload: system.fabric._service_management_client.getServiceNotificationFilterMatched*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1324
    package: system.fabric
    syntax:
      content: public Observable<ServiceNotification> getServiceNotificationFilterMatched()
      return:
        type: system.fabric._observable78504a52system.fabric._service_notificationa08ddfce
  - uid: 'system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags)'
    id: 'registerServiceNotificationFilter(URI,NotificationFilterFlags)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)'
    nameWithType: 'ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)'
    fullName: 'CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)'
    overload: system.fabric._service_management_client.registerServiceNotificationFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1235
    package: system.fabric
    summary: |-
      <p>サービス通知フィルターを登録します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags)'
      parameters:
        - id: name
          type: '62304784'
          description: <p>対象となるサービス エンドポイントの変更イベントの説明は、このクライアントに配信する必要があります。 </p>
        - id: notificationFilterFlags
          type: system.fabric._notification_filter_flags
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 30822cb1
        description: <p>登録済みのサービス通知フィルターです。 </p>
  - uid: 'system.fabric._service_management_client.registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)'
    id: 'registerServiceNotificationFilter(URI,NotificationFilterFlags,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.registerServiceNotificationFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1258
    package: system.fabric
    summary: |-
      <p>サービス通知フィルターを登録します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> registerServiceNotificationFilter(URI name, NotificationFilterFlags notificationFilterFlags, Duration timeoutMilliSeconds)'
      parameters:
        - id: name
          type: '62304784'
          description: <p>対象となるサービス エンドポイントの変更イベントの説明は、このクライアントに配信する必要があります。 </p>
        - id: notificationFilterFlags
          type: system.fabric._notification_filter_flags
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>操作を観察し CompletableFuture です。 操作を取り消す必要がある通知を伝達するために使用します。 </p>
      return:
        type: 30822cb1
        description: <p>登録済みのサービス通知フィルターです。 </p>
  - uid: 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)'
    id: 'registerServicePartitionResolutionChangeHandler(URI,long,ServicePartitionResolutionChangeHandler)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)'
    nameWithType: 'ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)'
    fullName: 'long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)'
    overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 490
    package: system.fabric
    summary: "<p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラーを登録します。</p>\n<p>\r\n\r\n  <b>注釈:</b>通知 partitionâ€ での変更が含まれます™ s エンドポイントまたは情報の更新中に発生した例外。 このオーバー ロードでは、パーティション分割されている UniformInt64Range サービス インスタンスが使用されます。 返される Int64 は、登録のコールバック ハンドル識別子です。 通知はによりに通知を配信するための機構™ コードのそれぞれの時刻がありますが、サービス アドレスの変更またはコードのサービス パーティションに関連するアドレス解決エラーが発生してに関係します。 こうするたびに、現在の解決ではなく<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>なりますの更新プログラムが登録古くなって 場合。 </p>"
    syntax:
      content: 'public long registerServicePartitionResolutionChangeHandler(URI serviceName, long partitionKey, ServicePartitionResolutionChangeHandler callback)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: 0364520f
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: callback
          type: system.fabric._service_partition_resolution_change_handler
          description: <p>この関数は、通知が到着したときに呼び出されます。 </p>
      return:
        type: 0364520f
        description: <p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラー。 </p>
  - uid: 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)'
    id: 'registerServicePartitionResolutionChangeHandler(URI,ServicePartitionResolutionChangeHandler)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)'
    nameWithType: 'ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)'
    fullName: 'long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)'
    overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 456
    package: system.fabric
    summary: "<p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラーを登録します。</p>\n<p>\r\n\r\n  <b>注釈:</b>通知 partitionâ€ での変更が含まれます™ s エンドポイントまたは情報の更新中に発生した例外。 このオーバー ロードでは、シングルトンのパーティション分割されているサービス インスタンスが使用されます。 返される Int64 は、登録のコールバック ハンドル識別子です。 通知はによりに通知を配信するための機構™ コードのそれぞれの時刻がありますが、サービス アドレスの変更またはコードのサービス パーティションに関連するアドレス解決エラーが発生してに関係します。 こうするたびに、現在の解決ではなく<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>なりますの更新プログラムが登録古くなって 場合。 </p>"
    syntax:
      content: 'public long registerServicePartitionResolutionChangeHandler(URI serviceName, ServicePartitionResolutionChangeHandler callback)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: callback
          type: system.fabric._service_partition_resolution_change_handler
          description: <p>この関数は、通知が到着したときに呼び出されます。 </p>
      return:
        type: 0364520f
        description: <p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラー。 </p>
  - uid: 'system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)'
    id: 'registerServicePartitionResolutionChangeHandler(URI,String,ServicePartitionResolutionChangeHandler)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)'
    nameWithType: 'ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)'
    fullName: 'long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)'
    overload: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 525
    package: system.fabric
    summary: "<p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラーを登録します。</p>\n<p>\r\n\r\n  <b>注釈:</b>通知 partitionâ€ での変更が含まれます™ s エンドポイントまたは情報の更新中に発生した例外。 このオーバー ロードでは、名前付きのパーティション分割されているサービス インスタンスが使用されます。 返される Int64 は、登録のコールバック ハンドル識別子です。 通知はによりに通知を配信するための機構™ コードのそれぞれの時刻がありますが、サービス アドレスの変更またはコードのサービス パーティションに関連するアドレス解決エラーが発生してに関係します。 こうするたびに、現在の解決ではなく<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>なりますの更新プログラムが登録古くなって 場合。 </p>"
    syntax:
      content: 'public long registerServicePartitionResolutionChangeHandler(URI serviceName, String partitionKey, ServicePartitionResolutionChangeHandler callback)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: '26831127'
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: callback
          type: system.fabric._service_partition_resolution_change_handler
          description: <p>この関数は、通知が到着したときに呼び出されます。 </p>
      return:
        type: 0364520f
        description: <p>サービス パーティションのアクセシビリティ情報が変更されたときに発生するハンドラー。 </p>
  - uid: 'system.fabric._service_management_client.removeReplica(String,UUID,long,boolean)'
    id: 'removeReplica(String,UUID,long,boolean)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)'
    nameWithType: 'ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)'
    overload: system.fabric._service_management_client.removeReplica*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1110
    package: system.fabric
    summary: |-
      <p>サービスのレプリカを削除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p>ノード名。 </p>
        - id: partitionId
          type: add9545a
          description: <p>パーティションの識別子です。 </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>レプリカまたはインスタンスの識別子です。 </p>
        - id: forceRemove
          type: 4fc6e284
          description: <p>レプリカが強制的に削除するかどうかを示すフラグします。 </p>
      return:
        type: 5f2aaa64
        description: <p>操作を表す CompletableFuture です。 </p>
  - uid: 'system.fabric._service_management_client.removeReplica(String,UUID,long,boolean,Duration)'
    id: 'removeReplica(String,UUID,long,boolean,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.removeReplica*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1139
    package: system.fabric
    summary: |-
      <p>サービスのレプリカを削除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture removeReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, boolean forceRemove, Duration timeoutMilliSeconds)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p>ノード名。 </p>
        - id: partitionId
          type: add9545a
          description: <p>パーティションの識別子です。 </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>レプリカまたはインスタンスの識別子です。 </p>
        - id: forceRemove
          type: 4fc6e284
          description: <p>レプリカが強制的に削除するかどうかを示すフラグします。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>最長時間システムを返す前に続行するには、この操作は許可されます。 </p>
      return:
        type: 5f2aaa64
        description: <p>操作を表す CompletableFuture です。 </p>
  - uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI)
    id: resolveServicePartitionAsync(URI)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: resolveServicePartitionAsync(URI serviceName)
    nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
    fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 568
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">System.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref>が返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName)
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,Duration)'
    id: 'resolveServicePartitionAsync(URI,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 596
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">System.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref>が返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long)'
    id: 'resolveServicePartitionAsync(URI,long)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, long partitionKey)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 701
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 このメソッドは、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: 0364520f
          description: <p>サービス パーティションのパーティション キーです。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,Duration)'
    id: 'resolveServicePartitionAsync(URI,long,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 732
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 このメソッドは、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: 0364520f
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition)'
    id: 'resolveServicePartitionAsync(URI,long,ResolvedServicePartition)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 773
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: 0364520f
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)'
    id: 'resolveServicePartitionAsync(URI,long,ResolvedServicePartition,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 817
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, long partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: 0364520f
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition)'
    id: 'resolveServicePartitionAsync(URI,ResolvedServicePartition)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 630
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>苦情ベース API の解像度。 このメソッドは、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)'
    id: 'resolveServicePartitionAsync(URI,ResolvedServicePartition,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 671
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>苦情ベース API の解像度。 このメソッドは、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String)'
    id: 'resolveServicePartitionAsync(URI,String)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, String partitionKey)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 848
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: '26831127'
          description: <p>サービス パーティションのパーティション キーです。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,Duration)'
    id: 'resolveServicePartitionAsync(URI,String,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 879
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: '26831127'
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition)'
    id: 'resolveServicePartitionAsync(URI,String,ResolvedServicePartition)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 920
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: '26831127'
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前の<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)'
    id: 'resolveServicePartitionAsync(URI,String,ResolvedServicePartition,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.resolveServicePartitionAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 964
    package: system.fabric
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムを返しますより最新<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref> \"previousResult\"の引数がある場合よりもします。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 PreviousResult 引数により、\"これは、このサービス パーティションのエンドポイントの前の一覧ですを言うようにユーザーに。 エンドポイントを試行し、それらが古くなっていないと思います。 返す me このセットの最新バージョンです。\" この場合、システムより最新を返すを試みます。 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>最も効率的な方法でします。 新しいバージョンが見つからない場合、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>同じバージョンが返されます。PreviousResult 引数または previousResult 引数を null に設定がない ResolveServicePartition を呼び出すことができます。 システムがの最も近いコピーを返すように必要な前提条件が指定されていない、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 </p>"
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName, String partitionKey, ResolvedServicePartition partition, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
        - id: partitionKey
          type: '26831127'
          description: <p>サービス パーティションのパーティション キーです。 </p>
        - id: partition
          type: system.fabric._resolved_service_partition
          description: <p>前の<xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>ユーザーと認識しているサービスのパーティションは古いのです。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'system.fabric._service_management_client.restartReplica(String,UUID,long)'
    id: 'restartReplica(String,UUID,long)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)'
    nameWithType: 'ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)'
    overload: system.fabric._service_management_client.restartReplica*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1177
    package: system.fabric
    summary: |-
      <p>サービスのレプリカを再起動します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p>ノード名。 </p>
        - id: partitionId
          type: add9545a
          description: <p>パーティションの識別子です。 </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>インスタンス識別子。 </p>
      return:
        type: 5f2aaa64
        description: <p>再開されたサービスのレプリカです。 </p>
  - uid: 'system.fabric._service_management_client.restartReplica(String,UUID,long,Duration)'
    id: 'restartReplica(String,UUID,long,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.restartReplica*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1199
    package: system.fabric
    summary: |-
      <p>サービスのレプリカを再起動します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture restartReplica(String nodeName, UUID partitionId, long replicaOrInstanceId, Duration timeoutMilliSeconds)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p>ノード名。 </p>
        - id: partitionId
          type: add9545a
          description: <p>パーティションの識別子です。 </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>インスタンス識別子。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 5f2aaa64
        description: <p>再開されたサービスのレプリカです。 </p>
  - uid: system.fabric._service_management_client.unRegisterServiceNotificationFilter(long)
    id: unRegisterServiceNotificationFilter(long)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: unRegisterServiceNotificationFilter(long filterId)
    nameWithType: ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId)
    fullName: CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId)
    overload: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1284
    package: system.fabric
    summary: |-
      <p>サービス通知フィルターの登録を解除します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture unRegisterServiceNotificationFilter(long filterId)
      parameters:
        - id: filterId
          type: 0364520f
          description: <p>削除するフィルターを識別します。 </p>
      return:
        type: 5f2aaa64
        description: <p>登録されていないサービス通知フィルターです。 </p>
  - uid: 'system.fabric._service_management_client.unRegisterServiceNotificationFilter(long,Duration)'
    id: 'unRegisterServiceNotificationFilter(long,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1297
    package: system.fabric
    summary: |-
      <p>サービス通知フィルターの登録を解除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture unRegisterServiceNotificationFilter(long filterId, Duration timeoutMilliSeconds)'
      parameters:
        - id: filterId
          type: 0364520f
          description: <p>削除するフィルターを識別します。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>要求の処理、TimeoutException がスローされる前にできる最長時間。 </p>
      return:
        type: 5f2aaa64
        description: <p>登録されていないサービス通知フィルターです。 </p>
  - uid: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler(long)
    id: unRegisterServicePartitionResolutionChangeHandler(long)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: unRegisterServicePartitionResolutionChangeHandler(long handlerId)
    nameWithType: ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler(long handlerId)
    fullName: void system.fabric.ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler(long handlerId)
    overload: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 547
    package: system.fabric
    summary: '<p>以前に登録されている変更ハンドラーの登録解除<xref uid="" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#registerServicePartitionResolutionChangeHandler(java.net.URI,system.fabric.ServicePartitionResolutionChangeHandler)</xref></p>'
    syntax:
      content: public void unRegisterServicePartitionResolutionChangeHandler(long handlerId)
      parameters:
        - id: handlerId
          type: 0364520f
          description: '<p>削除される callbackHandle 識別子です。 これは、によって返される、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#registerServicePartitionResolutionChangeHandler(java.net.URI,system.fabric.ServicePartitionResolutionChangeHandler)</xref>呼び出します。 </p>'
  - uid: 'system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription)'
    id: 'updateService(URI,ServiceUpdateDescription)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)'
    nameWithType: 'ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)'
    overload: system.fabric._service_management_client.updateService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1051
    package: system.fabric
    summary: |-
      <p>指定された説明では、サービスを更新します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>更新中、サービスの URI 名 </p>
        - id: serivceUpdateDescription
          type: system.fabric._service_update_description
          description: <p><xref uid="system.fabric._service_update_description" data-throw-if-not-resolved="false">System.fabric.ServiceUpdateDescription</xref>サービスの更新された構成を指定します。 </p>
      return:
        type: 5f2aaa64
        description: <p>更新されたサービスです。 </p>
  - uid: 'system.fabric._service_management_client.updateService(URI,ServiceUpdateDescription,Duration)'
    id: 'updateService(URI,ServiceUpdateDescription,Duration)'
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    langs:
      - java
    name: 'updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)'
    nameWithType: 'ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)'
    fullName: 'CompletableFuture system.fabric.ServiceManagementClient.updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)'
    overload: system.fabric._service_management_client.updateService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceManagementClient.java
      startLine: 1069
    package: system.fabric
    summary: |-
      <p>指定された説明では、サービスを更新します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture updateService(URI serviceName, ServiceUpdateDescription serivceUpdateDescription, Duration timeoutMilliSeconds)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>更新中、サービスの URI 名 </p>
        - id: serivceUpdateDescription
          type: system.fabric._service_update_description
          description: <p><xref uid="system.fabric._service_update_description" data-throw-if-not-resolved="false">System.fabric.ServiceUpdateDescription</xref>サービスの更新された構成を指定します。 </p>
        - id: timeoutMilliSeconds
          type: e02a2de0
          description: <p>システムで返す前に続行するには、この操作は許可最長時間<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。 </p>
      return:
        type: 5f2aaa64
        description: <p>更新されたサービスです。 </p>
references:
  - uid: 5f2aaa64
    spec.java:
      - name: CompletableFuture
        fullName: CompletableFuture
  - uid: system.fabric._service_management_client.createService*
    name: createService
    nameWithType: ServiceManagementClient.createService
    fullName: CompletableFuture system.fabric.ServiceManagementClient.createService
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: system.fabric._service_management_client.createServiceFromTemplate*
    name: createServiceFromTemplate
    nameWithType: ServiceManagementClient.createServiceFromTemplate
    fullName: CompletableFuture system.fabric.ServiceManagementClient.createServiceFromTemplate
    package: system.fabric
  - uid: system.fabric._service_management_client.deleteService*
    name: deleteService
    nameWithType: ServiceManagementClient.deleteService
    fullName: CompletableFuture system.fabric.ServiceManagementClient.deleteService
    package: system.fabric
  - uid: 9cdf14d0system.fabric._service_descriptiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._service_description
        name: ServiceDescription
        fullName: system.fabric.ServiceDescription
        href: system.fabric._service_description.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._service_management_client.getServiceDescription*
    name: getServiceDescription
    nameWithType: ServiceManagementClient.getServiceDescription
    fullName: CompletableFuture<ServiceDescription> system.fabric.ServiceManagementClient.getServiceDescription
    package: system.fabric
  - uid: system.fabric._service_management_client.registerServicePartitionResolutionChangeHandler*
    name: registerServicePartitionResolutionChangeHandler
    nameWithType: ServiceManagementClient.registerServicePartitionResolutionChangeHandler
    fullName: long system.fabric.ServiceManagementClient.registerServicePartitionResolutionChangeHandler
    package: system.fabric
  - uid: system.fabric._service_management_client.unRegisterServicePartitionResolutionChangeHandler*
    name: unRegisterServicePartitionResolutionChangeHandler
    nameWithType: ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler
    fullName: void system.fabric.ServiceManagementClient.unRegisterServicePartitionResolutionChangeHandler
    package: system.fabric
  - uid: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._resolved_service_partition
        name: ResolvedServicePartition
        fullName: system.fabric.ResolvedServicePartition
        href: system.fabric._resolved_service_partition.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._service_management_client.resolveServicePartitionAsync*
    name: resolveServicePartitionAsync
    nameWithType: ServiceManagementClient.resolveServicePartitionAsync
    fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync
    package: system.fabric
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._service_management_client.getServiceManifest*
    name: getServiceManifest
    nameWithType: ServiceManagementClient.getServiceManifest
    fullName: CompletableFuture<String> system.fabric.ServiceManagementClient.getServiceManifest
    package: system.fabric
  - uid: system.fabric._service_management_client.updateService*
    name: updateService
    nameWithType: ServiceManagementClient.updateService
    fullName: CompletableFuture system.fabric.ServiceManagementClient.updateService
    package: system.fabric
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._service_management_client.removeReplica*
    name: removeReplica
    nameWithType: ServiceManagementClient.removeReplica
    fullName: CompletableFuture system.fabric.ServiceManagementClient.removeReplica
    package: system.fabric
  - uid: system.fabric._service_management_client.restartReplica*
    name: restartReplica
    nameWithType: ServiceManagementClient.restartReplica
    fullName: CompletableFuture system.fabric.ServiceManagementClient.restartReplica
    package: system.fabric
  - uid: 30822cb1
    spec.java:
      - name: CompletableFuture<Long>
        fullName: CompletableFuture<Long>
  - uid: system.fabric._service_management_client.registerServiceNotificationFilter*
    name: registerServiceNotificationFilter
    nameWithType: ServiceManagementClient.registerServiceNotificationFilter
    fullName: CompletableFuture<Long> system.fabric.ServiceManagementClient.registerServiceNotificationFilter
    package: system.fabric
  - uid: system.fabric._service_management_client.unRegisterServiceNotificationFilter*
    name: unRegisterServiceNotificationFilter
    nameWithType: ServiceManagementClient.unRegisterServiceNotificationFilter
    fullName: CompletableFuture system.fabric.ServiceManagementClient.unRegisterServiceNotificationFilter
    package: system.fabric
  - uid: system.fabric._observable78504a52system.fabric._service_notificationa08ddfce
    spec.java:
      - uid: system.fabric._observable
        name: Observable
        fullName: system.fabric.Observable
        href: system.fabric._observable.yml
      - name: <
        fullName: <
      - uid: system.fabric._service_notification
        name: ServiceNotification
        fullName: system.fabric.ServiceNotification
        href: system.fabric._service_notification.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._service_management_client.getServiceNotificationFilterMatched*
    name: getServiceNotificationFilterMatched
    nameWithType: ServiceManagementClient.getServiceNotificationFilterMatched
    fullName: Observable<ServiceNotification> system.fabric.ServiceManagementClient.getServiceNotificationFilterMatched
    package: system.fabric
  - uid: system.fabric._service_management_client.close*
    name: close
    nameWithType: ServiceManagementClient.close
    fullName: void system.fabric.ServiceManagementClient.close
    package: system.fabric
  - uid: system.fabric._fabric_client
    parent: system.fabric
    href: system.fabric._fabric_client.yml
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    summary: "<p>作成し、Service Fabric サービスとその他のエンティティを管理します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。 これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。 </p>"
    syntax:
      content: public class FabricClient
  - uid: system.fabric._observable
    parent: system.fabric
    href: system.fabric._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: system.fabric.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: system.fabric._service_notification
    parent: system.fabric
    href: system.fabric._service_notification.yml
    name: ServiceNotification
    nameWithType: ServiceNotification
    fullName: system.fabric.ServiceNotification
    type: Class
    summary: <p>レプリカまたはインスタンス エンドポイントが変更されたサービスに関する詳細を含むサービス通知を表します。 </p>
    syntax:
      content: public class ServiceNotification
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric._service_description
    parent: system.fabric
    href: system.fabric._service_description.yml
    name: ServiceDescription
    nameWithType: ServiceDescription
    fullName: system.fabric.ServiceDescription
    type: Class
    summary: <p>A <xref uid="system.fabric._service_description" data-throw-if-not-resolved="false">ServiceDescription</xref>すべてのサービスを作成するために必要な情報が含まれています。 </p>
    syntax:
      content: public class ServiceDescription
  - uid: system.fabric._service_partition_resolution_change_handler_broker
    parent: system.fabric
    href: system.fabric._service_partition_resolution_change_handler_broker.yml
    name: ServicePartitionResolutionChangeHandlerBroker
    nameWithType: ServicePartitionResolutionChangeHandlerBroker
    fullName: system.fabric.ServicePartitionResolutionChangeHandlerBroker
    type: Class
    syntax:
      content: public class ServicePartitionResolutionChangeHandlerBroker
  - uid: system.fabric._service_partition_resolution_change_handler
    parent: system.fabric
    href: system.fabric._service_partition_resolution_change_handler.yml
    name: ServicePartitionResolutionChangeHandler
    nameWithType: ServicePartitionResolutionChangeHandler
    fullName: system.fabric.ServicePartitionResolutionChangeHandler
    type: Interface
    syntax:
      content: public interface ServicePartitionResolutionChangeHandler
  - uid: system.fabric._resolved_service_partition
    parent: system.fabric
    href: system.fabric._resolved_service_partition.yml
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: system.fabric.ResolvedServicePartition
    type: Class
    summary: |-
      <p>指定したサービス パーティションがリッスンするエンドポイントの設定でパーティション分割情報が含まれるデータ構造を表します。</p>
      <p></p>
    syntax:
      content: public class ResolvedServicePartition
  - uid: system.fabric._service_update_description
    parent: system.fabric
    href: system.fabric._service_update_description.yml
    name: ServiceUpdateDescription
    nameWithType: ServiceUpdateDescription
    fullName: system.fabric.ServiceUpdateDescription
    type: Class
    summary: <p>変更、 <xref uid="system.fabric._service_description" data-throw-if-not-resolved="false">system.fabric.ServiceDescription</xref>の既存のサービスです。 </p>
    syntax:
      content: public class ServiceUpdateDescription
  - uid: system.fabric._notification_filter_flags
    parent: system.fabric
    href: system.fabric._notification_filter_flags.yml
    name: NotificationFilterFlags
    nameWithType: NotificationFilterFlags
    fullName: system.fabric.NotificationFilterFlags
    type: Enum
    syntax:
      content: public enum NotificationFilterFlags
  - uid: system.fabric._partition_key_type
    parent: system.fabric
    href: system.fabric._partition_key_type.yml
    name: PartitionKeyType
    nameWithType: PartitionKeyType
    fullName: system.fabric.PartitionKeyType
    type: Enum
    syntax:
      content: public enum PartitionKeyType