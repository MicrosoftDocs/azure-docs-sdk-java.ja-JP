### YamlMime:ManagedReference
items:
  - uid: system.fabric._fabric_client_settings
    id: _fabric_client_settings
    parent: system.fabric
    children:
      - system.fabric._fabric_client_settings.FabricClientSettings()
      - system.fabric._fabric_client_settings.getClientFriendlyName()
      - system.fabric._fabric_client_settings.getConnectionInitializationTimeout()
      - system.fabric._fabric_client_settings.getHealthOperationTimeout()
      - system.fabric._fabric_client_settings.getHealthReportRetrySendInterval()
      - system.fabric._fabric_client_settings.getHealthReportSendInterval()
      - system.fabric._fabric_client_settings.getKeepAliveInterval()
      - system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout()
      - system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout()
      - system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount()
      - system.fabric._fabric_client_settings.getPartitionLocationCacheLimit()
      - system.fabric._fabric_client_settings.getServiceChangePollInterval()
      - system.fabric._fabric_client_settings.setClientFriendlyName(String)
      - system.fabric._fabric_client_settings.setConnectionInitializationTimeout(Duration)
      - system.fabric._fabric_client_settings.setHealthOperationTimeout(Duration)
      - system.fabric._fabric_client_settings.setHealthReportRetrySendInterval(Duration)
      - system.fabric._fabric_client_settings.setHealthReportSendInterval(Duration)
      - system.fabric._fabric_client_settings.setKeepAliveInterval(Duration)
      - system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout(Duration)
      - system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout(Duration)
      - system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount(long)
      - system.fabric._fabric_client_settings.setPartitionLocationCacheLimit(long)
      - system.fabric._fabric_client_settings.setServiceChangePollInterval(Duration)
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: FabricClientSettings
    nameWithType: FabricClientSettings
    fullName: system.fabric.FabricClientSettings
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 7
    package: system.fabric
    summary: <p><span data-ttu-id="b847e-101">構成設定を表す、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b847e-101">Represents the configuration settings for the <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> class.</span></span> </p>
    syntax: &ref_1
      content: public class FabricClientSettings
    inheritance:
      - java.lang.Object
  - uid: system.fabric._fabric_client_settings.FabricClientSettings()
    id: FabricClientSettings()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: FabricClientSettings()
    nameWithType: FabricClientSettings.FabricClientSettings()
    fullName: system.fabric.FabricClientSettings.FabricClientSettings()
    overload: system.fabric._fabric_client_settings.FabricClientSettings*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 42
    package: system.fabric
    syntax:
      content: public FabricClientSettings()
  - uid: system.fabric._fabric_client_settings.getClientFriendlyName()
    id: getClientFriendlyName()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getClientFriendlyName()
    nameWithType: FabricClientSettings.getClientFriendlyName()
    fullName: String system.fabric.FabricClientSettings.getClientFriendlyName()
    overload: system.fabric._fabric_client_settings.getClientFriendlyName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 123
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-102\">デバッグ トレースの Service Fabric で表示されるクライアントのフレンドリ名を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-102\">Gets the client friendly name that will appear in Service Fabric traces for debugging.</span></span></p>\n<p><span data-ttu-id=\"b847e-103\">\r\n\r\n  <b>注釈:</b>既定値は null とクライアントのフレンドリ名が自動的に生成されます UUID として内部的にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-103\">\r\n\r\n  <b>Remarks:</b> The default value is null and the client friendly name will automatically be generated as a UUID internally.</span></span> </p>"
    syntax:
      content: public String getClientFriendlyName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b847e-104">Service Fabric のデバッグ トレースに表示されるクライアント フレンドリ名。</span><span class="sxs-lookup"><span data-stu-id="b847e-104">The client friendly name that will appear in Service Fabric traces for debugging.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getConnectionInitializationTimeout()
    id: getConnectionInitializationTimeout()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getConnectionInitializationTimeout()
    nameWithType: FabricClientSettings.getConnectionInitializationTimeout()
    fullName: Duration system.fabric.FabricClientSettings.getConnectionInitializationTimeout()
    overload: system.fabric._fabric_client_settings.getConnectionInitializationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 239
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-105\">取得するまでのタイムアウト値、現在のゲートウェイ アドレスが有効な接続に応答しない場合はもう 1 つの異なるアドレスがランダムに選択からゲートウェイ アドレスのコレクション。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-105\">Gets the timeout after which, if the current gateway address does not respond with a valid connection, another different address is randomly selected from the gateway addresses collection.</span></span></p>\n<p><span data-ttu-id=\"b847e-106\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 2 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-106\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 2 seconds.</span></span> <span data-ttu-id=\"b847e-107\">このプロパティには、値より小さくする必要があります、 <xref uid=\"system.fabric._fabric_client_settings.getServiceChangePollInterval()\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClientSettings#getServiceChangePollInterval()</xref>プロパティです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-107\">This property must be less than the value of the <xref uid=\"system.fabric._fabric_client_settings.getServiceChangePollInterval()\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClientSettings#getServiceChangePollInterval()</xref> property.</span></span> </p>"
    syntax:
      content: public Duration getConnectionInitializationTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-108">現在のゲートウェイ アドレスが有効な接続に応答しない後にタイムアウトします。</span><span class="sxs-lookup"><span data-stu-id="b847e-108">The timeout after the current gateway address does not respond with a valid connection.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getHealthOperationTimeout()
    id: getHealthOperationTimeout()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getHealthOperationTimeout()
    nameWithType: FabricClientSettings.getHealthOperationTimeout()
    fullName: Duration system.fabric.FabricClientSettings.getHealthOperationTimeout()
    overload: system.fabric._fabric_client_settings.getHealthOperationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 306
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-109\">ゲートウェイに、クライアントから正常性状態タイムアウト操作要求を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-109\">Gets the timeout on health operation requests from the client to the gateway.</span></span></p>\n<p><span data-ttu-id=\"b847e-110\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 120 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-110\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 120 seconds.</span></span> </p>"
    syntax:
      content: public Duration getHealthOperationTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-111">正常操作の要求をクライアントからゲートウェイにタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="b847e-111">The timeout on health operation requests from the client to the gateway.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getHealthReportRetrySendInterval()
    id: getHealthReportRetrySendInterval()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getHealthReportRetrySendInterval()
    nameWithType: FabricClientSettings.getHealthReportRetrySendInterval()
    fullName: Duration system.fabric.FabricClientSettings.getHealthReportRetrySendInterval()
    overload: system.fabric._fabric_client_settings.getHealthReportRetrySendInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 358
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-112\">どの正常性で正常性マネージャーによってがまだ確認されていないレポートが再送信の再試行間隔を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-112\">Gets the retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</span></span></p>\n<p><span data-ttu-id=\"b847e-113\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 30 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-113\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 30 seconds.</span></span> </p>"
    syntax:
      content: public Duration getHealthReportRetrySendInterval()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-114">再試行間隔は、どの正常性で正常性マネージャーによってがまだ確認されていないレポートが再送信します。</span><span class="sxs-lookup"><span data-stu-id="b847e-114">The retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getHealthReportSendInterval()
    id: getHealthReportSendInterval()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getHealthReportSendInterval()
    nameWithType: FabricClientSettings.getHealthReportSendInterval()
    fullName: Duration system.fabric.FabricClientSettings.getHealthReportSendInterval()
    overload: system.fabric._fabric_client_settings.getHealthReportSendInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 331
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-115\">正常性レポートの正常性マネージャーを送信する間隔を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-115\">Gets the interval at which health reports are sent to Health Manager.</span></span></p>\n<p><span data-ttu-id=\"b847e-116\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 30 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-116\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 30 seconds.</span></span> </p>"
    syntax:
      content: public Duration getHealthReportSendInterval()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-117">どの正常性レポートが送信される正常性マネージャーへの間隔。</span><span class="sxs-lookup"><span data-stu-id="b847e-117">The interval at which health reports are sent to Health Manager.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getKeepAliveInterval()
    id: getKeepAliveInterval()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getKeepAliveInterval()
    nameWithType: FabricClientSettings.getKeepAliveInterval()
    fullName: Duration system.fabric.FabricClientSettings.getKeepAliveInterval()
    overload: system.fabric._fabric_client_settings.getKeepAliveInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 275
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-118\">間隔を取得、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>接続されているエンドポイントは ping を実行します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-118\">Gets the interval at which the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> will ping the connected endpoint.</span></span></p>\n<p><span data-ttu-id=\"b847e-119\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 0 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-119\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 0 seconds.</span></span> <span data-ttu-id=\"b847e-120\">後にこのプロパティを更新することはできません、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>が開かれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-120\">This property can't be updated after the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is opened.</span></span> <span data-ttu-id=\"b847e-121\">このプロパティはスロー設定、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>例外。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-121\">Setting this property will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> exception.</span></span> <span data-ttu-id=\"b847e-122\"><xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>保留中の操作がある限り、ping を実行し続けます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-122\"><xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> will continue pinging as long as it has pending operations.</span></span> </p>"
    syntax:
      content: public Duration getKeepAliveInterval()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-123">間隔、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>接続されているエンドポイントは ping を実行します。</span><span class="sxs-lookup"><span data-stu-id="b847e-123">The interval at which the <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout()
    id: getNotificationCacheUpdateTimeout()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getNotificationCacheUpdateTimeout()
    nameWithType: FabricClientSettings.getNotificationCacheUpdateTimeout()
    fullName: Duration system.fabric.FabricClientSettings.getNotificationCacheUpdateTimeout()
    overload: system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 406
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="b847e-124">サービスの通知への応答でローカル キャッシュの更新のタイムアウト値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b847e-124">Gets the timeout for updating the local cache in response to service notifications.</span></span> <span data-ttu-id="b847e-125">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="b847e-125">The default value is 30 seconds.</span></span></p>
      <p></p>
    syntax:
      content: public Duration getNotificationCacheUpdateTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-126">サービスの通知への応答でローカル キャッシュの更新のタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="b847e-126">The timeout for updating the local cache in response to service notifications.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout()
    id: getNotificationGatewayConnectionTimeout()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getNotificationGatewayConnectionTimeout()
    nameWithType: FabricClientSettings.getNotificationGatewayConnectionTimeout()
    fullName: Duration system.fabric.FabricClientSettings.getNotificationGatewayConnectionTimeout()
    overload: system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 384
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="b847e-127">クライアントがサービスの通知に登録されている場合は、再接続プロトコルを実行するためには、タイムアウト値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b847e-127">Gets the timeout for running a re-connection protocol if the client has registered for service notifications.</span></span> <span data-ttu-id="b847e-128">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="b847e-128">The default value is 30 seconds.</span></span></p>
      <p></p>
    syntax:
      content: public Duration getNotificationGatewayConnectionTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-129">クライアントがサービスの通知に登録されている場合は、再接続プロトコルを実行するためのタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="b847e-129">The timeout for running a re-connection protocol if the client has registered for service notifications.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount()
    id: getPartitionLocationCacheBucketCount()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getPartitionLocationCacheBucketCount()
    nameWithType: FabricClientSettings.getPartitionLocationCacheBucketCount()
    fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheBucketCount()
    overload: system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 180
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-130\">Clientâ€ によって使用される、バケット数を取得™ s サービス解決キャッシュします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-130\">Gets the bucket count used by the clientâ€™s service resolution cache.</span></span></p>\n<p><span data-ttu-id=\"b847e-131\">\r\n\r\n  <b>注釈:</b>既定値は 1024 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-131\">\r\n\r\n  <b>Remarks:</b>The default value is 1024.</span></span> </p>"
    syntax:
      content: public long getPartitionLocationCacheBucketCount()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="b847e-132">バケット数は clientâ€ によって使用される、™ s サービス解決キャッシュします。</span><span class="sxs-lookup"><span data-stu-id="b847e-132">The bucket count used by the clientâ€™s service resolution cache.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getPartitionLocationCacheLimit()
    id: getPartitionLocationCacheLimit()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getPartitionLocationCacheLimit()
    nameWithType: FabricClientSettings.getPartitionLocationCacheLimit()
    fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheLimit()
    overload: system.fabric._fabric_client_settings.getPartitionLocationCacheLimit*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 152
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-133\">クライアントのキャッシュの場所エントリの最大数を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-133\">Gets the maximum number of cached location entries on the client.</span></span></p>\n<p><span data-ttu-id=\"b847e-134\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 1000 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-134\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 1000.</span></span> <span data-ttu-id=\"b847e-135\">このプロパティは更新できません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-135\">This property is not updatable.</span></span> <span data-ttu-id=\"b847e-136\">このプロパティはスロー設定、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>例外。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-136\">Setting this property will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> exception.</span></span> <span data-ttu-id=\"b847e-137\">キャッシュ制限に達したときに、最も古いエントリが最初に破棄されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-137\">When the cache limit is reached the oldest entries are discarded first.</span></span> <span data-ttu-id=\"b847e-138\">既定値は 100 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-138\">The default value is 100.</span></span> </p>"
    syntax:
      content: public long getPartitionLocationCacheLimit()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="b847e-139">クライアントのキャッシュの場所エントリの最大数。</span><span class="sxs-lookup"><span data-stu-id="b847e-139">The maximum number of cached location entries on the client.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.getServiceChangePollInterval()
    id: getServiceChangePollInterval()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: getServiceChangePollInterval()
    nameWithType: FabricClientSettings.getServiceChangePollInterval()
    fullName: Duration system.fabric.FabricClientSettings.getServiceChangePollInterval()
    overload: system.fabric._fabric_client_settings.getServiceChangePollInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 207
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-140\">すべての登録されたコールバックのゲートウェイに、クライアントからサービスの変更のタイムアウト通知要求を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-140\">Gets the timeout on service change notification requests from the client to the gateway for all registered callbacks.</span></span></p>\n<p><span data-ttu-id=\"b847e-141\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 120 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-141\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 120 seconds.</span></span> </p>"
    syntax: &ref_2
      content: public Duration getServiceChangePollInterval()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="b847e-142">サービスのタイムアウトは、すべての登録されたコールバックのゲートウェイに、クライアントからの通知要求を変更します。</span><span class="sxs-lookup"><span data-stu-id="b847e-142">The timeout on service change notification requests from the client to the gateway for all registered callbacks.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setClientFriendlyName(String)
    id: setClientFriendlyName(String)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setClientFriendlyName(String clientFriendlyName)
    nameWithType: FabricClientSettings.setClientFriendlyName(String clientFriendlyName)
    fullName: void system.fabric.FabricClientSettings.setClientFriendlyName(String clientFriendlyName)
    overload: system.fabric._fabric_client_settings.setClientFriendlyName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 137
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-143\">デバッグするための Service Fabric トレースに表示されるクライアントのフレンドリ名を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-143\">Sets the client friendly name that will appear in Service Fabric traces for debugging.</span></span></p>\n<p><span data-ttu-id=\"b847e-144\">\r\n\r\n  <b>注釈:</b>既定値は null とクライアントのフレンドリ名が自動的に生成されます UUID として内部的にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-144\">\r\n\r\n  <b>Remarks:</b> The default value is null and the client friendly name will automatically be generated as a UUID internally.</span></span> </p>"
    syntax:
      content: public void setClientFriendlyName(String clientFriendlyName)
      parameters:
        - id: clientFriendlyName
          type: '26831127'
          description: <p><span data-ttu-id="b847e-145">Service Fabric のデバッグ トレースに表示されるクライアント フレンドリ名。</span><span class="sxs-lookup"><span data-stu-id="b847e-145">The client friendly name that will appear in Service Fabric traces for debugging.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setConnectionInitializationTimeout(Duration)
    id: setConnectionInitializationTimeout(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
    nameWithType: FabricClientSettings.setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
    fullName: void system.fabric.FabricClientSettings.setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
    overload: system.fabric._fabric_client_settings.setConnectionInitializationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 257
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-146\">タイムアウトするまで、現在のゲートウェイ アドレスが有効な接続で応答しない場合はもう 1 つの異なるアドレスがランダムに選択された設定から、ゲートウェイ アドレスのコレクション。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-146\">Sets the timeout after which, if the current gateway address does not respond with a valid connection, another different address is randomly selected from the gateway addresses collection.</span></span></p>\n<p><span data-ttu-id=\"b847e-147\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 2 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-147\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 2 seconds.</span></span> <span data-ttu-id=\"b847e-148\">このプロパティには、値より小さくする必要があります、 <xref uid=\"system.fabric._fabric_client_settings.getServiceChangePollInterval()\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClientSettings#getServiceChangePollInterval()</xref>プロパティです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-148\">This property must be less than the value of the <xref uid=\"system.fabric._fabric_client_settings.getServiceChangePollInterval()\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClientSettings#getServiceChangePollInterval()</xref> property.</span></span> </p>"
    syntax:
      content: public void setConnectionInitializationTimeout(Duration connectionInitializationTimeout)
      parameters:
        - id: connectionInitializationTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-149">現在のゲートウェイ アドレスが有効な接続に応答しない後にタイムアウトします。</span><span class="sxs-lookup"><span data-stu-id="b847e-149">The timeout after the current gateway address does not respond with a valid connection.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setHealthOperationTimeout(Duration)
    id: setHealthOperationTimeout(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setHealthOperationTimeout(Duration healthOperationTimeout)
    nameWithType: FabricClientSettings.setHealthOperationTimeout(Duration healthOperationTimeout)
    fullName: void system.fabric.FabricClientSettings.setHealthOperationTimeout(Duration healthOperationTimeout)
    overload: system.fabric._fabric_client_settings.setHealthOperationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 319
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-150\">タイムアウトを設定、正常性状態操作要求、クライアントからゲートウェイに。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-150\">Sets the timeout on health operation requests from the client to the gateway.</span></span></p>\n<p><span data-ttu-id=\"b847e-151\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 120 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-151\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 120 seconds.</span></span> </p>"
    syntax:
      content: public void setHealthOperationTimeout(Duration healthOperationTimeout)
      parameters:
        - id: healthOperationTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-152">正常操作の要求をクライアントからゲートウェイにタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="b847e-152">The timeout on health operation requests from the client to the gateway.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setHealthReportRetrySendInterval(Duration)
    id: setHealthReportRetrySendInterval(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
    nameWithType: FabricClientSettings.setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
    fullName: void system.fabric.FabricClientSettings.setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
    overload: system.fabric._fabric_client_settings.setHealthReportRetrySendInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 373
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-153\">どの正常性で正常性マネージャーによってがまだ確認されていないレポートが再送信の再試行間隔を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-153\">Sets the retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</span></span></p>\n<p><span data-ttu-id=\"b847e-154\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 30 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-154\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 30 seconds.</span></span> </p>"
    syntax:
      content: public void setHealthReportRetrySendInterval(Duration healthReportRetrySendInterval)
      parameters:
        - id: healthReportRetrySendInterval
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-155">再試行間隔は、どの正常性で正常性マネージャーによってがまだ確認されていないレポートが再送信します。</span><span class="sxs-lookup"><span data-stu-id="b847e-155">The retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setHealthReportSendInterval(Duration)
    id: setHealthReportSendInterval(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setHealthReportSendInterval(Duration healthReportSendInterval)
    nameWithType: FabricClientSettings.setHealthReportSendInterval(Duration healthReportSendInterval)
    fullName: void system.fabric.FabricClientSettings.setHealthReportSendInterval(Duration healthReportSendInterval)
    overload: system.fabric._fabric_client_settings.setHealthReportSendInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 344
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-156\">どの正常性レポートが送信される正常性マネージャーに間隔を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-156\">Sets the interval at which health reports are sent to Health Manager.</span></span></p>\n<p><span data-ttu-id=\"b847e-157\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 30 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-157\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 30 seconds.</span></span> </p>"
    syntax:
      content: public void setHealthReportSendInterval(Duration healthReportSendInterval)
      parameters:
        - id: healthReportSendInterval
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-158">どの正常性レポートが送信される正常性マネージャーへの間隔。</span><span class="sxs-lookup"><span data-stu-id="b847e-158">The interval at which health reports are sent to Health Manager.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setKeepAliveInterval(Duration)
    id: setKeepAliveInterval(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setKeepAliveInterval(Duration keepAliveInterval)
    nameWithType: FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
    fullName: void system.fabric.FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
    overload: system.fabric._fabric_client_settings.setKeepAliveInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 294
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-159\">これで、間隔を設定、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>接続されているエンドポイントは ping を実行します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-159\">Sets the interval at which the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> will ping the connected endpoint.</span></span></p>\n<p><span data-ttu-id=\"b847e-160\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 0 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-160\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 0 seconds.</span></span> <span data-ttu-id=\"b847e-161\">後にこのプロパティを更新することはできません、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>が開かれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-161\">This property can't be updated after the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> is opened.</span></span> <span data-ttu-id=\"b847e-162\">このプロパティはスロー設定、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>例外。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-162\">Setting this property will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> exception.</span></span> <span data-ttu-id=\"b847e-163\"><xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref>保留中の操作がある限り、ping を実行し続けます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-163\"><xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">system.fabric.FabricClient</xref> will continue pinging as long as it has pending operations.</span></span> </p>"
    syntax:
      content: public void setKeepAliveInterval(Duration keepAliveInterval)
      parameters:
        - id: keepAliveInterval
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-164">間隔、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>接続されているエンドポイントは ping を実行します。</span><span class="sxs-lookup"><span data-stu-id="b847e-164">The interval at which the <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout(Duration)
    id: setNotificationCacheUpdateTimeout(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
    nameWithType: FabricClientSettings.setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
    fullName: void system.fabric.FabricClientSettings.setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
    overload: system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 417
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="b847e-165">サービスの通知への応答でローカル キャッシュを更新するためのタイムアウトを設定します。</span><span class="sxs-lookup"><span data-stu-id="b847e-165">Sets the timeout for updating the local cache in response to service notifications.</span></span> <span data-ttu-id="b847e-166">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="b847e-166">The default value is 30 seconds.</span></span></p>
      <p></p>
    syntax:
      content: public void setNotificationCacheUpdateTimeout(Duration notificationCacheUpdateTimeout)
      parameters:
        - id: notificationCacheUpdateTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-167">サービスの通知への応答でローカル キャッシュの更新のタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="b847e-167">The timeout for updating the local cache in response to service notifications.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout(Duration)
    id: setNotificationGatewayConnectionTimeout(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
    nameWithType: FabricClientSettings.setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
    fullName: void system.fabric.FabricClientSettings.setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
    overload: system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 396
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="b847e-168">クライアントがサービスの通知に登録されている場合は、再接続プロトコルを実行するためのタイムアウトを設定します。</span><span class="sxs-lookup"><span data-stu-id="b847e-168">Sets the timeout for running a re-connection protocol if the client has registered for service notifications.</span></span> <span data-ttu-id="b847e-169">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="b847e-169">The default value is 30 seconds.</span></span></p>
      <p></p>
    syntax:
      content: public void setNotificationGatewayConnectionTimeout(Duration notificationGatewayConnectionTimeout)
      parameters:
        - id: notificationGatewayConnectionTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-170">クライアントがサービスの通知に登録されている場合は、再接続プロトコルを実行するためのタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="b847e-170">The timeout for running a re-connection protocol if the client has registered for service notifications.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount(long)
    id: setPartitionLocationCacheBucketCount(long)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
    nameWithType: FabricClientSettings.setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
    fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
    overload: system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 193
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-171\">Clientâ€ によって使用される、バケット数を設定™ s サービス解決キャッシュします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-171\">Sets the bucket count used by the clientâ€™s service resolution cache.</span></span></p>\n<p><span data-ttu-id=\"b847e-172\">\r\n\r\n  <b>注釈:</b>既定値は 1024 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-172\">\r\n\r\n  <b>Remarks:</b>The default value is 1024.</span></span> </p>"
    syntax:
      content: public void setPartitionLocationCacheBucketCount(long partitionLocationCacheBucketCount)
      parameters:
        - id: partitionLocationCacheBucketCount
          type: 0364520f
          description: <p><span data-ttu-id="b847e-173">バケット数は clientâ€ によって使用される、™ s サービス解決キャッシュします。</span><span class="sxs-lookup"><span data-stu-id="b847e-173">The bucket count used by the clientâ€™s service resolution cache.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setPartitionLocationCacheLimit(long)
    id: setPartitionLocationCacheLimit(long)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
    nameWithType: FabricClientSettings.setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
    fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
    overload: system.fabric._fabric_client_settings.setPartitionLocationCacheLimit*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 168
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-174\">クライアントのキャッシュの場所エントリの最大数を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-174\">Sets the maximum number of cached location entries on the client.</span></span></p>\n<p><span data-ttu-id=\"b847e-175\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 1000 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-175\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 1000.</span></span> <span data-ttu-id=\"b847e-176\">このプロパティは更新できません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-176\">This property is not updatable.</span></span> <span data-ttu-id=\"b847e-177\">このプロパティはスロー設定、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref>例外。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-177\">Setting this property will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> exception.</span></span> <span data-ttu-id=\"b847e-178\">キャッシュ制限に達したときに、最も古いエントリが最初に破棄されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-178\">When the cache limit is reached the oldest entries are discarded first.</span></span> <span data-ttu-id=\"b847e-179\">既定値は 100 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-179\">The default value is 100.</span></span> </p>"
    syntax:
      content: public void setPartitionLocationCacheLimit(long partitionLocationCacheLimit)
      parameters:
        - id: partitionLocationCacheLimit
          type: 0364520f
          description: <p><span data-ttu-id="b847e-180">クライアントのキャッシュの場所エントリの最大数。</span><span class="sxs-lookup"><span data-stu-id="b847e-180">The maximum number of cached location entries on the client.</span></span> </p>
  - uid: system.fabric._fabric_client_settings.setServiceChangePollInterval(Duration)
    id: setServiceChangePollInterval(Duration)
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    langs:
      - java
    name: setServiceChangePollInterval(Duration serviceChangePollInterval)
    nameWithType: FabricClientSettings.setServiceChangePollInterval(Duration serviceChangePollInterval)
    fullName: void system.fabric.FabricClientSettings.setServiceChangePollInterval(Duration serviceChangePollInterval)
    overload: system.fabric._fabric_client_settings.setServiceChangePollInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricClientSettings.java
      startLine: 222
    package: system.fabric
    summary: "<p><span data-ttu-id=\"b847e-181\">タイムアウトの設定サービスの変更通知要求、クライアントからすべての登録されたコールバックのゲートウェイにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-181\">Sets the timeout on service change notification requests from the client to the gateway for all registered callbacks.</span></span></p>\n<p><span data-ttu-id=\"b847e-182\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 120 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-182\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 120 seconds.</span></span> </p>"
    syntax:
      content: public void setServiceChangePollInterval(Duration serviceChangePollInterval)
      parameters:
        - id: serviceChangePollInterval
          type: e02a2de0
          description: <p><span data-ttu-id="b847e-183">サービスのタイムアウトは、すべての登録されたコールバックのゲートウェイに、クライアントからの通知要求を変更します。</span><span class="sxs-lookup"><span data-stu-id="b847e-183">The timeout on service change notification requests from the client to the gateway for all registered callbacks.</span></span> </p>
references:
  - uid: system.fabric._fabric_client_settings.FabricClientSettings*
    name: FabricClientSettings
    nameWithType: FabricClientSettings.FabricClientSettings
    fullName: system.fabric.FabricClientSettings.FabricClientSettings
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._fabric_client_settings.getClientFriendlyName*
    name: getClientFriendlyName
    nameWithType: FabricClientSettings.getClientFriendlyName
    fullName: String system.fabric.FabricClientSettings.getClientFriendlyName
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setClientFriendlyName*
    name: setClientFriendlyName
    nameWithType: FabricClientSettings.setClientFriendlyName
    fullName: void system.fabric.FabricClientSettings.setClientFriendlyName
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._fabric_client_settings.getPartitionLocationCacheLimit*
    name: getPartitionLocationCacheLimit
    nameWithType: FabricClientSettings.getPartitionLocationCacheLimit
    fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheLimit
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setPartitionLocationCacheLimit*
    name: setPartitionLocationCacheLimit
    nameWithType: FabricClientSettings.setPartitionLocationCacheLimit
    fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheLimit
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getPartitionLocationCacheBucketCount*
    name: getPartitionLocationCacheBucketCount
    nameWithType: FabricClientSettings.getPartitionLocationCacheBucketCount
    fullName: long system.fabric.FabricClientSettings.getPartitionLocationCacheBucketCount
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setPartitionLocationCacheBucketCount*
    name: setPartitionLocationCacheBucketCount
    nameWithType: FabricClientSettings.setPartitionLocationCacheBucketCount
    fullName: void system.fabric.FabricClientSettings.setPartitionLocationCacheBucketCount
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: system.fabric._fabric_client_settings.getServiceChangePollInterval*
    name: getServiceChangePollInterval
    nameWithType: FabricClientSettings.getServiceChangePollInterval
    fullName: Duration system.fabric.FabricClientSettings.getServiceChangePollInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setServiceChangePollInterval*
    name: setServiceChangePollInterval
    nameWithType: FabricClientSettings.setServiceChangePollInterval
    fullName: void system.fabric.FabricClientSettings.setServiceChangePollInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getConnectionInitializationTimeout*
    name: getConnectionInitializationTimeout
    nameWithType: FabricClientSettings.getConnectionInitializationTimeout
    fullName: Duration system.fabric.FabricClientSettings.getConnectionInitializationTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setConnectionInitializationTimeout*
    name: setConnectionInitializationTimeout
    nameWithType: FabricClientSettings.setConnectionInitializationTimeout
    fullName: void system.fabric.FabricClientSettings.setConnectionInitializationTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getKeepAliveInterval*
    name: getKeepAliveInterval
    nameWithType: FabricClientSettings.getKeepAliveInterval
    fullName: Duration system.fabric.FabricClientSettings.getKeepAliveInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setKeepAliveInterval*
    name: setKeepAliveInterval
    nameWithType: FabricClientSettings.setKeepAliveInterval
    fullName: void system.fabric.FabricClientSettings.setKeepAliveInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getHealthOperationTimeout*
    name: getHealthOperationTimeout
    nameWithType: FabricClientSettings.getHealthOperationTimeout
    fullName: Duration system.fabric.FabricClientSettings.getHealthOperationTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setHealthOperationTimeout*
    name: setHealthOperationTimeout
    nameWithType: FabricClientSettings.setHealthOperationTimeout
    fullName: void system.fabric.FabricClientSettings.setHealthOperationTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getHealthReportSendInterval*
    name: getHealthReportSendInterval
    nameWithType: FabricClientSettings.getHealthReportSendInterval
    fullName: Duration system.fabric.FabricClientSettings.getHealthReportSendInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setHealthReportSendInterval*
    name: setHealthReportSendInterval
    nameWithType: FabricClientSettings.setHealthReportSendInterval
    fullName: void system.fabric.FabricClientSettings.setHealthReportSendInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getHealthReportRetrySendInterval*
    name: getHealthReportRetrySendInterval
    nameWithType: FabricClientSettings.getHealthReportRetrySendInterval
    fullName: Duration system.fabric.FabricClientSettings.getHealthReportRetrySendInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setHealthReportRetrySendInterval*
    name: setHealthReportRetrySendInterval
    nameWithType: FabricClientSettings.setHealthReportRetrySendInterval
    fullName: void system.fabric.FabricClientSettings.setHealthReportRetrySendInterval
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getNotificationGatewayConnectionTimeout*
    name: getNotificationGatewayConnectionTimeout
    nameWithType: FabricClientSettings.getNotificationGatewayConnectionTimeout
    fullName: Duration system.fabric.FabricClientSettings.getNotificationGatewayConnectionTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setNotificationGatewayConnectionTimeout*
    name: setNotificationGatewayConnectionTimeout
    nameWithType: FabricClientSettings.setNotificationGatewayConnectionTimeout
    fullName: void system.fabric.FabricClientSettings.setNotificationGatewayConnectionTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.getNotificationCacheUpdateTimeout*
    name: getNotificationCacheUpdateTimeout
    nameWithType: FabricClientSettings.getNotificationCacheUpdateTimeout
    fullName: Duration system.fabric.FabricClientSettings.getNotificationCacheUpdateTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings.setNotificationCacheUpdateTimeout*
    name: setNotificationCacheUpdateTimeout
    nameWithType: FabricClientSettings.setNotificationCacheUpdateTimeout
    fullName: void system.fabric.FabricClientSettings.setNotificationCacheUpdateTimeout
    package: system.fabric
  - uid: system.fabric._fabric_client_settings
    parent: system.fabric
    href: system.fabric._fabric_client_settings.yml
    name: FabricClientSettings
    nameWithType: FabricClientSettings
    fullName: system.fabric.FabricClientSettings
    type: Class
    summary: <p><span data-ttu-id="b847e-184">構成設定を表す、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b847e-184">Represents the configuration settings for the <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> class.</span></span> </p>
    syntax: *ref_1
  - uid: system.fabric._fabric_client_settings.getServiceChangePollInterval()
    parent: system.fabric._fabric_client_settings
    href: system.fabric._fabric_client_settings.yml
    name: getServiceChangePollInterval()
    nameWithType: FabricClientSettings.getServiceChangePollInterval()
    fullName: Duration system.fabric.FabricClientSettings.getServiceChangePollInterval()
    type: Method
    summary: "<p><span data-ttu-id=\"b847e-185\">すべての登録されたコールバックのゲートウェイに、クライアントからサービスの変更のタイムアウト通知要求を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-185\">Gets the timeout on service change notification requests from the client to the gateway for all registered callbacks.</span></span></p>\n<p><span data-ttu-id=\"b847e-186\">\r\n\r\n  <b>注釈:</b>このプロパティの既定値は 120 秒です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-186\">\r\n\r\n  <b>Remarks:</b>The default value of this property is 120 seconds.</span></span> </p>"
    syntax: *ref_2
  - uid: system.fabric._fabric_client
    parent: system.fabric
    href: system.fabric._fabric_client.yml
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    summary: "<p><span data-ttu-id=\"b847e-187\">作成し、Service Fabric サービスとその他のエンティティを管理します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-187\">Creates and manages Service Fabric services and other entities.</span></span> </p>\n<p><span data-ttu-id=\"b847e-188\">\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-188\">\r\n\r\n  <b>Remarks:</b>It is highly recommended that you share FabricClients as much as possible.</span></span> <span data-ttu-id=\"b847e-189\">これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b847e-189\">This is because the <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise.</span></span> </p>"
    syntax:
      content: public class FabricClient
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection