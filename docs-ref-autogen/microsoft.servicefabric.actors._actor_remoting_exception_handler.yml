### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_remoting_exception_handler
    id: _actor_remoting_exception_handler
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)'
    href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
    langs:
      - java
    name: ActorRemotingExceptionHandler
    nameWithType: ActorRemotingExceptionHandler
    fullName: microsoft.servicefabric.actors.ActorRemotingExceptionHandler
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
      startLine: 60
    package: microsoft.servicefabric.actors
    summary: "<p>このクラスは、リモート アクター インターフェイス経由での service fabric アクターと通信中に発生した例外の処理を提供します。</p>\n<p>\r\n\r\n  <b>注釈:</b>この例外ハンドラーは、次のシナリオに関連する例外を処理します。 </p>\n\n<p>\n\n  <itemizedlist>\n\n    <listitem>\n\n      <p>&lt;示されている&gt;重複したメッセージを:&lt;が示されている/&gt; </p>\n\n      <p>例外処理のロジックに基づくクライアントからアクターに対して実行される操作が再試行されます。 これらの例外は、サービスのフェールオーバーを含むさまざまなエラー状態を表します。 したがって、アクターが重複するメッセージを受信することです。 アクターによって前のメッセージの処理中に重複するメッセージを受信する場合、ランタイムは、クライアントに内部例外を返します。 クライアントは、アクターから結果を戻すために、操作を再試行します。 クライアントがアクターの観点から重複する操作が実行され、操作は既に処理されて、し、重複するメッセージが到着した場合と同様の方法で処理が必要です。 </p>\n\n      <p></p>\n\n      <p></p>\n\n    </listitem>\n\n    <listitem>\n\n      <p>&lt;示されている&gt;<xref uid=\"microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception\" data-throw-if-not-resolved=\"false\">ActorConcurrencyLockTimeoutException</xref>:&lt;が示されている/&gt; </p>\n\n      <p>アクターの操作は、基にする同時実行のロックを使用して実行されます ( <xref uid=\"microsoft.servicefabric.actors._actor_concurrency_settings\" data-throw-if-not-resolved=\"false\">ActorConcurrencySettings</xref>) 論理呼び出しコンテキスト ベースの再入をサポートします。 実行時間の長いアクター操作した場合は、このロックはタイムアウトが発生するの買収可能性があります。ロックの取得こともできます (アクター A および B が互いを同時にほぼ呼び出してアクター) に、デッドロックが発生した場合はタイムアウトが発生します。 </p>\n\n      <p></p>\n\n      <p>同時実行のロックのタイムアウトに関連する例外を返すことによって処理される<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>から、 <xref uid=\"microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)\" data-throw-if-not-resolved=\"false\">ExceptionHandler #handleException(ExceptionInformation, OperationRetrySettings)</xref>メソッド操作を実行するクライアントが別のアクターにない場合。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult #isTransient</xref>のプロパティ、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>設定を true に、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>の retryDelay プロパティは、ランダムな値にするように設定<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationRetrySettings</xref>の MaxRetryBackoffIntervalOnTransientErrors と<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>の MaxRetryCount プロパティに設定されている<xref uid=\"\" data-throw-if-not-resolved=\"false\">整数 #MAX_VALUE</xref>です。 </p>\n\n      <p></p>\n\n      <p>同時実行のロックのタイムアウトに関連する例外を返すことによって処理される<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingThrowResult</xref>から、 <xref uid=\"microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)\" data-throw-if-not-resolved=\"false\">ExceptionHandler #handleException(ExceptionInformation, OperationRetrySettings)</xref>メソッド、操作を実行するクライアントが別のアクターの場合。 これにより、呼び出しチェーンまでアンワインドするデッドロック状態では、元のクライアントにバックアップし、そこから、操作が再試行します。 </p>\n\n      <p></p>\n\n    </listitem>\n\n  </itemizedlist>\n\n</p>"
    syntax:
      content: public class ActorRemotingExceptionHandler implements ExceptionHandler
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.communication.client._exception_handler
  - uid: 'microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException(ExceptionInformation,OperationRetrySettings)'
    id: 'handleException(ExceptionInformation,OperationRetrySettings)'
    parent: microsoft.servicefabric.actors._actor_remoting_exception_handler
    href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
    langs:
      - java
    name: 'handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    nameWithType: 'ActorRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    fullName: 'ExceptionHandlingResult microsoft.servicefabric.actors.ActorRemotingExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    overload: microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRemotingExceptionHandler.java
      startLine: 72
    package: microsoft.servicefabric.actors
    summary: |-
      <p>例外を調査し、その例外を処理する方法を判断するメソッドです。</p>
      <p></p>
    syntax:
      content: 'public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
      parameters:
        - id: exceptionInformation
          type: microsoft.servicefabric.services.communication.client._exception_information
          description: <p>例外に関する情報。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>操作の再試行の設定。 </p>
      return:
        type: microsoft.servicefabric.services.communication.client._exception_handling_result
        description: <p>例外処理の結果です。 </p>
    overridden: 'microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)'
references:
  - uid: microsoft.servicefabric.actors._actor_remoting_exception_handler.handleException*
    name: handleException
    nameWithType: ActorRemotingExceptionHandler.handleException
    fullName: ExceptionHandlingResult microsoft.servicefabric.actors.ActorRemotingExceptionHandler.handleException
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.services.communication.client._exception_handler
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._exception_handler.yml
    name: ExceptionHandler
    nameWithType: ExceptionHandler
    fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
    type: Interface
    summary: <p>Service fabric サービスと通信中に発生した例外を処理するためのインターフェイスを定義します。 </p>
    syntax:
      content: public interface ExceptionHandler
  - uid: microsoft.servicefabric.services.communication.client._exception_handling_result
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._exception_handling_result.yml
    name: ExceptionHandlingResult
    nameWithType: ExceptionHandlingResult
    fullName: microsoft.servicefabric.services.communication.client.ExceptionHandlingResult
    type: Class
    summary: <p>クライアントとサービス間の通信中に例外を処理してから、結果の基本クラスを指定します。 </p>
    syntax:
      content: public class ExceptionHandlingResult
  - uid: 'microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.communication.client._exception_handler
    href: microsoft.servicefabric.services.communication.client._exception_handler.yml
    name: 'handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    nameWithType: 'ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    fullName: 'ExceptionHandlingResult microsoft.servicefabric.services.communication.client.ExceptionHandler.handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>例外を調査し、その例外を処理する方法を判断するメソッドです。</p>
      <p></p>
    syntax:
      content: 'public ExceptionHandlingResult handleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
      parameters:
        - id: exceptionInformation
          type: microsoft.servicefabric.services.communication.client._exception_information
          description: <p>例外に関する情報。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>操作の再試行の設定。 </p>
      return:
        type: microsoft.servicefabric.services.communication.client._exception_handling_result
        description: <p>true の場合は、例外処理、それ以外の場合 </p>
  - uid: microsoft.servicefabric.services.communication.client._exception_information
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._exception_information.yml
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: microsoft.servicefabric.services.communication.client.ExceptionInformation
    type: Class
    summary: <p>通信チャネルに表示される例外とその例外を処理するために必要な追加の情報をカプセル化するクラスを指定します。 </p>
    syntax:
      content: public class ExceptionInformation
  - uid: microsoft.servicefabric.services.communication.client._operation_retry_settings
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._operation_retry_settings.yml
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: microsoft.servicefabric.services.communication.client.OperationRetrySettings
    type: Class
    syntax:
      content: public class OperationRetrySettings
  - uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
    name: ActorConcurrencyLockTimeoutException
    nameWithType: ActorConcurrencyLockTimeoutException
    fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
    type: Class
    summary: <p>メソッドをディスパッチする同時実行のロックをランタイムが有効にするを取得できない場合に、アクター ランタイムによってスローされる例外に基づいています。 </p>
    syntax:
      content: public class ActorConcurrencyLockTimeoutException extends FabricException
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    name: ActorConcurrencySettings
    nameWithType: ActorConcurrencySettings
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
    type: Class
    summary: <p>論理呼び出しコンテキスト ベースの再入のサポートの順番でディスパッチ アクター メソッドを呼び出します。 このクラスは、アクターをベースにする同時実行のロックを構成する設定を提供します。 </p>
    syntax:
      content: public class ActorConcurrencySettings