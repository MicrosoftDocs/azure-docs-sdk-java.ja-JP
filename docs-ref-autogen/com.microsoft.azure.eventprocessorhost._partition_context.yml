### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._partition_context
    id: _partition_context
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._partition_context.checkpoint()
      - com.microsoft.azure.eventprocessorhost._partition_context.checkpoint(EventData)
      - com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName()
      - com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath()
      - com.microsoft.azure.eventprocessorhost._partition_context.getOwner()
      - com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation()
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: PartitionContext
    nameWithType: PartitionContext
    fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 17
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public class PartitionContext
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint()
    id: checkpoint()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: checkpoint()
    nameWithType: PartitionContext.checkpoint()
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 147
    package: com.microsoft.azure.eventprocessorhost
    summary: <p>チェックポイント マネージャーを使用してチェックポイント ストアに、現在のオフセットと sequenceNumber を書き込みます。 </p>
    syntax:
      content: public void checkpoint()
    exceptions:
      - type: 3c87bd19
        description: <p>This.sequenceNumber が最後のチェックポイントが設定された値より小さい場合 </p>
      - type: f25e3dc2
      - type: 8256ba40
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint(EventData)
    id: checkpoint(EventData)
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: checkpoint(EventData event)
    nameWithType: PartitionContext.checkpoint(EventData event)
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(EventData event)
    overload: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 168
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>オフセットと指定された受信 EventData インスタンスから sequenceNumber を保存し、チェックポイント マネージャーを使用してチェックポイント ストアにこれらの値を書き込みます。</p>
      <p></p>
    syntax:
      content: public void checkpoint(EventData event)
      parameters:
        - id: event
          type: com.microsoft.azure.eventhubs._event_data
          description: <p>有効なオフセットと sequenceNumber 受信 EventData </p>
    exceptions:
      - type: 3c87bd19
        description: <p>指定されたイベントのシーケンス番号が、最後にチェックポイントが設定された値より小さい場合 </p>
      - type: f25e3dc2
      - type: 8256ba40
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName()
    id: getConsumerGroupName()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getConsumerGroupName()
    nameWithType: PartitionContext.getConsumerGroupName()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getConsumerGroupName()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 41
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getConsumerGroupName()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath()
    id: getEventHubPath()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getEventHubPath()
    nameWithType: PartitionContext.getEventHubPath()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getEventHubPath()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 46
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getEventHubPath()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getOwner()
    id: getOwner()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getOwner()
    nameWithType: PartitionContext.getOwner()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getOwner()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 51
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getOwner()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: PartitionContext.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 92
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation()
    id: getRuntimeInformation()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getRuntimeInformation()
    nameWithType: PartitionContext.getRuntimeInformation()
    fullName: ReceiverRuntimeInformation com.microsoft.azure.eventprocessorhost.PartitionContext.getRuntimeInformation()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 56
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public ReceiverRuntimeInformation getRuntimeInformation()
      return:
        type: com.microsoft.azure.eventhubs._receiver_runtime_information
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName*
    name: getConsumerGroupName
    nameWithType: PartitionContext.getConsumerGroupName
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getConsumerGroupName
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath*
    name: getEventHubPath
    nameWithType: PartitionContext.getEventHubPath
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getEventHubPath
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getOwner*
    name: getOwner
    nameWithType: PartitionContext.getOwner
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation*
    name: getRuntimeInformation
    nameWithType: PartitionContext.getRuntimeInformation
    fullName: ReceiverRuntimeInformation com.microsoft.azure.eventprocessorhost.PartitionContext.getRuntimeInformation
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId*
    name: getPartitionId
    nameWithType: PartitionContext.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: f25e3dc2
    spec.java:
      - name: ExecutionException
        fullName: ExecutionException
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    name: checkpoint
    nameWithType: PartitionContext.checkpoint
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>クラスがパブリックで上級ユーザーを実装できるように、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。 実装している場合を除き、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>このクラスのオブジェクトに対処する必要はありませんか、クラスを直接派生します。 </p>\n\n<p>実装する場合、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>詳細持ち運びし、isExpired をオーバーライドするには、このクラスから派生する必要があります。 データ フィールドが残されていますプライベートの代わりに、完全なセットがあるために、保護の getter および setter (partitionId は不変) を除くを同等のアクセスを提供します。 AzureBlobLease を実装する場合などがなかった、get アクセス操作子以上のアクセス権の必要性と set アクセス操作子を提供します。 </p>\n<p>なお、<xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>オブジェクトには、パーティション リースに関する情報が含まれているのみです。 取得/更新/解放する機能、リースがすべてで、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。 </p>"
    syntax:
      content: public class Lease
  - uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: START_OF_STREAM
    nameWithType: PartitionReceiver.START_OF_STREAM
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
    type: Field
    summary: <p>これは、EventHub のパーティションのストリームの開始を表すために定義された定数です。 </p>
    syntax:
      content: public static final String START_OF_STREAM= "-1"
      return:
        type: 3d93591e
  - uid: com.microsoft.azure.eventhubs._receiver_runtime_information
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
    name: ReceiverRuntimeInformation
    nameWithType: ReceiverRuntimeInformation
    fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
    type: Class
    summary: <p>テンポラルの受信側のランタイム情報を表す、 <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>です。 現在の受信<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>と<xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref>保留中のイベント (をまだは処理されません) のおおよその値を検索するために使用できます。 </p>
    syntax:
      content: public class ReceiverRuntimeInformation
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>送信して、受信から EventHubs をされているイベントをカプセル化するデータ構造体。 各 EventHubs パーティションのストリームとして視覚化できます<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>です。 </p>
      <p>受信したシリアル化する<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> (プリミティブ java 型) の ApplicationProperties およびデータ以外のセクションでは AMQP セクションではサポートされていません。 </p>
      <p>ここでは AMQP メッセージ セクションがどのようにマップする<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>です。 ここでは、AMQP 1.0 仕様に使用される参照: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Microsoft Azure EventHubs によってリリースされたクライアント ライブラリを使用するには、中にセクション (i) と (ii) だけで十分です。 高度なシナリオ、場所、送信元アプリケーションは、サード パーティ製 AMQP のライブラリを使用して、EventHubs にメッセージを送信および受信側アプリケーションでは、このクライアント ライブラリを使用して、受信セクション (iii) が使用される<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>です。 </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    name: Checkpoint
    nameWithType: Checkpoint
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">チェックポイント</xref>クラスがパブリックで上級ユーザーを実装できるように、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref>です。 実装している場合を除き、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref>このクラスのオブジェクトを直接扱う必要はありません。 </p>\n\n<p>A<xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">チェックポイント</xref>組だけでは基本的にします。 その後、作成時に設定し、変更できない固定パーティション id を持つし、そのパーティションで、メッセージ内の位置を示すオフセット/sequenceNumber ペアを関連付けます。 </p>"
    syntax:
      content: public class Checkpoint