### YamlMime:ManagedReference
items:
  - uid: system.fabric._cancellation_token_source
    id: _cancellation_token_source
    parent: system.fabric
    children:
      - system.fabric._cancellation_token_source.cancel()
      - system.fabric._cancellation_token_source.CancellationTokenSource()
      - system.fabric._cancellation_token_source.getToken()
      - system.fabric._cancellation_token_source.isCancellationRequested()
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 6
    package: system.fabric
    summary: <p>A <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref>作成に使用される<xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref>オブジェクトを管理します。 </p>
    syntax: &ref_1
      content: public class CancellationTokenSource
    inheritance:
      - java.lang.Object
  - uid: system.fabric._cancellation_token_source.cancel()
    id: cancel()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: cancel()
    nameWithType: CancellationTokenSource.cancel()
    fullName: void system.fabric.CancellationTokenSource.cancel()
    overload: system.fabric._cancellation_token_source.cancel*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 42
    package: system.fabric
    summary: <p>要求で処理をキャンセル、 <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref>オブジェクトによって管理されています。 </p>
    syntax:
      content: public void cancel()
  - uid: system.fabric._cancellation_token_source.CancellationTokenSource()
    id: CancellationTokenSource()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: CancellationTokenSource()
    nameWithType: CancellationTokenSource.CancellationTokenSource()
    fullName: system.fabric.CancellationTokenSource.CancellationTokenSource()
    overload: system.fabric._cancellation_token_source.CancellationTokenSource*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 13
    package: system.fabric
    summary: <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>クラスです。 </p>
    syntax:
      content: public CancellationTokenSource()
  - uid: system.fabric._cancellation_token_source.getToken()
    id: getToken()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: getToken()
    nameWithType: CancellationTokenSource.getToken()
    fullName: CancellationToken system.fabric.CancellationTokenSource.getToken()
    overload: system.fabric._cancellation_token_source.getToken*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 34
    package: system.fabric
    summary: |-
      <p>これによって処理されるキャンセル トークンを返します<xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>オブジェクト。</p>
      <p></p>
    syntax:
      content: public CancellationToken getToken()
      return:
        type: system.fabric._cancellation_token
        description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>\r\n\r\n</p>"
  - uid: system.fabric._cancellation_token_source.isCancellationRequested()
    id: isCancellationRequested()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: isCancellationRequested()
    nameWithType: CancellationTokenSource.isCancellationRequested()
    fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested()
    overload: system.fabric._cancellation_token_source.isCancellationRequested*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 23
    package: system.fabric
    summary: |-
      <p>これに対して取り消しが要求されているかどうかを取得<xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>です。</p>
      <p></p>
    syntax:
      content: public boolean isCancellationRequested()
      return:
        type: 4fc6e284
        description: <p>これに対して取り消しが要求されているかどうか<xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>です。 </p>
references:
  - uid: system.fabric._cancellation_token_source.CancellationTokenSource*
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource.CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource.CancellationTokenSource
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._cancellation_token_source.isCancellationRequested*
    name: isCancellationRequested
    nameWithType: CancellationTokenSource.isCancellationRequested
    fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested
    package: system.fabric
  - uid: system.fabric._cancellation_token_source.getToken*
    name: getToken
    nameWithType: CancellationTokenSource.getToken
    fullName: CancellationToken system.fabric.CancellationTokenSource.getToken
    package: system.fabric
  - uid: system.fabric._cancellation_token_source.cancel*
    name: cancel
    nameWithType: CancellationTokenSource.cancel
    fullName: void system.fabric.CancellationTokenSource.cancel
    package: system.fabric
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。 インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。 キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。 取り消しを開始するトークンを使用することはできません。 所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。 通知を受信するオブジェクトは、適切な方法で応答できます。 </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric._cancellation_token_source
    parent: system.fabric
    href: system.fabric._cancellation_token_source.yml
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource
    type: Class
    summary: <p>A <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref>作成に使用される<xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref>オブジェクトを管理します。 </p>
    syntax: *ref_1