### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    id: _iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 12
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: <p><span data-ttu-id="f8165-101">IoT ハブ トランスポートのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f8165-101">An interface for an IoT Hub transport.</span></span> </p>
    syntax:
      content: public interface IotHubTransport
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 51
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-102">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-102">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-103">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-103">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p><span data-ttu-id="f8165-104">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-104">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-105">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-105">the context to be passed in when the callback is invoked.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 64
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-106">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-106">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-107">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-107">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p><span data-ttu-id="f8165-108">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-108">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-109">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-109">the context to be passed in when the callback is invoked.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 40
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: "<p><span data-ttu-id=\"f8165-110\">IoT Hub と通信するために使用するすべてのリソースを閉じます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-110\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"f8165-111\">1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-111\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"f8165-112\">トランスポートが既に閉じられています関数には何もしないものとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-112\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="f8165-113">場合は、トランスポートを閉じるときにエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="f8165-113">if an error occurs in closing the transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 90
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-114">メッセージが検出され、IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答する場合は、メッセージのコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-114">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="f8165-115">メッセージ コールバックが設定されていない場合、関数は何もします。</span><span class="sxs-lookup"><span data-stu-id="f8165-115">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="f8165-116">場合は、サーバーに到達できませんでした。</span><span class="sxs-lookup"><span data-stu-id="f8165-116">if the server could not be reached.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 78
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: <p><span data-ttu-id="f8165-117">完了したすべての要求のコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-117">Invokes the callbacks for all completed requests.</span></span> </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 99
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: "<p><span data-ttu-id=\"f8165-118\">返します<code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-118\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"f8165-119\">\r\n\r\n  <code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-119\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 31
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-120">IoT Hub と通信チャネル usingmultiplexing を確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-120">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="f8165-121">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-121">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="f8165-122">クライアントの一覧は、同じトランスポートを使用します。</span><span class="sxs-lookup"><span data-stu-id="f8165-122">the list of clients use the same transport.</span></span> </p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="f8165-123">場合は、通信チャネルを確立できません。</span><span class="sxs-lookup"><span data-stu-id="f8165-123">if a communication channel cannot be established.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 21
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-124">IoT Hub と通信チャネルを確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-124">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="f8165-125">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-125">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="f8165-126">場合は、通信チャネルを確立できません。</span><span class="sxs-lookup"><span data-stu-id="f8165-126">if a communication channel cannot be established.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 108
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-127">IoT Hub への接続が失われた、または確立されるたびに実行されるコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="f8165-127">Registers a callback to be executed whenever the connection to the IoT Hub is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="f8165-128">呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-128">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"f8165-129\">コールバックに渡されるコンテキスト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-129\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"f8165-130\">指定できます<code>null \r\n\r\n    </code>コールバックが指定されていない場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-130\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 75
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="f8165-131">トランスポート キューでは、すべてのメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="f8165-131">Sends all messages on the transport queue.</span></span> <span data-ttu-id="f8165-132">前回の送信に失敗した場合、関数は前の試みで、メッセージを再送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-132">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="f8165-133">場合は、サーバーに到達できませんでした。</span><span class="sxs-lookup"><span data-stu-id="f8165-133">if the server could not be reached.</span></span> </p>
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
    name: open
    nameWithType: IotHubTransport.open
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen*
    name: multiplexOpen
    nameWithType: IotHubTransport.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
    name: close
    nameWithType: IotHubTransport.close
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    name: addMessage
    nameWithType: IotHubTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
    name: sendMessages
    nameWithType: IotHubTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: IotHubTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
    name: handleMessage
    nameWithType: IotHubTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
    name: isEmpty
    nameWithType: IotHubTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: IotHubTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: AmqpsTransport
    nameWithType: AmqpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="f8165-134">AMQPS トランスポートの場合。</span><span class="sxs-lookup"><span data-stu-id="f8165-134">An AMQPS transport.</span></span> <span data-ttu-id="f8165-135">メッセージを追加して、IoT Hub にメッセージを送信するための機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f8165-135">Contains functionality for adding messages and sending messages to an IoT Hub.</span></span> <span data-ttu-id="f8165-136">IoT Hub によって受信されるまで、未送信のメッセージをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="f8165-136">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="f8165-137">トランスポートは、構築時、次のパラメーターにバインドされて: IoT Hub 名、デバイス ID、デバイスのキー。</span><span class="sxs-lookup"><span data-stu-id="f8165-137">A transport is bound at construction to the following parameters: IoT Hub name, device ID and device key.</span></span> </p>
      <p><span data-ttu-id="f8165-138">トランスポートは、IoT Hub からメッセージを受信し、メッセージとコールバックが見つかった場合はユーザー定義メッセージのコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-138">The transport also receives messages from IoT Hub and invokes a user-defined message callback if a message and callback are found.</span></span> </p>
    syntax:
      content: 'public class AmqpsTransport implements IotHubTransport,ServerListener'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: HttpsTransport
    nameWithType: HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="f8165-139">HTTPS トランスポートをします。</span><span class="sxs-lookup"><span data-stu-id="f8165-139">An HTTPS transport.</span></span> <span data-ttu-id="f8165-140">メッセージを追加して、IoT Hub をバッチ処理されたメッセージを送信するための機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f8165-140">Contains functionality for adding messages and sending batched messages to an IoT Hub.</span></span> <span data-ttu-id="f8165-141">IoT Hub によって受信されるまで、未送信のメッセージをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="f8165-141">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="f8165-142">トランスポートは、構築時、次のパラメーターにバインドされて: IoT Hub 名、デバイス ID、デバイスのキー、およびメッセージの有効な秒数。</span><span class="sxs-lookup"><span data-stu-id="f8165-142">A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds.</span></span> </p>
      <p><span data-ttu-id="f8165-143">トランスポートをメッセージの IoT Hub をポーリングし、ユーザー定義メッセージのコールバックを呼び出す場合、メッセージと、コールバックが見つかりました。</span><span class="sxs-lookup"><span data-stu-id="f8165-143">The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found.</span></span> </p>
    syntax:
      content: public class HttpsTransport implements IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: MqttTransport
    nameWithType: MqttTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="f8165-144">MQTT トランスポートの場合。</span><span class="sxs-lookup"><span data-stu-id="f8165-144">An MQTT transport.</span></span> <span data-ttu-id="f8165-145">メッセージを追加して、IoT Hub をバッチ処理されたメッセージを送信するための機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f8165-145">Contains functionality for adding messages and sending batched messages to an IoT Hub.</span></span> <span data-ttu-id="f8165-146">IoT Hub によって受信されるまで、未送信のメッセージをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="f8165-146">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="f8165-147">トランスポートは、構築時、次のパラメーターにバインドされて: IoT Hub 名、デバイス ID、デバイスのキー、およびメッセージの有効な秒数。</span><span class="sxs-lookup"><span data-stu-id="f8165-147">A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds.</span></span> </p>
      <p><span data-ttu-id="f8165-148">トランスポートをメッセージの IoT Hub をポーリングし、ユーザー定義メッセージのコールバックを呼び出す場合、メッセージと、コールバックが見つかりました。</span><span class="sxs-lookup"><span data-stu-id="f8165-148">The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found.</span></span> </p>
    syntax:
      content: public class MqttTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: open()
    nameWithType: MqttTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-149">IoT Hub と通信チャネルを確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-149">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="f8165-150">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-150">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: open()
    nameWithType: AmqpsTransport.open()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-151">IoT Hub と通信チャネルを確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-151">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="f8165-152">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-152">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized void open()
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: open()
    nameWithType: HttpsTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-153">IoT Hub と通信チャネルを確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-153">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="f8165-154">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-154">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-155">IoT Hub と通信チャネル usingmultiplexing を確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-155">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="f8165-156">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-156">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="f8165-157">クライアントの一覧は、同じトランスポートを使用します。</span><span class="sxs-lookup"><span data-stu-id="f8165-157">the list of clients use the same transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-158">IoT Hub と通信チャネル usingmultiplexing を確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-158">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="f8165-159">チャネルが既に開いている場合、関数は何もしないものとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-159">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="f8165-160">クライアントの一覧は、同じトランスポートを使用します。</span><span class="sxs-lookup"><span data-stu-id="f8165-160">the list of clients use the same transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: AmqpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-161">IoT Hub と共有の通信チャネルを確立します。</span><span class="sxs-lookup"><span data-stu-id="f8165-161">Establishes a shared communication channel with an IoT Hub.</span></span> <span data-ttu-id="f8165-162">チャネルが既に onConnectionInit の場合、関数には何もしないいてはいけない。</span><span class="sxs-lookup"><span data-stu-id="f8165-162">If a channel is already onConnectionInit, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p><span data-ttu-id="f8165-163">公開された API です。</span><span class="sxs-lookup"><span data-stu-id="f8165-163">The public-facing API.</span></span> <span data-ttu-id="f8165-164">IoT Hub に接続する 1 つの論理的または物理的なデバイスを許可します。</span><span class="sxs-lookup"><span data-stu-id="f8165-164">Allows a single logical or physical device to connect to an IoT Hub.</span></span> <span data-ttu-id="f8165-165">IoT Hub クライアントは、送信側のイベントをおよび IoT Hub からメッセージの受信をサポートします。</span><span class="sxs-lookup"><span data-stu-id="f8165-165">The IoT Hub client supports sending events to and receiving messages from an IoT Hub.</span></span> </p>
      <p><span data-ttu-id="f8165-166">これらのワークフローをサポートするために、クライアント ライブラリは、次の抽象化を提供します。 メッセージ ペイロードおよび関連するプロパティです。クライアントはメッセージを送受信します。</span><span class="sxs-lookup"><span data-stu-id="f8165-166">To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages.</span></span> </p>
      <p><span data-ttu-id="f8165-167">クライアントは、ネットワークがダウンしているし、ネットワークがオンラインに戻ったときに再送信中にメッセージをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="f8165-167">The client buffers messages while the network is down, and re-sends them when the network comes back online.</span></span> <span data-ttu-id="f8165-168">通信 (HTTPS のみ) の効率性を向上させるためにメッセージをバッチ処理します。</span><span class="sxs-lookup"><span data-stu-id="f8165-168">It also batches messages to improve communication efficiency (HTTPS only).</span></span> </p>
      <p><span data-ttu-id="f8165-169">クライアントは、HTTPS 1.1 および AMQPS 1.0 のトランスポートをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f8165-169">The client supports HTTPS 1.1 and AMQPS 1.0 transports.</span></span> </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: close()
    nameWithType: MqttTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"f8165-170\">IoT Hub と通信するために使用するすべてのリソースを閉じます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-170\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"f8165-171\">1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-171\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"f8165-172\">トランスポートが既に閉じられています関数には何もしないものとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-172\">If the transport is already closed, the function shall do nothing.</span></span> </p>"
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: close()
    nameWithType: HttpsTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"f8165-173\">IoT Hub と通信するために使用するすべてのリソースを閉じます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-173\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"f8165-174\">1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-174\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"f8165-175\">トランスポートが既に閉じられています関数には何もしないものとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-175\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: close()
    nameWithType: AmqpsTransport.close()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"f8165-176\">IoT Hub と通信するために使用するすべてのリソースを閉じます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-176\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"f8165-177\">1 回<code>close() \r\n\r\n    </code>が呼び出されると、トランスポートが使用できなくします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-177\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"f8165-178\">トランスポートが既に閉じられています関数には何もしないものとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-178\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-179">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-179">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-180">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-180">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p><span data-ttu-id="f8165-181">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-181">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-182">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-182">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-183">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-183">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-184">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-184">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p><span data-ttu-id="f8165-185">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-185">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-186">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-186">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-187">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-187">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-188">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-188">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: <p><span data-ttu-id="f8165-189">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-189">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-190">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-190">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="f8165-191">IoT Hub イベント コールバックのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f8165-191">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="f8165-192">このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #execute(IotHubStatusCode, Object)</xref> IoT Hub からの応答を受信するとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-192">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-193">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-193">Adds a message to the transport queue.</span></span> <span data-ttu-id="f8165-194">!!!</span><span class="sxs-lookup"><span data-stu-id="f8165-194">!!!</span></span> <span data-ttu-id="f8165-195">この機能はまだサポートされていないを使用してください!</span><span class="sxs-lookup"><span data-stu-id="f8165-195">This functionality is not supported yet, please use  with !!!</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-196">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-196">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p><span data-ttu-id="f8165-197">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-197">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-198">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-198">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-199">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-199">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-200">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-200">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p><span data-ttu-id="f8165-201">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-201">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-202">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-202">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-203">トランスポート キューにメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="f8165-203">Adds a message to the transport queue.</span></span> <span data-ttu-id="f8165-204">!!!</span><span class="sxs-lookup"><span data-stu-id="f8165-204">!!!</span></span> <span data-ttu-id="f8165-205">この機能はまだサポートされていないを使用してください!</span><span class="sxs-lookup"><span data-stu-id="f8165-205">This functionality is not supported yet, please use  with !!!</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="f8165-206">送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="f8165-206">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: <p><span data-ttu-id="f8165-207">メッセージの応答を受信したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-207">the callback to be invoked when a response for the message is received.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-208">コールバックが呼び出されたときに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-208">the context to be passed in when the callback is invoked.</span></span></p>
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="f8165-209">IoT Hub 応答コールバックのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f8165-209">An interface for an IoT Hub response callback.</span></span></p>
      <p><span data-ttu-id="f8165-210">このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #execute(ResponseMessage, Object)</xref> IoT Hub からの応答を受信するとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-210">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback#execute(ResponseMessage, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: sendMessages()
    nameWithType: MqttTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-211">一度に 1 つずつトランスポート キューでは、すべてのメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="f8165-211">Sends all messages on the transport queue, one at a time.</span></span> <span data-ttu-id="f8165-212">前回の送信に失敗した場合、関数は前の試みで、メッセージを再送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-212">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span> </p>
      <p><span data-ttu-id="f8165-213">いずれかが既に作成されていない場合、関数は、構成で指定された IoT Hub と MQTT 接続を初期化します。</span><span class="sxs-lookup"><span data-stu-id="f8165-213">If one has not already been created, the function will initialize an MQTT connection with the IoT Hub specified in the configuration.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: sendMessages()
    nameWithType: HttpsTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-214">すべてのメッセージを転送キューにバッチ要求として送信します。</span><span class="sxs-lookup"><span data-stu-id="f8165-214">Sends all messages on the transport queue as a batched request.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: sendMessages()
    nameWithType: AmqpsTransport.sendMessages()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-215">一度に 1 つずつ順番待ちリストからすべてのメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="f8165-215">Sends all messages from the waiting list, one at a time.</span></span> <span data-ttu-id="f8165-216">前回の送信に失敗した場合、関数は前の試みで、メッセージを再送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="f8165-216">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span> </p>
      <p></p>
    syntax:
      content: public synchronized void sendMessages()
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: invokeCallbacks()
    nameWithType: MqttTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-217">完了したすべての要求のコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-217">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: invokeCallbacks()
    nameWithType: HttpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-218">完了したすべての要求のコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-218">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: invokeCallbacks()
    nameWithType: AmqpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-219">完了したすべての要求のコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-219">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: handleMessage()
    nameWithType: MqttTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-220">サーバーからメッセージが到着するたびに、メッセージのコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-220">Invokes the message callback every time a message arrives from the server.</span></span> <span data-ttu-id="f8165-221">IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答します。</span><span class="sxs-lookup"><span data-stu-id="f8165-221">responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="f8165-222">メッセージ コールバックが設定されていない場合、関数は何もします。</span><span class="sxs-lookup"><span data-stu-id="f8165-222">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: handleMessage()
    nameWithType: HttpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-223">メッセージが検出され、IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答する場合は、メッセージのコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-223">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="f8165-224">メッセージ コールバックが設定されていない場合、関数は何もします。</span><span class="sxs-lookup"><span data-stu-id="f8165-224">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: handleMessage()
    nameWithType: AmqpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-225">メッセージが検出され、IoT Hub によって処理されたメッセージを処理する方法の IoT Hub に応答する場合は、メッセージのコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8165-225">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="f8165-226">メッセージ コールバックが設定されていない場合、関数は何もします。</span><span class="sxs-lookup"><span data-stu-id="f8165-226">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: isEmpty()
    nameWithType: MqttTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.isEmpty()
    type: Method
    summary: "<p><span data-ttu-id=\"f8165-227\">返します<code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-227\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"f8165-228\">\r\n\r\n  <code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-228\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: isEmpty()
    nameWithType: HttpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty()
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-229">それ以外の場合、トランスポートはメッセージが表示されない、処理する場合は true と false を返します。</span><span class="sxs-lookup"><span data-stu-id="f8165-229">Returns true if the transport has no more messages to handle, and false otherwise.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="f8165-230">true に設定すると、トランスポートはメッセージが表示されない、ハンドルおよび false をそれ以外の場合は。</span><span class="sxs-lookup"><span data-stu-id="f8165-230">true if the transport has no more messages to handle, and false otherwise.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: isEmpty()
    nameWithType: AmqpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty()
    type: Method
    summary: "<p><span data-ttu-id=\"f8165-231\">返します<code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-231\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"f8165-232\">\r\n\r\n  <code>true \r\n\r\n    </code>場合は、トランスポートは、処理するメッセージがなくなると<code>false \r\n\r\n    </code>それ以外の場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-232\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-233">Https 接続が失われたか、確立されるたびに実行されるコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="f8165-233">Registers a callback to be executed whenever the https connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="f8165-234">呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-234">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: <p><span data-ttu-id="f8165-235">コールバックに渡されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f8165-235">a context to be passed to the callback.</span></span> <span data-ttu-id="f8165-236">Null にすることができます。</span><span class="sxs-lookup"><span data-stu-id="f8165-236">Can be null</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-237">Mqtt 接続が失われたか、確立されるたびに実行されるコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="f8165-237">Registers a callback to be executed whenever the mqtt connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="f8165-238">呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-238">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"f8165-239\">コールバックに渡されるコンテキスト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-239\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"f8165-240\">指定できます<code>null \r\n\r\n    </code>コールバックが指定されていない場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-240\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="f8165-241">Amqps 接続が失われたか、確立されるたびに実行されるコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="f8165-241">Registers a callback to be executed whenever the amqps connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="f8165-242">呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="f8165-242">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"f8165-243\">コールバックに渡されるコンテキスト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-243\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"f8165-244\">指定できます<code>null \r\n\r\n    </code>コールバックが指定されていない場合。</span><span class=\"sxs-lookup\"><span data-stu-id=\"f8165-244\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="f8165-245">IoT Hub 接続状態コールバックのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f8165-245">An interface for an IoT Hub connection state callback.</span></span></p>
      <p><span data-ttu-id="f8165-246">このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #execute(IotHubConnectionState, Object)</xref>接続の状態 (ダウン、成功した場合など) に渡します。</span><span class="sxs-lookup"><span data-stu-id="f8165-246">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)</xref> passing in the connection status (down, success, etc.).</span></span> </p>
    syntax:
      content: public interface IotHubConnectionStateCallback