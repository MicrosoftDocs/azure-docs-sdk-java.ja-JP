### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    id: _fabric_service_partition_resolver
    parent: microsoft.servicefabric.services.client
    children:
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.defaultMaxRetryBackoffInterval
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.defaultResolveTimeout
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(CreateFabricClient)
      - 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(CreateFabricClient,CreateFabricClient)'
      - 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(FabricClientSettings,String...)'
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(String...)
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault()
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.getResolveTimeout()
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.getRetryBackoffInterval()
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(ResolvedServicePartition)
      - 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)'
      - 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(URI,ServicePartitionKey)'
      - 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)'
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.setDefault(ServicePartitionResolver)
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.setResolveTimeout(Duration)
      - microsoft.servicefabric.services.client._fabric_service_partition_resolver.setRetryBackoffInterval(Duration)
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: FabricServicePartitionResolver
    nameWithType: FabricServicePartitionResolver
    fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 26
    package: microsoft.servicefabric.services.client
    summary: '<p>サービスのエンドポイントを決定するのに役立つクラスを実装します。 このクラスをラップ FabricClient の<xref uid="" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref>メソッド、およびそのメソッドからエラーを実装して、バックアップ/再試行メカニズムです。 </p>'
    syntax:
      content: public class FabricServicePartitionResolver implements ServicePartitionResolver
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.client._service_partition_resolver
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.defaultMaxRetryBackoffInterval
    id: defaultMaxRetryBackoffInterval
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: defaultMaxRetryBackoffInterval
    nameWithType: FabricServicePartitionResolver.defaultMaxRetryBackoffInterval
    fullName: final Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.defaultMaxRetryBackoffInterval
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 39
    package: microsoft.servicefabric.services.client
    summary: <p>これで使用される既定の最大再試行バックオフ間隔<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref>の ResolveAsync メソッドは呼び出されてない明示的に引数を指定する maxRetryBackoffInterval です。 </p>
    syntax:
      content: public static final Duration defaultMaxRetryBackoffInterval= Duration.ofSeconds(5)
      return:
        type: 89ac7c4d
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.defaultResolveTimeout
    id: defaultResolveTimeout
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: defaultResolveTimeout
    nameWithType: FabricServicePartitionResolver.defaultResolveTimeout
    fullName: final Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.defaultResolveTimeout
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 32
    package: microsoft.servicefabric.services.client
    summary: <p>これは、既定解決タイムアウトの ResolveAsync メソッドで使用される try あたり<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref> resolveTimeoutPerTry 引数を明示的に指定することがなく呼び出されるとします。 </p>
    syntax:
      content: public static final Duration defaultResolveTimeout= Duration.ofSeconds(30)
      return:
        type: 89ac7c4d
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(CreateFabricClient)
    id: FabricServicePartitionResolver(CreateFabricClient)
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: FabricServicePartitionResolver(CreateFabricClient createFabricClient)
    nameWithType: FabricServicePartitionResolver.FabricServicePartitionResolver(CreateFabricClient createFabricClient)
    fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver.FabricServicePartitionResolver(CreateFabricClient createFabricClient)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 96
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>インスタンスを作成、 <xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref>FabricClient のインスタンスを作成する指定されたデリゲートを呼び出すことです。</p>
      <p></p>
    syntax:
      content: public FabricServicePartitionResolver(CreateFabricClient createFabricClient)
      parameters:
        - id: createFabricClient
          type: microsoft.servicefabric.services.client._create_fabric_client
          description: <p>Fabric クライアントを作成するデリゲート </p>
  - uid: 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(CreateFabricClient,CreateFabricClient)'
    id: 'FabricServicePartitionResolver(CreateFabricClient,CreateFabricClient)'
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: 'FabricServicePartitionResolver(CreateFabricClient createFabricClient, CreateFabricClient recreateFabricClient)'
    nameWithType: 'FabricServicePartitionResolver.FabricServicePartitionResolver(CreateFabricClient createFabricClient, CreateFabricClient recreateFabricClient)'
    fullName: 'microsoft.servicefabric.services.client.FabricServicePartitionResolver.FabricServicePartitionResolver(CreateFabricClient createFabricClient, CreateFabricClient recreateFabricClient)'
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 80
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>FabricClient のインスタンスを作成する最初のデリゲートを呼び出すの ServicePartionResolver をインスタンス化します。 パーティションの解決時に、FabricClient オブジェクトが破棄を取得し、2 番目のデリゲートを指定すると場合、2 番目のデリゲートを使用、FabricClient を再作成されます。 2 番目のデリゲートは、破棄 FabricClient が最初のデリゲートで作成された場合、FabricClient を作成する別の方法を指定する方法を提供します。</p>
      <p></p>
    syntax:
      content: 'public FabricServicePartitionResolver(CreateFabricClient createFabricClient, CreateFabricClient recreateFabricClient)'
      parameters:
        - id: createFabricClient
          type: microsoft.servicefabric.services.client._create_fabric_client
          description: <p>Fabric クライアントを作成するデリゲート </p>
        - id: recreateFabricClient
          type: microsoft.servicefabric.services.client._create_fabric_client
          description: <p>Fabric クライアントを作成するデリゲート </p>
  - uid: 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(FabricClientSettings,String...)'
    id: )
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: 'FabricServicePartitionResolver(FabricClientSettings settings, String... connectionEndpoints)'
    nameWithType: 'FabricServicePartitionResolver.FabricServicePartitionResolver(FabricClientSettings settings, String... connectionEndpoints)'
    fullName: 'microsoft.servicefabric.services.client.FabricServicePartitionResolver.FabricServicePartitionResolver(FabricClientSettings settings, String... connectionEndpoints)'
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 120
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>インスタンスを作成、 <xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref>FabricClient の新しいインスタンスを作成する指定された FabricClient 設定と、connectionEndpoints を使用します。</p>
      <p></p>
    syntax:
      content: 'public FabricServicePartitionResolver(FabricClientSettings settings, String... connectionEndpoints)'
      parameters:
        - id: settings
          type: system.fabric._fabric_client_settings
          description: <p>Fabric クライアント設定 </p>
        - id: connectionEndpoints
          type: 04d2b762
          description: <p>クラスターの管理エンドポイントの配列 </p>
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver(String...)
    id: )
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: FabricServicePartitionResolver(String... connectionEndpoints)
    nameWithType: FabricServicePartitionResolver.FabricServicePartitionResolver(String... connectionEndpoints)
    fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver.FabricServicePartitionResolver(String... connectionEndpoints)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 107
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>インスタンスを作成、 <xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref>FabricClient の新しいインスタンスを作成する特定の connectionEndpoints を使用します。</p>
      <p></p>
    syntax:
      content: public FabricServicePartitionResolver(String... connectionEndpoints)
      parameters:
        - id: connectionEndpoints
          type: 04d2b762
          description: <p>クラスターの管理エンドポイントの配列 </p>
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault()
    id: getDefault()
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: getDefault()
    nameWithType: FabricServicePartitionResolver.getDefault()
    fullName: static ServicePartitionResolver microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 281
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>既定値を取得<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref></p>
      <p></p>
    syntax:
      content: public static ServicePartitionResolver getDefault()
      return:
        type: microsoft.servicefabric.services.client._service_partition_resolver
        description: <p>既定の<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref></p>
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getResolveTimeout()
    id: getResolveTimeout()
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: getResolveTimeout()
    nameWithType: FabricServicePartitionResolver.getResolveTimeout()
    fullName: Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.getResolveTimeout()
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getResolveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 52
    package: microsoft.servicefabric.services.client
    syntax:
      content: public Duration getResolveTimeout()
      return:
        type: e02a2de0
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getRetryBackoffInterval()
    id: getRetryBackoffInterval()
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: getRetryBackoffInterval()
    nameWithType: FabricServicePartitionResolver.getRetryBackoffInterval()
    fullName: Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.getRetryBackoffInterval()
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getRetryBackoffInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 60
    package: microsoft.servicefabric.services.client
    syntax:
      content: public Duration getRetryBackoffInterval()
      return:
        type: e02a2de0
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(ResolvedServicePartition)
    id: resolveAsync(ResolvedServicePartition)
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: resolveAsync(ResolvedServicePartition previousRsp)
    nameWithType: FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp)
    fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 208
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>指定されたサービスのパーティションを FabricClient を呼び出すことによって解決<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>再試行可能なエラーに戻る/再試行を持つメソッドです。 これには、解決済みのサービス パーティション内に、ResolveAsync() メソッドの以前の呼び出しを使用した取得しました。 Api オーバー ロードは、クライアントが、解決済みのサービス パーティションを持つことが有効ではなくなったことを確認する場合に使用されます。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp)
      parameters:
        - id: previousRsp
          type: system.fabric._resolved_service_partition
          description: <p>以前の解決済みのサービス パーティション </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)'
    id: 'resolveAsync(ResolvedServicePartition,Duration,Duration)'
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: 'resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    nameWithType: 'FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    fullName: 'CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 233
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>指定されたサービスのパーティションを FabricClient を呼び出すことによって解決<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>再試行可能なエラーに戻る/再試行を持つメソッドです。 これには、解決済みのサービス パーティション内に、ResolveAsync() メソッドの以前の呼び出しを使用した取得しました。 Api オーバー ロードは、クライアントが、解決済みのサービス パーティションを持つことが有効ではなくなったことを確認する場合に使用されます。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
      parameters:
        - id: previousRsp
          type: system.fabric._resolved_service_partition
          description: <p>以前の解決済みのサービス パーティション </p>
        - id: resolveTimeoutPerTry
          type: e02a2de0
          description: '<p>渡されるタイムアウト<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>メソッド </p>'
        - id: maxRetryBackoffInterval
          type: e02a2de0
          description: '<p>ときに再試行する前にバックオフ間隔<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>メソッド再試行可能な例外で失敗します。 </p>'
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>
    overridden: 'microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)'
  - uid: 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(URI,ServicePartitionKey)'
    id: 'resolveAsync(URI,ServicePartitionKey)'
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: 'resolveAsync(URI serviceUri, ServicePartitionKey partitionKey)'
    nameWithType: 'FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey)'
    fullName: 'CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey)'
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 137
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>指定されたサービスのパーティションを FabricClient を呼び出すことによって解決<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>再試行可能なエラーに戻る/再試行を持つメソッドです。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceUri, ServicePartitionKey partitionKey)'
      parameters:
        - id: serviceUri
          type: '62304784'
          description: <p>サービスの Uri を解決するのには </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p>解決するのには、パーティションを識別するキー </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)'
    id: 'resolveAsync(URI,ServicePartitionKey,Duration,Duration)'
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: 'resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    nameWithType: 'FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    fullName: 'CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 162
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>指定されたサービスのパーティションを呼び出すことによって解決<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>再試行可能なエラーに戻る/再試行を持つメソッドです。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceUri, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
      parameters:
        - id: serviceUri
          type: '62304784'
          description: <p>サービスの Uri を解決するのには </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p>解決するのには、パーティションを識別するキー </p>
        - id: resolveTimeoutPerTry
          type: e02a2de0
          description: '<p>渡されるタイムアウト<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>メソッド </p>'
        - id: maxRetryBackoffInterval
          type: e02a2de0
          description: '<p>ときに再試行する前にバックオフ間隔<xref uid="system.fabric._service_management_client.resolveServicePartitionAsync(URI)" data-throw-if-not-resolved="false">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(URI)</xref>メソッド再試行可能な例外で失敗します。 </p>'
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>
    overridden: 'microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)'
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setDefault(ServicePartitionResolver)
    id: setDefault(ServicePartitionResolver)
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: setDefault(ServicePartitionResolver defaultServiceResolver)
    nameWithType: FabricServicePartitionResolver.setDefault(ServicePartitionResolver defaultServiceResolver)
    fullName: static void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setDefault(ServicePartitionResolver defaultServiceResolver)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setDefault*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 270
    package: microsoft.servicefabric.services.client
    summary: |-
      <p>既定値を更新<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref></p>
      <p></p>
    syntax:
      content: public static void setDefault(ServicePartitionResolver defaultServiceResolver)
      parameters:
        - id: defaultServiceResolver
          type: microsoft.servicefabric.services.client._service_partition_resolver
          description: <p>新しい既定値 </p>
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setResolveTimeout(Duration)
    id: setResolveTimeout(Duration)
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: setResolveTimeout(Duration resolveTimeout)
    nameWithType: FabricServicePartitionResolver.setResolveTimeout(Duration resolveTimeout)
    fullName: void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setResolveTimeout(Duration resolveTimeout)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setResolveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 56
    package: microsoft.servicefabric.services.client
    syntax:
      content: public void setResolveTimeout(Duration resolveTimeout)
      parameters:
        - id: resolveTimeout
          type: e02a2de0
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setRetryBackoffInterval(Duration)
    id: setRetryBackoffInterval(Duration)
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    langs:
      - java
    name: setRetryBackoffInterval(Duration retryBackoffInterval)
    nameWithType: FabricServicePartitionResolver.setRetryBackoffInterval(Duration retryBackoffInterval)
    fullName: void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setRetryBackoffInterval(Duration retryBackoffInterval)
    overload: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setRetryBackoffInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/client/FabricServicePartitionResolver.java
      startLine: 64
    package: microsoft.servicefabric.services.client
    syntax:
      content: public void setRetryBackoffInterval(Duration retryBackoffInterval)
      parameters:
        - id: retryBackoffInterval
          type: e02a2de0
references:
  - uid: 89ac7c4d
    spec.java:
      - name: final Duration
        fullName: final Duration
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getResolveTimeout*
    name: getResolveTimeout
    nameWithType: FabricServicePartitionResolver.getResolveTimeout
    fullName: Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.getResolveTimeout
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setResolveTimeout*
    name: setResolveTimeout
    nameWithType: FabricServicePartitionResolver.setResolveTimeout
    fullName: void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setResolveTimeout
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getRetryBackoffInterval*
    name: getRetryBackoffInterval
    nameWithType: FabricServicePartitionResolver.getRetryBackoffInterval
    fullName: Duration microsoft.servicefabric.services.client.FabricServicePartitionResolver.getRetryBackoffInterval
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setRetryBackoffInterval*
    name: setRetryBackoffInterval
    nameWithType: FabricServicePartitionResolver.setRetryBackoffInterval
    fullName: void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setRetryBackoffInterval
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.FabricServicePartitionResolver*
    name: FabricServicePartitionResolver
    nameWithType: FabricServicePartitionResolver.FabricServicePartitionResolver
    fullName: microsoft.servicefabric.services.client.FabricServicePartitionResolver.FabricServicePartitionResolver
    package: microsoft.servicefabric.services.client
  - uid: 04d2b762
    spec.java:
      - name: String...
        fullName: String...
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._resolved_service_partition
        name: ResolvedServicePartition
        fullName: system.fabric.ResolvedServicePartition
        href: system.fabric._resolved_service_partition.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.resolveAsync*
    name: resolveAsync
    nameWithType: FabricServicePartitionResolver.resolveAsync
    fullName: CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.FabricServicePartitionResolver.resolveAsync
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.setDefault*
    name: setDefault
    nameWithType: FabricServicePartitionResolver.setDefault
    fullName: static void microsoft.servicefabric.services.client.FabricServicePartitionResolver.setDefault
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault*
    name: getDefault
    nameWithType: FabricServicePartitionResolver.getDefault
    fullName: static ServicePartitionResolver microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault
    package: microsoft.servicefabric.services.client
  - uid: microsoft.servicefabric.services.client._service_partition_resolver
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_resolver.yml
    name: ServicePartitionResolver
    nameWithType: ServicePartitionResolver
    fullName: microsoft.servicefabric.services.client.ServicePartitionResolver
    type: Interface
    summary: <p>サービスのエンドポイントを決定するのに役立つクラスを実装します。 </p>
    syntax:
      content: public interface ServicePartitionResolver
  - uid: microsoft.servicefabric.services.client._create_fabric_client
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._create_fabric_client.yml
    name: CreateFabricClient
    nameWithType: CreateFabricClient
    fullName: microsoft.servicefabric.services.client.CreateFabricClient
    type: Interface
    syntax:
      content: public interface CreateFabricClient
  - uid: system.fabric._fabric_client
    parent: system.fabric
    href: system.fabric._fabric_client.yml
    name: FabricClient
    nameWithType: FabricClient
    fullName: system.fabric.FabricClient
    type: Class
    summary: "<p>作成し、Service Fabric サービスとその他のエンティティを管理します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>FabricClients できるだけ多くを共有することを強くお勧めします。 これは、ため、 <xref uid=\"system.fabric._fabric_client\" data-throw-if-not-resolved=\"false\">FabricClient</xref>キャッシュなどの複数の最適化があり、バッチ処理することはありませんそれ以外の場合を十分に活用することです。 </p>"
    syntax:
      content: public class FabricClient
  - uid: system.fabric._fabric_client_settings
    parent: system.fabric
    href: system.fabric._fabric_client_settings.yml
    name: FabricClientSettings
    nameWithType: FabricClientSettings
    fullName: system.fabric.FabricClientSettings
    type: Class
    summary: <p>構成設定を表す、 <xref uid="system.fabric._fabric_client" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref>クラスです。 </p>
    syntax:
      content: public class FabricClientSettings
  - uid: system.fabric._resolved_service_partition
    parent: system.fabric
    href: system.fabric._resolved_service_partition.yml
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: system.fabric.ResolvedServicePartition
    type: Class
    summary: |-
      <p>指定したサービス パーティションがリッスンするエンドポイントの設定でパーティション分割情報が含まれるデータ構造を表します。</p>
      <p></p>
    syntax:
      content: public class ResolvedServicePartition
  - uid: microsoft.servicefabric.services.client._service_partition_key
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_key.yml
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: microsoft.servicefabric.services.client.ServicePartitionKey
    type: Class
    summary: <p>サービス パーティションに対処するためにキーを定義します。 </p>
    syntax:
      content: public class ServicePartitionKey
  - uid: system.fabric._service_management_client.resolveServicePartitionAsync(URI)
    parent: system.fabric._service_management_client
    href: system.fabric._service_management_client.yml
    name: resolveServicePartitionAsync(URI serviceName)
    nameWithType: ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
    fullName: CompletableFuture<ResolvedServicePartition> system.fabric.ServiceManagementClient.resolveServicePartitionAsync(URI serviceName)
    type: Method
    summary: "<p>指定したサービス パーティションをリッスンするエンドポイントのセットをシステムに照会します。</p>\n<p>\r\n\r\n  <b>注釈:</b>ベース準拠している解決 API です。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">System.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref>が返されます、 <xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>指定したサービス パーティション用です。 このオーバー ロードを使用すると、システムは常に返します、最も近い<xref uid=\"system.fabric._resolved_service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ResolvedServicePartition</xref>サービス パーティション用です。 操作のタイムアウトは、名前を付ける\"MaxOperationTimeout\"に設定されますクラスター マニフェストで指定されたパラメーター。 </p>"
    syntax:
      content: public CompletableFuture<ResolvedServicePartition> resolveServicePartitionAsync(URI serviceName)
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービス インスタンスのサービス ファブリック名。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>指定したサービス パーティションがリッスンしている一連のエンドポイント。 </p>
  - uid: 'microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)'
    parent: microsoft.servicefabric.services.client._service_partition_resolver
    href: microsoft.servicefabric.services.client._service_partition_resolver.yml
    name: 'resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    nameWithType: 'ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    fullName: 'CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    type: Method
    summary: |-
      <p>指定されたサービスのパーティションを解決します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p>サービスの Uri を解決するのには </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p>解決するのには、パーティションを識別するキー </p>
        - id: resolveTimeoutPerTry
          type: e02a2de0
          description: <p>FabricClient に渡されるタイムアウト </p>
        - id: maxRetryBackoffInterval
          type: e02a2de0
          description: <p>再試行可能な例外と FabricClient のメソッドが失敗したときに再試行する前にバックオフする間隔。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>未処理の操作を表す CompletableFuture です。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.client._service_partition_resolver.resolveAsync(ResolvedServicePartition,Duration,Duration)'
    parent: microsoft.servicefabric.services.client._service_partition_resolver
    href: microsoft.servicefabric.services.client._service_partition_resolver.yml
    name: 'resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    nameWithType: 'ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    fullName: 'CompletableFuture<ResolvedServicePartition> microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
    type: Method
    summary: |-
      <p>指定されたサービスのパーティションを解決します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)'
      parameters:
        - id: previousRsp
          type: system.fabric._resolved_service_partition
          description: <p>以前の解決されたパーティション </p>
        - id: resolveTimeoutPerTry
          type: e02a2de0
          description: <p>FabricClient に渡されるタイムアウト </p>
        - id: maxRetryBackoffInterval
          type: e02a2de0
          description: <p>再試行可能な例外と FabricClient のメソッドが失敗したときに再試行する前にバックオフする間隔。 </p>
      return:
        type: 9cdf14d0system.fabric._resolved_service_partitiona08ddfce
        description: <p>未処理の操作を表す CompletableFuture です。 タスクから結果が、 <xref uid="system.fabric._resolved_service_partition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref>サービス エンドポイントを含む、解決済みのサービス パーティションに関する情報を含むオブジェクト。 </p>