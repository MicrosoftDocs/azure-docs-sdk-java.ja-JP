### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_call_type
    id: _actor_call_type
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_call_type.ActorInterfaceMethod
      - microsoft.servicefabric.actors._actor_call_type.getValue()
      - microsoft.servicefabric.actors._actor_call_type.ReminderMethod
      - microsoft.servicefabric.actors._actor_call_type.TimerMethod
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ActorCallType
    nameWithType: ActorCallType
    fullName: microsoft.servicefabric.actors.ActorCallType
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 10
    package: microsoft.servicefabric.actors
    summary: "<p>アクター ランタイムによって呼び出されるメソッドに関連付けられている呼び出しの種類を表します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>の一部として提供されるこの<xref uid=\"microsoft.servicefabric.actors._actor_method_context\" data-throw-if-not-resolved=\"false\">ActorMethodContext</xref>への引数として渡される<xref uid=\"microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid=\"microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。 </p>"
    syntax:
      content: public enum ActorCallType
    inheritance:
      - java.lang.Object
      - java.lang.Enum<ActorCallType>
  - uid: microsoft.servicefabric.actors._actor_call_type.ActorInterfaceMethod
    id: ActorInterfaceMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ActorInterfaceMethod
    nameWithType: ActorCallType.ActorInterfaceMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.ActorInterfaceMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 12
    package: microsoft.servicefabric.actors
    summary: <p>呼び出されたメソッドは、特定のクライアント要求のアクター インターフェイス メソッドです。 </p>
    syntax:
      content: public ActorInterfaceMethod=(0)
  - uid: microsoft.servicefabric.actors._actor_call_type.getValue()
    id: getValue()
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: getValue()
    nameWithType: ActorCallType.getValue()
    fullName: int microsoft.servicefabric.actors.ActorCallType.getValue()
    overload: microsoft.servicefabric.actors._actor_call_type.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 24
    package: microsoft.servicefabric.actors
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: microsoft.servicefabric.actors._actor_call_type.ReminderMethod
    id: ReminderMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ReminderMethod
    nameWithType: ActorCallType.ReminderMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.ReminderMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 16
    package: microsoft.servicefabric.actors
    summary: <p>呼び出されるメソッド<xref uid="microsoft.servicefabric.actors._remindable" data-throw-if-not-resolved="false">Remindable</xref>アラームが発生したときのインターフェイスです。 </p>
    syntax:
      content: public ReminderMethod=(2)
  - uid: microsoft.servicefabric.actors._actor_call_type.TimerMethod
    id: TimerMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: TimerMethod
    nameWithType: ActorCallType.TimerMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.TimerMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 14
    package: microsoft.servicefabric.actors
    summary: <p>呼び出されたメソッドは、タイマー コールバック メソッドです。 </p>
    syntax:
      content: public TimerMethod=(1)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.actors._actor_call_type.getValue*
    name: getValue
    nameWithType: ActorCallType.getValue
    fullName: int microsoft.servicefabric.actors.ActorCallType.getValue
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._remindable
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._remindable.yml
    name: Remindable
    nameWithType: Remindable
    fullName: microsoft.servicefabric.actors.Remindable
    type: Interface
    summary: <p>インターフェイス アラームを使用するアクターが実装する必要があります。 </p>
    syntax:
      content: public interface Remindable
  - uid: microsoft.servicefabric.actors._actor_method_context
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_context.yml
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: microsoft.servicefabric.actors.ActorMethodContext
    type: Class
    summary: '<p><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>に渡す引数として渡されるアクター ランタイムによって呼び出されるメソッドに関する情報を格納<xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。 </p>'
    syntax:
      content: public class ActorMethodContext
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p>このメソッドはアクター メソッドの呼び出しの直前にアクター ランタイムによって呼び出されます。 前のアクター メソッドが呼び出されるアクションを実行するためには、このメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの完了後にアクター ランタイムによって呼び出されるメソッドを記述します。 </p>
      return:
        type: 16409f84
        description: |-
          <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>前 actor メソッドの操作を表すです。 <verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p>このメソッドが呼び出されるアクター ランタイムによって、アクター メソッドの実行が完了しました。 アクター メソッドの実行が完了した後、すべてのアクションを実行するためには、このメソッドをオーバーライドします。</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの前にアクター ランタイムによって呼び出されたメソッドについて説明します。 </p>
      return:
        type: 16409f84
        description: |-
          <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> actor メソッドの操作を表すです。 <verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>