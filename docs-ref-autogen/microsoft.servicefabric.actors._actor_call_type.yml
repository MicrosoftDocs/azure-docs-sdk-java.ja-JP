### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_call_type
    id: _actor_call_type
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_call_type.ActorInterfaceMethod
      - microsoft.servicefabric.actors._actor_call_type.getValue()
      - microsoft.servicefabric.actors._actor_call_type.ReminderMethod
      - microsoft.servicefabric.actors._actor_call_type.TimerMethod
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ActorCallType
    nameWithType: ActorCallType
    fullName: microsoft.servicefabric.actors.ActorCallType
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 10
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"9d59d-101\">アクター ランタイムによって呼び出されるメソッドに関連付けられている呼び出しの種類を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d59d-101\">Represents the call-type associated with the method invoked by actor runtime.</span></span> </p>\n<p><span data-ttu-id=\"9d59d-102\">\r\n\r\n  <b>注釈:</b>の一部として提供されるこの<xref uid=\"microsoft.servicefabric.actors._actor_method_context\" data-throw-if-not-resolved=\"false\">ActorMethodContext</xref>への引数として渡される<xref uid=\"microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid=\"microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d59d-102\">\r\n\r\n  <b>Remarks:</b>This is provided as part of <xref uid=\"microsoft.servicefabric.actors._actor_method_context\" data-throw-if-not-resolved=\"false\">ActorMethodContext</xref> which is passed as argument to <xref uid=\"microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid=\"microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>.</span></span> </p>"
    syntax:
      content: public enum ActorCallType
    inheritance:
      - java.lang.Object
      - java.lang.Enum<ActorCallType>
  - uid: microsoft.servicefabric.actors._actor_call_type.ActorInterfaceMethod
    id: ActorInterfaceMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ActorInterfaceMethod
    nameWithType: ActorCallType.ActorInterfaceMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.ActorInterfaceMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 12
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="9d59d-103">呼び出されたメソッドは、特定のクライアント要求のアクター インターフェイス メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9d59d-103">The method invoked is an actor interface method for a given client request.</span></span> </p>
    syntax:
      content: public ActorInterfaceMethod=(0)
  - uid: microsoft.servicefabric.actors._actor_call_type.getValue()
    id: getValue()
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: getValue()
    nameWithType: ActorCallType.getValue()
    fullName: int microsoft.servicefabric.actors.ActorCallType.getValue()
    overload: microsoft.servicefabric.actors._actor_call_type.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 24
    package: microsoft.servicefabric.actors
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: microsoft.servicefabric.actors._actor_call_type.ReminderMethod
    id: ReminderMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: ReminderMethod
    nameWithType: ActorCallType.ReminderMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.ReminderMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 16
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="9d59d-104">呼び出されるメソッド<xref uid="microsoft.servicefabric.actors._remindable" data-throw-if-not-resolved="false">Remindable</xref>アラームが発生したときのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="9d59d-104">The method invoked on <xref uid="microsoft.servicefabric.actors._remindable" data-throw-if-not-resolved="false">Remindable</xref> interface when a reminder fires.</span></span> </p>
    syntax:
      content: public ReminderMethod=(2)
  - uid: microsoft.servicefabric.actors._actor_call_type.TimerMethod
    id: TimerMethod
    parent: microsoft.servicefabric.actors._actor_call_type
    href: microsoft.servicefabric.actors._actor_call_type.yml
    langs:
      - java
    name: TimerMethod
    nameWithType: ActorCallType.TimerMethod
    fullName: microsoft.servicefabric.actors.ActorCallType.TimerMethod
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorCallType.java
      startLine: 14
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="9d59d-105">呼び出されたメソッドは、タイマー コールバック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="9d59d-105">The method invoked is a timer callback method.</span></span> </p>
    syntax:
      content: public TimerMethod=(1)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.actors._actor_call_type.getValue*
    name: getValue
    nameWithType: ActorCallType.getValue
    fullName: int microsoft.servicefabric.actors.ActorCallType.getValue
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._remindable
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._remindable.yml
    name: Remindable
    nameWithType: Remindable
    fullName: microsoft.servicefabric.actors.Remindable
    type: Interface
    summary: <p><span data-ttu-id="9d59d-106">インターフェイス アラームを使用するアクターが実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9d59d-106">Interface which actors that use reminders must implement.</span></span> </p>
    syntax:
      content: public interface Remindable
  - uid: microsoft.servicefabric.actors._actor_method_context
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_context.yml
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: microsoft.servicefabric.actors.ActorMethodContext
    type: Class
    summary: '<p><span data-ttu-id="9d59d-107"><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>に渡す引数として渡されるアクター ランタイムによって呼び出されるメソッドに関する情報を格納<xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="9d59d-107">An <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> contains information about the method that is invoked by actor runtime and is passed as an argument to <xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>.</span></span> </p>'
    syntax:
      content: public class ActorMethodContext
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p><span data-ttu-id="9d59d-108">このメソッドはアクター メソッドの呼び出しの直前にアクター ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9d59d-108">This method is invoked by actor runtime just before invoking an actor method.</span></span> <span data-ttu-id="9d59d-109">前のアクター メソッドが呼び出されるアクションを実行するためには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9d59d-109">Override this method for performing any actions prior to an actor method is invoked.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><span data-ttu-id="9d59d-110"><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの完了後にアクター ランタイムによって呼び出されるメソッドを記述します。</span><span class="sxs-lookup"><span data-stu-id="9d59d-110">An <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that will be invoked by actor runtime after this method finishes.</span></span> </p>
      return:
        type: 16409f84
        description: |-
          <p><span data-ttu-id="9d59d-111">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>前 actor メソッドの操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="9d59d-111">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing pre-actor-method operation.</span></span> <span data-ttu-id="9d59d-112"><verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9d59d-112"><verbatim>    &lt;b&gt;Remarks:&lt;/b&gt;This method is invoked by actor runtime prior to:</span></span>

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p><span data-ttu-id="9d59d-113">このメソッドが呼び出されるアクター ランタイムによって、アクター メソッドの実行が完了しました。</span><span class="sxs-lookup"><span data-stu-id="9d59d-113">This method is invoked by actor runtime an actor method has finished execution.</span></span> <span data-ttu-id="9d59d-114">アクター メソッドの実行が完了した後、すべてのアクションを実行するためには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9d59d-114">Override this method for performing any actions after an actor method has finished execution.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><span data-ttu-id="9d59d-115"><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの前にアクター ランタイムによって呼び出されたメソッドについて説明します。</span><span class="sxs-lookup"><span data-stu-id="9d59d-115">An <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that was invoked by actor runtime prior to this method.</span></span> </p>
      return:
        type: 16409f84
        description: |-
          <p><span data-ttu-id="9d59d-116">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> actor メソッドの操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="9d59d-116">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing post-actor-method operation.</span></span> <span data-ttu-id="9d59d-117"><verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9d59d-117"><verbatim>    &lt;b&gt;Remarks:&lt;/b&gt; This method is invoked by actor runtime prior to:</span></span>

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>