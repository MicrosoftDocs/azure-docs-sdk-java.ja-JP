### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    id: _amqp_send
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps
    children:
      - 'com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.AmqpSend(String,String,String,IotHubServiceClientProtocol)'
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.amqpSendHandler
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.close()
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.hostName
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.iotHubServiceClientProtocol
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.onReactorInit(Event)
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.open()
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.reactor
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.sasToken
      - 'com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.send(String,Message)'
      - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.userName
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: AmqpSend
    nameWithType: AmqpSend
    fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
    type: Class
    source:
      remote: &ref_0
        path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 24
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>高レベルの処理に必要な新機能、イベントをオーバーライドする QPID-j Proton BaseHandler クラスのインスタンスは、開く、閉じる、し、メソッドを送信します。 初期化し、低レベル ampqs operations AmqpsSendHandler クラスを使用します。 </p>
    syntax: &ref_1
      content: public class AmqpSend
    inheritance:
      - java.lang.Object
      - BaseHandler
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.AmqpSend(String,String,String,IotHubServiceClientProtocol)'
    id: 'AmqpSend(String,String,String,IotHubServiceClientProtocol)'
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: 'AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)'
    nameWithType: 'AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)'
    fullName: 'com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)'
    overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.AmqpSend*
    type: Constructor
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 40
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>接続パラメーターを設定するコンス トラクター </p>
    syntax:
      content: 'public AmqpSend(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)'
      parameters:
        - id: hostName
          type: '26831127'
          description: '<p>サービスのアドレスの文字列 (例: AAA です。BBB です。CCC) </p>'
        - id: userName
          type: '26831127'
          description: '<p>SASL 認証を使用するユーザー名の文字列 (例: <ulink url="mailto:user@sas.service"> user@sas.service </ulink>) </p>'
        - id: sasToken
          type: '26831127'
          description: <p>SAS トークンの文字列 </p>
        - id: iotHubServiceClientProtocol
          type: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
          description: <p>プロトコルを使用するには </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.amqpSendHandler
    id: amqpSendHandler
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: amqpSendHandler
    nameWithType: AmqpSend.amqpSendHandler
    fullName: AmqpSendHandler com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.amqpSendHandler
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 30
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected AmqpSendHandler amqpSendHandler
      return:
        type: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send_handler
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: close()
    nameWithType: AmqpSend.close()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close()
    overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.close*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 97
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>AmqpsSendHandler メンバー変数が無効になります。 </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.hostName
    id: hostName
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: hostName
    nameWithType: AmqpSend.hostName
    fullName: final String com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.hostName
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 26
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected final String hostName
      return:
        type: 3d93591e
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.iotHubServiceClientProtocol
    id: iotHubServiceClientProtocol
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: iotHubServiceClientProtocol
    nameWithType: AmqpSend.iotHubServiceClientProtocol
    fullName: IotHubServiceClientProtocol com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.iotHubServiceClientProtocol
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 31
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected IotHubServiceClientProtocol iotHubServiceClientProtocol
      return:
        type: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.onReactorInit(Event)
    id: onReactorInit(Event)
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: onReactorInit(Event event)
    nameWithType: AmqpSend.onReactorInit(Event event)
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.onReactorInit(Event event)
    overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.onReactorInit*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 73
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>リアクター init イベントのイベント ハンドラー </p>
    syntax:
      content: public void onReactorInit(Event event)
      parameters:
        - id: event
          type: 70fceca4
          description: <p>Proton イベント オブジェクト </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: open()
    nameWithType: AmqpSend.open()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open()
    overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.open*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 88
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>AmqpsSendHandler を作成し、メンバー変数に格納 </p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.reactor
    id: reactor
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: reactor
    nameWithType: AmqpSend.reactor
    fullName: Reactor com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.reactor
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 29
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected Reactor reactor= null
      return:
        type: 5f183614
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.sasToken
    id: sasToken
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: sasToken
    nameWithType: AmqpSend.sasToken
    fullName: final String com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.sasToken
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 28
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected final String sasToken
      return:
        type: 3d93591e
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.send(String,Message)'
    id: 'send(String,Message)'
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: 'send(String deviceId, Message message)'
    nameWithType: 'AmqpSend.send(String deviceId, Message message)'
    fullName: 'void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send(String deviceId, Message message)'
    overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.send*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 112
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    summary: <p>バイナリ メッセージの初期化を作成および Proton リアクター作成されたメッセージの送信を開始 </p>
    syntax:
      content: 'public void send(String deviceId, Message message)'
      parameters:
        - id: deviceId
          type: '26831127'
          description: <p>デバイス名の文字列 </p>
        - id: message
          type: com.microsoft.azure.sdk.iot.service._message
          description: <p>メッセージを送信します。 </p>
    exceptions:
      - type: cbf33bbe
        description: <p>この例外がスローされます、 <xref uid="com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send" data-throw-if-not-resolved="false">AmqpSend</xref>オブジェクトが初期化されていません </p>
      - type: 0d494ee6
        description: <p>Iot Hub は、何らかの理由でメッセージを拒否した場合 </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.userName
    id: userName
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    langs:
      - java
    name: userName
    nameWithType: AmqpSend.userName
    fullName: final String com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.userName
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpSend.java
      startLine: 27
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
    syntax:
      content: protected final String userName
      return:
        type: 3d93591e
references:
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: 5f183614
    spec.java:
      - name: Reactor
        fullName: Reactor
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.AmqpSend*
    name: AmqpSend
    nameWithType: AmqpSend.AmqpSend
    fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.AmqpSend
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
  - uid: 70fceca4
    spec.java:
      - name: Event
        fullName: Event
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.onReactorInit*
    name: onReactorInit
    nameWithType: AmqpSend.onReactorInit
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.onReactorInit
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.open*
    name: open
    nameWithType: AmqpSend.open
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.open
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.close*
    name: close
    nameWithType: AmqpSend.close
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.close
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 0d494ee6
    spec.java:
      - name: IotHubException
        fullName: IotHubException
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.send*
    name: send
    nameWithType: AmqpSend.send
    fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend.send
    package: com.microsoft.azure.sdk.iot.service.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send_handler
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send_handler.yml
    name: AmqpSendHandler
    nameWithType: AmqpSendHandler
    fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSendHandler
    type: Class
    summary: <p>送信操作を処理するために必要なはどのようなイベントをオーバーライドする QPID-j Proton BaseHandler クラスのインスタンス Contains とセットの接続パラメーター (パス、ポート、エンドポイント) を維持 AMQP プロトコル (リンク、セッション、接続、トランスポート) のレイヤーのトランスポートを作成し、セットの SASL 認証 </p>
    syntax:
      content: public class AmqpSendHandler
  - uid: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
    parent: com.microsoft.azure.sdk.iot.service
    href: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol.yml
    name: IotHubServiceClientProtocol
    nameWithType: IotHubServiceClientProtocol
    fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
    type: Enum
    summary: <p>IoT Hub と通信するサービス クライアントによって使用されるアプリケーション レイヤー プロトコルです。 </p>
    syntax:
      content: public enum IotHubServiceClientProtocol
  - uid: com.microsoft.azure.sdk.iot.service._message
    parent: com.microsoft.azure.sdk.iot.service
    href: com.microsoft.azure.sdk.iot.service._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.service.Message
    type: Class
    summary: <p>Iot Hub の特定のメッセージ コンテナー </p>
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception
    parent: com.microsoft.azure.sdk.iot.service.exceptions
    href: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception.yml
    name: IotHubException
    nameWithType: IotHubException
    fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    type: Class
    summary: <p>Iot Hub の例外のスーパー クラス </p>
    syntax:
      content: public class IotHubException
  - uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
    parent: com.microsoft.azure.sdk.iot.service.transport.amqps
    href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
    name: AmqpSend
    nameWithType: AmqpSend
    fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
    type: Class
    summary: <p>高レベルの処理に必要な新機能、イベントをオーバーライドする QPID-j Proton BaseHandler クラスのインスタンスは、開く、閉じる、し、メソッドを送信します。 初期化し、低レベル ampqs operations AmqpsSendHandler クラスを使用します。 </p>
    syntax: *ref_1