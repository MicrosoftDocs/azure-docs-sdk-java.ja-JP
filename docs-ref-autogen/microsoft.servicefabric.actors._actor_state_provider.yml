### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_state_provider
    id: _actor_state_provider
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
      - 'microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)'
      - 'microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)'
      - microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
      - 'microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)'
      - microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
      - microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync(CancellationToken)
      - 'microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)'
      - microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
      - 'microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
      - 'microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 12
    package: microsoft.servicefabric.actors
    summary: <p>アクター状態プロバイダーは、アクター ランタイムと通信するために実装する必要があるインターフェイスを表します。 </p>
    syntax:
      content: public interface ActorStateProvider extends StateProviderReplica
    inheritedMembers:
      - microsoft.servicefabric.data._state_provider_replica.abort()
      - 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
      - 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
      - 'microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
      - microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
      - microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
      - 'microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
      - 'microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)'
      - 'microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
  - uid: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
    id: actorActivatedAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: actorActivatedAsync(ActorId actorId)
    nameWithType: ActorStateProvider.actorActivatedAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.actorActivatedAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 29
    package: microsoft.servicefabric.actors
    summary: |-
      <p>指定した id に置き換えます。 アクターのライセンス認証プロセスの一部としてこのメソッドが呼び出されます</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アクティブ化したアクターの ID です。 </p>
      return:
        type: 16409f84
        description: <p>表す非同期のタスク<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブ化通知の処理です。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)'
    id: 'containsStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'containsStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'ActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    overload: microsoft.servicefabric.actors._actor_state_provider.containsStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 71
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクター状態プロバイダーに指定した状態の名前を持つ、アクター状態が含まれているかどうかをチェックします。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の有無を確認する対象のアクターの ID です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>有無を確認するアクター状態の名前です。 </p>
      return:
        type: 7e53ac82
        description: <p>非同期チェック操作を表すタスク。 TResult パラメーターの値は、指定した名前の状態には、それ以外の場合の false が存在する場合は true です。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)'
    id: 'deleteReminderAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'deleteReminderAsync(ActorId actorId, String reminderName)'
    nameWithType: 'ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    overload: microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 137
    package: microsoft.servicefabric.actors
    summary: |-
      <p>存在する場合は、指定されたアクター アラームを削除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを削除するアクターの ID です。 </p>
        - id: reminderName
          type: '26831127'
          description: <p>削除するアラームの名前です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
    id: enumerateStateNamesAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: enumerateStateNamesAsync(ActorId actorId)
    nameWithType: ActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 95
    package: microsoft.servicefabric.actors
    summary: "<p>指定されたアクターに関連付けられているすべての状態名の列挙可能なが作成されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>アクター状態プロバイダーから返された列挙子に安全に読み取りと同時に使用し、状態プロバイダーに書き込みます。 状態プロバイダーのスナップショットの一貫したビューを表します。 </p>"
    syntax:
      content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>列挙可能なを作成する対象のアクターの ID です。 </p>
      return:
        type: d20512af
        description: <p>非同期の列挙操作を表すタスク。 TResult パラメーターの値は、指定されたアクターに関連付けられているすべての州名の列挙です。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)'
    id: 'getActorsAsync(int,ContinuationToken)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    nameWithType: 'ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    fullName: 'CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    overload: microsoft.servicefabric.actors._actor_state_provider.getActorsAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 114
    package: microsoft.servicefabric.actors
    summary: "<p>状態プロバイダーから ActorIds を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b> </p>"
    syntax:
      content: 'public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
      parameters:
        - id: numItemsToReturn
          type: f75371fa
          description: <p>返される要求された項目の数。 </p>
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: <p>クエリから結果を開始する継続トークンです。 継続トークンの null 値は、開始、先頭の値の形式を返すことを意味します。 </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
        description: <p>サーバーへの呼び出しの非同期操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
    id: initialize(ActorTypeInformation)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: initialize(ActorTypeInformation actorTypeInformation)
    nameWithType: ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    fullName: void microsoft.servicefabric.actors.ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    overload: microsoft.servicefabric.actors._actor_state_provider.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 20
    package: microsoft.servicefabric.actors
    summary: |-
      <p>関連付けられているアクター型の型情報を使用してアクター状態プロバイダーを初期化します。</p>
      <p></p>
    syntax:
      content: public void initialize(ActorTypeInformation actorTypeInformation)
      parameters:
        - id: actorTypeInformation
          type: microsoft.servicefabric.actors._actor_type_information
          description: <p>アクター クラスの型情報 </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync(CancellationToken)
    id: loadRemindersAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: loadRemindersAsync(CancellationToken cancellationToken)
    nameWithType: ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 149
    package: microsoft.servicefabric.actors
    summary: |-
      <p>アクター状態プロバイダーに含まれているすべてのアラームを読み込みます。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
        description: <p>非同期ロード操作を表すタスク。 TResult パラメーターの値は、アクター状態プロバイダーに含まれているすべてのアクター アラームのコレクションです。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)'
    id: 'loadStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'loadStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'ActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    fullName: '<T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    overload: microsoft.servicefabric.actors._actor_state_provider.loadStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 43
    package: microsoft.servicefabric.actors
    summary: |-
      <p>指定された状態の名前に関連付けられているアクターの状態を読み込みます。</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の読み込み先のアクターの ID です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>読み込みにアクター状態の名前です。 </p>
      return:
        type: 6d056e8b
        description: <p>非同期ロード操作を表すタスク。 TResult のパラメーターの値には、特定の状態名に関連付けられているアクター状態の値が含まれています。 </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
    id: removeActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: removeActorAsync(ActorId actorId)
    nameWithType: ActorStateProvider.removeActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.removeActorAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 80
    package: microsoft.servicefabric.actors
    summary: |-
      <p>すべての既存の状態と指定されたアクターにアトミックに関連付けられている通知を削除します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態を削除するアクターの ID です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
    id: 'saveReminderAsync(ActorId,ActorReminder)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    nameWithType: 'ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    overload: microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 126
    package: microsoft.servicefabric.actors
    summary: |-
      <p>指定されたアクター アラームを保存します。 指定した名前のアクター アラームが存在しない場合は、それ以外の場合と同じ名前のアクター アラームを既存のアクター アラームが更新を追加します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを保存する対象のアクターの ID です。 </p>
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アラームを保存します。 </p>"
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    id: 'saveStateAsync(ActorId,List<ActorStateChange>)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    langs:
      - java
    name: 'saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    nameWithType: 'ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    overload: microsoft.servicefabric.actors._actor_state_provider.saveStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateProvider.java
      startLine: 59
    package: microsoft.servicefabric.actors
    summary: "<p>指定したアクター状態の変更のセットをアトミックに保存します。</p>\n<p>\r\n\r\n  <b>注釈:</b>状態変更のコレクションは、指定された状態の名前の 1 つの項目を含める必要があります。 保存先に既に存在するか、存在しないアクター状態の更新/削除するアクターの状態を追加しようとしています。 操作は失敗します。 </p>"
    syntax:
      content: 'public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の変更を保存する対象のアクターの ID です。 </p>
        - id: stateChanges
          type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
          description: <p>状態の変更を保存するコレクション。 </p>
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 </p>
references:
  - uid: microsoft.servicefabric.actors._actor_state_provider.initialize*
    name: initialize
    nameWithType: ActorStateProvider.initialize
    fullName: void microsoft.servicefabric.actors.ActorStateProvider.initialize
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync*
    name: actorActivatedAsync
    nameWithType: ActorStateProvider.actorActivatedAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.actorActivatedAsync
    package: microsoft.servicefabric.actors
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 6d056e8b
    spec.java:
      - name: <T> CompletableFuture<T>
        fullName: <T> CompletableFuture<T>
  - uid: microsoft.servicefabric.actors._actor_state_provider.loadStateAsync*
    name: loadStateAsync
    nameWithType: ActorStateProvider.loadStateAsync
    fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateProvider.loadStateAsync
    package: microsoft.servicefabric.actors
  - uid: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: microsoft.servicefabric.actors._actor_state_change
        name: ActorStateChange
        fullName: microsoft.servicefabric.actors.ActorStateChange
        href: microsoft.servicefabric.actors._actor_state_change.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._actor_state_provider.saveStateAsync*
    name: saveStateAsync
    nameWithType: ActorStateProvider.saveStateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveStateAsync
    package: microsoft.servicefabric.actors
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: microsoft.servicefabric.actors._actor_state_provider.containsStateAsync*
    name: containsStateAsync
    nameWithType: ActorStateProvider.containsStateAsync
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateProvider.containsStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync*
    name: removeActorAsync
    nameWithType: ActorStateProvider.removeActorAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.removeActorAsync
    package: microsoft.servicefabric.actors
  - uid: d20512af
    spec.java:
      - name: CompletableFuture<List<String>>
        fullName: CompletableFuture<List<String>>
  - uid: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync*
    name: enumerateStateNamesAsync
    nameWithType: ActorStateProvider.enumerateStateNamesAsync
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateProvider.enumerateStateNamesAsync
    package: microsoft.servicefabric.actors
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._paged_result
        name: PagedResult
        fullName: microsoft.servicefabric.actors.PagedResult
        href: microsoft.servicefabric.actors._paged_result.yml
      - name: <
        fullName: <
      - uid: microsoft.servicefabric.actors._actor_id
        name: ActorId
        fullName: microsoft.servicefabric.actors.ActorId
        href: microsoft.servicefabric.actors._actor_id.yml
      - name: '>>'
        fullName: '>>'
  - uid: microsoft.servicefabric.actors._actor_state_provider.getActorsAsync*
    name: getActorsAsync
    nameWithType: ActorStateProvider.getActorsAsync
    fullName: CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.ActorStateProvider.getActorsAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync*
    name: saveReminderAsync
    nameWithType: ActorStateProvider.saveReminderAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveReminderAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync*
    name: deleteReminderAsync
    nameWithType: ActorStateProvider.deleteReminderAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.deleteReminderAsync
    package: microsoft.servicefabric.actors
  - uid: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._actor_reminder_collection
        name: ActorReminderCollection
        fullName: microsoft.servicefabric.actors.ActorReminderCollection
        href: microsoft.servicefabric.actors._actor_reminder_collection.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync*
    name: loadRemindersAsync
    nameWithType: ActorStateProvider.loadRemindersAsync
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.ActorStateProvider.loadRemindersAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.data._state_provider_replica.abort()
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: abort()
    nameWithType: StateProviderReplica.abort()
    fullName: void microsoft.servicefabric.data.StateProviderReplica.abort()
    type: Method
    summary: "<p>状態プロバイダーのレプリカを強制的に中止します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>この通常ノードで、永続的な障害が検出されたときにエラーまたは発生 Service Fabric は、内部エラーのため、レプリカのライフ サイクルを確実に管理できません。 </p>"
    syntax:
      content: public void abort()
  - uid: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    type: Method
    summary: "<p>これによって管理されるすべての信頼性の高い状態の完全バックアップを実行<xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>です。</p>\n<p>\r\n\r\n  <b>注釈:</b>完全バックアップが 1 時間のタイムアウトを設定して実行されます。 BackupCallback によって返されるブール値では、サービスが正常に外部の場所に、バックアップ フォルダーを移動するかどうかを示します。 False が返される場合は BackupAsync backupCallback false が返されたことを示す関連するメッセージで UnsupportedOperationException がスローされます。 また、バックアップはマークされます失敗とします。 </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p>バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出されるコールバック </p>
      return:
        type: 16409f84
        description: <p>非同期のバックアップ操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    type: Method
    summary: "<p>これによって管理されるすべての信頼性の高い状態の完全バックアップを実行<xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>です。</p>\n<p>\r\n\r\n  <b>注釈:</b>完全バックアップが 1 時間のタイムアウトを設定して実行されます。 BackupCallback によって返されるブール値では、サービスが正常に外部の場所に、バックアップ フォルダーを移動するかどうかを示します。 False が返される場合は BackupAsync backupCallback false が返されたことを示す関連するメッセージで UnsupportedOperationException がスローされます。 また、バックアップはマークされます失敗とします。 </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: option
          type: microsoft.servicefabric.data._backup_option
          description: <p>実行するバックアップの種類。 </p>
        - id: timeout
          type: e02a2de0
          description: <p>この操作のタイムアウト。 </p>
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p>バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出されるコールバック </p>
      return:
        type: 16409f84
        description: <p>非同期のバックアップ操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>そのロールが変更される、たとえばプライマリまたはセカンダリに、状態プロバイダーのレプリカを通知します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>プライマリまたはセカンダリなど、新しいレプリカ ロール。 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>非同期の変更の役割の操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: StateProviderReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken cancellationToken)
    type: Method
    summary: "<p>状態プロバイダーの複製が正常にクローズします。</p>\n<p>\r\n\r\n  <b>注釈:</b>これは、レプリカのコードにアップグレードされている、負荷分散のため、レプリカの移動または一時的なエラーが検出された場合に通常に発生します。 </p>"
    syntax:
      content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 16409f84
        description: <p>非同期の close 操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    type: Method
    summary: "<p>サービスの初期化情報を使用して、状態プロバイダーのレプリカを初期化します。</p>\n<p>\r\n\r\n  <b>注釈:</b>初期化中に複雑な処理を行う必要はありません。 OpenAsync では、高価なまたは実行時間の長いの初期化を行う必要があります。 </p>"
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: <p>サービス名、パーティション id、レプリカの id、およびコード パッケージ情報などのサービスの初期化情報。 </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    type: Method
    summary: "<p>使用するため、状態プロバイダーのレプリカを開きます。</p>\n<p>\r\n\r\n  <b>注釈:</b>拡張状態プロバイダーの初期化タスクを開始できます。 </p>"
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p>これが新規または既存のレプリカであるかどうかを示します。 </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p>このレプリカが属しているパーティション。 </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: <p>非同期の open 操作を表すタスク。 結果には、パーティション内の他の状態プロバイダーのレプリカ間で状態のレプリケーションを担当するレプリケーターが含まれています。 </p>
  - uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: restoreAsync(String backupFolderPath)
    nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
    fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
    type: Method
    summary: "<p>作成したバックアップを復元します。</p>\n<p>\r\n\r\n  <b>注釈:</b>安全な復元が実行されて、現在のレプリカの状態は、データを復元する場合、復元は完了のみを意味します。 </p>"
    syntax:
      content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: <p>レプリカがから復元するディレクトリ。 このパラメーターを null にすることはできませんを空または空白のみが含まれています。 UNC パスも指定することがあります。 </p>
      return:
        type: 16409f84
        description: <p>非同期の復元操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    nameWithType: 'StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    type: Method
    summary: |-
      <p>作成したバックアップを復元します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: <p>レプリカがから復元するディレクトリ。 このパラメーターを null にすることはできませんを空または空白のみが含まれています。 UNC パスも指定することがあります。 </p>
        - id: restorePolicy
          type: microsoft.servicefabric.data._restore_policy
          description: <p>復元のポリシー。 </p>
      return:
        type: 16409f84
        description: <p>非同期の復元操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    nameWithType: 'StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    fullName: 'void microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    type: Method
    summary: |-
      <p>疑いのあるデータ損失の可能性の中に呼び出される関数</p>
      <p></p>
    syntax:
      content: 'public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
      parameters:
        - id: onDataLossAsync
          type: 432ffe41system.fabric._cancellation_token774bd4f0
          description: <p>TODO です。 疑いのあるデータ損失の処理の一部として呼び出される関数。 関数は、CancellationToken にし、イベントの非同期処理を表す CompletableFuture を返します。 True を返すには、レプリカの状態が復元されていることを示します。 False は、レプリカの状態が変更されていないことを示します。 </p>
  - uid: microsoft.servicefabric.data._state_provider_replica
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: StateProviderReplica
    nameWithType: StateProviderReplica
    fullName: microsoft.servicefabric.data.StateProviderReplica
    type: Interface
    summary: <p>Service Fabric サービスと対話するの信頼性の高い状態プロバイダーの複製を実装する必要がありますメソッドを定義します。 </p>
    syntax:
      content: public interface StateProviderReplica
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: KvsActorStateProvider
    nameWithType: KvsActorStateProvider
    fullName: microsoft.servicefabric.actors.KvsActorStateProvider
    type: Class
    syntax:
      content: public class KvsActorStateProvider
  - uid: microsoft.servicefabric.actors._null_actor_state_provider
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>揮発性の永続化つまりの実装 <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>状態が保持されるメモリ内のみです。 </p>"
    syntax:
      content: public class VolatileActorStateProvider
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider.initialize(ActorTypeInformation)
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: initialize(ActorTypeInformation actorTypeInformation)
    nameWithType: KvsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    fullName: void microsoft.servicefabric.actors.KvsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    type: Method
    summary: |-
      <p>関連付けられているアクター型の型情報を使用してアクター状態プロバイダーを初期化します。</p>
      <p></p>
    syntax:
      content: public void initialize(ActorTypeInformation actorTypeInformation)
      parameters:
        - id: actorTypeInformation
          type: microsoft.servicefabric.actors._actor_type_information
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref>アクター クラスの情報を入力します。 </p>"
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(ActorTypeInformation)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: initialize(ActorTypeInformation actorTypeInformation)
    nameWithType: VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    type: Method
    summary: |-
      <p>関連付けられているアクター型の型情報を使用してアクター状態プロバイダーを初期化します。</p>
      <p></p>
    syntax:
      content: public void initialize(ActorTypeInformation actorTypeInformation)
      parameters:
        - id: actorTypeInformation
          type: microsoft.servicefabric.actors._actor_type_information
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref>アクター クラスの情報を入力します。 </p>"
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p>アクターを実装する型についてを説明します。 </p>
    syntax:
      content: public class ActorTypeInformation
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider.actorActivatedAsync(ActorId)
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: actorActivatedAsync(ActorId actorId)
    nameWithType: KvsActorStateProvider.actorActivatedAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.actorActivatedAsync(ActorId actorId)
    type: Method
    summary: |-
      <p>指定した id に置き換えます。 アクターのライセンス認証プロセスの一部としてこのメソッドが呼び出されます</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アクティブ化したアクターの id です。 </p>
      return:
        type: 16409f84
        description: <p>表す非同期のタスク<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブ化通知の処理です。 </p>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: actorActivatedAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.actorActivatedAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.actorActivatedAsync(ActorId actorId)
    type: Method
    summary: |-
      <p>指定した id に置き換えます。 アクターのライセンス認証プロセスの一部としてこのメソッドが呼び出されます</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アクティブ化したアクターの id です。 </p>
      return:
        type: 16409f84
        description: <p>表す非同期のタスク<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブ化通知の処理です。 </p>
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。 アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。 </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。 </p>
    syntax:
      content: public interface Actor
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.loadStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'loadStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'KvsActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    fullName: 'public<T> CompletableFuture<T> microsoft.servicefabric.actors.KvsActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p>指定された状態の名前に関連付けられているアクターの状態を読み込みます。</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アクティブ化したアクターの id です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>StateName です。 </p>
      return:
        type: 6d056e8b
        description: <p>非同期ロード操作を表すタスク。 TResult のパラメーターの値には、特定の状態名に関連付けられているアクター状態の値が含まれています。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'loadStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    fullName: 'public<T> CompletableFuture<T> microsoft.servicefabric.actors.VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p>指定された状態の名前に関連付けられているアクターの状態を読み込みます。</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アクティブ化したアクターの id です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>StateName です。 </p>
      return:
        type: 6d056e8b
        description: <p>非同期ロード操作を表すタスク。 TResult のパラメーターの値には、特定の状態名に関連付けられているアクター状態の値が含まれています。 </p>
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    nameWithType: 'KvsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    type: Method
    summary: |-
      <p>指定したアクター状態の変更のセットをアトミックに保存します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の変更を保存する対象のアクターの ID です。 </p>
        - id: stateChanges
          type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
          description: <p>状態の変更を保存するコレクション。 </p>
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 状態変更のコレクションには、指定された状態の名前の 1 つの項目を含める必要があります。 保存先に既に存在するか、存在しないアクター状態の更新/削除するアクターの状態を追加しようとしています。 操作は失敗します。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    nameWithType: 'VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    type: Method
    summary: |-
      <p>指定したアクター状態の変更のセットをアトミックに保存します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の変更を保存する対象のアクターの ID です。 </p>
        - id: stateChanges
          type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
          description: <p>状態の変更を保存するコレクション。 </p>
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 状態変更のコレクションには、指定された状態の名前の 1 つの項目を含める必要があります。 保存先に既に存在するか、存在しないアクター状態の更新/削除するアクターの状態を追加しようとしています。 操作は失敗します。 </p>
  - uid: microsoft.servicefabric.actors._actor_state_change
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_change.yml
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: microsoft.servicefabric.actors.ActorStateChange
    type: Class
    summary: <p>表しますが、指定された状態の名前を持つアクター状態に変わります。 </p>
    syntax:
      content: public class ActorStateChange
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.containsStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'containsStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'KvsActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.actors.KvsActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p>アクター状態プロバイダーに指定した状態の名前を持つ、アクター状態が含まれているかどうかをチェックします。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の有無を確認する対象のアクターの ID です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>有無を確認するアクター状態の名前です。 </p>
      return:
        type: 7e53ac82
        description: <p>非同期チェック操作を表すタスク。 TResult パラメーターの値は、指定した名前の状態には、それ以外の場合の false が存在する場合は true です。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'containsStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p>アクター状態プロバイダーに指定した状態の名前を持つ、アクター状態が含まれているかどうかをチェックします。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態の有無を確認する対象のアクターの ID です。 </p>
        - id: stateName
          type: '26831127'
          description: <p>有無を確認するアクター状態の名前です。 </p>
      return:
        type: 7e53ac82
        description: <p>非同期チェック操作を表すタスク。 TResult パラメーターの値は、指定した名前の状態には、それ以外の場合の false が存在する場合は true です。 </p>
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider.removeActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: removeActorAsync(ActorId actorId)
    nameWithType: KvsActorStateProvider.removeActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.removeActorAsync(ActorId actorId)
    type: Method
    summary: |-
      <p>すべての既存の状態と指定されたアクターにアトミックに関連付けられている通知を削除します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態を削除するアクターの ID です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: removeActorAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.removeActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.removeActorAsync(ActorId actorId)
    type: Method
    summary: |-
      <p>すべての既存の状態と指定されたアクターにアトミックに関連付けられている通知を削除します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>状態を削除するアクターの ID です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider.enumerateStateNamesAsync(ActorId)
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: enumerateStateNamesAsync(ActorId actorId)
    nameWithType: KvsActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.KvsActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    type: Method
    summary: "<p>指定されたアクターに関連付けられているすべての状態名の列挙可能なが作成されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>アクター状態プロバイダーから返された列挙子に安全に読み取りと同時に使用し、状態プロバイダーに書き込みます。 状態プロバイダーのスナップショットの一貫したビューを表します。 </p>"
    syntax:
      content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>列挙可能なを作成する対象のアクターの ID です。 </p>
      return:
        type: d20512af
        description: <p>非同期の列挙操作を表すタスク。 TResult パラメーターの値は、指定されたアクターに関連付けられているすべての州名の列挙です。 </p>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: enumerateStateNamesAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    type: Method
    summary: "<p>指定されたアクターに関連付けられているすべての状態名の列挙可能なが作成されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>アクター状態プロバイダーから返された列挙子に安全に読み取りと同時に使用し、状態プロバイダーに書き込みます。 状態プロバイダーのスナップショットの一貫したビューを表します。 </p>"
    syntax:
      content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>列挙可能なを作成する対象のアクターの ID です。 </p>
      return:
        type: d20512af
        description: <p>非同期の列挙操作を表すタスク。 TResult パラメーターの値は、指定されたアクターに関連付けられているすべての州名の列挙です。 </p>
  - uid: microsoft.servicefabric.actors._paged_result
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._paged_result.yml
    name: PagedResult<T>
    nameWithType: PagedResult<T>
    fullName: microsoft.servicefabric.actors.PagedResult<T>
    type: Class
    summary: |-
      <p>アクター クエリの呼び出しの結果を表します。</p>
      <p></p>
    syntax:
      content: public class PagedResult<T>
      typeParameters:
        - type: 8ce1ecb9
          description: <p>このクエリ結果に含まれる項目の種類。 </p>
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.getActorsAsync(int,ContinuationToken)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    nameWithType: 'KvsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    fullName: 'CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.KvsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    type: Method
    summary: "<p>状態プロバイダーから ActorIds を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b> </p>"
    syntax:
      content: 'public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
      parameters:
        - id: numItemsToReturn
          type: f75371fa
          description: <p>返される要求された項目の数。 </p>
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: <p>クエリから結果を開始する継続トークンです。 継続トークンの null 値は、開始、先頭の値の形式を返すことを意味します。 </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
        description: <p>サーバーへの呼び出しの非同期操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync(int,ContinuationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    nameWithType: 'VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    fullName: 'CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    type: Method
    summary: "<p>状態プロバイダーから ActorIds を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b> </p>"
    syntax:
      content: 'public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
      parameters:
        - id: itemsCount
          type: f75371fa
          description: <p>返される要求された項目の数。 </p>
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: <p>クエリから結果を開始する継続トークンです。 継続トークンの null 値は、開始、先頭の値の形式を返すことを意味します。 </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
        description: <p>サーバーへの呼び出しの非同期操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._continuation_token
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._continuation_token.yml
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: microsoft.servicefabric.actors.ContinuationToken
    type: Class
    summary: "<p>クエリ操作の継続トークンを表します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>メソッドを使用して結果のセットの一部を返す可能性があります、 <xref uid=\"microsoft.servicefabric.actors._paged_result\" data-throw-if-not-resolved=\"false\">PagedResult</xref>オブジェクトが使用可能な結果の次のセットを返す、後続の呼び出しで使用できるオブジェクトにも継続トークンを返します。 </p>"
    syntax:
      content: public class ContinuationToken
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    nameWithType: 'KvsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    type: Method
    summary: |-
      <p>指定されたアクター アラームを保存します。 指定した名前のアクター アラームが存在しない場合は、それ以外の場合と同じ名前のアクター アラームを既存のアクター アラームが更新を追加します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを保存する対象のアクターの ID です。 </p>
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アラームを保存します。 </p>"
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    nameWithType: 'VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    type: Method
    summary: |-
      <p>指定されたアクター アラームを保存します。 指定した名前のアクター アラームが存在しない場合は、それ以外の場合と同じ名前のアクター アラームを既存のアクター アラームが更新を追加します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを保存する対象のアクターの ID です。 </p>
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アラームを保存します。 </p>"
      return:
        type: 16409f84
        description: <p>非同期の保存操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._actor_reminder
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder.yml
    name: ActorReminder
    nameWithType: ActorReminder
    fullName: microsoft.servicefabric.actors.ActorReminder
    type: Interface
    summary: <p>アラームの設定をカプセル化、<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref></p>
    syntax:
      content: public interface ActorReminder
  - uid: 'microsoft.servicefabric.actors._kvs_actor_state_provider.deleteReminderAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: 'deleteReminderAsync(ActorId actorId, String reminderName)'
    nameWithType: 'KvsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.KvsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    type: Method
    summary: |-
      <p>存在する場合は、指定されたアクター アラームを削除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを削除するアクターの ID です。 </p>
        - id: reminderName
          type: '26831127'
          description: <p>削除するアラームの名前です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'deleteReminderAsync(ActorId actorId, String reminderName)'
    nameWithType: 'VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    type: Method
    summary: |-
      <p>存在する場合は、指定されたアクター アラームを削除します。</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p>アラームを削除するアクターの ID です。 </p>
        - id: reminderName
          type: '26831127'
          description: <p>削除するアラームの名前です。 </p>
      return:
        type: 16409f84
        description: <p>非同期の削除操作を表すタスク。 </p>
  - uid: microsoft.servicefabric.actors._actor_reminder_collection
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder_collection.yml
    name: ActorReminderCollection
    nameWithType: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.ActorReminderCollection
    type: Interface
    summary: <p>キャプチャ<xref uid="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref>アクターの </p>
    syntax:
      content: public interface ActorReminderCollection
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider.loadRemindersAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._kvs_actor_state_provider
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: loadRemindersAsync(CancellationToken cancellationToken)
    nameWithType: KvsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.KvsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>アクター状態プロバイダーに含まれているすべてのアラームを読み込みます。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
        description: <p>非同期ロード操作を表すタスク。 TResult パラメーターの値は、アクター状態プロバイダーに含まれているすべてのアクター アラームのコレクションです。 </p>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: loadRemindersAsync(CancellationToken cancellationToken)
    nameWithType: VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>アクター状態プロバイダーに含まれているすべてのアラームを読み込みます。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。 </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
        description: <p>非同期ロード操作を表すタスク。 TResult パラメーターの値は、アクター状態プロバイダーに含まれているすべてのアクター アラームのコレクションです。 </p>
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。 インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。 キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。 取り消しを開始するトークンを使用することはできません。 所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。 通知を受信するオブジェクトは、適切な方法で応答できます。 </p>'
    syntax:
      content: public class CancellationToken