### YamlMime:ManagedReference
items:
  - uid: system.fabric._health_client
    id: _health_client
    parent: system.fabric
    children:
      - system.fabric._health_client.close()
      - system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription)
      - 'system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription,Duration)'
      - system.fabric._health_client.getApplicationHealthAsync(URI)
      - 'system.fabric._health_client.getApplicationHealthAsync(URI,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getApplicationHealthAsync(URI,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getApplicationHealthAsync(URI,Duration)'
      - system.fabric._health_client.getClusterHealthAsync()
      - system.fabric._health_client.getClusterHealthAsync(ClusterHealthPolicy)
      - 'system.fabric._health_client.getClusterHealthAsync(ClusterHealthPolicy,Duration)'
      - system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)
      - 'system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription,Duration)'
      - system.fabric._health_client.getClusterHealthAsync(Duration)
      - system.fabric._health_client.getClusterHealthChunkAsync()
      - system.fabric._health_client.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription)
      - 'system.fabric._health_client.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription,Duration)'
      - system.fabric._health_client.getClusterHealthChunkAsync(Duration)
      - system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)
      - 'system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription,Duration)'
      - 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String)'
      - 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,Duration)'
      - system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription)
      - 'system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription,Duration)'
      - 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String)'
      - 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,Duration)'
      - system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)
      - 'system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription,Duration)'
      - system.fabric._health_client.getNodeHealthAsync(String)
      - 'system.fabric._health_client.getNodeHealthAsync(String,ClusterHealthPolicy)'
      - 'system.fabric._health_client.getNodeHealthAsync(String,ClusterHealthPolicy,Duration)'
      - 'system.fabric._health_client.getNodeHealthAsync(String,Duration)'
      - system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)
      - 'system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription,Duration)'
      - system.fabric._health_client.getPartitionHealthAsync(UUID)
      - 'system.fabric._health_client.getPartitionHealthAsync(UUID,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getPartitionHealthAsync(UUID,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getPartitionHealthAsync(UUID,Duration)'
      - system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)
      - 'system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription,Duration)'
      - 'system.fabric._health_client.getReplicaHealthAsync(UUID,long)'
      - 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,Duration)'
      - system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)
      - 'system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription,Duration)'
      - system.fabric._health_client.getServiceHealthAsync(URI)
      - 'system.fabric._health_client.getServiceHealthAsync(URI,ApplicationHealthPolicy)'
      - 'system.fabric._health_client.getServiceHealthAsync(URI,ApplicationHealthPolicy,Duration)'
      - 'system.fabric._health_client.getServiceHealthAsync(URI,Duration)'
      - system.fabric._health_client.reportHealth(HealthReport)
    href: system.fabric._health_client.yml
    langs:
      - java
    name: HealthClient
    nameWithType: HealthClient
    fullName: system.fabric.HealthClient
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 38
    package: system.fabric
    summary: '<p><span data-ttu-id="bd891-101">レポートおよびクエリの状態などの操作を関連する正常性の実行に使用される正常性のクライアントを表します。</span><span class="sxs-lookup"><span data-stu-id="bd891-101">Represents the health client used to perform health related operations, like report and query health.</span></span> </p>'
    syntax:
      content: public class HealthClient
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: system.fabric._health_client.close()
    id: close()
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: close()
    nameWithType: HealthClient.close()
    fullName: void system.fabric.HealthClient.close()
    overload: system.fabric._health_client.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1322
    package: system.fabric
    syntax:
      content: public void close()
  - uid: system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription)
    id: getApplicationHealthAsync(ApplicationHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 435
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-102">非同期的に、指定した Service Fabric アプリケーションの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-102">Asynchronously gets the health of the specified Service Fabric application by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._application_health_query_description
          description: <p><span data-ttu-id="bd891-103">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-103">The query description.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-104">指定した Service Fabric アプリケーションの正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-104">The health reports of the specified Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription,Duration)'
    id: 'getApplicationHealthAsync(ApplicationHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 456
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-105">非同期的に、指定した Service Fabric アプリケーションの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-105">Asynchronously gets the health of the specified Service Fabric application by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(ApplicationHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._application_health_query_description
          description: <p><span data-ttu-id="bd891-106">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-106">The query description.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-107">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-107">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-108">指定した Service Fabric アプリケーションの正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-108">The health reports of the specified Service Fabric application.</span></span> </p>
  - uid: system.fabric._health_client.getApplicationHealthAsync(URI)
    id: getApplicationHealthAsync(URI)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getApplicationHealthAsync(URI applicationName)
    nameWithType: HealthClient.getApplicationHealthAsync(URI applicationName)
    fullName: CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(URI applicationName)
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 366
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-109">指定した Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-109">Asynchronously gets the health of the specified Service Fabric application.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(URI applicationName)
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-110">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-110">The URI of the Service Fabric application.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-111">指定した Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-111">The health of the specified Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getApplicationHealthAsync(URI,ApplicationHealthPolicy)'
    id: 'getApplicationHealthAsync(URI,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 381
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-112">非同期的に、指定した Service Fabric アプリケーションの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-112">Asynchronously gets the health of the specified Service Fabric application by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-113">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-113">The URI of the Service Fabric application.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-114">アプリケーションの正常性ポリシーは、アプリケーションを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-114">The application health policy used to evaluate the application.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-115">指定した Service Fabric アプリケーションの正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-115">The health reports of the specified Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getApplicationHealthAsync(URI,ApplicationHealthPolicy,Duration)'
    id: 'getApplicationHealthAsync(URI,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 418
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-116">非同期的に、指定した Service Fabric アプリケーションの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-116">Asynchronously gets the health of the specified Service Fabric application by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(URI applicationName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-117">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-117">The URI of the Service Fabric application.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-118">アプリケーションの正常性ポリシーはアプリケーションの正常性を評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-118">The application health policy used to evaluate the application health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-119">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-119">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-120">指定した Service Fabric アプリケーションの正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-120">The health reports of the specified Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getApplicationHealthAsync(URI,Duration)'
    id: 'getApplicationHealthAsync(URI,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getApplicationHealthAsync(URI applicationName, Duration timeout)'
    nameWithType: 'HealthClient.getApplicationHealthAsync(URI applicationName, Duration timeout)'
    fullName: 'CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(URI applicationName, Duration timeout)'
    overload: system.fabric._health_client.getApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 400
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-121">非同期的に、指定した Service Fabric アプリケーションの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-121">Asynchronously gets the health of the specified Service Fabric application by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(URI applicationName, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-122">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-122">The URI of the Service Fabric application.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-123">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-123">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-124">指定した Service Fabric アプリケーションの正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-124">The health reports of the specified Service Fabric application.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthAsync()
    id: getClusterHealthAsync()
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthAsync()
    nameWithType: HealthClient.getClusterHealthAsync()
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync()
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 165
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-125">Service Fabric クラスターの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-125">Asynchronously gets the health of a Service Fabric cluster.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ClusterHealth> getClusterHealthAsync()
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-126">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-126">The health of a Service Fabric cluster.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthAsync(ClusterHealthPolicy)
    id: getClusterHealthAsync(ClusterHealthPolicy)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthAsync(ClusterHealthPolicy healthPolicy)
    nameWithType: HealthClient.getClusterHealthAsync(ClusterHealthPolicy healthPolicy)
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthPolicy healthPolicy)
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 179
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-127">指定したポリシーを使用して評価する、Service Fabric クラスターの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-127">Asynchronously gets the health of a Service Fabric cluster, evaluating it using the specified policy.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthPolicy healthPolicy)
      parameters:
        - id: healthPolicy
          type: system.fabric._cluster_health_policy
          description: <p><span data-ttu-id="bd891-128">クラスターの正常性ポリシーはクラスターの正常性を評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-128">The cluster health policy used to evaluate cluster health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-129">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-129">The health of a Service Fabric cluster.</span></span> </p>
  - uid: 'system.fabric._health_client.getClusterHealthAsync(ClusterHealthPolicy,Duration)'
    id: 'getClusterHealthAsync(ClusterHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getClusterHealthAsync(ClusterHealthPolicy healthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getClusterHealthAsync(ClusterHealthPolicy healthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthPolicy healthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 210
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-130">非同期的に Service Fabric クラスターの正常性の指定した正常性ポリシー、タイムアウトと取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-130">Asynchronously gets the health of a Service Fabric cluster by using the specified health policy, timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthPolicy healthPolicy, Duration timeout)'
      parameters:
        - id: healthPolicy
          type: system.fabric._cluster_health_policy
          description: <p><span data-ttu-id="bd891-131">クラスターの正常性ポリシーはクラスターの正常性を評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-131">The cluster health policy used to evaluate cluster health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-132">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-132">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-133">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-133">The health of a Service Fabric cluster.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)
    id: getClusterHealthAsync(ClusterHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 224
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-134">非同期的にクエリの説明を使用して、Service Fabric クラスターの正常性を取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-134">Asynchronously gets the health of a Service Fabric cluster by using a query description.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._cluster_health_query_description
          description: '<p><span data-ttu-id="bd891-135">正常性ポリシーのようにクエリ パラメーターを定義するクエリの説明がなどにフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="bd891-135">The query description that defined query parameters like health policies, filters etc.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-136">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-136">The health of a Service Fabric cluster.</span></span> </p>
  - uid: 'system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription,Duration)'
    id: 'getClusterHealthAsync(ClusterHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getClusterHealthAsync(ClusterHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 244
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-137">非同期的に Service Fabric クラスターの正常性クエリの説明、タイムアウトおよび取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-137">Asynchronously gets the health of a Service Fabric cluster by using a query description, a timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._cluster_health_query_description
          description: '<p><span data-ttu-id="bd891-138">正常性ポリシーのようにクエリ パラメーターを定義するクエリの説明がなどにフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="bd891-138">The query description that defined query parameters like health policies, filters etc.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-139">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-139">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-140">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-140">The health of a Service Fabric cluster.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthAsync(Duration)
    id: getClusterHealthAsync(Duration)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthAsync(Duration timeout)
    nameWithType: HealthClient.getClusterHealthAsync(Duration timeout)
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(Duration timeout)
    overload: system.fabric._health_client.getClusterHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 195
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-141">非同期的に Service Fabric クラスターの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-141">Asynchronously gets the health of a Service Fabric cluster by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ClusterHealth> getClusterHealthAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-142">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-142">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p><span data-ttu-id="bd891-143">Service Fabric クラスターの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-143">The health of a Service Fabric cluster.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthChunkAsync()
    id: getClusterHealthChunkAsync()
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthChunkAsync()
    nameWithType: HealthClient.getClusterHealthChunkAsync()
    fullName: CompletableFuture<ClusterHealthChunk> system.fabric.HealthClient.getClusterHealthChunkAsync()
    overload: system.fabric._health_client.getClusterHealthChunkAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1060
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bd891-144\">Service Fabric クラスターの正常性を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-144\">Gets the health of a Service Fabric cluster.</span></span></p>\n<p><span data-ttu-id=\"bd891-145\">\r\n\r\n  <b>注釈:</b>クラスター内のすべてのエンティティに基づく集計されたクラスターの正常性状態を計算します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-145\">\r\n\r\n  <b>Remarks:</b>The cluster aggregated health state is computed based on all entities in the cluster.</span></span> <span data-ttu-id=\"bd891-146\">コンソール アプリケーションは、フィルターが指定されていないため、結果で、子は含まれません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-146\">No children are included in the results, because no filters are specified.</span></span> </p>"
    syntax:
      content: public CompletableFuture<ClusterHealthChunk> getClusterHealthChunkAsync()
      return:
        type: 9cdf14d0system.fabric.health._cluster_health_chunka08ddfce
        description: <p><span data-ttu-id="bd891-147">クラスターの正常性を表すヘルス チャンクです。</span><span class="sxs-lookup"><span data-stu-id="bd891-147">The health chunk representing the cluster health.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription)
    id: getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription)
    nameWithType: HealthClient.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription)
    fullName: CompletableFuture<ClusterHealthChunk> system.fabric.HealthClient.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription)
    overload: system.fabric._health_client.getClusterHealthChunkAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1097
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bd891-148\">クエリの説明で要求されるとおり、クラスターのエンティティを含む、Service Fabric クラスターの正常性を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-148\">Gets the health of a Service Fabric cluster, including cluster entities as requested in the query description.</span></span></p>\n<p><span data-ttu-id=\"bd891-149\">\r\n\r\n  <b>注釈:</b>クラスター内のすべてのエンティティに基づく集計されたクラスターの正常性状態を計算します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-149\">\r\n\r\n  <b>Remarks:</b>The cluster aggregated health state is computed based on all entities in the cluster.</span></span> <span data-ttu-id=\"bd891-150\">結果には、入力クエリの説明 (該当する場合) からのフィルターを適用する子のみが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-150\">Only the children that respect the filters from the input query description (if any) are included in the results.</span></span> </p>"
    syntax:
      content: public CompletableFuture<ClusterHealthChunk> getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._cluster_health_chunk_query_description
          description: <p><span data-ttu-id="bd891-151">正常性評価を実行する方法とにどのようなエンティティを含めるかを定義するクエリの説明、 <xref uid="system.fabric.health._cluster_health_chunk" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealthChunk</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-151">The query description that defines how health evaluation should be performed and what entities should be included in the <xref uid="system.fabric.health._cluster_health_chunk" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealthChunk</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_health_chunka08ddfce
        description: <p><span data-ttu-id="bd891-152">クラスターの正常性を表すヘルス チャンクです。</span><span class="sxs-lookup"><span data-stu-id="bd891-152">The health chunk representing the cluster health.</span></span> </p>
  - uid: 'system.fabric._health_client.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription,Duration)'
    id: 'getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<ClusterHealthChunk> system.fabric.HealthClient.getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getClusterHealthChunkAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1120
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bd891-153\">クエリの説明で要求されるとおり、クラスターのエンティティを含む、Service Fabric クラスターの正常性を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-153\">Gets the health of a Service Fabric cluster, including cluster entities as requested in the query description.</span></span></p>\n<p><span data-ttu-id=\"bd891-154\">\r\n\r\n  <b>注釈:</b>クラスター内のすべてのエンティティに基づく集計されたクラスターの正常性状態を計算します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-154\">\r\n\r\n  <b>Remarks:</b>The cluster aggregated health state is computed based on all entities in the cluster.</span></span> <span data-ttu-id=\"bd891-155\">結果には、入力クエリの説明 (該当する場合) からのフィルターを適用する子のみが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-155\">Only the children that respect the filters from the input query description (if any) are included in the results.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<ClusterHealthChunk> getClusterHealthChunkAsync(ClusterHealthChunkQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._cluster_health_chunk_query_description
          description: <p><span data-ttu-id="bd891-156">正常性評価を実行する方法とにどのようなエンティティを含めるかを定義するクエリの説明、 <xref uid="system.fabric.health._cluster_health_chunk" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealthChunk</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-156">The query description that defines how health evaluation should be performed and what entities should be included in the <xref uid="system.fabric.health._cluster_health_chunk" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealthChunk</xref>.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-157">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-157">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref></span></span></p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_health_chunka08ddfce
        description: <p><span data-ttu-id="bd891-158">クラスターの正常性を表すヘルス チャンクです。</span><span class="sxs-lookup"><span data-stu-id="bd891-158">The health chunk representing the cluster health.</span></span> </p>
  - uid: system.fabric._health_client.getClusterHealthChunkAsync(Duration)
    id: getClusterHealthChunkAsync(Duration)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getClusterHealthChunkAsync(Duration timeout)
    nameWithType: HealthClient.getClusterHealthChunkAsync(Duration timeout)
    fullName: CompletableFuture<ClusterHealthChunk> system.fabric.HealthClient.getClusterHealthChunkAsync(Duration timeout)
    overload: system.fabric._health_client.getClusterHealthChunkAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1079
    package: system.fabric
    summary: "<p><span data-ttu-id=\"bd891-159\">Service Fabric クラスターの正常性を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-159\">Gets the health of a Service Fabric cluster.</span></span></p>\n<p><span data-ttu-id=\"bd891-160\">\r\n\r\n  <b>注釈:</b>クラスター内のすべてのエンティティに基づく集計されたクラスターの正常性状態を計算します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-160\">\r\n\r\n  <b>Remarks:</b>The cluster aggregated health state is computed based on all entities in the cluster.</span></span> <span data-ttu-id=\"bd891-161\">コンソール アプリケーションは、フィルターが指定されていないため、結果で、子は含まれません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-161\">No children are included in the results, because no filters are specified.</span></span> </p>"
    syntax:
      content: public CompletableFuture<ClusterHealthChunk> getClusterHealthChunkAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-162">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-162">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref></span></span></p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_health_chunka08ddfce
        description: <p><span data-ttu-id="bd891-163">クラスターの正常性を表すヘルス チャンクです。</span><span class="sxs-lookup"><span data-stu-id="bd891-163">The health chunk representing the cluster health.</span></span> </p>
  - uid: system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)
    id: getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
    fullName: CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 884
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-164">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-164">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._deployed_application_health_query_description
          description: <p><span data-ttu-id="bd891-165">クエリの説明</span><span class="sxs-lookup"><span data-stu-id="bd891-165">The query description</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-166">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-166">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription,Duration)'
    id: 'getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 905
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-167">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-167">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._deployed_application_health_query_description
          description: <p><span data-ttu-id="bd891-168">クエリの説明</span><span class="sxs-lookup"><span data-stu-id="bd891-168">The query description</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-169">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-169">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-170">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-170">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String)'
    id: 'getDeployedApplicationHealthAsync(URI,String)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedApplicationHealthAsync(URI applicationName, String nodeName)'
    nameWithType: 'HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName)'
    fullName: 'CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName)'
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 798
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-171">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-171">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(URI applicationName, String nodeName)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-172">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-172">The URI of the Service Fabric application.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-173">Service Fabric アプリケーションの配置先となるノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-173">The node name where the Service Fabric application is deployed.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-174">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-174">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy)'
    id: 'getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 818
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-175">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-175">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-176">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-176">The URI of the Service Fabric application.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-177">Service Fabric アプリケーションの配置先となるノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-177">The node name where the Service Fabric application is deployed.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-178">アプリケーションの正常性ポリシーはエンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-178">The application health policy used to evaluate entity health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-179">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-179">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy,Duration)'
    id: 'getDeployedApplicationHealthAsync(URI,String,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 865
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-180">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-180">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(URI applicationName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-181">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-181">The URI of the Service Fabric application.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-182">Service Fabric アプリケーションの配置先となるノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-182">The node name where the Service Fabric application is deployed.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-183">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-183">The application health policy used to evaluate the entity health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-184">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-184">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-185">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-185">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedApplicationHealthAsync(URI,String,Duration)'
    id: 'getDeployedApplicationHealthAsync(URI,String,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedApplicationHealthAsync(URI applicationName, String nodeName, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, Duration timeout)'
    fullName: 'CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync(URI applicationName, String nodeName, Duration timeout)'
    overload: system.fabric._health_client.getDeployedApplicationHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 841
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-186">指定されたノードで、展開済みの Service Fabric アプリケーションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-186">Asynchronously gets the health of a deployed Service Fabric application on the specified node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedApplicationHealth> getDeployedApplicationHealthAsync(URI applicationName, String nodeName, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-187">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-187">The URI of the Service Fabric application.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-188">Service Fabric アプリケーションの配置先となるノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-188">The node name where the Service Fabric application is deployed.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-189">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-189">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
        description: <p><span data-ttu-id="bd891-190">展開済みの Service Fabric アプリケーションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-190">The health of a deployed Service Fabric application.</span></span> </p>
  - uid: system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription)
    id: getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription)
    fullName: CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1019
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-191">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-191">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._deployed_service_package_health_query_description
          description: <p><span data-ttu-id="bd891-192">クエリの説明</span><span class="sxs-lookup"><span data-stu-id="bd891-192">The query description</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-193">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-193">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription,Duration)'
    id: 'getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1039
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-194">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-194">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._deployed_service_package_health_query_description
          description: <p><span data-ttu-id="bd891-195">クエリの説明</span><span class="sxs-lookup"><span data-stu-id="bd891-195">The query description</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-196">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-196">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-197">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-197">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String)'
    id: 'getDeployedServicePackageHealthAsync(URI,String,String)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName)'
    nameWithType: 'HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName)'
    fullName: 'CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName)'
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 927
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-198">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-198">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-199">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-199">The URI of the Service Fabric application.</span></span> </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-200">サービスの名前は、この Service Fabric サービスのファイルをマニフェストします。</span><span class="sxs-lookup"><span data-stu-id="bd891-200">The name of the service manifest file for this Service Fabric service.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-201">Service Fabric サービスが展開されているノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-201">The name of the node that the Service Fabric service was deployed to.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-202">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-202">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy)'
    id: 'getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 949
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-203">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-203">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-204">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-204">The URI of the Service Fabric application.</span></span> </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-205">サービスの名前は、この Service Fabric サービスのファイルをマニフェストします。</span><span class="sxs-lookup"><span data-stu-id="bd891-205">The name of the service manifest file for this Service Fabric service.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-206">Service Fabric サービスが展開されているノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-206">The name of the node that the Service Fabric service was deployed to.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-207">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-207">The application health policy used to evaluate the entity health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-208">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-208">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy,Duration)'
    id: 'getDeployedServicePackageHealthAsync(URI,String,String,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 1000
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-209">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-209">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-210">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-210">The URI of the Service Fabric application.</span></span> </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-211">サービスの名前は、この Service Fabric サービスのファイルをマニフェストします。</span><span class="sxs-lookup"><span data-stu-id="bd891-211">The name of the service manifest file for this Service Fabric service.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-212">Service Fabric サービスが展開されているノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-212">The name of the node that the Service Fabric service was deployed to.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-213">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-213">The application health policy used to evaluate the entity health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-214">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span><span class="sxs-lookup"><span data-stu-id="bd891-214">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>..</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-215">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-215">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: 'system.fabric._health_client.getDeployedServicePackageHealthAsync(URI,String,String,Duration)'
    id: 'getDeployedServicePackageHealthAsync(URI,String,String,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, Duration timeout)'
    nameWithType: 'HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, Duration timeout)'
    fullName: 'CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, Duration timeout)'
    overload: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 974
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-216">展開済みの Service Fabric サービス パッケージの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-216">Asynchronously gets the health of a deployed Service Fabric service package.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<DeployedServicePackageHealth> getDeployedServicePackageHealthAsync(URI applicationName, String serviceManifestName, String nodeName, Duration timeout)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-217">Service Fabric アプリケーションの URI。</span><span class="sxs-lookup"><span data-stu-id="bd891-217">The URI of the Service Fabric application.</span></span> </p>
        - id: serviceManifestName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-218">サービスの名前は、この Service Fabric サービスのファイルをマニフェストします。</span><span class="sxs-lookup"><span data-stu-id="bd891-218">The name of the service manifest file for this Service Fabric service.</span></span> </p>
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-219">Service Fabric サービスが展開されているノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-219">The name of the node that the Service Fabric service was deployed to.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-220">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span><span class="sxs-lookup"><span data-stu-id="bd891-220">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>..</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
        description: <p><span data-ttu-id="bd891-221">展開済みの Service Fabric サービス パッケージの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-221">The health of a deployed Service Fabric service package.</span></span> </p>
  - uid: system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)
    id: getNodeHealthAsync(NodeHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    fullName: CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 328
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-222">非同期的に Service Fabric ノードの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-222">Asynchronously gets the health of a Service Fabric node by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<NodeHealth> getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._node_health_query_description
          description: '<p><span data-ttu-id="bd891-223">正常性ポリシーのようにパラメーターを定義するクエリの説明がなどにフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="bd891-223">The query description that defines parameters like health policy, filters etc.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-224">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-224">The health of a Service Fabric node.</span></span> </p>
  - uid: 'system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription,Duration)'
    id: 'getNodeHealthAsync(NodeHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getNodeHealthAsync(NodeHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 348
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-225">非同期的に Service Fabric ノードの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-225">Asynchronously gets the health of a Service Fabric node by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<NodeHealth> getNodeHealthAsync(NodeHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._node_health_query_description
          description: '<p><span data-ttu-id="bd891-226">正常性ポリシーのようにパラメーターを定義するクエリの説明がなどにフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="bd891-226">The query description that defines parameters like health policy, filters etc.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-227">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-227">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-228">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-228">The health of a Service Fabric node.</span></span> </p>
  - uid: system.fabric._health_client.getNodeHealthAsync(String)
    id: getNodeHealthAsync(String)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getNodeHealthAsync(String nodeName)
    nameWithType: HealthClient.getNodeHealthAsync(String nodeName)
    fullName: CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(String nodeName)
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 262
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-229">Service Fabric ノードの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-229">Asynchronously gets the health of a Service Fabric node.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<NodeHealth> getNodeHealthAsync(String nodeName)
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-230">Service Fabric ノード名です。</span><span class="sxs-lookup"><span data-stu-id="bd891-230">The Service Fabric node name.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-231">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-231">The health of a Service Fabric node.</span></span> </p>
  - uid: 'system.fabric._health_client.getNodeHealthAsync(String,ClusterHealthPolicy)'
    id: 'getNodeHealthAsync(String,ClusterHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy)'
    nameWithType: 'HealthClient.getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy)'
    fullName: 'CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy)'
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 276
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-232">Service Fabric ノードの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-232">Asynchronously gets the health of a Service Fabric node.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<NodeHealth> getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-233">Service Fabric ノード名です。</span><span class="sxs-lookup"><span data-stu-id="bd891-233">The Service Fabric node name.</span></span> </p>
        - id: healthPolicy
          type: system.fabric._cluster_health_policy
          description: <p><span data-ttu-id="bd891-234">クラスターの正常性ポリシーはノードの正常性を評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-234">The cluster health policy used to evaluate the node health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-235">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-235">The health of a Service Fabric node.</span></span> </p>
  - uid: 'system.fabric._health_client.getNodeHealthAsync(String,ClusterHealthPolicy,Duration)'
    id: 'getNodeHealthAsync(String,ClusterHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 311
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-236">非同期的に Service Fabric ノードの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-236">Asynchronously gets the health of a Service Fabric node by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<NodeHealth> getNodeHealthAsync(String nodeName, ClusterHealthPolicy healthPolicy, Duration timeout)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-237">Service Fabric ノードです。</span><span class="sxs-lookup"><span data-stu-id="bd891-237">The Service Fabric node.</span></span> </p>
        - id: healthPolicy
          type: system.fabric._cluster_health_policy
          description: <p><span data-ttu-id="bd891-238">クラスターの正常性ポリシーはノードの正常性を評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-238">The cluster health policy used to evaluate the node health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-239">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-239">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-240">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-240">The health of a Service Fabric node.</span></span> </p>
  - uid: 'system.fabric._health_client.getNodeHealthAsync(String,Duration)'
    id: 'getNodeHealthAsync(String,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getNodeHealthAsync(String nodeName, Duration timeout)'
    nameWithType: 'HealthClient.getNodeHealthAsync(String nodeName, Duration timeout)'
    fullName: 'CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(String nodeName, Duration timeout)'
    overload: system.fabric._health_client.getNodeHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 293
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-241">非同期的に Service Fabric ノードの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-241">Asynchronously gets the health of a Service Fabric node by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<NodeHealth> getNodeHealthAsync(String nodeName, Duration timeout)'
      parameters:
        - id: nodeName
          type: '26831127'
          description: <p><span data-ttu-id="bd891-242">Service Fabric ノードです。</span><span class="sxs-lookup"><span data-stu-id="bd891-242">The Service Fabric node.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-243">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-243">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p><span data-ttu-id="bd891-244">Service Fabric ノードの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-244">The health of a Service Fabric node.</span></span> </p>
  - uid: system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)
    id: getPartitionHealthAsync(PartitionHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    fullName: CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 645
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-245">指定したタイムアウト時間を使用して、Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-245">Asynchronously gets the health of a Service Fabric partition by using the specified timeout.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<PartitionHealth> getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._partition_health_query_description
          description: <p><span data-ttu-id="bd891-246">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-246">The query description.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-247">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-247">The health of a Service Fabric partition.</span></span> </p>
  - uid: 'system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription,Duration)'
    id: 'getPartitionHealthAsync(PartitionHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 665
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-248">指定したタイムアウト時間を使用して、Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-248">Asynchronously gets the health of a Service Fabric partition by using the specified timeout.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<PartitionHealth> getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._partition_health_query_description
          description: <p><span data-ttu-id="bd891-249">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-249">The query description.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-250">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-250">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-251">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-251">The health of a Service Fabric partition.</span></span> </p>
  - uid: system.fabric._health_client.getPartitionHealthAsync(UUID)
    id: getPartitionHealthAsync(UUID)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getPartitionHealthAsync(UUID partitionId)
    nameWithType: HealthClient.getPartitionHealthAsync(UUID partitionId)
    fullName: CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(UUID partitionId)
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 580
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-252">Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-252">Asynchronously gets the health of a Service Fabric partition.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<PartitionHealth> getPartitionHealthAsync(UUID partitionId)
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-253">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-253">The ID of the Service Fabric partition.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-254">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-254">The health of a Service Fabric partition.</span></span> </p>
  - uid: 'system.fabric._health_client.getPartitionHealthAsync(UUID,ApplicationHealthPolicy)'
    id: 'getPartitionHealthAsync(UUID,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 594
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-255">Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-255">Asynchronously gets the health of a Service Fabric partition.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<PartitionHealth> getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-256">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-256">The ID of the Service Fabric partition.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-257">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-257">The application health policy used to evaluate the entity health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-258">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-258">The health of a Service Fabric partition.</span></span> </p>
  - uid: 'system.fabric._health_client.getPartitionHealthAsync(UUID,ApplicationHealthPolicy,Duration)'
    id: 'getPartitionHealthAsync(UUID,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 629
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-259">Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-259">Asynchronously gets the health of a Service Fabric partition.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<PartitionHealth> getPartitionHealthAsync(UUID partitionId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-260">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-260">The ID of the Service Fabric partition.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-261">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-261">The application health policy used to evaluate the entity health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-262">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-262">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-263">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-263">The health of a Service Fabric partition.</span></span> </p>
  - uid: 'system.fabric._health_client.getPartitionHealthAsync(UUID,Duration)'
    id: 'getPartitionHealthAsync(UUID,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getPartitionHealthAsync(UUID partitionId, Duration timeout)'
    nameWithType: 'HealthClient.getPartitionHealthAsync(UUID partitionId, Duration timeout)'
    fullName: 'CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(UUID partitionId, Duration timeout)'
    overload: system.fabric._health_client.getPartitionHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 612
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-264">Service Fabric パーティションの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-264">Asynchronously gets the health of a Service Fabric partition.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<PartitionHealth> getPartitionHealthAsync(UUID partitionId, Duration timeout)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-265">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-265">The ID of the Service Fabric partition.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-266">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-266">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p><span data-ttu-id="bd891-267">Service Fabric パーティションの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-267">The health of a Service Fabric partition.</span></span> </p>
  - uid: system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)
    id: getReplicaHealthAsync(ReplicaHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 758
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-268">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-268">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._replica_health_query_description
          description: <p><span data-ttu-id="bd891-269">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-269">The query description.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-270">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-270">The health of a Service Fabric replica.</span></span> </p>
  - uid: 'system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription,Duration)'
    id: 'getReplicaHealthAsync(ReplicaHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 777
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-271">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-271">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(ReplicaHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._replica_health_query_description
          description: <p><span data-ttu-id="bd891-272">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-272">The query description.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-273">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-273">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-274">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-274">The health of a Service Fabric replica.</span></span> </p>
  - uid: 'system.fabric._health_client.getReplicaHealthAsync(UUID,long)'
    id: 'getReplicaHealthAsync(UUID,long)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getReplicaHealthAsync(UUID partitionId, long replicaId)'
    nameWithType: 'HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId)'
    fullName: 'CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId)'
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 685
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-275">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-275">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(UUID partitionId, long replicaId)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-276">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-276">The ID of the Service Fabric partition.</span></span> </p>
        - id: replicaId
          type: 0364520f
          description: <p><span data-ttu-id="bd891-277">Service Fabric レプリカの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-277">The ID of the Service Fabric replica.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-278">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-278">The health of a Service Fabric replica.</span></span> </p>
  - uid: 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy)'
    id: 'getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 701
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-279">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-279">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-280">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-280">The ID of the Service Fabric partition.</span></span> </p>
        - id: replicaId
          type: 0364520f
          description: <p><span data-ttu-id="bd891-281">Service Fabric レプリカの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-281">The ID of the Service Fabric replica.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-282">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-282">The application health policy used to evaluate the entity health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-283">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-283">The health of a Service Fabric replica.</span></span> </p>
  - uid: 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy,Duration)'
    id: 'getReplicaHealthAsync(UUID,long,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 741
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-284">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-284">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(UUID partitionId, long replicaId, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-285">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-285">The ID of the Service Fabric partition.</span></span> </p>
        - id: replicaId
          type: 0364520f
          description: <p><span data-ttu-id="bd891-286">Service Fabric レプリカの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-286">The ID of the Service Fabric replica.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-287">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-287">The application health policy used to evaluate the entity health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-288">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-288">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-289">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-289">The health of a Service Fabric replica.</span></span> </p>
  - uid: 'system.fabric._health_client.getReplicaHealthAsync(UUID,long,Duration)'
    id: 'getReplicaHealthAsync(UUID,long,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getReplicaHealthAsync(UUID partitionId, long replicaId, Duration timeout)'
    nameWithType: 'HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, Duration timeout)'
    fullName: 'CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync(UUID partitionId, long replicaId, Duration timeout)'
    overload: system.fabric._health_client.getReplicaHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 722
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-290">Service Fabric レプリカの正常性を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-290">Asynchronously gets the health of a Service Fabric replica.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ReplicaHealth> getReplicaHealthAsync(UUID partitionId, long replicaId, Duration timeout)'
      parameters:
        - id: partitionId
          type: add9545a
          description: <p><span data-ttu-id="bd891-291">Service Fabric パーティションの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-291">The ID of the Service Fabric partition.</span></span> </p>
        - id: replicaId
          type: 0364520f
          description: <p><span data-ttu-id="bd891-292">Service Fabric レプリカの ID。</span><span class="sxs-lookup"><span data-stu-id="bd891-292">The ID of the Service Fabric replica.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-293">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-293">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._replica_healtha08ddfce
        description: <p><span data-ttu-id="bd891-294">Service Fabric レプリカの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-294">The health of a Service Fabric replica.</span></span> </p>
  - uid: system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)
    id: getServiceHealthAsync(ServiceHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 542
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-295">非同期的に、Service Fabric サービスのヘルス、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-295">Asynchronously gets the health of a Service Fabric service by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ServiceHealth> getServiceHealthAsync(ServiceHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._service_health_query_description
          description: <p><span data-ttu-id="bd891-296">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-296">The query description.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-297">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-297">The health of a Service Fabric service.</span></span> </p>
  - uid: 'system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription,Duration)'
    id: 'getServiceHealthAsync(ServiceHealthQueryDescription,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getServiceHealthAsync(ServiceHealthQueryDescription queryDescription, Duration timeout)'
    nameWithType: 'HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription, Duration timeout)'
    fullName: 'CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(ServiceHealthQueryDescription queryDescription, Duration timeout)'
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 562
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-298">非同期的に、Service Fabric サービスのヘルス、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-298">Asynchronously gets the health of a Service Fabric service by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceHealth> getServiceHealthAsync(ServiceHealthQueryDescription queryDescription, Duration timeout)'
      parameters:
        - id: queryDescription
          type: system.fabric._service_health_query_description
          description: <p><span data-ttu-id="bd891-299">クエリの説明。</span><span class="sxs-lookup"><span data-stu-id="bd891-299">The query description.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-300">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-300">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-301">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-301">The health of a Service Fabric service.</span></span> </p>
  - uid: system.fabric._health_client.getServiceHealthAsync(URI)
    id: getServiceHealthAsync(URI)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: getServiceHealthAsync(URI serviceName)
    nameWithType: HealthClient.getServiceHealthAsync(URI serviceName)
    fullName: CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(URI serviceName)
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 474
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-302">Service Fabric サービスのヘルスを非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-302">Asynchronously gets the health of a Service Fabric service.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ServiceHealth> getServiceHealthAsync(URI serviceName)
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-303">Service Fabric サービスの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-303">The name of the Service Fabric service.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-304">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-304">The health of a Service Fabric service.</span></span> </p>
  - uid: 'system.fabric._health_client.getServiceHealthAsync(URI,ApplicationHealthPolicy)'
    id: 'getServiceHealthAsync(URI,ApplicationHealthPolicy)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy)'
    nameWithType: 'HealthClient.getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy)'
    fullName: 'CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy)'
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 488
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-305">Service Fabric サービスのヘルスを非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-305">Asynchronously gets the health of a Service Fabric service.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceHealth> getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-306">Service Fabric サービスの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-306">The name of the Service Fabric service.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-307">アプリケーションの正常性ポリシーはサービスのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-307">The application health policy used to evaluate service health.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-308">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-308">The health of a Service Fabric service.</span></span> </p>
  - uid: 'system.fabric._health_client.getServiceHealthAsync(URI,ApplicationHealthPolicy,Duration)'
    id: 'getServiceHealthAsync(URI,ApplicationHealthPolicy,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    nameWithType: 'HealthClient.getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    fullName: 'CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 525
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-309">非同期的に、Service Fabric サービスのヘルス、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-309">Asynchronously gets the health of a Service Fabric service by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceHealth> getServiceHealthAsync(URI serviceName, ApplicationHealthPolicy applicationHealthPolicy, Duration timeout)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-310">Service Fabric サービスの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-310">The name of the Service Fabric service.</span></span> </p>
        - id: applicationHealthPolicy
          type: system.fabric._application_health_policy
          description: <p><span data-ttu-id="bd891-311">アプリケーションの正常性ポリシーは、エンティティのヘルスを評価するために使用します。</span><span class="sxs-lookup"><span data-stu-id="bd891-311">The application health policy used to evaluate the entity health.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-312">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-312">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-313">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-313">The health of a Service Fabric service.</span></span> </p>
  - uid: 'system.fabric._health_client.getServiceHealthAsync(URI,Duration)'
    id: 'getServiceHealthAsync(URI,Duration)'
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: 'getServiceHealthAsync(URI serviceName, Duration timeout)'
    nameWithType: 'HealthClient.getServiceHealthAsync(URI serviceName, Duration timeout)'
    fullName: 'CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync(URI serviceName, Duration timeout)'
    overload: system.fabric._health_client.getServiceHealthAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 507
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-314">非同期的に、Service Fabric サービスのヘルス、指定したタイムアウト時間および取り消しを使用してトークン取得します。</span><span class="sxs-lookup"><span data-stu-id="bd891-314">Asynchronously gets the health of a Service Fabric service by using the specified timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceHealth> getServiceHealthAsync(URI serviceName, Duration timeout)'
      parameters:
        - id: serviceName
          type: '62304784'
          description: <p><span data-ttu-id="bd891-315">Service Fabric サービスの名前。</span><span class="sxs-lookup"><span data-stu-id="bd891-315">The name of the Service Fabric service.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="bd891-316">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-316">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.health._service_healtha08ddfce
        description: <p><span data-ttu-id="bd891-317">Service Fabric サービスの正常性。</span><span class="sxs-lookup"><span data-stu-id="bd891-317">The health of a Service Fabric service.</span></span> </p>
  - uid: system.fabric._health_client.reportHealth(HealthReport)
    id: reportHealth(HealthReport)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    langs:
      - java
    name: reportHealth(HealthReport healthReport)
    nameWithType: HealthClient.reportHealth(HealthReport healthReport)
    fullName: void system.fabric.HealthClient.reportHealth(HealthReport healthReport)
    overload: system.fabric._health_client.reportHealth*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/HealthClient.java
      startLine: 142
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="bd891-318">Service Fabric エンティティのヘルスをレポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-318">Reports health on a Service Fabric entity.</span></span></p>
      <p></p>
    syntax:
      content: public void reportHealth(HealthReport healthReport)
      parameters:
        - id: healthReport
          type: system.fabric.health._health_report
          description: <p><span data-ttu-id="bd891-319">送信する正常性レポートします。</span><span class="sxs-lookup"><span data-stu-id="bd891-319">The health report to submit.</span></span> </p>
references:
  - uid: system.fabric._health_client.reportHealth*
    name: reportHealth
    nameWithType: HealthClient.reportHealth
    fullName: void system.fabric.HealthClient.reportHealth
    package: system.fabric
  - uid: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._cluster_health
        name: ClusterHealth
        fullName: system.fabric.health.ClusterHealth
        href: system.fabric.health._cluster_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getClusterHealthAsync*
    name: getClusterHealthAsync
    nameWithType: HealthClient.getClusterHealthAsync
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 9cdf14d0system.fabric.health._node_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._node_health
        name: NodeHealth
        fullName: system.fabric.health.NodeHealth
        href: system.fabric.health._node_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getNodeHealthAsync*
    name: getNodeHealthAsync
    nameWithType: HealthClient.getNodeHealthAsync
    fullName: CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync
    package: system.fabric
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 9cdf14d0system.fabric.health._application_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._application_health
        name: ApplicationHealth
        fullName: system.fabric.health.ApplicationHealth
        href: system.fabric.health._application_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getApplicationHealthAsync*
    name: getApplicationHealthAsync
    nameWithType: HealthClient.getApplicationHealthAsync
    fullName: CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync
    package: system.fabric
  - uid: 9cdf14d0system.fabric.health._service_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._service_health
        name: ServiceHealth
        fullName: system.fabric.health.ServiceHealth
        href: system.fabric.health._service_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getServiceHealthAsync*
    name: getServiceHealthAsync
    nameWithType: HealthClient.getServiceHealthAsync
    fullName: CompletableFuture<ServiceHealth> system.fabric.HealthClient.getServiceHealthAsync
    package: system.fabric
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: 9cdf14d0system.fabric.health._partition_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._partition_health
        name: PartitionHealth
        fullName: system.fabric.health.PartitionHealth
        href: system.fabric.health._partition_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getPartitionHealthAsync*
    name: getPartitionHealthAsync
    nameWithType: HealthClient.getPartitionHealthAsync
    fullName: CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: 9cdf14d0system.fabric.health._replica_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._replica_health
        name: ReplicaHealth
        fullName: system.fabric.health.ReplicaHealth
        href: system.fabric.health._replica_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getReplicaHealthAsync*
    name: getReplicaHealthAsync
    nameWithType: HealthClient.getReplicaHealthAsync
    fullName: CompletableFuture<ReplicaHealth> system.fabric.HealthClient.getReplicaHealthAsync
    package: system.fabric
  - uid: 9cdf14d0system.fabric.health._deployed_application_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._deployed_application_health
        name: DeployedApplicationHealth
        fullName: system.fabric.health.DeployedApplicationHealth
        href: system.fabric.health._deployed_application_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getDeployedApplicationHealthAsync*
    name: getDeployedApplicationHealthAsync
    nameWithType: HealthClient.getDeployedApplicationHealthAsync
    fullName: CompletableFuture<DeployedApplicationHealth> system.fabric.HealthClient.getDeployedApplicationHealthAsync
    package: system.fabric
  - uid: 9cdf14d0system.fabric.health._deployed_service_package_healtha08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._deployed_service_package_health
        name: DeployedServicePackageHealth
        fullName: system.fabric.health.DeployedServicePackageHealth
        href: system.fabric.health._deployed_service_package_health.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getDeployedServicePackageHealthAsync*
    name: getDeployedServicePackageHealthAsync
    nameWithType: HealthClient.getDeployedServicePackageHealthAsync
    fullName: CompletableFuture<DeployedServicePackageHealth> system.fabric.HealthClient.getDeployedServicePackageHealthAsync
    package: system.fabric
  - uid: 9cdf14d0system.fabric.health._cluster_health_chunka08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.health._cluster_health_chunk
        name: ClusterHealthChunk
        fullName: system.fabric.health.ClusterHealthChunk
        href: system.fabric.health._cluster_health_chunk.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._health_client.getClusterHealthChunkAsync*
    name: getClusterHealthChunkAsync
    nameWithType: HealthClient.getClusterHealthChunkAsync
    fullName: CompletableFuture<ClusterHealthChunk> system.fabric.HealthClient.getClusterHealthChunkAsync
    package: system.fabric
  - uid: system.fabric._health_client.close*
    name: close
    nameWithType: HealthClient.close
    fullName: void system.fabric.HealthClient.close
    package: system.fabric
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric.health._cluster_health
    parent: system.fabric.health
    href: system.fabric.health._cluster_health.yml
    name: ClusterHealth
    nameWithType: ClusterHealth
    fullName: system.fabric.health.ClusterHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-320">によって返される、クラスターの正常性を表す<xref uid="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getClusterHealthAsync(system.fabric.ClusterHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-320">Represents the health of the cluster, as returned by <xref uid="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getClusterHealthAsync(system.fabric.ClusterHealthQueryDescription)</xref> .</span></span> <span data-ttu-id="bd891-321">集計されたクラスターの正常性状態とクラスターのアプリケーションとノードのヘルス状態が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bd891-321">Contains the cluster aggregated health state and the cluster application and node health states.</span></span> </p>'
    syntax:
      content: public class ClusterHealth extends EntityHealth
  - uid: system.fabric.health._node_health
    parent: system.fabric.health
    href: system.fabric.health._node_health.yml
    name: NodeHealth
    nameWithType: NodeHealth
    fullName: system.fabric.health.NodeHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-322">によって返されるノードの正常性を示します<xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(NodeHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-322">Describes the health of a node as returned by <xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(NodeHealthQueryDescription)</xref>.</span></span> </p>'
    syntax:
      content: public class NodeHealth
  - uid: system.fabric.health._application_health
    parent: system.fabric.health
    href: system.fabric.health._application_health.yml
    name: ApplicationHealth
    nameWithType: ApplicationHealth
    fullName: system.fabric.health.ApplicationHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-323">によって返されるアプリケーションの正常性を示します<xref uid="system.fabric._health_client.getApplicationHealthAsync(URI)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getApplicationHealthAsync</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-323">Describes the health of an application as returned by <xref uid="system.fabric._health_client.getApplicationHealthAsync(URI)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getApplicationHealthAsync</xref></span></span></p>'
    syntax:
      content: public class ApplicationHealth extends EntityHealth
  - uid: system.fabric.health._service_health
    parent: system.fabric.health
    href: system.fabric.health._service_health.yml
    name: ServiceHealth
    nameWithType: ServiceHealth
    fullName: system.fabric.health.ServiceHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-324">によって返されるように、サービスのヘルスをについて説明します<xref uid="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getServiceHealthAsync(ServiceHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-324">Describes the health of a service as returned by <xref uid="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getServiceHealthAsync(ServiceHealthQueryDescription)</xref>.</span></span> </p>'
    syntax:
      content: public class ServiceHealth
  - uid: system.fabric.health._partition_health
    parent: system.fabric.health
    href: system.fabric.health._partition_health.yml
    name: PartitionHealth
    nameWithType: PartitionHealth
    fullName: system.fabric.health.PartitionHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-325">によって返されるパーティションの正常性を説明<xref uid="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getPartitionHealthAsync(PartitionHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-325">Describes health of a partition as returned by <xref uid="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getPartitionHealthAsync(PartitionHealthQueryDescription)</xref>.</span></span> </p>'
    syntax:
      content: public class PartitionHealth
  - uid: system.fabric.health._replica_health
    parent: system.fabric.health
    href: system.fabric.health._replica_health.yml
    name: ReplicaHealth
    nameWithType: ReplicaHealth
    fullName: system.fabric.health.ReplicaHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-326">によって返されるステートフル サービス レプリカまたはステートレス サービス インスタンスの正常性を示します<xref uid="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getReplicaHealthAsync(ReplicaHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-326">Describes the health of a stateful service replica or a stateless service instance as returned by <xref uid="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getReplicaHealthAsync(ReplicaHealthQueryDescription)</xref>.</span></span> </p>'
    syntax:
      content: public class ReplicaHealth
  - uid: system.fabric.health._deployed_application_health
    parent: system.fabric.health
    href: system.fabric.health._deployed_application_health.yml
    name: DeployedApplicationHealth
    nameWithType: DeployedApplicationHealth
    fullName: system.fabric.health.DeployedApplicationHealth
    type: Class
    summary: '<p><span data-ttu-id="bd891-327">によって返されるノードにデプロイされたアプリケーションの正常性について説明します<xref uid="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedApplicationHealthAsync(system.fabric.DeployedApplicationHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-327">Describes the health of an application deployed on a node as returned by <xref uid="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedApplicationHealthAsync(system.fabric.DeployedApplicationHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class DeployedApplicationHealth extends EntityHealth
  - uid: system.fabric.health._deployed_service_package_health
    parent: system.fabric.health
    href: system.fabric.health._deployed_service_package_health.yml
    name: DeployedServicePackageHealth
    nameWithType: DeployedServicePackageHealth
    fullName: system.fabric.health.DeployedServicePackageHealth
    type: Class
    syntax:
      content: public class DeployedServicePackageHealth extends EntityHealth
  - uid: system.fabric.health._cluster_health_chunk
    parent: system.fabric.health
    href: system.fabric.health._cluster_health_chunk.yml
    name: ClusterHealthChunk
    nameWithType: ClusterHealthChunk
    fullName: system.fabric.health.ClusterHealthChunk
    type: Class
    summary: '<p><span data-ttu-id="bd891-328">クラスターに関するヘルス情報が含まれて、クラスター状態チャンクを表します。</span><span class="sxs-lookup"><span data-stu-id="bd891-328">Represents the cluster state chunk, which includes health information about the cluster.</span></span> </p>'
    syntax:
      content: public class ClusterHealthChunk
  - uid: system.fabric.health._health_report
    parent: system.fabric.health
    href: system.fabric.health._health_report.yml
    name: HealthReport
    nameWithType: HealthReport
    fullName: system.fabric.health.HealthReport
    type: Class
    summary: "<p><span data-ttu-id=\"bd891-329\">\r\n\r\n  <b>注釈:</b>レポートは、正常性を使用してストアに送信できます<xref uid=\"system.fabric._health_client.reportHealth(HealthReport)\" data-throw-if-not-resolved=\"false\">system.fabric.HealthClient#reportHealth(system.fabric.health.HealthReport)</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd891-329\">\r\n\r\n  <b>Remarks:</b>The report can be sent to the health store using <xref uid=\"system.fabric._health_client.reportHealth(HealthReport)\" data-throw-if-not-resolved=\"false\">system.fabric.HealthClient#reportHealth(system.fabric.health.HealthReport)</xref>.</span></span> </p>"
    syntax:
      content: public class HealthReport
  - uid: system.fabric._cluster_health_policy
    parent: system.fabric
    href: system.fabric._cluster_health_policy.yml
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy
    type: Class
    summary: <p><span data-ttu-id="bd891-330">クラスターまたはクラスター ノードの正常性を評価する正常性ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="bd891-330">Defines a health policy used to evaluate the health of the cluster or of a cluster node.</span></span> </p>
    syntax:
      content: public class ClusterHealthPolicy
  - uid: system.fabric._cluster_health_query_description
    parent: system.fabric
    href: system.fabric._cluster_health_query_description.yml
    name: ClusterHealthQueryDescription
    nameWithType: ClusterHealthQueryDescription
    fullName: system.fabric.ClusterHealthQueryDescription
    type: Class
    summary: <p><span data-ttu-id="bd891-331">取得するためのクエリの入力を提供<xref uid="system.fabric.health._cluster_health" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-331">Provides query input for getting <xref uid="system.fabric.health._cluster_health" data-throw-if-not-resolved="false">system.fabric.health.ClusterHealth</xref>.</span></span> </p>
    syntax:
      content: public class ClusterHealthQueryDescription
  - uid: system.fabric._node_health_query_description
    parent: system.fabric
    href: system.fabric._node_health_query_description.yml
    name: NodeHealthQueryDescription
    nameWithType: NodeHealthQueryDescription
    fullName: system.fabric.NodeHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-332">説明を取得するためのクエリ入力<xref uid="system.fabric.health._node_health" data-throw-if-not-resolved="false">system.fabric.health.NodeHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-332">Describes query input for getting <xref uid="system.fabric.health._node_health" data-throw-if-not-resolved="false">system.fabric.health.NodeHealth</xref>.</span></span> <span data-ttu-id="bd891-333">によって使用される<xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(system.fabric.NodeHealthQueryDescription)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-333">Used by <xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(system.fabric.NodeHealthQueryDescription)</xref>.</span></span> </p>'
    syntax:
      content: public class NodeHealthQueryDescription
  - uid: system.fabric._application_health_policy
    parent: system.fabric
    href: system.fabric._application_health_policy.yml
    name: ApplicationHealthPolicy
    nameWithType: ApplicationHealthPolicy
    fullName: system.fabric.ApplicationHealthPolicy
    type: Class
    summary: <p><span data-ttu-id="bd891-334">アプリケーションまたはその子エンティティを 1 つの正常性を評価する正常性ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="bd891-334">Defines a health policy used to evaluate the health of an application or one of its children entities.</span></span> </p>
    syntax:
      content: public class ApplicationHealthPolicy
  - uid: system.fabric._application_health_query_description
    parent: system.fabric
    href: system.fabric._application_health_query_description.yml
    name: ApplicationHealthQueryDescription
    nameWithType: ApplicationHealthQueryDescription
    fullName: system.fabric.ApplicationHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-335">アプリケーションの正常性を取得するためのクエリの入力を表します。</span><span class="sxs-lookup"><span data-stu-id="bd891-335">Represents the query input for getting application health.</span></span> <span data-ttu-id="bd891-336">によって使用される<xref uid="system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getApplicationHealthAsync(system.fabric.ApplicationHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-336">Used by <xref uid="system.fabric._health_client.getApplicationHealthAsync(ApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getApplicationHealthAsync(system.fabric.ApplicationHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class ApplicationHealthQueryDescription
  - uid: system.fabric._service_health_query_description
    parent: system.fabric
    href: system.fabric._service_health_query_description.yml
    name: ServiceHealthQueryDescription
    nameWithType: ServiceHealthQueryDescription
    fullName: system.fabric.ServiceHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-337">取得するためのクエリの入力を提供<xref uid="system.fabric.health._service_health" data-throw-if-not-resolved="false">system.fabric.health.ServiceHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-337">Provides query input for getting <xref uid="system.fabric.health._service_health" data-throw-if-not-resolved="false">system.fabric.health.ServiceHealth</xref>.</span></span> <span data-ttu-id="bd891-338">によって使用される<xref uid="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getServiceHealthAsync(system.fabric.ServiceHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-338">Used by <xref uid="system.fabric._health_client.getServiceHealthAsync(ServiceHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getServiceHealthAsync(system.fabric.ServiceHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class ServiceHealthQueryDescription
  - uid: system.fabric._partition_health_query_description
    parent: system.fabric
    href: system.fabric._partition_health_query_description.yml
    name: PartitionHealthQueryDescription
    nameWithType: PartitionHealthQueryDescription
    fullName: system.fabric.PartitionHealthQueryDescription
    type: Class
    summary: <p><span data-ttu-id="bd891-339">説明を取得するためのクエリ入力<xref uid="system.fabric.health._partition_health" data-throw-if-not-resolved="false">system.fabric.health.PartitionHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-339">Describes query input for getting <xref uid="system.fabric.health._partition_health" data-throw-if-not-resolved="false">system.fabric.health.PartitionHealth</xref>.</span></span> </p>
    syntax:
      content: public class PartitionHealthQueryDescription
  - uid: system.fabric._replica_health_query_description
    parent: system.fabric
    href: system.fabric._replica_health_query_description.yml
    name: ReplicaHealthQueryDescription
    nameWithType: ReplicaHealthQueryDescription
    fullName: system.fabric.ReplicaHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-340">説明を取得するクエリの入力<xref uid="system.fabric.health._replica_health" data-throw-if-not-resolved="false">system.fabric.health.ReplicaHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-340">Describes the query input for getting <xref uid="system.fabric.health._replica_health" data-throw-if-not-resolved="false">system.fabric.health.ReplicaHealth</xref>.</span></span> <span data-ttu-id="bd891-341">によって使用される<xref uid="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getReplicaHealthAsync(system.fabric.ReplicaHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-341">Used by <xref uid="system.fabric._health_client.getReplicaHealthAsync(ReplicaHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getReplicaHealthAsync(system.fabric.ReplicaHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class ReplicaHealthQueryDescription
  - uid: system.fabric._deployed_application_health_query_description
    parent: system.fabric
    href: system.fabric._deployed_application_health_query_description.yml
    name: DeployedApplicationHealthQueryDescription
    nameWithType: DeployedApplicationHealthQueryDescription
    fullName: system.fabric.DeployedApplicationHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-342">説明を取得するためのクエリ入力<xref uid="system.fabric.health._deployed_application_health" data-throw-if-not-resolved="false">system.fabric.health.DeployedApplicationHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-342">Describes query input for getting <xref uid="system.fabric.health._deployed_application_health" data-throw-if-not-resolved="false">system.fabric.health.DeployedApplicationHealth</xref>.</span></span> <span data-ttu-id="bd891-343">によって使用される<xref uid="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedApplicationHealthAsync(system.fabric.DeployedApplicationHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-343">Used by <xref uid="system.fabric._health_client.getDeployedApplicationHealthAsync(DeployedApplicationHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedApplicationHealthAsync(system.fabric.DeployedApplicationHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class DeployedApplicationHealthQueryDescription
  - uid: system.fabric._deployed_service_package_health_query_description
    parent: system.fabric
    href: system.fabric._deployed_service_package_health_query_description.yml
    name: DeployedServicePackageHealthQueryDescription
    nameWithType: DeployedServicePackageHealthQueryDescription
    fullName: system.fabric.DeployedServicePackageHealthQueryDescription
    type: Class
    summary: '<p><span data-ttu-id="bd891-344">説明を取得するクエリの入力<xref uid="system.fabric.health._deployed_service_package_health" data-throw-if-not-resolved="false">system.fabric.health.DeployedServicePackageHealth</xref>です。</span><span class="sxs-lookup"><span data-stu-id="bd891-344">Describes the query input for getting <xref uid="system.fabric.health._deployed_service_package_health" data-throw-if-not-resolved="false">system.fabric.health.DeployedServicePackageHealth</xref>.</span></span> <span data-ttu-id="bd891-345">によって使用される<xref uid="system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedServicePackageHealthAsync(system.fabric.DeployedServicePackageHealthQueryDescription)</xref></span><span class="sxs-lookup"><span data-stu-id="bd891-345">Used by <xref uid="system.fabric._health_client.getDeployedServicePackageHealthAsync(DeployedServicePackageHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getDeployedServicePackageHealthAsync(system.fabric.DeployedServicePackageHealthQueryDescription)</xref></span></span></p>'
    syntax:
      content: public class DeployedServicePackageHealthQueryDescription
  - uid: system.fabric._cluster_health_chunk_query_description
    parent: system.fabric
    href: system.fabric._cluster_health_chunk_query_description.yml
    name: ClusterHealthChunkQueryDescription
    nameWithType: ClusterHealthChunkQueryDescription
    fullName: system.fabric.ClusterHealthChunkQueryDescription
    type: Class
    summary: <p><span data-ttu-id="bd891-346">クラスターの正常性のチャンク クエリの入力をについて説明します。</span><span class="sxs-lookup"><span data-stu-id="bd891-346">Describes the cluster health chunk query input.</span></span> </p>
    syntax:
      content: public class ClusterHealthChunkQueryDescription