### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory
    id: _service_proxy_factory
    parent: microsoft.servicefabric.services.remoting.client
    children:
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI)'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
    langs:
      - java
    name: ServiceProxyFactory
    nameWithType: ServiceProxyFactory
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
      startLine: 12
    package: microsoft.servicefabric.services.remoting.client
    summary: <p><span data-ttu-id="4e340-101">指定されたサービスへのリモート通信にプロキシを作成するファクトリのインターフェイスを指定します。</span><span class="sxs-lookup"><span data-stu-id="4e340-101">Specifies the interface for the factory that creates proxies for remote communication to the specified service.</span></span> </p>
    syntax:
      content: public interface ServiceProxyFactory
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI)'
    id: 'createServiceProxy(Class<T>,URI)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_factory
    href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
    langs:
      - java
    name: 'createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    nameWithType: 'ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
      startLine: 28
    package: microsoft.servicefabric.services.remoting.client
    summary: "<p><span data-ttu-id=\"4e340-102\">リモート インターフェイスを使用して、指定されたサービスと通信するプロキシを作成<code>&lt;T&gt; \r\n\r\n    </code>サービスを実装します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e340-102\">Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n\r\n    </code> that the service implements.</span></span></p>\n\n<p></p>"
    syntax:
      content: 'public public<T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="4e340-103">リモート処理は実行されているインターフェイスの種類</span><span class="sxs-lookup"><span data-stu-id="4e340-103">Interface type that is being remoted</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="4e340-104">Uri、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>です。</span><span class="sxs-lookup"><span data-stu-id="4e340-104">Uri of the <xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">Service</xref>.</span></span> </p>
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="4e340-105">リモート処理は実行されているインターフェイスを実装するプロキシ。</span><span class="sxs-lookup"><span data-stu-id="4e340-105">The proxy that implement the interface that is being remoted.</span></span> <span data-ttu-id="4e340-106">返されるオブジェクトが実装も<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-106">The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface.</span></span> </p>
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    id: 'createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_factory
    href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
    langs:
      - java
    name: 'createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    nameWithType: 'ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
      startLine: 57
    package: microsoft.servicefabric.services.remoting.client
    summary: "<p><span data-ttu-id=\"4e340-107\">リモート インターフェイスを使用して、指定されたサービスと通信するプロキシを作成<code>&lt;T&gt; \r\n\r\n    </code>サービスを実装します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e340-107\">Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n\r\n    </code> that the service implements.</span></span></p>\n\n<p></p>"
    syntax:
      content: 'public public<T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="4e340-108">リモート処理は実行されているインターフェイスの種類</span><span class="sxs-lookup"><span data-stu-id="4e340-108">Interface type that is being remoted</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="4e340-109">Uri、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>です。</span><span class="sxs-lookup"><span data-stu-id="4e340-109">Uri of the <xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">Service</xref>.</span></span> </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p><span data-ttu-id="4e340-110">サービス パーティションを決定するパーティション キーはこのサービス プロキシから要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="4e340-110">The Partition key that determines which service partition is responsible for handling requests from this service proxy.</span></span> </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p><span data-ttu-id="4e340-111">クライアントが接続するどのレプリカまたはサービス パーティションのインスタンスを決定します。</span><span class="sxs-lookup"><span data-stu-id="4e340-111">Determines which replica or instance of the service partition the client should connect to.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="4e340-112">サービスに 1 つの通信リスナーがある場合、このパラメーターは Optional です。</span><span class="sxs-lookup"><span data-stu-id="4e340-112">This parameter is Optional if the service has a single communication listener.</span></span> <span data-ttu-id="4e340-113">サービスのエンドポイントがの形式は {「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}。</span><span class="sxs-lookup"><span data-stu-id="4e340-113">The endpoints from the service are of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}.</span></span> <span data-ttu-id="4e340-114">サービスは、複数のエンドポイントを公開するときにこのパラメーターは、リモート通信に使用するには、そのエンドポイントのうちを識別します。</span><span class="sxs-lookup"><span data-stu-id="4e340-114">When the service exposes multiple endpoints, this parameter identifies which of those endpoints to use for the remoting communication.</span></span></p>'
      return:
        type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="4e340-115">リモート処理は実行されているインターフェイスを実装するプロキシ。</span><span class="sxs-lookup"><span data-stu-id="4e340-115">The proxy that implement the interface that is being remoted.</span></span> <span data-ttu-id="4e340-116">返されるオブジェクトが実装も<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-116">The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface.</span></span> </p>
references:
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
    spec.java:
      - name: 'public<T extends '
        fullName: 'public<T extends '
      - uid: microsoft.servicefabric.services.remoting._service
        name: Service
        fullName: microsoft.servicefabric.services.remoting.Service
        href: microsoft.servicefabric.services.remoting._service.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
    name: createServiceProxy
    nameWithType: ServiceProxyFactory.createServiceProxy
    fullName: public<T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy
    package: microsoft.servicefabric.services.remoting.client
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
    name: FabricServiceProxyFactory
    nameWithType: FabricServiceProxyFactory
    fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory
    type: Class
    summary: <p><span data-ttu-id="4e340-117">指定されたサービスへのリモート通信にプロキシを作成するファクトリを指定します。</span><span class="sxs-lookup"><span data-stu-id="4e340-117">Specifies the factory that creates proxies for remote communication to the specified service.</span></span> </p>
    syntax:
      content: public class FabricServiceProxyFactory implements ServiceProxyFactory
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: <p><span data-ttu-id="4e340-118">これは、サービスのインターフェイスのリモート処理を有効にするためのマーカー インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-118">This is the marker interface for enabling interface Remoting for services.</span></span> <span data-ttu-id="4e340-119"><xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>このインターフェイスから派生する、サービスによって実装されたすべてのインターフェイスのリモート処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="4e340-119">An <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> provides remoting for all interfaces implemented by the service that derive from this interface.</span></span> <span data-ttu-id="4e340-120">リモート インターフェイスは、クライアント側プロキシを経由してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="4e340-120">The remoted interfaces can be accessed via Proxy on the client side.</span></span> </p>
    syntax:
      content: public interface Service
  - uid: 'microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.createServiceProxy(Class<T>,URI)'
    parent: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
    href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
    name: 'createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    nameWithType: 'FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
    type: Method
    summary: "<p><span data-ttu-id=\"4e340-121\">リモート インターフェイスを使用して、指定されたサービスと通信するプロキシを作成<code>&lt;T&gt; \r\n\r\n    </code>サービスを実装します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e340-121\">Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n\r\n    </code> that the service implements.</span></span></p>\n\n<p></p>"
    syntax:
      content: 'public <T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="4e340-122">リモート処理は実行されているインターフェイスの種類</span><span class="sxs-lookup"><span data-stu-id="4e340-122">Interface type that is being remoted</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="4e340-123">Uri、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>です。</span><span class="sxs-lookup"><span data-stu-id="4e340-123">Uri of the <xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">Service</xref>.</span></span> </p>
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="4e340-124">リモート処理は実行されているインターフェイスを実装するプロキシ。</span><span class="sxs-lookup"><span data-stu-id="4e340-124">The proxy that implement the interface that is being remoted.</span></span> <span data-ttu-id="4e340-125">返されるオブジェクトが実装も<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-125">The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface.</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: ServiceProxy
    nameWithType: ServiceProxy
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
    type: Interface
    summary: <p><span data-ttu-id="4e340-126">これは、リモート処理の基本のクライアント側インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-126">This is the base Client side interface for Remoting.</span></span> <span data-ttu-id="4e340-127">フレームワークのリモート処理インフラストラクチャを通じて IService から継承するすべてのサービス コントラクトを提供<xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>と<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>です。</span><span class="sxs-lookup"><span data-stu-id="4e340-127">The framework provides the Remoting infrastructure for all the service contracts inheriting from IService through <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> and <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>.</span></span> </p>
    syntax:
      content: public interface ServiceProxy
  - uid: 'microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    parent: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
    href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
    name: 'createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    nameWithType: 'FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    fullName: 'public<T extends Service> T microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    type: Method
    summary: "<p><span data-ttu-id=\"4e340-128\">リモート インターフェイスを使用して、指定されたサービスと通信するプロキシを作成<code>&lt;T&gt; \r\n\r\n    </code>サービスを実装します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e340-128\">Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n\r\n    </code> that the service implements.</span></span></p>\n\n<p></p>"
    syntax:
      content: 'public <T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="4e340-129">リモート処理は実行されているインターフェイスの種類</span><span class="sxs-lookup"><span data-stu-id="4e340-129">Interface type that is being remoted</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="4e340-130">Uri、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>です。</span><span class="sxs-lookup"><span data-stu-id="4e340-130">Uri of the <xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">Service</xref>.</span></span> </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p><span data-ttu-id="4e340-131">サービス パーティションを決定するパーティション キーはこのサービス プロキシから要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="4e340-131">The Partition key that determines which service partition is responsible for handling requests from this service proxy.</span></span> </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p><span data-ttu-id="4e340-132">クライアントが接続するどのレプリカまたはサービス パーティションのインスタンスを決定します。</span><span class="sxs-lookup"><span data-stu-id="4e340-132">Determines which replica or instance of the service partition the client should connect to.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="4e340-133">サービスに 1 つの通信リスナーがある場合、このパラメーターは Optional です。</span><span class="sxs-lookup"><span data-stu-id="4e340-133">This parameter is Optional if the service has a single communication listener.</span></span> <span data-ttu-id="4e340-134">サービスのエンドポイントがの形式は {「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}。</span><span class="sxs-lookup"><span data-stu-id="4e340-134">The endpoints from the service are of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}.</span></span> <span data-ttu-id="4e340-135">サービスは、複数のエンドポイントを公開するときにこのパラメーターは、リモート通信に使用するには、そのエンドポイントのうちを識別します。</span><span class="sxs-lookup"><span data-stu-id="4e340-135">When the service exposes multiple endpoints, this parameter identifies which of those endpoints to use for the remoting communication.</span></span></p>'
      return:
        type: 36136266microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="4e340-136">リモート処理は実行されているインターフェイスを実装するプロキシ。</span><span class="sxs-lookup"><span data-stu-id="4e340-136">The proxy that implement the interface that is being remoted.</span></span> <span data-ttu-id="4e340-137">返されるオブジェクトが実装も<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4e340-137">The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface.</span></span> </p>
  - uid: microsoft.servicefabric.services.client._service_partition_key
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_key.yml
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: microsoft.servicefabric.services.client.ServicePartitionKey
    type: Class
    summary: <p><span data-ttu-id="4e340-138">サービス パーティションに対処するためにキーを定義します。</span><span class="sxs-lookup"><span data-stu-id="4e340-138">Defines a key to address a service partition.</span></span> </p>
    syntax:
      content: public class ServicePartitionKey
  - uid: microsoft.servicefabric.services.communication.client._target_replica_selector
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._target_replica_selector.yml
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
    type: Enum
    summary: <p><span data-ttu-id="4e340-139">この列挙体は、どのように、ターゲット レプリカまたはインスタンスを選択する特定のパーティション用の通信チャネルを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="4e340-139">This enumeration specifies how the target replica or instance should be chosen when creating a communication channel for a particular partition.</span></span> </p>
    syntax:
      content: public enum TargetReplicaSelector