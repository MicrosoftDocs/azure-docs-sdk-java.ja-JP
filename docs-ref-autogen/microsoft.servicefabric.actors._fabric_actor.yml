### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._fabric_actor
    id: _fabric_actor
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._fabric_actor.FabricActor(FabricActorService,ActorId)'
      - microsoft.servicefabric.actors._fabric_actor.saveStateAsync()
      - microsoft.servicefabric.actors._fabric_actor.stateManager()
    href: microsoft.servicefabric.actors._fabric_actor.yml
    langs:
      - java
    name: FabricActor
    nameWithType: FabricActor
    fullName: microsoft.servicefabric.actors.FabricActor
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActor.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActor.java
      startLine: 13
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"9cd28-101\">関連付けられている複数の信頼性の高い '名前付き' 状態を持つことができるアクターを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-101\">Represents a actor that can have multiple reliable 'named' states associated with it.</span></span> <span data-ttu-id=\"9cd28-102\"><xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-102\"><xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></span></span></p>\n<p><span data-ttu-id=\"9cd28-103\">\r\n\r\n  <b>注釈:</b>アクター ガベージ コレクションとのフェールオーバーの制限が、状態が保持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-103\">\r\n\r\n  <b>Remarks:</b>The state is preserved across actor garbage collections and fail-overs.</span></span> <span data-ttu-id=\"9cd28-104\">状態の取得と格納がアクター状態プロバイダーによって提供される<xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-104\">The storage and retrieval of the state is provided by the actor state provider <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>.</span></span> </p>"
    syntax: &ref_1
      content: public class FabricActor extends ActorBase
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.actors._actor_base
    inheritedMembers:
      - microsoft.servicefabric.actors._actor_base.getActorService()
      - microsoft.servicefabric.actors._actor_base.getApplicationName()
      - microsoft.servicefabric.actors._actor_base.getId()
      - microsoft.servicefabric.actors._actor_base.getReminder(String)
      - microsoft.servicefabric.actors._actor_base.getServiceUri()
      - microsoft.servicefabric.actors._actor_base.onActivateAsync()
      - microsoft.servicefabric.actors._actor_base.onDeactivateAsync()
      - microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
      - microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
      - 'microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte [],Duration,Duration)'
      - 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)'
      - 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)'
      - microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
      - microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
  - uid: 'microsoft.servicefabric.actors._fabric_actor.FabricActor(FabricActorService,ActorId)'
    id: 'FabricActor(FabricActorService,ActorId)'
    parent: microsoft.servicefabric.actors._fabric_actor
    href: microsoft.servicefabric.actors._fabric_actor.yml
    langs:
      - java
    name: 'FabricActor(FabricActorService actorService, ActorId actorId)'
    nameWithType: 'FabricActor.FabricActor(FabricActorService actorService, ActorId actorId)'
    fullName: 'microsoft.servicefabric.actors.FabricActor.FabricActor(FabricActorService actorService, ActorId actorId)'
    overload: microsoft.servicefabric.actors._fabric_actor.FabricActor*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActor.java
      startLine: 25
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="9cd28-105">新しいインスタンスを初期化<xref uid="microsoft.servicefabric.actors._fabric_actor" data-throw-if-not-resolved="false">FabricActor</xref></span><span class="sxs-lookup"><span data-stu-id="9cd28-105">Initializes a new instance of <xref uid="microsoft.servicefabric.actors._fabric_actor" data-throw-if-not-resolved="false">FabricActor</xref></span></span></p>
      <p></p>
    syntax:
      content: 'protected FabricActor(FabricActorService actorService, ActorId actorId)'
      parameters:
        - id: actorService
          type: microsoft.servicefabric.actors._fabric_actor_service
          description: <p><span data-ttu-id="9cd28-106"><xref uid="microsoft.servicefabric.actors._fabric_actor_service" data-throw-if-not-resolved="false">FabricActorService</xref>はこのアクターのインスタンスをホストします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-106">The <xref uid="microsoft.servicefabric.actors._fabric_actor_service" data-throw-if-not-resolved="false">FabricActorService</xref> will host this actor instance.</span></span> </p>
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="9cd28-107"><xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref>アクターのインスタンスのです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-107">The <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> for this actor instance.</span></span> </p>
  - uid: microsoft.servicefabric.actors._fabric_actor.saveStateAsync()
    id: saveStateAsync()
    parent: microsoft.servicefabric.actors._fabric_actor
    href: microsoft.servicefabric.actors._fabric_actor.yml
    langs:
      - java
    name: saveStateAsync()
    nameWithType: FabricActor.saveStateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActor.saveStateAsync()
    overload: microsoft.servicefabric.actors._fabric_actor.saveStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActor.java
      startLine: 48
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="9cd28-108">状態の変更を保存 (追加/更新/削除) 最後の呼び出し以降に行われた<xref uid="microsoft.servicefabric.actors._fabric_actor.saveStateAsync()" data-throw-if-not-resolved="false">FabricActor#saveStateAsync()</xref>アクターに関連付けられているアクター状態プロバイダーにします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-108">Saves all the state changes (add/update/remove) that were made since last call to <xref uid="microsoft.servicefabric.actors._fabric_actor.saveStateAsync()" data-throw-if-not-resolved="false">FabricActor#saveStateAsync()</xref>, to the actor state provider associated with the actor.</span></span></p>
      <p></p>
    syntax: &ref_2
      content: protected CompletableFuture<?> saveStateAsync()
      return:
        type: 16409f84
        description: <p><span data-ttu-id="9cd28-109">非同期の保存操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="9cd28-109">A task that represents the asynchronous save operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._fabric_actor.stateManager()
    id: stateManager()
    parent: microsoft.servicefabric.actors._fabric_actor
    href: microsoft.servicefabric.actors._fabric_actor.yml
    langs:
      - java
    name: stateManager()
    nameWithType: FabricActor.stateManager()
    fullName: ActorStateManager microsoft.servicefabric.actors.FabricActor.stateManager()
    overload: microsoft.servicefabric.actors._fabric_actor.stateManager*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActor.java
      startLine: 37
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="9cd28-110">状態マネージャーを取得<xref uid="microsoft.servicefabric.actors._fabric_actor" data-throw-if-not-resolved="false">FabricActor</xref> get/追加/更新/削除する状態をという名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-110">Gets the state manager for <xref uid="microsoft.servicefabric.actors._fabric_actor" data-throw-if-not-resolved="false">FabricActor</xref> which can be used to get/add/update/remove named states.</span></span></p>
      <p></p>
    syntax:
      content: public ActorStateManager stateManager()
      return:
        type: microsoft.servicefabric.actors._actor_state_manager
        description: <p><span data-ttu-id="9cd28-111"><xref uid="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false">ActorStateManager</xref>アクター状態の管理に使用できます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-111">An <xref uid="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false">ActorStateManager</xref> which can be used to manage actor state.</span></span> </p>
references:
  - uid: microsoft.servicefabric.actors._fabric_actor.FabricActor*
    name: FabricActor
    nameWithType: FabricActor.FabricActor
    fullName: microsoft.servicefabric.actors.FabricActor.FabricActor
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._fabric_actor.saveStateAsync*
    name: saveStateAsync
    nameWithType: FabricActor.saveStateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActor.saveStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor.stateManager*
    name: stateManager
    nameWithType: FabricActor.stateManager
    fullName: ActorStateManager microsoft.servicefabric.actors.FabricActor.stateManager
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.getActorService()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: getActorService()
    nameWithType: ActorBase.getActorService()
    fullName: FabricActorService microsoft.servicefabric.actors.ActorBase.getActorService()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-112">アクターをホストしているステートフル サービス レプリカを取得します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-112">Gets the stateful service replica that is hosting the actor.</span></span></p>
      <p></p>
    syntax:
      content: public FabricActorService getActorService()
      return:
        type: microsoft.servicefabric.actors._fabric_actor_service
        description: "<p><span data-ttu-id=\"9cd28-113\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._fabric_actor_service\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.FabricActorService</xref>ステートフル サービス レプリカをホストしているアクターを表すです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-113\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._fabric_actor_service\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.FabricActorService</xref> that represents the stateful service replica hosting the actor.</span></span> <span data-ttu-id=\"9cd28-114\">アクターです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-114\">actor.</span></span> </p>"
  - uid: microsoft.servicefabric.actors._actor_base.getApplicationName()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: getApplicationName()
    nameWithType: ActorBase.getApplicationName()
    fullName: String microsoft.servicefabric.actors.ActorBase.getApplicationName()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-115">このアクターをホストしているアクター サービスが含まれるアプリケーションの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-115">Gets the name of the application that contains the actor service that is hosting this actor.</span></span></p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="9cd28-116">このアクターをホストしているアクター サービスが含まれるアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="9cd28-116">Name of application that contains the actor service that is hosting this actor.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.getId()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: getId()
    nameWithType: ActorBase.getId()
    fullName: ActorId microsoft.servicefabric.actors.ActorBase.getId()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-117">アクター サービスとこのアクターの id を取得します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-117">Gets the identity of this actor with the actor service.</span></span></p>
      <p></p>
    syntax:
      content: public ActorId getId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: "<p><span data-ttu-id=\"9cd28-118\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクターのです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-118\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> for the actor.</span></span> </p>"
  - uid: microsoft.servicefabric.actors._actor_base.getReminder(String)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: getReminder(String reminderName)
    nameWithType: ActorBase.getReminder(String reminderName)
    fullName: ActorReminder microsoft.servicefabric.actors.ActorBase.getReminder(String reminderName)
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-119">指定された通知の名前を持つアクター アラームを取得します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-119">Gets the actor reminder with specified reminder name.</span></span></p>
      <p></p>
    syntax:
      content: protected ActorReminder getReminder(String reminderName)
      parameters:
        - id: reminderName
          type: '26831127'
          description: <p><span data-ttu-id="9cd28-120">取得する通知の名前です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-120">Name of the reminder to get.</span></span> </p>
      return:
        type: microsoft.servicefabric.actors._actor_reminder
        description: <p><span data-ttu-id="9cd28-121"><xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref>アクター アラームを表すです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-121">An <xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref> that represents an actor reminder.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.getServiceUri()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: getServiceUri()
    nameWithType: ActorBase.getServiceUri()
    fullName: URI microsoft.servicefabric.actors.ActorBase.getServiceUri()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-122">このアクターをホストしているアクター サービスの Uri を取得します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-122">Gets the Uri of the actor service that is hosting this actor.</span></span></p>
      <p></p>
    syntax:
      content: public URI getServiceUri()
      return:
        type: '62304784'
        description: "<p><span data-ttu-id=\"9cd28-123\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.net.URI</xref>このアクターをホストしているアクター サービス。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-123\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.net.URI</xref> of the actor service that is hosting this actor.</span></span> </p>"
  - uid: microsoft.servicefabric.actors._actor_base.onActivateAsync()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onActivateAsync()
    nameWithType: ActorBase.onActivateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onActivateAsync()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-124">メンバーを初期化、状態を初期化またはタイマーを登録するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-124">Override this method to initialize the members, initialize state or register timers.</span></span> <span data-ttu-id="9cd28-125">このメソッドは、アクターがアクティブ化後は、メソッドの前に、上の呼び出しやアラームをディスパッチします。 右呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-125">This method is called right after the actor is activated and before any method call or reminders are dispatched on it.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onActivateAsync()
      return:
        type: 16409f84
        description: <p><span data-ttu-id="9cd28-126">未処理の OnActivateAsync 操作を表す CompletableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-126">A CompletableFuture that represents outstanding OnActivateAsync operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.onDeactivateAsync()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onDeactivateAsync()
    nameWithType: ActorBase.onDeactivateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onDeactivateAsync()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-127">タイマーの登録を解除を含むリソースを解放するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-127">Override this method to release any resources including unregistering the timers.</span></span> <span data-ttu-id="9cd28-128">このメソッドは、アクターが非アクティブ化する前に右呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-128">This method is called right before the actor is deactivated.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onDeactivateAsync()
      return:
        type: 16409f84
        description: <p><span data-ttu-id="9cd28-129">未処理の OnDeactivateAsync 操作を表す CompletableFuture です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-129">A CompletableFuture that represents outstanding OnDeactivateAsync operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-130">このメソッドが呼び出されるアクター ランタイムによって、アクター メソッドの実行が完了しました。</span><span class="sxs-lookup"><span data-stu-id="9cd28-130">This method is invoked by actor runtime an actor method has finished execution.</span></span> <span data-ttu-id="9cd28-131">アクター メソッドの実行が完了した後、すべてのアクションを実行するためには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-131">Override this method for performing any actions after an actor method has finished execution.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><span data-ttu-id="9cd28-132"><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの前にアクター ランタイムによって呼び出されたメソッドについて説明します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-132">An <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that was invoked by actor runtime prior to this method.</span></span> </p>
      return:
        type: 16409f84
        description: |-
          <p><span data-ttu-id="9cd28-133">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> actor メソッドの操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-133">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing post-actor-method operation.</span></span> <span data-ttu-id="9cd28-134"><verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-134"><verbatim>    &lt;b&gt;Remarks:&lt;/b&gt; This method is invoked by actor runtime prior to:</span></span>

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-135">このメソッドはアクター メソッドの呼び出しの直前にアクター ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-135">This method is invoked by actor runtime just before invoking an actor method.</span></span> <span data-ttu-id="9cd28-136">前のアクター メソッドが呼び出されるアクションを実行するためには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-136">Override this method for performing any actions prior to an actor method is invoked.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: <p><span data-ttu-id="9cd28-137"><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>このメソッドの完了後にアクター ランタイムによって呼び出されるメソッドを記述します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-137">An <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that will be invoked by actor runtime after this method finishes.</span></span> </p>
      return:
        type: 16409f84
        description: |-
          <p><span data-ttu-id="9cd28-138">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>前 actor メソッドの操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-138">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing pre-actor-method operation.</span></span> <span data-ttu-id="9cd28-139"><verbatim>    &lt;b&gt;解説:&lt;/b&gt;より前のバージョンのアクター ランタイムによってこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9cd28-139"><verbatim>    &lt;b&gt;Remarks:&lt;/b&gt;This method is invoked by actor runtime prior to:</span></span>

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: 'microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte [],Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: 'registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    fullName: 'CompletableFuture<ActorReminder> microsoft.servicefabric.actors.ActorBase.registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-140">アクターを指定した通知を登録します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-140">Registers the specified reminder with actor.</span></span></p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<ActorReminder> registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
      parameters:
        - id: reminderName
          type: '26831127'
          description: <p><span data-ttu-id="9cd28-141">登録を求めるメッセージの名前</span><span class="sxs-lookup"><span data-stu-id="9cd28-141">Name of the reminder to register</span></span> </p>
        - id: state
          type: ccd9418d
          description: <p><span data-ttu-id="9cd28-142">通知に関連付けられている状態です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-142">State associated with reminder.</span></span> </p>
        - id: dueTime
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-143">A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>するアラームを発生させるまでの遅延時間を表すです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-143">A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref> representing the amount of time to delay before firing the reminder.</span></span> <span data-ttu-id="9cd28-144">負の値の発生からアラームを防ぐためにミリ秒 (-1) いずれかを指定します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-144">Specify negative one (-1) milliseconds to prevent reminder from firing.</span></span> <span data-ttu-id="9cd28-145">アラームを即時にゼロ (0) を指定します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-145">Specify zero (0) to fire the reminder immediately.</span></span> </p>
        - id: period
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-146">アラームの起動処理の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="9cd28-146">The time interval between firing of reminders.</span></span> <span data-ttu-id="9cd28-147">ミリ秒を指定 (-1) を定期的な起動を無効にします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-147">Specify negative one (-1) milliseconds to disable periodic firing.</span></span> </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_remindera08ddfce
        description: <p><span data-ttu-id="9cd28-148">非同期の登録操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="9cd28-148">A task that represents the asynchronous registration operation.</span></span> <span data-ttu-id="9cd28-149">TResult のパラメーターの値は、 <xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref>に登録されたアクター アラームを表すです。</span><span class="sxs-lookup"><span data-stu-id="9cd28-149">The value of TResult parameter is an <xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref> that represents the actor reminder that was registered.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: 'registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    fullName: 'ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-150">アクターのタイマーを登録します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-150">Registers a Timer for the actor.</span></span></p>
      <p></p>
    syntax:
      content: 'protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
      parameters:
        - id: asyncCallback
          type: 05842176
          description: <p><span data-ttu-id="9cd28-151">タイマーが発生したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="9cd28-151">Callback to invoke when timer fires.</span></span> </p>
        - id: state
          type: '79317049'
          description: <p><span data-ttu-id="9cd28-152">タイマー コールバックに渡す状態です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-152">State to pass into timer callback.</span></span> </p>
        - id: dueTime
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-153">アクターのタイマーが期限最初に TimeSpan です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-153">TimeSpan when actor timer is first due.</span></span> </p>
        - id: period
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-154">後続のアクター タイマー呼び出し TimeSpan です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-154">TimeSpan for subsequent actor timer invocation.</span></span> </p>
      return:
        type: microsoft.servicefabric.actors._actor_timer
        description: <p><span data-ttu-id="9cd28-155">返します<xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9cd28-155">Returns <xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref> object.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: 'registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    fullName: 'ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-156">アクターのタイマーを登録します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-156">Registers a Timer for the actor.</span></span></p>
      <p></p>
    syntax:
      content: 'protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
      parameters:
        - id: asyncCallback
          type: 05842176
          description: <p><span data-ttu-id="9cd28-157">タイマーが発生したときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="9cd28-157">Callback to invoke when timer fires.</span></span> </p>
        - id: asyncCallbackFunctionName
          type: '26831127'
          description: '<p><span data-ttu-id="9cd28-158">AsyncCallBack 関数の名前。</span><span class="sxs-lookup"><span data-stu-id="9cd28-158">name of AsyncCallBack function.</span></span> <span data-ttu-id="9cd28-159">使用できます<xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>これの前と後の呼び出しで、ユーザーのタスクを開始するには関数。</span><span class="sxs-lookup"><span data-stu-id="9cd28-159">It can be used in <xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref> to initiate any user task on pre- and post- calling of this function.</span></span> <span data-ttu-id="9cd28-160">プロパティ<xref uid="microsoft.servicefabric.actors._actor_method_context.getMethodName()" data-throw-if-not-resolved="false">ActorMethodContext#getMethodName()</xref>メソッド名になります。</span><span class="sxs-lookup"><span data-stu-id="9cd28-160">The property <xref uid="microsoft.servicefabric.actors._actor_method_context.getMethodName()" data-throw-if-not-resolved="false">ActorMethodContext#getMethodName()</xref> will give the method name.</span></span> </p>'
        - id: state
          type: '79317049'
          description: <p><span data-ttu-id="9cd28-161">タイマー コールバックに渡す状態です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-161">State to pass into timer callback.</span></span> </p>
        - id: dueTime
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-162">アクターのタイマーが期限最初に TimeSpan です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-162">TimeSpan when actor timer is first due.</span></span> </p>
        - id: period
          type: e02a2de0
          description: <p><span data-ttu-id="9cd28-163">後続のアクター タイマー呼び出し TimeSpan です。</span><span class="sxs-lookup"><span data-stu-id="9cd28-163">TimeSpan for subsequent actor timer invocation.</span></span> </p>
      return:
        type: microsoft.servicefabric.actors._actor_timer
        description: <p><span data-ttu-id="9cd28-164">返します<xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9cd28-164">Returns <xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref> object.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: unregisterReminderAsync(ActorReminder reminder)
    nameWithType: ActorBase.unregisterReminderAsync(ActorReminder reminder)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.unregisterReminderAsync(ActorReminder reminder)
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-165">アクターを指定した通知を登録解除します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-165">Unregisters the specified reminder with actor.</span></span></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> unregisterReminderAsync(ActorReminder reminder)
      parameters:
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: <p><span data-ttu-id="9cd28-166">登録を解除するアクター通知します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-166">The actor reminder to unregister.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="9cd28-167">表す非同期のタスクは、操作を登録解除します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-167">A task that represents the asynchronous unregister operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: unregisterTimer(ActorTimer timer)
    nameWithType: ActorBase.unregisterTimer(ActorTimer timer)
    fullName: void microsoft.servicefabric.actors.ActorBase.unregisterTimer(ActorTimer timer)
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-168">以前にこのアクターの設定、タイマーの登録を解除します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-168">Unregisters a Timer previously set on this actor.</span></span></p>
      <p></p>
    syntax:
      content: protected void unregisterTimer(ActorTimer timer)
      parameters:
        - id: timer
          type: microsoft.servicefabric.actors._actor_timer
          description: "<p><span data-ttu-id=\"9cd28-169\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_timer\" data-throw-if-not-resolved=\"false\">ActorTimer</xref>を表すタイマーを登録する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-169\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_timer\" data-throw-if-not-resolved=\"false\">ActorTimer</xref> representing timer that needs to be unregistered.</span></span> </p>"
  - uid: microsoft.servicefabric.actors._actor_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_base.yml
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    summary: "<p><span data-ttu-id=\"9cd28-170\">アクターの基本クラスを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-170\">Represents base class for actors.</span></span> <span data-ttu-id=\"9cd28-171\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-171\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref></span></span></p>\n<p><span data-ttu-id=\"9cd28-172\">\r\n\r\n  <b>注釈:</b>アクターの基本データ型は、共通するアクターから派生するアクターによって実装された機能を提供<xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アクター ガベージ コレクションとのフェールオーバーの制限が、状態が保持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-172\">\r\n\r\n  <b>Remarks:</b>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> The state is preserved across actor garbage collections and fail-overs.</span></span> <span data-ttu-id=\"9cd28-173\">状態の取得と格納がアクター状態プロバイダーによって提供される<xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-173\">The storage and retrieval of the state is provided by the actor state provider <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>.</span></span> </p>"
    syntax:
      content: public class ActorBase
  - uid: microsoft.servicefabric.actors._actor_state_manager
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    name: ActorStateManager
    nameWithType: ActorStateManager
    fullName: microsoft.servicefabric.actors.ActorStateManager
    type: Interface
    summary: <p><span data-ttu-id="9cd28-174">インターフェイスのマネージャーの状態を表します<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>を実装します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-174">Represents the interface that state manager for <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> implements.</span></span> </p>
    syntax:
      content: public interface ActorStateManager
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    summary: "<p><span data-ttu-id=\"9cd28-175\">ベース Microsoft Service Fabric アクターの信頼性の高いサービスの基本クラスを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-175\">Represents the base class for Microsoft Service Fabric based reliable actors service.</span></span> </p>\n<p><span data-ttu-id=\"9cd28-176\">\r\n\r\n  <b>注釈:</b>アクターが、任意のサービス レベルの動作をオーバーライドする場合は、独自のカスタム アクター サービスを実装するには、このクラスから派生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-176\">\r\n\r\n  <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors.</span></span> </p>"
    syntax:
      content: public class FabricActorService
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p><span data-ttu-id=\"9cd28-177\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-177\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> represents identity of an actor within an actor service.</span></span> <span data-ttu-id=\"9cd28-178\">アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-178\">The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> or long.</span></span> </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._fabric_actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor.yml
    name: FabricActor
    nameWithType: FabricActor
    fullName: microsoft.servicefabric.actors.FabricActor
    type: Class
    summary: "<p><span data-ttu-id=\"9cd28-179\">関連付けられている複数の信頼性の高い '名前付き' 状態を持つことができるアクターを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-179\">Represents a actor that can have multiple reliable 'named' states associated with it.</span></span> <span data-ttu-id=\"9cd28-180\"><xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-180\"><xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></span></span></p>\n<p><span data-ttu-id=\"9cd28-181\">\r\n\r\n  <b>注釈:</b>アクター ガベージ コレクションとのフェールオーバーの制限が、状態が保持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-181\">\r\n\r\n  <b>Remarks:</b>The state is preserved across actor garbage collections and fail-overs.</span></span> <span data-ttu-id=\"9cd28-182\">状態の取得と格納がアクター状態プロバイダーによって提供される<xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9cd28-182\">The storage and retrieval of the state is provided by the actor state provider <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>.</span></span> </p>"
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._fabric_actor.saveStateAsync()
    parent: microsoft.servicefabric.actors._fabric_actor
    href: microsoft.servicefabric.actors._fabric_actor.yml
    name: saveStateAsync()
    nameWithType: FabricActor.saveStateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActor.saveStateAsync()
    type: Method
    summary: |-
      <p><span data-ttu-id="9cd28-183">状態の変更を保存 (追加/更新/削除) 最後の呼び出し以降に行われた<xref uid="microsoft.servicefabric.actors._fabric_actor.saveStateAsync()" data-throw-if-not-resolved="false">FabricActor#saveStateAsync()</xref>アクターに関連付けられているアクター状態プロバイダーにします。</span><span class="sxs-lookup"><span data-stu-id="9cd28-183">Saves all the state changes (add/update/remove) that were made since last call to <xref uid="microsoft.servicefabric.actors._fabric_actor.saveStateAsync()" data-throw-if-not-resolved="false">FabricActor#saveStateAsync()</xref>, to the actor state provider associated with the actor.</span></span></p>
      <p></p>
    syntax: *ref_2
  - uid: microsoft.servicefabric.actors._actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    summary: <p><span data-ttu-id="9cd28-184">アクター状態プロバイダーは、アクター ランタイムと通信するために実装する必要があるインターフェイスを表します。</span><span class="sxs-lookup"><span data-stu-id="9cd28-184">Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it.</span></span> </p>
    syntax:
      content: public interface ActorStateProvider extends StateProviderReplica