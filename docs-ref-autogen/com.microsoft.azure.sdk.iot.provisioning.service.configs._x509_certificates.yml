### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    id: _x509_certificates
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    children:
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getPrimary()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getSecondary()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates(X509Certificates)
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    langs:
      - java
    name: X509Certificates
    nameWithType: X509Certificates
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
    type: Class
    source:
      remote: &ref_0
        path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
      startLine: 90
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: "<p><span data-ttu-id=\"74c48-101\">1 つのデバイスのプロビジョニング サービスの表現 X509 プライマリおよびセカンダリ証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-101\">Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate.</span></span></p>\n<p><span data-ttu-id=\"74c48-102\">このクラスは、X509 の表現を作成します。 証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-102\">this class creates a representation of an X509 certificate.</span></span> <span data-ttu-id=\"74c48-103\">プライマリとセカンダリの証明書を受け取ることができますが、プライマリのみが必須です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-103\">It can receive primary and secondary certificate, but only the primary is mandatory.</span></span></p>\n<p><span data-ttu-id=\"74c48-104\">ユーザーは、証明書として、入力、<code>String \r\n\r\n    </code>から、 <b>.pem</b>ファイル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-104\">Users must provide the certificate as a<code>String \r\n\r\n    </code> , from a <b>.pem</b> files.</span></span> <span data-ttu-id=\"74c48-105\">このクラスは 1 つの両方をカプセル化は<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-105\">This class will encapsulate both in a single <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>.</span></span> <span data-ttu-id=\"74c48-106\">次の JSON では、このクラスの結果の例を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-106\">The following JSON is an example of the result of this class.</span></span> <pre><code>{\n\n        \"primary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        },\n\n        \"secondary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p><span data-ttu-id=\"74c48-107\">X509 を送信した後で成功した場合、証明書のプロビジョニング サービスが返されます、 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref>プライマリとセカンダリの両方の証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-107\">After send an X509 certificate with success, the provisioning service will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref> for both primary and secondary certificate.</span></span> <span data-ttu-id=\"74c48-108\">ユーザーは、このクラスから、これらの情報を取得することができ、もう一度、プライマリ情報のみが必須です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-108\">User can get these info from this class, and once again, only the primary info is mandatory.</span></span> <span data-ttu-id=\"74c48-109\">次の JSON 例は、どのような情報が X509 のプロビジョニング サービスが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-109\">The following JSON is an example what info the provisioning service will return for X509.</span></span> <pre><code>{\n\n        \"primary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        },\n\n        \"secondary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p></p>"
    syntax: &ref_1
      content: public class X509Certificates
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getPrimary()
    id: getPrimary()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    langs:
      - java
    name: getPrimary()
    nameWithType: X509Certificates.getPrimary()
    fullName: X509CertificateWithInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimary()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getPrimary*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
      startLine: 179
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p><span data-ttu-id="74c48-110">プライマリの get アクセス操作子にします。</span><span class="sxs-lookup"><span data-stu-id="74c48-110">Getter for the primary.</span></span></p>
      <p></p>
    syntax:
      content: public X509CertificateWithInfo getPrimary()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info
        description: "<p><span data-ttu-id=\"74c48-111\"><xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info\" data-throw-if-not-resolved=\"false\">X509CertificateWithInfo</xref>ストアドのプライマリとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-111\">the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info\" data-throw-if-not-resolved=\"false\">X509CertificateWithInfo</xref> with the stored primary.</span></span> <span data-ttu-id=\"74c48-112\">できません<code>null \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-112\">It cannot be<code>null \r\n\r\n    </code> .</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getSecondary()
    id: getSecondary()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    langs:
      - java
    name: getSecondary()
    nameWithType: X509Certificates.getSecondary()
    fullName: X509CertificateWithInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondary()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getSecondary*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
      startLine: 190
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p><span data-ttu-id="74c48-113">セカンダリの get アクセス操作子にします。</span><span class="sxs-lookup"><span data-stu-id="74c48-113">Getter for the secondary.</span></span></p>
      <p></p>
    syntax:
      content: public X509CertificateWithInfo getSecondary()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info
        description: "<p><span data-ttu-id=\"74c48-114\"><xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info\" data-throw-if-not-resolved=\"false\">X509CertificateWithInfo</xref>ストアド セカンダリとします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-114\">the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info\" data-throw-if-not-resolved=\"false\">X509CertificateWithInfo</xref> with the stored secondary.</span></span> <span data-ttu-id=\"74c48-115\">できます<code>null \r\n\r\n    </code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-115\">It can be<code>null \r\n\r\n    </code> .</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates()
    id: X509Certificates()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    langs:
      - java
    name: X509Certificates()
    nameWithType: X509Certificates.X509Certificates()
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.X509Certificates()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
      startLine: 204
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p><span data-ttu-id="74c48-116">空のコンス トラクター</span><span class="sxs-lookup"><span data-stu-id="74c48-116">Empty constructor</span></span></p>
      <p><span data-ttu-id="74c48-117">このクラスを逆シリアル化するツールでのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="74c48-117">Used only by the tools that will deserialize this class.</span></span> </p>
    syntax:
      content: protected X509Certificates()
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates(X509Certificates)
    id: X509Certificates(X509Certificates)
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    langs:
      - java
    name: X509Certificates(X509Certificates x509Certificates)
    nameWithType: X509Certificates.X509Certificates(X509Certificates x509Certificates)
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.X509Certificates(X509Certificates x509Certificates)
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Certificates.java
      startLine: 157
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p><span data-ttu-id="74c48-118">コンス トラクター [コピー]</span><span class="sxs-lookup"><span data-stu-id="74c48-118">Constructor [COPY]</span></span></p>
      <p><span data-ttu-id="74c48-119">指定された 1 つのコンテンツを copping、x509Certificates の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="74c48-119">Creates a new instance of the x509Certificates copping the content of the provided one.</span></span></p>
      <p></p>
    syntax:
      content: public X509Certificates(X509Certificates x509Certificates)
      parameters:
        - id: x509Certificates
          type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
          description: "<p><span data-ttu-id=\"74c48-120\">元の<code>X509Certificates \r\n\r\n    </code>をコピーします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-120\">the original<code>X509Certificates \r\n\r\n    </code> to copy.</span></span> </p>"
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="74c48-121">指定された x509Certificates が null の場合、またはそのプライマリ証明書が null の場合は。</span><span class="sxs-lookup"><span data-stu-id="74c48-121">if the provided x509Certificates is null or if its primary certificate is null.</span></span> </p>
references:
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.X509Certificates*
    name: X509Certificates
    nameWithType: X509Certificates.X509Certificates
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.X509Certificates
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getPrimary*
    name: getPrimary
    nameWithType: X509Certificates.getPrimary
    fullName: X509CertificateWithInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getPrimary
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.getSecondary*
    name: getSecondary
    nameWithType: X509Certificates.getSecondary
    fullName: X509CertificateWithInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates.getSecondary
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_with_info.yml
    name: X509CertificateWithInfo
    nameWithType: X509CertificateWithInfo
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateWithInfo
    type: Class
    summary: "<p><span data-ttu-id=\"74c48-122\">形式を 1 つのデバイスのプロビジョニング サービスの X509 証明書の情報をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-122\">Representation of a single Device Provisioning Service X509 Certificate with its info.</span></span></p>\n<p><span data-ttu-id=\"74c48-123\">このクラスは、X509 の表現を作成します。 証明書、証明書、証明書のいずれかまたは両方の情報を含むことができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-123\">this class creates a representation of an X509 certificate that can contains the certificate, the info of the certificate or both.</span></span></p>\n<p><span data-ttu-id=\"74c48-124\">このクラスを作成するユーザーが、証明書としてを指定する必要があります、<code>String \r\n\r\n    </code>から、 <b>.pem</b>または<b>して .cert</b>ファイル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-124\">To create this class, users must provide the certificate as a<code>String \r\n\r\n    </code> , from a <b>.pem</b> or <b>.cert</b> files.</span></span></p>\n\n<p><span data-ttu-id=\"74c48-125\">次の JSON では、このクラスの結果の例を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-125\">The following JSON is an example of the result of this class.</span></span> <pre><code>{\n\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                       \"-----END CERTIFICATE-----\\n\";\n\n    }\n\n    </code></pre></p>\n\n<p><span data-ttu-id=\"74c48-126\">後の送信、X509 証明書をプロビジョニング サービスが返されます、 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-126\">After send an X509 certificate to the provisioning service, it will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref>.</span></span> <span data-ttu-id=\"74c48-127\">ユーザーは、このクラスから、この情報を取得することができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-127\">User can get this info from this class,</span></span></p>\n<p><span data-ttu-id=\"74c48-128\">次の JSON 例は、どのような情報が X509 のプロビジョニング サービスが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-128\">The following JSON is an example what info the provisioning service will return for X509.</span></span> <pre><code>{\n\n        \"info\": {\n\n             \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n             \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n             \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n             \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n             \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n             \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n             \"serialNumber\": \"000000000000000000\",\n\n             \"version\": 3\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p></p>"
    syntax:
      content: public class X509CertificateWithInfo
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    name: X509Certificates
    nameWithType: X509Certificates
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
    type: Class
    summary: "<p><span data-ttu-id=\"74c48-129\">1 つのデバイスのプロビジョニング サービスの表現 X509 プライマリおよびセカンダリ証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-129\">Representation of a single Device Provisioning Service X509 Primary and Secondary Certificate.</span></span></p>\n<p><span data-ttu-id=\"74c48-130\">このクラスは、X509 の表現を作成します。 証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-130\">this class creates a representation of an X509 certificate.</span></span> <span data-ttu-id=\"74c48-131\">プライマリとセカンダリの証明書を受け取ることができますが、プライマリのみが必須です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-131\">It can receive primary and secondary certificate, but only the primary is mandatory.</span></span></p>\n<p><span data-ttu-id=\"74c48-132\">ユーザーは、証明書として、入力、<code>String \r\n\r\n    </code>から、 <b>.pem</b>ファイル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-132\">Users must provide the certificate as a<code>String \r\n\r\n    </code> , from a <b>.pem</b> files.</span></span> <span data-ttu-id=\"74c48-133\">このクラスは 1 つの両方をカプセル化は<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-133\">This class will encapsulate both in a single <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>.</span></span> <span data-ttu-id=\"74c48-134\">次の JSON では、このクラスの結果の例を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-134\">The following JSON is an example of the result of this class.</span></span> <pre><code>{\n\n        \"primary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        },\n\n        \"secondary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p><span data-ttu-id=\"74c48-135\">X509 を送信した後で成功した場合、証明書のプロビジョニング サービスが返されます、 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref>プライマリとセカンダリの両方の証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-135\">After send an X509 certificate with success, the provisioning service will return the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref> for both primary and secondary certificate.</span></span> <span data-ttu-id=\"74c48-136\">ユーザーは、このクラスから、これらの情報を取得することができ、もう一度、プライマリ情報のみが必須です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-136\">User can get these info from this class, and once again, only the primary info is mandatory.</span></span> <span data-ttu-id=\"74c48-137\">次の JSON 例は、どのような情報が X509 のプロビジョニング サービスが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-137\">The following JSON is an example what info the provisioning service will return for X509.</span></span> <pre><code>{\n\n        \"primary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        },\n\n        \"secondary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p></p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    name: X509Attestation
    nameWithType: X509Attestation
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
    type: Class
    summary: "<p><span data-ttu-id=\"74c48-138\">1 つのデバイスのプロビジョニング サービスの表現 X509<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">構成証明書</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-138\">Representation of a single Device Provisioning Service X509 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Attestation</xref>.</span></span></p>\n<p><span data-ttu-id=\"74c48-139\">プロビジョニング サービスは、デバイスの構成証明メカニズムとして、デバイスの識別子のコンポジション エンジン、またはダイスをサポートします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-139\">The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism.</span></span> <span data-ttu-id=\"74c48-140\">ダイスを使用するのには、ユーザーが、X509 を指定する必要があります証明書。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-140\">To use DICE, user must provide the X509 certificate.</span></span> <span data-ttu-id=\"74c48-141\">このクラスは、ある X509 の新しい構成証明書を作成するための手段を提供します。 証明書および抽象インターフェイスとして返す<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">構成証明書</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-141\">This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Attestation</xref>.</span></span></p>\n<p><span data-ttu-id=\"74c48-142\">構成証明書が、X509 には、3 種類の証明書のいずれかが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-142\">An X509 attestation can contains one of the 3 types of certificate:</span></span></p>\n<p><span data-ttu-id=\"74c48-143\">\r\n\r\n  <variablelist>\r\n\r\n    <varlistentry>\r\n\r\n      <b>クライアントまたはエイリアスの証明書:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-143\">\r\n\r\n  <variablelist>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Client or Alias certificate:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span></span><p><span data-ttu-id=\"74c48-144\">ClientCertificates としてこのクラスで呼び出されると、この証明書は 1 つのデバイスを認証できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-144\">Called on this class as clientCertificates, this certificate can authenticate a single device.</span></span> </p><span data-ttu-id=\"74c48-145\">\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>署名またはルート証明書:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-145\">\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Signing or Root certificate:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span></span><p><span data-ttu-id=\"74c48-146\">RootCertificates としてこのクラスで呼び出されると、この証明書は複数のデバイスを認証する複数のクライアント証明書を作成できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-146\">Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices.</span></span> </p><span data-ttu-id=\"74c48-147\">\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>CA リファレンス:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-147\">\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>CA Reference:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      </span></span><p><span data-ttu-id=\"74c48-148\">としてこのクラスで呼び出された<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref>、これは、複数のデバイスを認証する複数のクライアント証明書を作成できる rootCertificate の CA 参照します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-148\">Called on this class as <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref>, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices.</span></span> </p>\n\n    </listitem>\n\n  </variablelist>\n\n</p>\n<p><span data-ttu-id=\"74c48-149\">プロビジョニング サービスにより、ユーザーを作成<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref>と<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-149\">The provisioning service allows user to create <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>.</span></span> <span data-ttu-id=\"74c48-150\">すべての操作を<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref>で<b>さいころ</b>、ユーザーを指定する必要があります、 <b>clientCertificates</b>、経由での操作について<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>、ユーザーを指定する必要があります、 <b>rootCertificates</b>または<b> <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref></b>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-150\">For all operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>, user must provide a <b>rootCertificates</b> or a <b><xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref></b>.</span></span></p>\n<p><span data-ttu-id=\"74c48-151\">この種類の証明書ごとに、ユーザーは、2 つの証明書、プライマリおよびセカンダリを提供できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-151\">For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary.</span></span> <span data-ttu-id=\"74c48-152\">プライマリのみは必須ですが、セカンダリは省略可能です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-152\">Only the primary is mandatory, the secondary is optional.</span></span></p>\n<p><span data-ttu-id=\"74c48-153\">プロビジョニング サービスは指定された証明書を処理が、再度は返されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-153\">The provisioning service will process the provided certificates, but will never return it back.</span></span> <span data-ttu-id=\"74c48-154\">代わりに、 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getPrimaryX509CertificateInfo()</xref>と<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getSecondaryX509CertificateInfo()</xref>証明書の証明書情報が返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"74c48-154\">Instead of it, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getPrimaryX509CertificateInfo()</xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getSecondaryX509CertificateInfo()</xref> will return the certificate information for the certificates.</span></span></p>\n<p></p>"
    syntax:
      content: public class X509Attestation extends Attestation
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info.yml
    name: X509CertificateInfo
    nameWithType: X509CertificateInfo
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
    type: Class
    summary: |-
      <p><span data-ttu-id="74c48-155">表現の 1 つの X509 証明書情報がデバイスのプロビジョニング サービス用です。</span><span class="sxs-lookup"><span data-stu-id="74c48-155">Representation of a single X509 Certificate Info for the Device Provisioning Service.</span></span></p>
      <p><span data-ttu-id="74c48-156">ユーザーが X509 の結果としてプロビジョニング サービスからこの情報を受信操作します。</span><span class="sxs-lookup"><span data-stu-id="74c48-156">User receive this info from the provisioning service as result of X509 operations.</span></span></p>
      <p><span data-ttu-id="74c48-157">この情報には、一連パラメーターにはが含まれています、次の JSON の例に示します X509 証明書の情報です。</span><span class="sxs-lookup"><span data-stu-id="74c48-157">This info contains a set of parameters, The following JSON is an example of the X509 certificate info.</span></span> <pre><code>{

              "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

              "sha1Thumbprint": "0000000000000000000000000000000000",

              "sha256Thumbprint": "validEnrollmentGroupId",

              "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

              "notBeforeUtc": "2017-11-14T12:34:182Z",

              "notAfterUtc": "2017-11-20T12:34:183Z",

              "serialNumber": "000000000000000000",

              "version": 3

          }

          </code></pre></p>

      <p></p>
    syntax:
      content: public class X509CertificateInfo