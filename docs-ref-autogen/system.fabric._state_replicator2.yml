### YamlMime:ManagedReference
items:
  - uid: system.fabric._state_replicator2
    id: _state_replicator2
    parent: system.fabric
    children:
      - system.fabric._state_replicator2.getReplicatorSettings()
    href: system.fabric._state_replicator2.yml
    langs:
      - java
    name: StateReplicator2
    nameWithType: StateReplicator2
    fullName: system.fabric.StateReplicator2
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator2.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator2.java
      startLine: 6
    package: system.fabric
    summary: <p><span data-ttu-id="8f9d9-101">レプリケーションに関連する関数を公開、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>クラスによって使用されている<xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref>を高可用性を保証する状態をレプリケートします。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-101">Exposes replication-related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>
    syntax:
      content: public interface StateReplicator2 extends StateReplicator
    inheritedMembers:
      - system.fabric._state_replicator.getCopyStream()
      - system.fabric._state_replicator.getReplicationStream()
      - 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
      - system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
  - uid: system.fabric._state_replicator2.getReplicatorSettings()
    id: getReplicatorSettings()
    parent: system.fabric._state_replicator2
    href: system.fabric._state_replicator2.yml
    langs:
      - java
    name: getReplicatorSettings()
    nameWithType: StateReplicator2.getReplicatorSettings()
    fullName: ReplicatorSettings system.fabric.StateReplicator2.getReplicatorSettings()
    overload: system.fabric._state_replicator2.getReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator2.java
      startLine: 13
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8f9d9-102">実行時に、複製物作成会社の設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-102">Retrieves the replicator settings during runtime.</span></span></p>
      <p></p>
    syntax:
      content: public ReplicatorSettings getReplicatorSettings()
      return:
        type: system.fabric._replicator_settings
        description: <p><span data-ttu-id="8f9d9-103">現在<xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">system.fabric.ReplicatorSettings</xref> Service Fabric ランタイムからです。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-103">The current <xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">system.fabric.ReplicatorSettings</xref> from the Service Fabric runtime.</span></span> </p>
references:
  - uid: system.fabric._state_replicator2.getReplicatorSettings*
    name: getReplicatorSettings
    nameWithType: StateReplicator2.getReplicatorSettings
    fullName: ReplicatorSettings system.fabric.StateReplicator2.getReplicatorSettings
    package: system.fabric
  - uid: system.fabric._state_replicator.getCopyStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getCopyStream()
    nameWithType: StateReplicator.getCopyStream()
    fullName: OperationStream system.fabric.StateReplicator.getCopyStream()
    type: Method
    summary: <p><span data-ttu-id="8f9d9-104">ストリームのコピーを取得します</span><span class="sxs-lookup"><span data-stu-id="8f9d9-104">Gets copy stream</span></span> </p>
    syntax:
      content: public OperationStream getCopyStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="8f9d9-105">返される CopyStream を含む<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>を実装するオブジェクト<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-105">The returned CopyStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="8f9d9-106"><xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>オブジェクトが、CopyState から取得した<xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref>から、プライマリ レプリカを返す<xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider #getCopyState(SequenceNumber,OperationDataStream)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-106">The <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects are obtained from the CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> that the Primary replica returns from <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id="8f9d9-107">レプリカが作成され、遅延を解消するのには、する必要があります、CopyStream を取得し、送信、適用、および承認を実装するオブジェクトのコピーを開始<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-107">When a replica is created and has to catch up, it should obtain the CopyStream and begin to send, apply, and acknowledge the Copy objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="8f9d9-108">並行して、レプリカは、対応する応答<xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref>と<xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-108">In parallel, the replica responds to the corresponding <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> and <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>calls.</span></span> <span data-ttu-id="8f9d9-109">ストリームが空ときに、返された<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>メソッドは null です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-109">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: system.fabric._state_replicator.getReplicationStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getReplicationStream()
    nameWithType: StateReplicator.getReplicationStream()
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
    type: Method
    summary: <p><span data-ttu-id="8f9d9-110">レプリケーション ストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-110">Gets replication stream.</span></span> </p>
    syntax:
      content: public OperationStream getReplicationStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="8f9d9-111">ReplicationStream 実装<xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-111">The ReplicationStream implements <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span></span> <span data-ttu-id="8f9d9-112">含まれています、ReplicationStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>を実装するオブジェクト<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-112">The ReplicationStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="8f9d9-113">オブジェクトが経由でプライマリ レプリカによって提供される<xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator #replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-113">The objects are provided by the Primary replica via <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator#replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span></span> <span data-ttu-id="8f9d9-114">一般に、セカンダリ レプリカを送信する必要があります<xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-114">Generally a Secondary replica should send <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span></span> <span data-ttu-id="8f9d9-115">Service Fabric では、これを行うサービスは必要ありません、一般にサービスがすべて転送<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>コピーからオブジェクトが最初に、ストリームし、レプリケーション ストリームからの操作を転送します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-115">Although Service Fabric does not require services to do so, generally services should transfer all <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects out of the copy stream first, and then transfer operations out of the replication stream.</span></span> <span data-ttu-id="8f9d9-116">同時に両方のコピーからの転送がサポートされていますが、増加状態を適用する際の複雑さは正しく更新し、高度なサービスにのみ推奨されます。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-116">The transfer from both copies in parallel is supported but increases the complexity of applying state updates correctly and is recommended only for advanced services.</span></span> <span data-ttu-id="8f9d9-117">ストリームが空ときに、返された<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>メソッドは null です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-117">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: 'replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: <p><span data-ttu-id="8f9d9-118">セカンダリ レプリカにプライマリ レプリカから状態の変更をレプリケートし、それらの状態の変更が適用されているクォーラムの受信確認を受信します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-118">Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied.</span></span> </p>
    syntax:
      content: 'public CompletableFuture<SequenceNumber> replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: operationData
          type: system.fabric._operation_data
          description: <p><span data-ttu-id="8f9d9-119">プライマリ レプリカは、レプリケートする必要がある状態の変化を表します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-119">Represents the state change that the Primary replica wants to replicate.</span></span> </p>
        - id: sequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="8f9d9-120">Long、操作の LSN です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-120">Long, the LSN of the operation.</span></span> <span data-ttu-id="8f9d9-121">これは、タスクによって返される同じ値であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-121">Note that this is the same value which is returned by the task.</span></span> <span data-ttu-id="8f9d9-122">Out パラメーターとして指定することは、ローカル記録するには、タスクが終了する場合はコミットの準備をするサービスに便利です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-122">Providing it as an out parameter is useful for services which want to prepare the local write to commit when the task finishes.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: <p><span data-ttu-id="8f9d9-123">失われているレプリカの書き込みクォーラムです。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-123">A write quorum of replicas that have been lost.</span></span> <span data-ttu-id="8f9d9-124">操作を取り消す必要がある通知を送信するために使用します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-124">It can be used to send a notification that the operation should be canceled.</span></span> <span data-ttu-id="8f9d9-125">キャンセルが推奨でが取り消された場合でもは、操作を完了も可能性がありますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-125">Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric._sequence_numbera08ddfce
        description: '<p><span data-ttu-id="8f9d9-126">Completable の将来の long 型で、操作の LSN を返します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-126">Returns completable future of type long, the LSN of the operation.</span></span> </p>'
  - uid: system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: updateReplicatorSettings(ReplicatorSettings settings)
    nameWithType: StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
    fullName: void system.fabric.StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
    type: Method
    summary: <p><span data-ttu-id="8f9d9-127">実行時に複製物作成会社設定の変更を有効にします。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-127">Enables modification of replicator settings during runtime.</span></span> <span data-ttu-id="8f9d9-128">変更できる唯一の設定は、セキュリティ資格情報です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-128">The only setting which can be modified is the security credentials.</span></span> </p>
    syntax:
      content: public void updateReplicatorSettings(ReplicatorSettings settings)
      parameters:
        - id: settings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="8f9d9-129">新しい<xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">ReplicatorSettings</xref>で資格情報に更新します。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-129">The new <xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">ReplicatorSettings</xref> with updated credentials.</span></span> </p>
  - uid: system.fabric._state_replicator
    parent: system.fabric
    href: system.fabric._state_replicator.yml
    name: StateReplicator
    nameWithType: StateReplicator
    fullName: system.fabric.StateReplicator
    type: Interface
    summary: <p><span data-ttu-id="8f9d9-130">公開のレプリケーション関連の機能、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>クラスによって使用されている<xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref>を高可用性を保証する状態をレプリケートします。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-130">Exposes replication related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>
    syntax:
      content: public interface StateReplicator
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"8f9d9-131\">高可用性と信頼性のレプリケート状態です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f9d9-131\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"8f9d9-132\">\r\n\r\n  <b>注釈:</b>の既定の実装を提供、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>、 <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>、および<xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref>インターフェイスの実装と共に、ユーザーのサービスが使用できる、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>インターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f9d9-132\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"8f9d9-133\">インスタンス、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスが経由で取得した、 <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider、system.fabric.ReplicatorSettings)</xref>メソッドにキャストできる<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f9d9-133\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: <p><span data-ttu-id="8f9d9-134">サービスが対話するために実装する必要がありますの動作を定義、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>です。</span><span class="sxs-lookup"><span data-stu-id="8f9d9-134">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>
    syntax:
      content: public interface StateProvider