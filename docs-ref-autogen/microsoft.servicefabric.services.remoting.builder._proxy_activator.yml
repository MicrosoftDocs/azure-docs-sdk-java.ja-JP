### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_activator
    id: _proxy_activator
    parent: microsoft.servicefabric.services.remoting.builder
    children:
      - microsoft.servicefabric.services.remoting.builder._proxy_activator.createInstance()
    href: microsoft.servicefabric.services.remoting.builder._proxy_activator.yml
    langs:
      - java
    name: ProxyActivator
    nameWithType: ProxyActivator
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyActivator
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyActivator.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyActivator.java
      startLine: 3
    package: microsoft.servicefabric.services.remoting.builder
    summary: <p>プロキシ オブジェクトの作成に生成されたコードで実装されるインターフェイスを定義します。 </p>
    syntax:
      content: public interface ProxyActivator
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_activator.createInstance()
    id: createInstance()
    parent: microsoft.servicefabric.services.remoting.builder._proxy_activator
    href: microsoft.servicefabric.services.remoting.builder._proxy_activator.yml
    langs:
      - java
    name: createInstance()
    nameWithType: ProxyActivator.createInstance()
    fullName: ProxyBase microsoft.servicefabric.services.remoting.builder.ProxyActivator.createInstance()
    overload: microsoft.servicefabric.services.remoting.builder._proxy_activator.createInstance*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/builder/ProxyActivator.java
      startLine: 10
    package: microsoft.servicefabric.services.remoting.builder
    summary: |-
      <p>生成されたプロキシ型のインスタンスを作成します。</p>
      <p></p>
    syntax:
      content: public ProxyBase createInstance()
      return:
        type: microsoft.servicefabric.services.remoting.builder._proxy_base
        description: <p>生成されたプロキシとしてのインスタンス<xref uid="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false">ProxyBase</xref></p>
references:
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_activator.createInstance*
    name: createInstance
    nameWithType: ProxyActivator.createInstance
    fullName: ProxyBase microsoft.servicefabric.services.remoting.builder.ProxyActivator.createInstance
    package: microsoft.servicefabric.services.remoting.builder
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase
    nameWithType: ProxyBase
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
    type: Class
    summary: <p>リモート インターフェイスのプロキシを生成するコード ジェネレーターのリモート処理によって使用される基本クラスです。 </p>
    syntax:
      content: public class ProxyBase