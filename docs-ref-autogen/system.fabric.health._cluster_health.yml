### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._cluster_health
    id: _cluster_health
    parent: system.fabric.health
    children:
      - system.fabric.health._cluster_health.getApplicationHealthStates()
      - system.fabric.health._cluster_health.getNodeHealthStates()
    href: system.fabric.health._cluster_health.yml
    langs:
      - java
    name: ClusterHealth
    nameWithType: ClusterHealth
    fullName: system.fabric.health.ClusterHealth
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
      startLine: 11
    package: system.fabric.health
    summary: '<p>によって返される、クラスターの正常性を表す<xref uid="system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getClusterHealthAsync(system.fabric.ClusterHealthQueryDescription)</xref>です。 集計されたクラスターの正常性状態とクラスターのアプリケーションとノードのヘルス状態が含まれています。 </p>'
    syntax:
      content: public class ClusterHealth extends EntityHealth
    inheritance:
      - java.lang.Object
      - system.fabric.health._entity_health
    inheritedMembers:
      - 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
      - system.fabric.health._entity_health.getAggregatedHealthState()
      - system.fabric.health._entity_health.getHealthEvents()
      - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - uid: system.fabric.health._cluster_health.getApplicationHealthStates()
    id: getApplicationHealthStates()
    parent: system.fabric.health._cluster_health
    href: system.fabric.health._cluster_health.yml
    langs:
      - java
    name: getApplicationHealthStates()
    nameWithType: ClusterHealth.getApplicationHealthStates()
    fullName: List<ApplicationHealthState> system.fabric.health.ClusterHealth.getApplicationHealthStates()
    overload: system.fabric.health._cluster_health.getApplicationHealthStates*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
      startLine: 57
    package: system.fabric.health
    summary: |-
      <p>Health store にクラスターにあるアプリケーションの正常性状態を取得します。</p>
      <p></p>
    syntax:
      content: public List<ApplicationHealthState> getApplicationHealthStates()
      return:
        type: 5618da2dsystem.fabric.health._application_health_statea08ddfce
        description: '<p>Health store に検出されるようクラスター アプリケーションです。 アプリケーションを尊重でのみ、 <xref uid="system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()" data-throw-if-not-resolved="false">system.fabric.ClusterHealthQueryDescription#getApplicationHealthStatesFilter()</xref> (指定した場合) が返されます。 入力のフィルターが指定されていない場合は、すべてのアプリケーションが返されます。 すべてのアプリケーションを評価すると、集計されたクラスターの正常性を決定します。 </p>'
  - uid: system.fabric.health._cluster_health.getNodeHealthStates()
    id: getNodeHealthStates()
    parent: system.fabric.health._cluster_health
    href: system.fabric.health._cluster_health.yml
    langs:
      - java
    name: getNodeHealthStates()
    nameWithType: ClusterHealth.getNodeHealthStates()
    fullName: List<NodeHealthState> system.fabric.health.ClusterHealth.getNodeHealthStates()
    overload: system.fabric.health._cluster_health.getNodeHealthStates*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealth.java
      startLine: 43
    package: system.fabric.health
    summary: |-
      <p>Health store にクラスターにあるノードの正常性状態を取得します。</p>
      <p>
      すべてのノードを評価すると、集計されたクラスターの正常性を決定します。 </p>
    syntax:
      content: public List<NodeHealthState> getNodeHealthStates()
      return:
        type: 5618da2dsystem.fabric.health._node_health_statea08ddfce
        description: '<p>Health store に検出されるようクラスター ノードです。 尊重いるノードに対してのみ、 <xref uid="system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()" data-throw-if-not-resolved="false">system.fabric.ClusterHealthQueryDescription#getNodeHealthStatesFilter()</xref> (指定した場合) が返されます。 入力のフィルターが指定されていない場合は、すべてのノードが返されます。 </p>'
references:
  - uid: 5618da2dsystem.fabric.health._node_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._node_health_state
        name: NodeHealthState
        fullName: system.fabric.health.NodeHealthState
        href: system.fabric.health._node_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._cluster_health.getNodeHealthStates*
    name: getNodeHealthStates
    nameWithType: ClusterHealth.getNodeHealthStates
    fullName: List<NodeHealthState> system.fabric.health.ClusterHealth.getNodeHealthStates
    package: system.fabric.health
  - uid: 5618da2dsystem.fabric.health._application_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._application_health_state
        name: ApplicationHealthState
        fullName: system.fabric.health.ApplicationHealthState
        href: system.fabric.health._application_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._cluster_health.getApplicationHealthStates*
    name: getApplicationHealthStates
    nameWithType: ClusterHealth.getApplicationHealthStates
    fullName: List<ApplicationHealthState> system.fabric.health.ClusterHealth.getApplicationHealthStates
    package: system.fabric.health
  - uid: 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: 'EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    nameWithType: 'EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    fullName: 'system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    type: Constructor
    syntax:
      content: 'protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
      parameters:
        - id: aggregatedHealthState
          type: f75371fa
        - id: healthEvents
          type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        - id: unhealthyEvaluations
          type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  - uid: system.fabric.health._entity_health.getAggregatedHealthState()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getAggregatedHealthState()
    nameWithType: EntityHealth.getAggregatedHealthState()
    fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
    type: Method
    summary: |-
      <p>エンティティで集計された正常性状態を取得します。</p>
      <p></p>
    syntax:
      content: public HealthState getAggregatedHealthState()
      return:
        type: system.fabric.health._health_state
        description: "<p>\r\n\r\n  <xref uid=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState</xref>に基づいて Health Manager によって計算された集計された正常性状態を表す (存在する場合)、エンティティとその子でイベントを報告し、正常性ポリシーを必要に応じて。 </p>"
  - uid: system.fabric.health._entity_health.getHealthEvents()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getHealthEvents()
    nameWithType: EntityHealth.getHealthEvents()
    fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
    type: Method
    summary: "<p>エンティティで報告される正常性イベントを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>正常性イベントは、正常性ストアに送信される正常性レポートをに基づいて作成されます。 正常性ストアによって追加された追加のメタデータが含まれます。 </p>"
    syntax:
      content: public List<HealthEvent> getHealthEvents()
      return:
        type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        description: <p>エンティティの正常性イベントが報告されました。 </p>
  - uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getUnhealthyEvaluations()
    nameWithType: EntityHealth.getUnhealthyEvaluations()
    fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
    type: Method
    summary: |-
      <p>現在の集計された正常性状態が正常性マネージャーによってに返された理由を示す異常な評価を取得します。</p>
      <p></p>
    syntax:
      content: public List<HealthEvaluation> getUnhealthyEvaluations()
      return:
        type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
        description: <p>現在の集計された正常性状態が正常性マネージャーによってに返された理由を説明する異常な評価。 </p>
  - uid: system.fabric.health._entity_health
    parent: system.fabric.health
    href: system.fabric.health._entity_health.yml
    name: EntityHealth
    nameWithType: EntityHealth
    fullName: system.fabric.health.EntityHealth
    type: Class
    summary: <p>関連するクラスをすべてのエンティティのヘルスの基本クラスを表します。 </p>
    syntax:
      content: public class EntityHealth
  - uid: system.fabric.health._node_health_state
    parent: system.fabric.health
    href: system.fabric.health._node_health_state.yml
    name: NodeHealthState
    nameWithType: NodeHealthState
    fullName: system.fabric.health.NodeHealthState
    type: Class
    summary: <p>ノードの id および集計された正常性状態を含むノードのヘルス状態を表します。 </p>
    syntax:
      content: public class NodeHealthState
  - uid: system.fabric.health._application_health_state
    parent: system.fabric.health
    href: system.fabric.health._application_health_state.yml
    name: ApplicationHealthState
    nameWithType: ApplicationHealthState
    fullName: system.fabric.health.ApplicationHealthState
    type: Class
    summary: <p>アプリケーション識別子と、集計された正常性状態を含む、アプリケーションのヘルス状態を表します。 </p>
    syntax:
      content: public class ApplicationHealthState extends EntityHealthState
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: <p>A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体 </p>
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._health_evaluation
    parent: system.fabric.health
    href: system.fabric.health._health_evaluation.yml
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    type: Class
    summary: <p>データとエンティティのヘルスを評価する正常性ストアによって使用されるアルゴリズムを記述する正常性評価を表します。 </p>
    syntax:
      content: public class HealthEvaluation
  - uid: system.fabric._cluster_health_query_description.getNodeHealthStatesFilter()
    parent: system.fabric._cluster_health_query_description
    href: system.fabric._cluster_health_query_description.yml
    name: getNodeHealthStatesFilter()
    nameWithType: ClusterHealthQueryDescription.getNodeHealthStatesFilter()
    fullName: NodeHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getNodeHealthStatesFilter()
    type: Method
    summary: "<p>フィルターを取得<xref uid=\"system.fabric.health._node_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.NodeHealthState</xref>子。 フィルターに一致する子のみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するノードのみが返されます。 すべてのノードは、集計されたクラスターの正常性状態の評価に使用されます。 フィルターが指定されていない場合は、すべてのクラスター ノードが返されます。 </p>"
    syntax:
      content: public NodeHealthStatesFilter getNodeHealthStatesFilter()
      return:
        type: system.fabric._node_health_states_filter
        description: <p>フィルター <xref uid="system.fabric.health._node_health_state" data-throw-if-not-resolved="false">system.fabric.health.NodeHealthState</xref>子。 </p>
  - uid: system.fabric._cluster_health_query_description.getApplicationHealthStatesFilter()
    parent: system.fabric._cluster_health_query_description
    href: system.fabric._cluster_health_query_description.yml
    name: getApplicationHealthStatesFilter()
    nameWithType: ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
    fullName: ApplicationHealthStatesFilter system.fabric.ClusterHealthQueryDescription.getApplicationHealthStatesFilter()
    type: Method
    summary: "<p>フィルターを取得<xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>子。 フィルターに一致する子のみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するアプリケーションのみが返されます。 すべてのアプリケーションは、集計されたクラスターの正常性状態の評価に使用されます。 フィルターが指定されていない場合は、クラスターのすべてのアプリケーションが返されます。 </p>"
    syntax:
      content: public ApplicationHealthStatesFilter getApplicationHealthStatesFilter()
      return:
        type: system.fabric._application_health_states_filter
        description: <p>フィルター <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref>子。 </p>
  - uid: system.fabric._health_client.getClusterHealthAsync(ClusterHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    name: getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    fullName: CompletableFuture<ClusterHealth> system.fabric.HealthClient.getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
    type: Method
    summary: |-
      <p>非同期的にクエリの説明を使用して、Service Fabric クラスターの正常性を取得します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ClusterHealth> getClusterHealthAsync(ClusterHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._cluster_health_query_description
          description: <p>正常性ポリシーのようにクエリ パラメーターを定義するクエリの説明がなどにフィルター処理します。 </p>
      return:
        type: 9cdf14d0system.fabric.health._cluster_healtha08ddfce
        description: <p>Service Fabric クラスターの正常性。 </p>