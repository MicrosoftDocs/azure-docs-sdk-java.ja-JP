### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._client_factory
    id: _client_factory
    parent: com.microsoft.azure.servicebus
    children:
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString(String,String)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString(String,String,ReceiveMode)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync(String,String)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)'
      - 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)'
      - com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString(String)
      - 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString(String,ReceiveMode)'
      - com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync(String)
      - 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)'
      - com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
      - 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)'
      - com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
      - 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)'
      - com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionString(String)
      - com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringAsync(String)
      - com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
      - com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: ClientFactory
    nameWithType: ClientFactory
    fullName: com.microsoft.azure.servicebus.ClientFactory
    type: Class
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 14
    package: com.microsoft.azure.servicebus
    summary: <p>メッセージの送信者と受信者を作成するためのユーティリティ クラスです。 </p>
    syntax:
      content: public class ClientFactory
    inheritance:
      - java.lang.Object
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString(String,String)'
    id: 'acceptSessionFromConnectionString(String,String)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)'
    fullName: 'static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 210
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードを指定したセッション id を持つ service bus の接続文字列からです。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
      return:
        type: com.microsoft.azure.servicebus._i_message_session
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_session\" data-throw-if-not-resolved=\"false\">IMessageSession</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、セッションを受け入れられることはできません。 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString(String,String,ReceiveMode)'
    id: 'acceptSessionFromConnectionString(String,String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    fullName: 'static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 224
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>指定したセッション id を持つ service bus の接続文字列から。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static IMessageSession acceptSessionFromConnectionString(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: com.microsoft.azure.servicebus._i_message_session
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_session\" data-throw-if-not-resolved=\"false\">IMessageSession</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、セッションを受け入れられることはできません。 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync(String,String)'
    id: 'acceptSessionFromConnectionStringAsync(String,String)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)'
    fullName: 'static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 270
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードを指定したセッション id を持つ service bus の接続文字列から非同期的にします。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sessiona08ddfce
        description: <p>保留中のセッションの受け入れを表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)'
    id: 'acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    fullName: 'static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 282
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref> service bus の接続文字列を指定したセッション id を持つから非同期的にします。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sessiona08ddfce
        description: <p>保留中のセッションの受け入れを表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)'
    id: 'acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    fullName: 'static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 237
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードを指定したセッション id を持つサービス バス接続文字列ビルダーからです。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
      return:
        type: com.microsoft.azure.servicebus._i_message_session
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_session\" data-throw-if-not-resolved=\"false\">IMessageSession</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、セッションを受け入れられることはできません。 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)'
    id: 'acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder,String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    fullName: 'static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 251
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>指定したセッション id を持つサービス バス接続文字列ビルダーから。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static IMessageSession acceptSessionFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: com.microsoft.azure.servicebus._i_message_session
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_session\" data-throw-if-not-resolved=\"false\">IMessageSession</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>場合は、セッションを受け入れられることはできません。 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)'
    id: 'acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    fullName: 'static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 294
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードを指定したセッション id を持つサービス バス接続文字列ビルダーから非同期的にします。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sessiona08ddfce
        description: <p>保留中のセッションの受け入れを表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)'
    id: 'acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder,String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    fullName: 'static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 306
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>受け入れる、 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>指定したセッション id を持つサービス バス接続文字列ビルダーから非同期的にします。セッション Id は null にすること、null、サービスの場合は、最初の使用可能なセッションを返します。</p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, String sessionId, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
        - id: sessionId
          type: '26831127'
          description: <p>セッション id に、null の場合、サービスは最初の使用可能なセッションを返しますそれ以外の場合、サービスはセッションを返す指定 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sessiona08ddfce
        description: <p>保留中のセッションの受け入れを表す CompletableFuture </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString(String)
    id: createMessageReceiverFromConnectionString(String)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageReceiverFromConnectionString(String amqpConnectionString)
    nameWithType: ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
    fullName: static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 89
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードでの service bus の接続文字列から<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString)
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
      return:
        type: com.microsoft.azure.servicebus._i_message_receiver
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_receiver\" data-throw-if-not-resolved=\"false\">IMessageReceiver</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>受信者を作成できない場合 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString(String,ReceiveMode)'
    id: 'createMessageReceiverFromConnectionString(String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)'
    fullName: 'static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 103
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードでの service bus の接続文字列から<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: 'public static IMessageReceiver createMessageReceiverFromConnectionString(String amqpConnectionString, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: com.microsoft.azure.servicebus._i_message_receiver
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_receiver\" data-throw-if-not-resolved=\"false\">IMessageReceiver</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>受信者を作成できない場合 </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync(String)
    id: createMessageReceiverFromConnectionStringAsync(String)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
    fullName: static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 152
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードで接続文字列から非同期的に<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString)
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_receivera08ddfce
        description: <p>保留中の作成を表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)'
    id: 'createMessageReceiverFromConnectionStringAsync(String,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)'
    fullName: 'static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 163
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref>モードで接続文字列から非同期的に<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringAsync(String amqpConnectionString, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_receivera08ddfce
        description: <p>保留中の作成を表す CompletableFuture </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
    id: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 118
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref> ConnectionStringBuilder からモード <pre><xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));
      </pre></p>
      <p></p>
    syntax: &ref_1
      content: public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref>\r\n\r\n</p>"
      return:
        type: com.microsoft.azure.servicebus._i_message_receiver
        description: <p><xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>インスタンス </p>
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>受信者を作成できない場合 </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)'
    id: 'createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    fullName: 'static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 134
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> ConnectionStringBuilder から <pre><xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> messageReceiver = <xref uid="com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)" data-throw-if-not-resolved="false">ClientFactory.createMessageReceiverFromConnectionStringBuilder</xref>(new ConnectionStringBuilder(connectionString, queueName), <xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode.PEEKLOCK</xref>);
      </pre></p>
      <p></p>
    syntax:
      content: 'public static IMessageReceiver createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref>\r\n\r\n</p>"
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: com.microsoft.azure.servicebus._i_message_receiver
        description: <p><xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>インスタンス </p>
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>受信者を作成できない場合 </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
    id: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 174
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref> ConnectionStringBuilder から非同期的にモード</p>
      <p></p>
    syntax:
      content: public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_receivera08ddfce
        description: <p>保留中の作成を表す CompletableFuture </p>
  - uid: 'com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)'
    id: 'createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: 'createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    nameWithType: 'ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    fullName: 'static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 185
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> ConnectionStringBuilder から非同期的に</p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<IMessageReceiver> createMessageReceiverFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> PeekLock または ReceiveAndDelete </p>"
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_receivera08ddfce
        description: <p>保留中の作成を表す CompletableFuture </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionString(String)
    id: createMessageSenderFromConnectionString(String)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageSenderFromConnectionString(String amqpConnectionString)
    nameWithType: ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
    fullName: static IMessageSender com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString(String amqpConnectionString)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 29
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Service bus の接続文字列からメッセージの送信者を作成する<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: public static IMessageSender createMessageSenderFromConnectionString(String amqpConnectionString)
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
      return:
        type: com.microsoft.azure.servicebus._i_message_sender
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_sender\" data-throw-if-not-resolved=\"false\">IMessageSender</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>送信者を作成できない場合 </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringAsync(String)
    id: createMessageSenderFromConnectionStringAsync(String)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
    fullName: static CompletableFuture<IMessageSender> com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 58
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>接続文字列から非同期的にメッセージの送信者を作成する<ulink url="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas">Shared Access Signature</ulink></p>
      <p></p>
    syntax:
      content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringAsync(String amqpConnectionString)
      parameters:
        - id: amqpConnectionString
          type: '26831127'
          description: <p>接続文字列 </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sendera08ddfce
        description: <p>保留中の作成を表す CompletableFuture <xref uid="com.microsoft.azure.servicebus._i_message_sender" data-throw-if-not-resolved="false">IMessageSender</xref>インスタンス </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
    id: createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: static IMessageSender com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilder*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 44
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>ConnectionStringBuilder からメッセージの送信者を作成します。 <pre><xref uid="com.microsoft.azure.servicebus._i_message_sender" data-throw-if-not-resolved="false">IMessageSender</xref> messageSender = ClientFactory.createMessageSenderFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));
      </pre></p>
      <p></p>
    syntax:
      content: public static IMessageSender createMessageSenderFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
      return:
        type: com.microsoft.azure.servicebus._i_message_sender
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._i_message_sender\" data-throw-if-not-resolved=\"false\">IMessageSender</xref>インスタンス </p>"
    exceptions:
      - type: 8256ba40
        description: <p>現在のスレッドが待機中に中断された場合 </p>
      - type: 73fec9fb
        description: <p>送信者を作成できない場合 </p>
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
    id: createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    langs:
      - java
    name: createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: static CompletableFuture<IMessageSender> com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
    overload: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilderAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/ClientFactory.java
      startLine: 69
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>ConnectionStringBuilder から非同期的にメッセージの送信者を作成します。</p>
      <p></p>
    syntax:
      content: public static CompletableFuture<IMessageSender> createMessageSenderFromConnectionStringBuilderAsync(ConnectionStringBuilder amqpConnectionStringBuilder)
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
          description: <p>接続文字列ビルダー </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_message_sendera08ddfce
        description: <p>保留中の作成を表す CompletableFuture <xref uid="com.microsoft.azure.servicebus._i_message_sender" data-throw-if-not-resolved="false">IMessageSender</xref>インスタンス </p>
references:
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionString*
    name: createMessageSenderFromConnectionString
    nameWithType: ClientFactory.createMessageSenderFromConnectionString
    fullName: static IMessageSender com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionString
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilder*
    name: createMessageSenderFromConnectionStringBuilder
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilder
    fullName: static IMessageSender com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilder
    package: com.microsoft.azure.servicebus
  - uid: 9cdf14d0com.microsoft.azure.servicebus._i_message_sendera08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: com.microsoft.azure.servicebus._i_message_sender
        name: IMessageSender
        fullName: com.microsoft.azure.servicebus.IMessageSender
        href: com.microsoft.azure.servicebus._i_message_sender.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringAsync*
    name: createMessageSenderFromConnectionStringAsync
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringAsync
    fullName: static CompletableFuture<IMessageSender> com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageSenderFromConnectionStringBuilderAsync*
    name: createMessageSenderFromConnectionStringBuilderAsync
    nameWithType: ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
    fullName: static CompletableFuture<IMessageSender> com.microsoft.azure.servicebus.ClientFactory.createMessageSenderFromConnectionStringBuilderAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionString*
    name: createMessageReceiverFromConnectionString
    nameWithType: ClientFactory.createMessageReceiverFromConnectionString
    fullName: static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionString
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder*
    name: createMessageReceiverFromConnectionStringBuilder
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder
    fullName: static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder
    package: com.microsoft.azure.servicebus
  - uid: 9cdf14d0com.microsoft.azure.servicebus._i_message_receivera08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: com.microsoft.azure.servicebus._i_message_receiver
        name: IMessageReceiver
        fullName: com.microsoft.azure.servicebus.IMessageReceiver
        href: com.microsoft.azure.servicebus._i_message_receiver.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringAsync*
    name: createMessageReceiverFromConnectionStringAsync
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringAsync
    fullName: static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilderAsync*
    name: createMessageReceiverFromConnectionStringBuilderAsync
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
    fullName: static CompletableFuture<IMessageReceiver> com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilderAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionString*
    name: acceptSessionFromConnectionString
    nameWithType: ClientFactory.acceptSessionFromConnectionString
    fullName: static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionString
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilder*
    name: acceptSessionFromConnectionStringBuilder
    nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilder
    fullName: static IMessageSession com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilder
    package: com.microsoft.azure.servicebus
  - uid: 9cdf14d0com.microsoft.azure.servicebus._i_message_sessiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: com.microsoft.azure.servicebus._i_message_session
        name: IMessageSession
        fullName: com.microsoft.azure.servicebus.IMessageSession
        href: com.microsoft.azure.servicebus._i_message_session.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringAsync*
    name: acceptSessionFromConnectionStringAsync
    nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync
    fullName: static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._client_factory.acceptSessionFromConnectionStringBuilderAsync*
    name: acceptSessionFromConnectionStringBuilderAsync
    nameWithType: ClientFactory.acceptSessionFromConnectionStringBuilderAsync
    fullName: static CompletableFuture<IMessageSession> com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringBuilderAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p>2 つを表す列挙体は、Azure Service Bus をサポートしているモードを受信します。</p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus._receive_mode.PEEKLOCK
    parent: com.microsoft.azure.servicebus._receive_mode
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: PEEKLOCK
    nameWithType: ReceiveMode.PEEKLOCK
    fullName: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
    type: Field
    summary: <p>このモードでは、キューまたはサブスクリプションから受信したメッセージは削除されません、代わりに一時的にロックされている、受信者は、他の受信者を非表示にすることにします。 3 つのイベントのいずれかのサービスが待機します。<itemizedlist><listitem><p>受信側では、メッセージを正常に処理する場合を呼び出すし、メッセージは削除されます。 </p></listitem><listitem><p>場合は、受信側は、メッセージを正常に処理できないことを決定したらを呼び出すと、メッセージがロックを解除し、他の受信者に使用可能です。 </p></listitem><listitem><p>受信側は、時間で、後の時点へのメッセージの処理を遅延する場合、呼び出しし、メッセージを延期します。 遅延実行だけが受信できる、シーケンス番号。 </p></listitem><listitem><p>受信側は、メッセージを配信不能メッセージを希望する場合を呼び出すし、メッセージは配信不能キューと呼ばれる特別なサブキューに移動されます。 </p></listitem><listitem><p>受信側のこれらのメソッドも構成可能な期間内 (既定では、60 秒) を呼び出す場合、受信側が失敗したサービスが前提とします。 この場合、ように動作、受信側が呼び出されると、他の受信者にメッセージを使用できるようにします。 </p></listitem></itemizedlist></p>
    syntax:
      content: public PEEKLOCK
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p>Azure Service Bus にメッセージを送信するメッセージの送信者を表します。</p>
      <p></p>
    syntax:
      content: public interface IMessageSender
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: <p>これは、すべてのエラーの場合のサービス バスを生成する基本例外です。 </p>
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
    name: ConnectionStringBuilder
    nameWithType: ConnectionStringBuilder
    fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    type: Class
    summary: |-
      <p>このクラスは、ServiceBus エンティティとの通信を確立できる接続文字列を構築するために使用できます。 既存の接続文字列で基本的な検証を実行するも使用できます。 </p>
      <p>サンプル コードに示します。 <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                   "ServiceBusNamespaceName", 

                                                   "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                   "SharedAccessSignatureKeyName", 

                                                   "SharedAccessSignatureKey");

           

          String connectionString = connectionStringBuilder.toString();

          </code></pre></p>

      <p>接続文字列は、基本的に、文字列で区切られたキーと値のペアで構成されている「;」です。 基本形式は {{ &lt;} キー {&gt;} = { &lt;} 値 {&gt;} [; {&lt;} キー {&gt;} = { &lt;} 値 {&gt;}]。 サポートされているキー名が次のような場所。<itemizedlist><listitem><p>エンドポイントで servicebus 名前空間を指す URL </p></listitem><listitem><p>EntityPath の service bus エンティティへのパス (キュー/トピック/サブスクリプション/)。 キューおよびトピックでは、エンティティの名前だけです。 サブスクリプションの場合、パスは&lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></listitem><listitem><p>SharedAccessKeyName - 名前空間、またはエンティティの対応する共有アクセス ポリシーのルールにキー名。 </p></listitem><listitem><p>SharedAccessKey - 名前空間またはエンティティの対応する共有アクセス ポリシー規則のキー値。 </p></listitem><listitem><p>SharedAccessSignatureToken - キー名とキーの値の代わりにクライアントを提供できます、既に生成された SAS トークン。 </p></listitem><listitem><p>OperationTimeout - すべての送信者、受信者およびこの接続文字列から作成されたクライアントに使用する既定のタイムアウト。 </p></listitem><listitem><p><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> -再試行ポリシーの名前。 </p></listitem></itemizedlist></p>
    syntax:
      content: public class ConnectionStringBuilder
  - uid: com.microsoft.azure.servicebus._i_message_receiver
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    name: IMessageReceiver
    nameWithType: IMessageReceiver
    fullName: com.microsoft.azure.servicebus.IMessageReceiver
    type: Interface
    summary: <p>メッセージ受信側のインターフェイスを定義します。 キューとサブスクリプションからメッセージを受信し、それらを認識する、MessageReceiver を使用できます。 </p>
    syntax:
      content: public interface IMessageReceiver
  - uid: com.microsoft.azure.servicebus._client_factory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._client_factory
    href: com.microsoft.azure.servicebus._client_factory.yml
    name: createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: static IMessageReceiver com.microsoft.azure.servicebus.ClientFactory.createMessageReceiverFromConnectionStringBuilder(ConnectionStringBuilder amqpConnectionStringBuilder)
    type: Method
    summary: |-
      <p>作成<xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref>既定の<xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref> ConnectionStringBuilder からモード <pre><xref uid="com.microsoft.azure.servicebus._i_message_receiver" data-throw-if-not-resolved="false">IMessageReceiver</xref> messageReceiver = ClientFactory.createMessageReceiverFromConnectionStringBuilder(new ConnectionStringBuilder(connectionString, queueName));
      </pre></p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.servicebus._i_message_session
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: IMessageSession
    nameWithType: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    type: Interface
    summary: |-
      <p>セッション オブジェクトを表します。 <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref>セッションでの操作を実行するために使用できます。 </p>
      <p>サービス バス セッション、AMQP 1.0 プロトコルでは"Groups"とも呼ばれますとは、一連の関連メッセージをバインド解除済みです。 ServiceBus では、セッションでメッセージの順序を保証します。 </p>
      <p>センダは、セッションを作成することができますを設定してトピックまたはキューにメッセージを送信するときに、 <xref uid="" data-throw-if-not-resolved="false">#sessionId をメッセージ</xref>プロパティを<xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">メッセージ</xref>一部のアプリケーションに一意の識別子を定義します。 AMQP 1.0 プロトコル レベルでは、この値は、グループ id プロパティにマップされます。 </p>
      <p>セッションは、キューまたはトピックのサブスクリプションで、セッションのセッション Id で、少なくとも 1 つのメッセージが表示される時に存在するようになります。 セッションが存在する場合は定義されている時点、またはセッションの有効期限が切れる場合または非表示のジェスチャです。 </p>
    syntax:
      content: public interface IMessageSession
  - uid: com.microsoft.azure.servicebus.primitives._messaging_factory
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
    type: Class
    summary: <p>関連するすべての AMQP の詳細を AMQP 接続をカプセル化し、ライフ サイクルを管理の概要は次のサイクルです。 このクラスの各インスタンスは、名前空間への AMQP 接続を 1 つを表します。 アプリケーションでは、複数の送信者、受信者または同じ MessagingFacotry インスタンスを使用してクライアントを作成する場合は、それらの送信者、受信者またはクライアントと名前空間に同じ接続が共有されます。 </p>
    syntax:
      content: public class MessagingFactory