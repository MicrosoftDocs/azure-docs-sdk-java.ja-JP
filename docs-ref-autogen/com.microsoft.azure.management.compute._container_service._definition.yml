### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.management.compute._container_service._definition
    id: _definition
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition.yml
    langs:
      - java
    name: ContainerService.Definition
    nameWithType: ContainerService.Definition
    fullName: com.microsoft.azure.management.compute.ContainerService.Definition
    type: Interface
    source:
      remote:
        path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
        branch: v1.3.0
        repo: 'https://github.com/Azure/azure-sdk-for-java'
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/ContainerService.java
      startLine: 104
    package: com.microsoft.azure.management.compute
    summary: <p>コンテナー サービスに関連するすべての定義のコンテナー インターフェイスです。 </p>
    syntax:
      content: 'public interface Definition extends ContainerService.DefinitionStages.Blank,ContainerService.DefinitionStages.WithGroup,ContainerService.DefinitionStages.WithOrchestrator,ContainerService.DefinitionStages.WithMasterNodeCount,ContainerService.DefinitionStages.WithMasterLeafDomainLabel,ContainerService.DefinitionStages.WithLinux,ContainerService.DefinitionStages.WithLinuxRootUsername,ContainerService.DefinitionStages.WithLinuxSshKey,ContainerService.DefinitionStages.WithAgentPool,ContainerService.DefinitionStages.WithServicePrincipalProfile,ContainerService.DefinitionStages.WithDiagnostics,ContainerService.DefinitionStages.WithCreate'
    inheritedMembers:
      - com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
      - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
      - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.defineAgentPool(String)
      - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
      - com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.withDiagnostics()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.withLinux()
      - com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.withMasterLeafDomainLabel(String)
      - com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.withMasterNodeCount(ContainerServiceMasterProfileCount)
      - com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.withRootUsername(String)
      - 'com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.withServicePrincipal(String,String)'
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.withSshKey(String)
      - com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
      - 'com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)'
      - 'com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)'
references:
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
    parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
    href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
    name: create()
    nameWithType: Creatable<T>.create()
    fullName: T com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
    type: Method
    summary: |-
      <p>作成要求を実行します。</p>
      <p></p>
    syntax:
      content: public T create()
      return:
        type: 8ce1ecb9
        description: <p>リソースの作成 </p>
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
    parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
    href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
    name: createAsync(final ServiceCallback<T> callback)
    nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
    fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
    type: Method
    summary: |-
      <p>要求をキューに配置し、システム リソースを利用するための HTTP クライアントを許可します。</p>
      <p></p>
    syntax:
      content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
      parameters:
        - id: callback
          type: fe95c2b0
          description: <p>成功と失敗を処理するためのコールバック </p>
      return:
        type: c0371a4e
        description: <p>キャンセル要求へのハンドル </p>
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
    parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
    href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
    name: createAsync()
    nameWithType: Creatable<T>.createAsync()
    fullName: Observable<Indexable> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
    type: Method
    summary: |-
      <p>要求をキューに配置し、システム リソースを利用するための HTTP クライアントを許可します。</p>
      <p></p>
    syntax:
      content: public Observable<Indexable> createAsync()
      return:
        type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model._indexablea08ddfce
        description: <p>要求の監視対象 </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.defineAgentPool(String)
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.yml
    name: defineAgentPool(String name)
    nameWithType: ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
    fullName: ContainerServiceAgentPool.DefinitionStages.Blank<WithCreate> com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
    type: Method
    summary: |-
      <p>コンテナー サービスにアタッチされているエージェント プール プロファイルの定義を開始します。</p>
      <p></p>
    syntax:
      content: public ContainerServiceAgentPool.DefinitionStages.Blank<WithCreate> defineAgentPool(String name)
      parameters:
        - id: name
          type: '26831127'
          description: <p>エージェント プール プロファイルの名前 </p>
      return:
        type: 58280ecccom.microsoft.azure.management.compute._container_service._definition_stages._with_createa08ddfce
        description: <p>エージェント プール プロファイルの構成を表すステージ </p>
  - uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
    parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
    href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
    name: key()
    nameWithType: Indexable.key()
    fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
    type: Method
    syntax:
      content: public String key()
      return:
        type: '26831127'
        description: <p>インデックスのキー。 </p>
  - uid: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
    parent: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name
    href: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.yml
    name: name()
    nameWithType: HasName.name()
    fullName: String com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
    type: Method
    syntax:
      content: public String name()
      return:
        type: '26831127'
        description: <p>リソースの名前 </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withDcosOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    name: withDcosOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
    type: Method
    summary: <p>コンテナー サービスの DCOS オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithDiagnostics withDcosOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.withDiagnostics()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.yml
    name: withDiagnostics()
    nameWithType: ContainerService.DefinitionStages.WithDiagnostics.withDiagnostics()
    fullName: WithLinux com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithDiagnostics.withDiagnostics()
    type: Method
    summary: <p>診断を有効にします。 </p>
    syntax:
      content: public WithLinux withDiagnostics()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
        description: <p>定義の作成の段階 </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withKubernetesOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    name: withKubernetesOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
    fullName: WithServicePrincipalProfile com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
    type: Method
    summary: <p>コンテナー サービスの Kubernetes オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithServicePrincipalProfile withKubernetesOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.withLinux()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.yml
    name: withLinux()
    nameWithType: ContainerService.DefinitionStages.WithLinux.withLinux()
    fullName: WithLinuxRootUsername com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinux.withLinux()
    type: Method
    summary: <p>Linux の設定を指定するように定義を開始します。 </p>
    syntax:
      content: public WithLinuxRootUsername withLinux()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
        description: <p>Linux 固有の設定の構成を表すステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.withMasterLeafDomainLabel(String)
    parent: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
    href: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.yml
    name: withMasterLeafDomainLabel(String dnsLabel)
    nameWithType: ContainerService.DefinitionStages.WithMasterLeafDomainLabel.withMasterLeafDomainLabel(String dnsLabel)
    fullName: WithAgentPool com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterLeafDomainLabel.withMasterLeafDomainLabel(String dnsLabel)
    type: Method
    summary: <p>マスター ノードの Dns ラベルを指定します。 </p>
    syntax:
      content: public WithAgentPool withMasterLeafDomainLabel(String dnsLabel)
      parameters:
        - id: dnsLabel
          type: '26831127'
          description: <p>Dns プレフィックス </p>
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.withMasterNodeCount(ContainerServiceMasterProfileCount)
    parent: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
    href: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.yml
    name: withMasterNodeCount(ContainerServiceMasterProfileCount count)
    nameWithType: ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
    fullName: WithMasterLeafDomainLabel com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
    type: Method
    summary: <p>マスター ノード数を指定します。 </p>
    syntax:
      content: public WithMasterLeafDomainLabel withMasterNodeCount(ContainerServiceMasterProfileCount count)
      parameters:
        - id: count
          type: com.microsoft.azure.management.compute._container_service_master_profile_count
          description: <p>マスターのプロファイルの数 (1、3、5) </p>
      return:
        type: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.withRootUsername(String)
    parent: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
    href: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.yml
    name: withRootUsername(String rootUserName)
    nameWithType: ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
    fullName: WithLinuxSshKey com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
    type: Method
    summary: <p>Linux のルートのユーザー名を指定するように定義を開始します。 </p>
    syntax:
      content: public WithLinuxSshKey withRootUsername(String rootUserName)
      parameters:
        - id: rootUserName
          type: '26831127'
          description: <p>ルート ユーザー名 </p>
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
        description: <p>定義の次のステージ </p>
  - uid: 'com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.withServicePrincipal(String,String)'
    parent: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
    href: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.yml
    name: 'withServicePrincipal(String clientId, String secret)'
    nameWithType: 'ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)'
    fullName: 'WithLinux com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)'
    type: Method
    summary: <p>クラスターのサービス プリンシパルのプロパティです。 </p>
    syntax:
      content: 'public WithLinux withServicePrincipal(String clientId, String secret)'
      parameters:
        - id: clientId
          type: '26831127'
          description: <p>サービス プリンシパルの ID です。 </p>
        - id: secret
          type: '26831127'
          description: <p>サービス プリンシパルに関連付けられているシークレットのパスワード。 </p>
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
        description: <p>次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.withSshKey(String)
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.yml
    name: withSshKey(String sshKeyData)
    nameWithType: ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
    fullName: WithMasterNodeCount com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
    type: Method
    summary: <p>キーを指定する Linux ssh 定義を開始します。 </p>
    syntax:
      content: public WithMasterNodeCount withSshKey(String sshKeyData)
      parameters:
        - id: sshKeyData
          type: '26831127'
          description: <p>SSH キーのデータ </p>
      return:
        type: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.withSwarmOrchestration()
    parent: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    name: withSwarmOrchestration()
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
    fullName: WithDiagnostics com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
    type: Method
    summary: <p>コンテナー サービスの群オーケストレーションの種類を指定します。 </p>
    syntax:
      content: public WithDiagnostics withSwarmOrchestration()
      return:
        type: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
        description: <p>定義の次のステージ </p>
  - uid: 'com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)'
    parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
    href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
    name: 'withTag(String key, String value)'
    nameWithType: 'Resource.DefinitionWithTags<T>.withTag(String key, String value)'
    fullName: 'T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)'
    type: Method
    summary: <p>リソースにタグを追加します。 </p>
    syntax:
      content: 'public T withTag(String key, String value)'
      parameters:
        - id: key
          type: '26831127'
          description: <p>タグのキー </p>
        - id: value
          type: '26831127'
          description: <p>タグの値 </p>
      return:
        type: 8ce1ecb9
        description: <p>定義の次のステージ </p>
  - uid: 'com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)'
    parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
    href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
    name: 'withTags(Map<String, String> tags)'
    nameWithType: 'Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)'
    fullName: 'T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)'
    type: Method
    summary: <p>として、リソースのタグを指定します、<xref uid="" data-throw-if-not-resolved="false">マップ</xref>です。 </p>
    syntax:
      content: 'public T withTags(Map<String, String> tags)'
      parameters:
        - id: tags
          type: 689c8cb5
          description: <p><xref uid="" data-throw-if-not-resolved="false">マップ</xref>タグの </p>
      return:
        type: 8ce1ecb9
        description: <p>定義の次のステージ </p>
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._blank
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._blank.yml
    name: ContainerService.DefinitionStages.Blank
    nameWithType: ContainerService.DefinitionStages.Blank
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.Blank
    type: Interface
    summary: <p>コンテナー サービス定義の最初の段階です。 </p>
    syntax:
      content: public interface Blank
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_group
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_group.yml
    name: ContainerService.DefinitionStages.WithGroup
    nameWithType: ContainerService.DefinitionStages.WithGroup
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithGroup
    type: Interface
    summary: <p>リソース グループを指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithGroup
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_orchestrator.yml
    name: ContainerService.DefinitionStages.WithOrchestrator
    nameWithType: ContainerService.DefinitionStages.WithOrchestrator
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithOrchestrator
    type: Interface
    summary: <p>オーケストレーションの種類を指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithOrchestrator
  - uid: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition7b1f60ddf849e0cf72b91a033705795a.yml
    name: ContainerService.DefinitionStages.WithMasterNodeCount
    nameWithType: ContainerService.DefinitionStages.WithMasterNodeCount
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterNodeCount
    type: Interface
    summary: <p>マスター ノード数を指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithMasterNodeCount
  - uid: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition9cdb49525c74d920b33cb95a08c66512.yml
    name: ContainerService.DefinitionStages.WithMasterLeafDomainLabel
    nameWithType: ContainerService.DefinitionStages.WithMasterLeafDomainLabel
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithMasterLeafDomainLabel
    type: Interface
    summary: <p>マスター Dns ラベルを指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithMasterLeafDomainLabel
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux.yml
    name: ContainerService.DefinitionStages.WithLinux
    nameWithType: ContainerService.DefinitionStages.WithLinux
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinux
    type: Interface
    summary: <p>Linux 固有の設定の定義の開始を許可するコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithLinux
  - uid: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition6da453015845e3af0f9bee8b32fc2b92.yml
    name: ContainerService.DefinitionStages.WithLinuxRootUsername
    nameWithType: ContainerService.DefinitionStages.WithLinuxRootUsername
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxRootUsername
    type: Interface
    summary: <p>特定 Linux ルート ユーザー名を許可するコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithLinuxRootUsername
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_linux_ssh_key.yml
    name: ContainerService.DefinitionStages.WithLinuxSshKey
    nameWithType: ContainerService.DefinitionStages.WithLinuxSshKey
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithLinuxSshKey
    type: Interface
    summary: <p>Linux SSH キーを特定できないようにするコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithLinuxSshKey
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_agent_pool.yml
    name: ContainerService.DefinitionStages.WithAgentPool
    nameWithType: ContainerService.DefinitionStages.WithAgentPool
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithAgentPool
    type: Interface
    summary: <p>エージェント プール プロファイルを指定できるようにコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithAgentPool
  - uid: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition5fa875177a5766217c27dc23263e402a.yml
    name: ContainerService.DefinitionStages.WithServicePrincipalProfile
    nameWithType: ContainerService.DefinitionStages.WithServicePrincipalProfile
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithServicePrincipalProfile
    type: Interface
    summary: <p>サービス プリンシパルをクラスターのプロパティを許可する段階です。 </p>
    syntax:
      content: public interface WithServicePrincipalProfile
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_diagnostics.yml
    name: ContainerService.DefinitionStages.WithDiagnostics
    nameWithType: ContainerService.DefinitionStages.WithDiagnostics
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithDiagnostics
    type: Interface
    summary: <p>特定の診断設定を許可するコンテナー サービス定義ファイルの段階です。 </p>
    syntax:
      content: public interface WithDiagnostics
  - uid: com.microsoft.azure.management.compute._container_service._definition_stages._with_create
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._container_service._definition_stages._with_create.yml
    name: ContainerService.DefinitionStages.WithCreate
    nameWithType: ContainerService.DefinitionStages.WithCreate
    fullName: com.microsoft.azure.management.compute.ContainerService.DefinitionStages.WithCreate
    type: Interface
    summary: <p>含むすべての最低限必要な入力を作成するリソースの定義のステージを指定する省略可能なその他の設定も可能ですが。 </p>
    syntax:
      content: public interface WithCreate