### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_health_states_filter
    id: _application_health_states_filter
    parent: system.fabric
    children:
      - system.fabric._application_health_states_filter.getHealthStateFilter()
      - system.fabric._application_health_states_filter.setHealthStateFilter(HealthStateFilter)
    href: system.fabric._application_health_states_filter.yml
    langs:
      - java
    name: ApplicationHealthStatesFilter
    nameWithType: ApplicationHealthStatesFilter
    fullName: system.fabric.ApplicationHealthStatesFilter
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStatesFilter.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStatesFilter.java
      startLine: 5
    package: system.fabric
    syntax:
      content: public class ApplicationHealthStatesFilter
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_health_states_filter.getHealthStateFilter()
    id: getHealthStateFilter()
    parent: system.fabric._application_health_states_filter
    href: system.fabric._application_health_states_filter.yml
    langs:
      - java
    name: getHealthStateFilter()
    nameWithType: ApplicationHealthStatesFilter.getHealthStateFilter()
    fullName: HealthStateFilter system.fabric.ApplicationHealthStatesFilter.getHealthStateFilter()
    overload: system.fabric._application_health_states_filter.getHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStatesFilter.java
      startLine: 28
    package: system.fabric
    summary: "<p>集計された正常性状態のフィルターを取得、 <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</p>\n<p>\r\n\r\n  <b>注釈:</b>入力コレクションがフィルター選択を必要な正常性状態を尊重エントリのみを取得します。 フィルターは、メンバーまたは HealthStateFilter のメンバーのビットごとの組み合わせから得られた値を表します。 </p>"
    syntax:
      content: public HealthStateFilter getHealthStateFilter()
      return:
        type: system.fabric.health._health_state_filter
        description: <p>集計された正常性状態のフィルター、 <xref uid="system.fabric.health._application_health_state" data-throw-if-not-resolved="false">system.fabric.health.ApplicationHealthState</xref>エントリです。 </p>
  - uid: system.fabric._application_health_states_filter.setHealthStateFilter(HealthStateFilter)
    id: setHealthStateFilter(HealthStateFilter)
    parent: system.fabric._application_health_states_filter
    href: system.fabric._application_health_states_filter.yml
    langs:
      - java
    name: setHealthStateFilter(HealthStateFilter healthStateFilter)
    nameWithType: ApplicationHealthStatesFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    fullName: void system.fabric.ApplicationHealthStatesFilter.setHealthStateFilter(HealthStateFilter healthStateFilter)
    overload: system.fabric._application_health_states_filter.setHealthStateFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthStatesFilter.java
      startLine: 44
    package: system.fabric
    summary: "<p>集計された正常性状態のフィルターを設定、 <xref uid=\"system.fabric.health._application_health_state\" data-throw-if-not-resolved=\"false\">system.fabric.health.ApplicationHealthState</xref>コレクション内のエントリ。</p>\n<p>\r\n\r\n  <b>注釈:</b>入力コレクションがフィルター選択を必要な正常性状態を尊重エントリのみを取得します。 フィルターは、メンバーまたは HealthStateFilter のメンバーのビットごとの組み合わせから得られた値を表します。 </p>"
    syntax:
      content: public void setHealthStateFilter(HealthStateFilter healthStateFilter)
      parameters:
        - id: healthStateFilter
          type: system.fabric.health._health_state_filter
          description: <p>状態のフィルター </p>
references:
  - uid: system.fabric._application_health_states_filter.getHealthStateFilter*
    name: getHealthStateFilter
    nameWithType: ApplicationHealthStatesFilter.getHealthStateFilter
    fullName: HealthStateFilter system.fabric.ApplicationHealthStatesFilter.getHealthStateFilter
    package: system.fabric
  - uid: system.fabric._application_health_states_filter.setHealthStateFilter*
    name: setHealthStateFilter
    nameWithType: ApplicationHealthStatesFilter.setHealthStateFilter
    fullName: void system.fabric.ApplicationHealthStatesFilter.setHealthStateFilter
    package: system.fabric
  - uid: system.fabric.health._health_state_filter
    parent: system.fabric.health
    href: system.fabric.health._health_state_filter.yml
    name: HealthStateFilter
    nameWithType: HealthStateFilter
    fullName: system.fabric.health.HealthStateFilter
    type: Enum
    syntax:
      content: public enum HealthStateFilter
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric.health._application_health_state
    parent: system.fabric.health
    href: system.fabric.health._application_health_state.yml
    name: ApplicationHealthState
    nameWithType: ApplicationHealthState
    fullName: system.fabric.health.ApplicationHealthState
    type: Class
    summary: <p>アプリケーション識別子と、集計された正常性状態を含む、アプリケーションのヘルス状態を表します。 </p>
    syntax:
      content: public class ApplicationHealthState extends EntityHealthState