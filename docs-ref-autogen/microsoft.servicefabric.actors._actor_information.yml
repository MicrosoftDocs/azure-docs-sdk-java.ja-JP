### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_information
    id: _actor_information
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)'
      - microsoft.servicefabric.actors._actor_information.getActorId()
      - microsoft.servicefabric.actors._actor_information.isActive()
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 5
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="7d54b-101">によって返されるアクターに関する情報を表します<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>メソッドの呼び出しをクエリします。</span><span class="sxs-lookup"><span data-stu-id="7d54b-101">Represents the information about an actor returned by <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Query method call.</span></span> </p>
    syntax: &ref_1
      content: public class ActorInformation
    inheritance:
      - java.lang.Object
      - Serializable
  - uid: 'microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)'
    id: 'ActorInformation(ActorId,boolean)'
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: 'ActorInformation(ActorId actorId, boolean isactive)'
    nameWithType: 'ActorInformation.ActorInformation(ActorId actorId, boolean isactive)'
    fullName: 'microsoft.servicefabric.actors.ActorInformation.ActorInformation(ActorId actorId, boolean isactive)'
    overload: microsoft.servicefabric.actors._actor_information.ActorInformation*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 18
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="7d54b-102">新しいインスタンスを初期化、 <xref uid="microsoft.servicefabric.actors._actor_information" data-throw-if-not-resolved="false">ActorInformation</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7d54b-102">Initializes a new instance of the <xref uid="microsoft.servicefabric.actors._actor_information" data-throw-if-not-resolved="false">ActorInformation</xref> class.</span></span></p>
      <p></p>
    syntax:
      content: 'public ActorInformation(ActorId actorId, boolean isactive)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p><span data-ttu-id=\"7d54b-103\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクターのです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d54b-103\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> of actor.</span></span> </p>"
        - id: isactive
          type: 4fc6e284
          description: <p><span data-ttu-id="7d54b-104">値を示す場合、<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブまたは非アクティブです。</span><span class="sxs-lookup"><span data-stu-id="7d54b-104">Value indicating if the <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> is active or inactive.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_information.getActorId()
    id: getActorId()
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: getActorId()
    nameWithType: ActorInformation.getActorId()
    fullName: ActorId microsoft.servicefabric.actors.ActorInformation.getActorId()
    overload: microsoft.servicefabric.actors._actor_information.getActorId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 28
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="7d54b-105">取得<xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref>アクターのです。</span><span class="sxs-lookup"><span data-stu-id="7d54b-105">Gets <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> for the ACtor.</span></span></p>
      <p></p>
    syntax:
      content: public ActorId getActorId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: "<p><span data-ttu-id=\"7d54b-106\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">アクターです。</xref>\r\n\r\n</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d54b-106\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">for the actor. </xref>\r\n\r\n</span></span></p>"
  - uid: microsoft.servicefabric.actors._actor_information.isActive()
    id: isActive()
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: isActive()
    nameWithType: ActorInformation.isActive()
    fullName: boolean microsoft.servicefabric.actors.ActorInformation.isActive()
    overload: microsoft.servicefabric.actors._actor_information.isActive*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 37
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="7d54b-107">アクターがアクティブな場合を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d54b-107">Gets if the actor is active.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isActive()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"7d54b-108\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Boolean</xref>どうかを示す、<xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>がアクティブです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d54b-108\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Boolean</xref> indicating if the <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> is active.</span></span> </p>"
references:
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: microsoft.servicefabric.actors._actor_information.ActorInformation*
    name: ActorInformation
    nameWithType: ActorInformation.ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation.ActorInformation
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_information.getActorId*
    name: getActorId
    nameWithType: ActorInformation.getActorId
    fullName: ActorId microsoft.servicefabric.actors.ActorInformation.getActorId
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_information.isActive*
    name: isActive
    nameWithType: ActorInformation.isActive
    fullName: boolean microsoft.servicefabric.actors.ActorInformation.isActive
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p><span data-ttu-id=\"7d54b-109\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d54b-109\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> represents identity of an actor within an actor service.</span></span> <span data-ttu-id=\"7d54b-110\">アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d54b-110\">The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> or long.</span></span> </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_information.yml
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    summary: <p><span data-ttu-id="7d54b-111">によって返されるアクターに関する情報を表します<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>メソッドの呼び出しをクエリします。</span><span class="sxs-lookup"><span data-stu-id="7d54b-111">Represents the information about an actor returned by <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Query method call.</span></span> </p>
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="7d54b-112">信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="7d54b-112">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor