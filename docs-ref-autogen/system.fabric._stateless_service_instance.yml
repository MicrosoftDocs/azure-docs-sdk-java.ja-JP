### YamlMime:ManagedReference
items:
  - uid: system.fabric._stateless_service_instance
    id: _stateless_service_instance
    parent: system.fabric
    children:
      - system.fabric._stateless_service_instance.abort()
      - system.fabric._stateless_service_instance.closeAsync(CancellationToken)
      - system.fabric._stateless_service_instance.initialize(StatelessServiceInitializationParameters)
      - 'system.fabric._stateless_service_instance.openAsync(StatelessServicePartition,CancellationToken)'
    href: system.fabric._stateless_service_instance.yml
    langs:
      - java
    name: StatelessServiceInstance
    nameWithType: StatelessServiceInstance
    fullName: system.fabric.StatelessServiceInstance
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
      startLine: 12
    package: system.fabric
    summary: <p><span data-ttu-id="314ee-101">ステートレス サービスは、Service Fabric で管理が必要な状態がないものです。</span><span class="sxs-lookup"><span data-stu-id="314ee-101">Stateless services are those which have no state that requires management by Service Fabric.</span></span> <span data-ttu-id="314ee-102">ステートレス サービスの種類は、このインターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="314ee-102">Stateless service types must implement this interface.</span></span> </p>
    syntax:
      content: public interface StatelessServiceInstance
  - uid: system.fabric._stateless_service_instance.abort()
    id: abort()
    parent: system.fabric._stateless_service_instance
    href: system.fabric._stateless_service_instance.yml
    langs:
      - java
    name: abort()
    nameWithType: StatelessServiceInstance.abort()
    fullName: void system.fabric.StatelessServiceInstance.abort()
    overload: system.fabric._stateless_service_instance.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
      startLine: 61
    package: system.fabric
    summary: "<p><span data-ttu-id=\"314ee-103\">このインスタンスをこの同期メソッドの呼び出しで異常終了します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-103\">Terminates this instance ungracefully with this synchronous method call.</span></span> </p>\n<p><span data-ttu-id=\"314ee-104\">\r\n\r\n  <b>注釈:</b>異常終了の例としては、リースが失われると、サービスの使用への応答<xref uid=\"system.fabric._service_partition.reportFault(FaultType)\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition#reportFault(FaultType)</xref>レポートに、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FaultType#Permanent</xref>フォールトします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-104\">\r\n\r\n  <b>Remarks:</b>Examples of ungraceful termination are lease loss and, in response to the service, the use of <xref uid=\"system.fabric._service_partition.reportFault(FaultType)\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition#reportFault(FaultType)</xref> to report a <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FaultType#Permanent</xref> fault.</span></span> <span data-ttu-id=\"314ee-105\">サービス インスタンスは、このメソッドを受信すると、必要がありますすぐにリリースしのすべての参照をクリーンアップし、返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-105\">When the service instance receives this method, it should immediately release and clean up all references and return.</span></span> </p>"
    syntax:
      content: public void abort()
  - uid: system.fabric._stateless_service_instance.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: system.fabric._stateless_service_instance
    href: system.fabric._stateless_service_instance.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: StatelessServiceInstance.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> system.fabric.StatelessServiceInstance.closeAsync(CancellationToken cancellationToken)
    overload: system.fabric._stateless_service_instance.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
      startLine: 50
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="314ee-106">サービス インスタンスがシャット ダウンすると、このサービス インスタンスを適切に閉じます。</span><span class="sxs-lookup"><span data-stu-id="314ee-106">Closes this service instance gracefully when the service instance is being shut down.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"314ee-107\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-107\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="314ee-108">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>です。</span><span class="sxs-lookup"><span data-stu-id="314ee-108">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span></span> </p>
  - uid: system.fabric._stateless_service_instance.initialize(StatelessServiceInitializationParameters)
    id: initialize(StatelessServiceInitializationParameters)
    parent: system.fabric._stateless_service_instance
    href: system.fabric._stateless_service_instance.yml
    langs:
      - java
    name: initialize(StatelessServiceInitializationParameters initializationParameters)
    nameWithType: StatelessServiceInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
    fullName: void system.fabric.StatelessServiceInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
    overload: system.fabric._stateless_service_instance.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
      startLine: 19
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="314ee-109">新しく作成されたサービス インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="314ee-109">Initializes a newly created service instance.</span></span></p>
      <p></p>
    syntax:
      content: public void initialize(StatelessServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateless_service_initialization_parameters
          description: <p><span data-ttu-id="314ee-110"><xref uid="system.fabric._stateless_service_initialization_parameters" data-throw-if-not-resolved="false">System.fabric.StatelessServiceInitializationParameters</xref>このサービスを使用します。</span><span class="sxs-lookup"><span data-stu-id="314ee-110">The <xref uid="system.fabric._stateless_service_initialization_parameters" data-throw-if-not-resolved="false">system.fabric.StatelessServiceInitializationParameters</xref> for this service.</span></span> </p>
  - uid: 'system.fabric._stateless_service_instance.openAsync(StatelessServicePartition,CancellationToken)'
    id: 'openAsync(StatelessServicePartition,CancellationToken)'
    parent: system.fabric._stateless_service_instance
    href: system.fabric._stateless_service_instance.yml
    langs:
      - java
    name: 'openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'StatelessServiceInstance.openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.StatelessServiceInstance.openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)'
    overload: system.fabric._stateless_service_instance.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatelessServiceInstance.java
      startLine: 40
    package: system.fabric
    summary: "<p><span data-ttu-id=\"314ee-111\">クライアントが接続できるように、初期化されたサービス インスタンスを開きます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-111\">Opens an initialized service instance so that it can be contacted by clients.</span></span></p>\n<p><span data-ttu-id=\"314ee-112\">\r\n\r\n  <b>注釈:</b>インスタンス ステートレスなサービスを開くことを示しますサービスここで解決可能であり、サービス クライアントで検出することです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-112\">\r\n\r\n  <b>Remarks:</b>Opening an instance stateless service indicates that the service is now resolvable and discoverable by service clients.</span></span> <span data-ttu-id=\"314ee-113\">返される文字列は、このサービス インスタンスのアドレスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-113\">The string that is returned is the address of this service instance.</span></span> <span data-ttu-id=\"314ee-114\">アドレスが Service Fabric が名前付けを使用して、サービス名に関連付けられているし、経由でサービスを解決するにはクライアントに返される<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-114\">The address is associated with the service name via Service Fabric naming and returned to clients that resolve the service via <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceManagementClient#resolveServicePartitionAsync(java.net.URI)</xref></span></span></p>"
    syntax:
      content: 'public CompletableFuture<String> openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: partition
          type: system.fabric._stateless_service_partition
          description: <p><span data-ttu-id="314ee-115"><xref uid="system.fabric._stateless_service_partition" data-throw-if-not-resolved="false">System.fabric.StatelessServicePartition</xref>このインスタンスに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="314ee-115">The <xref uid="system.fabric._stateless_service_partition" data-throw-if-not-resolved="false">system.fabric.StatelessServicePartition</xref> that this instance is associated with</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"314ee-116\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-116\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 06be942d
        description: <p><span data-ttu-id="314ee-117">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>型の<xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>です。</span><span class="sxs-lookup"><span data-stu-id="314ee-117">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>.</span></span> </p>
references:
  - uid: system.fabric._stateless_service_instance.initialize*
    name: initialize
    nameWithType: StatelessServiceInstance.initialize
    fullName: void system.fabric.StatelessServiceInstance.initialize
    package: system.fabric
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._stateless_service_instance.openAsync*
    name: openAsync
    nameWithType: StatelessServiceInstance.openAsync
    fullName: CompletableFuture<String> system.fabric.StatelessServiceInstance.openAsync
    package: system.fabric
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: system.fabric._stateless_service_instance.closeAsync*
    name: closeAsync
    nameWithType: StatelessServiceInstance.closeAsync
    fullName: CompletableFuture<?> system.fabric.StatelessServiceInstance.closeAsync
    package: system.fabric
  - uid: system.fabric._stateless_service_instance.abort*
    name: abort
    nameWithType: StatelessServiceInstance.abort
    fullName: void system.fabric.StatelessServiceInstance.abort
    package: system.fabric
  - uid: microsoft.servicefabric.services.runtime._stateless_service_instance_adapter
  - uid: system.fabric._stateless_service_initialization_parameters
    parent: system.fabric
    href: system.fabric._stateless_service_initialization_parameters.yml
    name: StatelessServiceInitializationParameters
    nameWithType: StatelessServiceInitializationParameters
    fullName: system.fabric.StatelessServiceInitializationParameters
    type: Class
    summary: <p><span data-ttu-id="314ee-118">ステートレス サービスのサービスの初期化パラメーターを定義します。</span><span class="sxs-lookup"><span data-stu-id="314ee-118">Defines service initialization parameters for a stateless service.</span></span> </p>
    syntax:
      content: public class StatelessServiceInitializationParameters extends ServiceInitializationParameters
  - uid: system.fabric._stateless_service_partition
    parent: system.fabric
    href: system.fabric._stateless_service_partition.yml
    name: StatelessServicePartition
    nameWithType: StatelessServicePartition
    fullName: system.fabric.StatelessServicePartition
    type: Interface
    summary: "<p><span data-ttu-id=\"314ee-119\">ステートレス サービス インスタンスに関連付けられているパーティションを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-119\">Represents a partition that is associated with a stateless service instance.</span></span> </p>\n<p><span data-ttu-id=\"314ee-120\">\r\n\r\n  <b>注釈:</b>をパラメーターとして、ステートレスなサービスを提供、 <xref uid=\"system.fabric._service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-120\">\r\n\r\n  <b>Remarks:</b>Provided to a stateless service as a parameter to the <xref uid=\"system.fabric._service_partition\" data-throw-if-not-resolved=\"false\">system.fabric.ServicePartition</xref>.</span></span> </p>"
    syntax:
      content: public interface StatelessServicePartition
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="314ee-121">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。</span><span class="sxs-lookup"><span data-stu-id="314ee-121">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="314ee-122">インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="314ee-122">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="314ee-123">キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。</span><span class="sxs-lookup"><span data-stu-id="314ee-123">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="314ee-124">取り消しを開始するトークンを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="314ee-124">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="314ee-125">所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。</span><span class="sxs-lookup"><span data-stu-id="314ee-125">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="314ee-126">通知を受信するオブジェクトは、適切な方法で応答できます。</span><span class="sxs-lookup"><span data-stu-id="314ee-126">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric._service_partition.reportFault(FaultType)
    parent: system.fabric._service_partition
    href: system.fabric._service_partition.yml
    name: reportFault(FaultType faultType)
    nameWithType: ServicePartition.reportFault(FaultType faultType)
    fullName: void system.fabric.ServicePartition.reportFault(FaultType faultType)
    type: Method
    summary: "<p><span data-ttu-id=\"314ee-127\">負荷分散のメトリックのセットの負荷を報告します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-127\">Reports the load for a set of load balancing metrics.</span></span> <span data-ttu-id=\"314ee-128\">いつでも、負荷を報告することができます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref>の<xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref>メソッドの 1 つまたは複数のプロパティを提供し、 <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref>メソッド.</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-128\">The load can be reported at any time via the <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.Collection</xref> of <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">LoadMetric</xref> method and provides one or more properties of the <xref uid=\"system.fabric._load_metric\" data-throw-if-not-resolved=\"false\">system.fabric.LoadMetric</xref> method.</span></span></p>\n<p><span data-ttu-id=\"314ee-129\">\r\n\r\n  <b>注釈:</b>エラーは通常報告サービス コードが検出したときに回復できませんから一部を発行します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"314ee-129\">\r\n\r\n  <b>Remarks:</b>A fault is typically reported when the service code encounters some issue from which it cannot recover.</span></span> </p>"
    syntax:
      content: public void reportFault(FaultType faultType)
      parameters:
        - id: faultType
          type: system.fabric._fault_type
          description: <p><span data-ttu-id="314ee-130"><xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">System.fabric.LoadMetric</xref>サービスで検出されました。</span><span class="sxs-lookup"><span data-stu-id="314ee-130">The <xref uid="system.fabric._load_metric" data-throw-if-not-resolved="false">system.fabric.LoadMetric</xref> that the service has encountered.</span></span> </p>