### YamlMime:ManagedReference
items:
  - uid: system.fabric._cluster_health_policy
    id: _cluster_health_policy
    parent: system.fabric
    children:
      - system.fabric._cluster_health_policy.ClusterHealthPolicy()
      - system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap()
      - system.fabric._cluster_health_policy.getConsiderWarningAsError()
      - system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
      - system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes()
      - system.fabric._cluster_health_policy.setConsiderWarningAsError(boolean)
      - system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications(byte)
      - system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes(byte)
      - system.fabric._cluster_health_policy.toNative(PinCollection)
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 5
    package: system.fabric
    summary: <p><span data-ttu-id="5dd57-101">クラスターまたはクラスター ノードの正常性を評価する正常性ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="5dd57-101">Defines a health policy used to evaluate the health of the cluster or of a cluster node.</span></span> </p>
    syntax:
      content: public class ClusterHealthPolicy
    inheritance:
      - java.lang.Object
  - uid: system.fabric._cluster_health_policy.ClusterHealthPolicy()
    id: ClusterHealthPolicy()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: ClusterHealthPolicy()
    nameWithType: ClusterHealthPolicy.ClusterHealthPolicy()
    fullName: system.fabric.ClusterHealthPolicy.ClusterHealthPolicy()
    overload: system.fabric._cluster_health_policy.ClusterHealthPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 35
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-102\">新しいインスタンスを初期化、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy</xref>クラスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-102\">Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy</xref> class.</span></span> </p>\n<p><span data-ttu-id=\"5dd57-103\">\r\n\r\n  <b>注釈:</b>既定では、エラーまたは警告が許容されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-103\">\r\n\r\n  <b>Remarks: </b>By default, no errors or warnings are tolerated.</span></span> </p>"
    syntax:
      content: public ClusterHealthPolicy()
  - uid: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap()
    id: getApplicationTypeHealthPolicyMap()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getApplicationTypeHealthPolicyMap()
    nameWithType: ClusterHealthPolicy.getApplicationTypeHealthPolicyMap()
    fullName: ApplicationTypeHealthPolicyMap system.fabric.ClusterHealthPolicy.getApplicationTypeHealthPolicyMap()
    overload: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 96
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-104\">アプリケーションの種類名ごとに MaxPercentUnhealthyApplications でマップを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-104\">Gets the map with MaxPercentUnhealthyApplications per application type name.</span></span></p>\n<p><span data-ttu-id=\"5dd57-105\">\r\n\r\n  <b>注釈:</b>MaxPercentUnhealthyApplications 既定値を評価に使用する場合は、アプリケーションの種類名、ポリシーが指定されていません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-105\">\r\n\r\n  <b>Remarks:</b>If no policy is specified for an application type name, the default MaxPercentUnhealthyApplications is used for evaluation.</span></span> </p>\n\n<p><span data-ttu-id=\"5dd57-106\">\r\n\r\n  <b>注釈:</b>アプリケーションの種類の正常性ポリシー マップは、特殊なアプリケーションの種類を記述するクラスターの正常性評価で使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-106\">\r\n\r\n  <b>Remarks:</b>The application type health policy map can be used during cluster health evaluation to describe special application types.</span></span> <span data-ttu-id=\"5dd57-107\">既定では、すべてのアプリケーションのプールに配置し、を使用して評価<xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-107\">By default, all applications are put into a pool and evaluated with <xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>.</span></span> <span data-ttu-id=\"5dd57-108\">1 つまたは複数のアプリケーションの種類の特殊なし、する必要がありますを別の方法で扱われる、グローバル プールから取得およびできますマップで、アプリケーションの型名に関連付けられている割合に対して評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-108\">If one or more application types are special and should be treated in a different way, they can be taken out of the global pool and evaluated against the percentages associated with their application type name in the map.</span></span> <span data-ttu-id=\"5dd57-109\">たとえば、クラスターには、異なる種類の数千ものアプリケーションがあり、特別なアプリケーションの種類の制御アプリケーション インスタンスの数はわずかです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-109\">For example, in a cluster there are thousands of applications of different types, and a few control application instances of a special application type.</span></span> <span data-ttu-id=\"5dd57-110\">制御アプリケーションがエラー状態になることはありません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-110\">The control applications should never be in error.</span></span> <span data-ttu-id=\"5dd57-111\">そのユーザーは、いくつかの障害を許容するように 20% が\"ControlApplicationType\"、MaxPercentUnhealthyApplications を 0 に設定するアプリケーションの種類に対してグローバル MaxPercentUnhealthyApplications を指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-111\">So users can specify global MaxPercentUnhealthyApplications to 20% to tolerate some failures, but for the application type \"ControlApplicationType\" set the MaxPercentUnhealthyApplications to 0.</span></span> <span data-ttu-id=\"5dd57-112\">このようにすると、多くのアプリケーションのうちのいくつかが異常でも、グローバルな異常のパーセンテージを下回っている場合、クラスターは警告と評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-112\">This way, if some of the many applications are unhealthy, but below the global unhealthy percentage, the cluster would be evaluated to Warning.</span></span> <span data-ttu-id=\"5dd57-113\">警告の正常性状態はクラスターのアップグレードや、エラーの正常性状態によりトリガーされる他の監視には影響しません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-113\">A warning health state does not impact cluster upgrade or other monitoring triggered by Error health state.</span></span> <span data-ttu-id=\"5dd57-114\">エラーの 1 つでも管理アプリケーションはクラスターの正常性エラーがロールバックまたは、クラスターのアップグレードを妨げるです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-114\">But even one control application in error would make cluster health error, which can rollback or prevent a cluster upgrade.</span></span> <span data-ttu-id=\"5dd57-115\">マップで定義されているアプリケーションの種類の場合は、すべてのアプリケーション インスタンスがアプリケーションのグローバル プールから除外されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-115\">For the application types defined in the map, all application instances are taken out of the global pool of applications.</span></span> <span data-ttu-id=\"5dd57-116\">これらは、マップの特定の MaxPercentUnhealthyApplications を使用して、該当するアプリケーションの種類のアプリケーションの総数に基づいて評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-116\">They are evaluated based on the total number of applications of the application type, using the specific MaxPercentUnhealthyApplications from the map.</span></span> <span data-ttu-id=\"5dd57-117\">残りのアプリケーションはすべてグローバル プールで保持され、MaxPercentUnhealthyApplications を使用して評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-117\">All the rest of the applications remain in the global pool and are evaluated with MaxPercentUnhealthyApplications.</span></span> <span data-ttu-id=\"5dd57-118\">クラスター マニフェストで特定のアプリケーションの種類のエントリを定義するには、FabricSettings 内には、アプリケーションの種類名を「ApplicationTypeMaxPercentUnhealthyApplications-」の後にプレフィックスによって形成される名前を持つパラメーター エントリを追加します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-118\">To define entries for the specific application types in the cluster manifest, inside FabricSettings add entries for parameters with name formed by prefix \"ApplicationTypeMaxPercentUnhealthyApplications-\" followed by application type name.</span></span> <span data-ttu-id=\"5dd57-119\">アプリケーションの種類のポリシーが指定されていない場合は、既定 MaxPercentUnhealthyApplications が評価に使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-119\">If no policy is specified for an application type, the default MaxPercentUnhealthyApplications is used for evaluation.</span></span> <span data-ttu-id=\"5dd57-120\">EnableApplicationTypeHealthEvaluation 場合は true で、クラスターが構成されている場合にのみ、アプリケーションの種類の正常性評価が行われます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-120\">The application type health evaluation is done only when the cluster is configured with EnableApplicationTypeHealthEvaluation true.</span></span> <span data-ttu-id=\"5dd57-121\">既定では、設定を無効にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-121\">The setting is disabled by default.</span></span> </p>"
    syntax:
      content: public ApplicationTypeHealthPolicyMap getApplicationTypeHealthPolicyMap()
      return:
        type: system.fabric._application_type_health_policy_map
        description: <p><span data-ttu-id="5dd57-122">アプリケーション型正常性ポリシー マップ MaxPercentUnhealthyApplications とアプリケーションの種類名ごとです。</span><span class="sxs-lookup"><span data-stu-id="5dd57-122">The application type health policy map with MaxPercentUnhealthyApplications per application type name.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.getConsiderWarningAsError()
    id: getConsiderWarningAsError()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getConsiderWarningAsError()
    nameWithType: ClusterHealthPolicy.getConsiderWarningAsError()
    fullName: boolean system.fabric.ClusterHealthPolicy.getConsiderWarningAsError()
    overload: system.fabric._cluster_health_policy.getConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 217
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5dd57-123">警告状態を持つ whetherÂ レポートを同じ重大度レベル エラーとして扱う必要がありますを決定するブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5dd57-123">Gets a boolean that determines whetherÂ reports with warning state should be treated with the same severity as errors.</span></span></p>
      <p></p>
    syntax:
      content: public boolean getConsiderWarningAsError()
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="5dd57-124">警告状態を持つレポートをエラーとして扱う場合は true。警告をエラーとして扱うことはできない場合は false。</span><span class="sxs-lookup"><span data-stu-id="5dd57-124">true if reports with warning state should be treated as errors; false if warnings should not be treated as errors.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
    id: getMaxPercentUnhealthyApplications()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyApplications()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    overload: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 194
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-125\">許容される異常なアプリケーションの割合の最大値を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-125\">Sets the maximum allowed percentage of unhealthy applications.</span></span></p>\n<p><span data-ttu-id=\"5dd57-126\">\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされるまでアプリケーションの最大許容パーセンテージです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-126\">\r\n\r\n  <b>Remarks:</b>The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.</span></span> <span data-ttu-id=\"5dd57-127\">許容パーセンテージ内であっても、1 つ以上の異常なアプリケーションがある場合は、正常性は Warning として評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-127\">If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.</span></span> <span data-ttu-id=\"5dd57-128\">これには、計算に含まれているアプリケーションの種類のすべてのアプリケーションの除外、クラスターに配置されたアプリケーションの総数に対して異常なアプリケーションの数で割ることによって、 <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">applicationtypehealthpolicymapの値</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-128\">This is calculated by dividing the number of unhealthy applications over the total number of applications deployed in the cluster, excluding all applications of an application types that are included in the <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">ApplicationTypeHealthPolicyMap</xref>.</span></span> <span data-ttu-id=\"5dd57-129\">切り上げ計算が実行され、少数のアプリケーションに対する 1 つのエラーは許容されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-129\">The computation rounds up to tolerate one failure on small numbers of applications.</span></span> <span data-ttu-id=\"5dd57-130\">既定のパーセンテージは 0 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-130\">Default percentage: zero.</span></span> </p>"
    syntax: &ref_1
      content: public byte getMaxPercentUnhealthyApplications()
      return:
        type: d357ea40
        description: <p><span data-ttu-id="5dd57-131">許容される異常なアプリケーションの割合の最大値。</span><span class="sxs-lookup"><span data-stu-id="5dd57-131">The maximum allowed percentage of unhealthy applications.</span></span> <span data-ttu-id="5dd57-132">有効な値は、0 から 100 までの整数値です。</span><span class="sxs-lookup"><span data-stu-id="5dd57-132">Allowed values are integer values from zero to 100.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes()
    id: getMaxPercentUnhealthyNodes()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyNodes()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyNodes()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyNodes()
    overload: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 147
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-133\">異常なノードの最大許容パーセンテージを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-133\">Gets the maximum allowed percentage of unhealthy nodes.</span></span></p>\n<p><span data-ttu-id=\"5dd57-134\">\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされる前にノードの最大許容パーセンテージです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-134\">\r\n\r\n  <b>Remarks:</b>The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.</span></span> <span data-ttu-id=\"5dd57-135\">許容パーセンテージ内であっても、1 つ以上の異常なノードがある場合は、正常性は Warning として評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-135\">If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.</span></span> <span data-ttu-id=\"5dd57-136\">これは、クラスター内のノードの総数に対して異常なノードの数で割ることによって計算されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-136\">This is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.</span></span> <span data-ttu-id=\"5dd57-137\">切り上げ計算が実行され、少数のノードに対する 1 つのエラーは許容されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-137\">The computation rounds up to tolerate one failure on small numbers of nodes.</span></span> <span data-ttu-id=\"5dd57-138\">既定のパーセンテージは 0 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-138\">Default percentage: zero.</span></span> </p>\n\n<p><span data-ttu-id=\"5dd57-139\">大規模なクラスターでは、ダウンしているか修復を必要とするノードがいくつか必ず存在するため、それが許容されるようにこのパーセンテージを構成する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-139\">In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.</span></span> </p>"
    syntax:
      content: public byte getMaxPercentUnhealthyNodes()
      return:
        type: d357ea40
        description: <p><span data-ttu-id="5dd57-140">許容される異常なノードの割合の最大値。</span><span class="sxs-lookup"><span data-stu-id="5dd57-140">The maximum allowed percentage of unhealthy nodes.</span></span> <span data-ttu-id="5dd57-141">有効な値は、0 から 100 までの整数値です。</span><span class="sxs-lookup"><span data-stu-id="5dd57-141">Allowed values are integer values from zero to 100.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.setConsiderWarningAsError(boolean)
    id: setConsiderWarningAsError(boolean)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setConsiderWarningAsError(boolean considerWarningAsError)
    nameWithType: ClusterHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    fullName: void system.fabric.ClusterHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    overload: system.fabric._cluster_health_policy.setConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 206
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5dd57-142">エラーとして重大度が同じでは、whetherÂ を決定するブール値が警告状態を持つレポート セットを扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="5dd57-142">Sets a boolean that determines whetherÂ reports with warning state should be treated with the same severity as errors.</span></span></p>
      <p></p>
    syntax:
      content: public void setConsiderWarningAsError(boolean considerWarningAsError)
      parameters:
        - id: considerWarningAsError
          type: 4fc6e284
          description: <p><span data-ttu-id="5dd57-143">警告状態を持つレポートをエラーとして扱う場合は true。警告をエラーとして扱うことはできない場合は false。</span><span class="sxs-lookup"><span data-stu-id="5dd57-143">true if reports with warning state should be treated as errors; false if warnings should not be treated as errors.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications(byte)
    id: setMaxPercentUnhealthyApplications(byte)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    overload: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 169
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-144\">許容される異常なアプリケーションの割合の最大値を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-144\">Sets the maximum allowed percentage of unhealthy applications.</span></span></p>\n<p><span data-ttu-id=\"5dd57-145\">\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされるまでアプリケーションの最大許容パーセンテージです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-145\">\r\n\r\n  <b>Remarks:</b>The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.</span></span> <span data-ttu-id=\"5dd57-146\">許容パーセンテージ内であっても、1 つ以上の異常なアプリケーションがある場合は、正常性は Warning として評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-146\">If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.</span></span> <span data-ttu-id=\"5dd57-147\">これには、計算に含まれているアプリケーションの種類のすべてのアプリケーションの除外、クラスターに配置されたアプリケーションの総数に対して異常なアプリケーションの数で割ることによって、 <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">applicationtypehealthpolicymapの値</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-147\">This is calculated by dividing the number of unhealthy applications over the total number of applications deployed in the cluster, excluding all applications of an application types that are included in the <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">ApplicationTypeHealthPolicyMap</xref>.</span></span> <span data-ttu-id=\"5dd57-148\">切り上げ計算が実行され、少数のアプリケーションに対する 1 つのエラーは許容されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-148\">The computation rounds up to tolerate one failure on small numbers of applications.</span></span> <span data-ttu-id=\"5dd57-149\">既定のパーセンテージは 0 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-149\">Default percentage: zero.</span></span> </p>"
    syntax:
      content: public void setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
      parameters:
        - id: maxPercentUnhealthyApplications
          type: d357ea40
          description: <p><span data-ttu-id="5dd57-150">許容される異常なアプリケーションの割合の最大値。</span><span class="sxs-lookup"><span data-stu-id="5dd57-150">The maximum allowed percentage of unhealthy applications.</span></span> <span data-ttu-id="5dd57-151">有効な値は、0 から 100 までの整数値です。</span><span class="sxs-lookup"><span data-stu-id="5dd57-151">Allowed values are integer values from zero to 100.</span></span> </p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="5dd57-152">指定した値は、0 から 100 までの整数値の範囲外でした。</span><span class="sxs-lookup"><span data-stu-id="5dd57-152">The specified value was outside the range of integer values from zero to 100.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes(byte)
    id: setMaxPercentUnhealthyNodes(byte)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    overload: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 120
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5dd57-153\">異常なノードの最大許容パーセンテージを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-153\">Gets the maximum allowed percentage of unhealthy nodes.</span></span></p>\n<p><span data-ttu-id=\"5dd57-154\">\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされる前にノードの最大許容パーセンテージです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-154\">\r\n\r\n  <b>Remarks:</b>The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.</span></span> <span data-ttu-id=\"5dd57-155\">許容パーセンテージ内であっても、1 つ以上の異常なノードがある場合は、正常性は Warning として評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-155\">If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.</span></span> <span data-ttu-id=\"5dd57-156\">これは、クラスター内のノードの総数に対して異常なノードの数で割ることによって計算されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-156\">This is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.</span></span> <span data-ttu-id=\"5dd57-157\">切り上げ計算が実行され、少数のノードに対する 1 つのエラーは許容されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-157\">The computation rounds up to tolerate one failure on small numbers of nodes.</span></span> <span data-ttu-id=\"5dd57-158\">既定のパーセンテージは 0 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-158\">Default percentage: zero.</span></span> </p>\n\n<p><span data-ttu-id=\"5dd57-159\">大規模なクラスターでは、ダウンしているか修復を必要とするノードがいくつか必ず存在するため、それが許容されるようにこのパーセンテージを構成する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-159\">In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.</span></span> </p>\n<p></p>"
    syntax:
      content: public void setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
      parameters:
        - id: maxPercentUnhealthyNodes
          type: d357ea40
          description: <p><span data-ttu-id="5dd57-160">許容される異常なノードの割合の最大値。</span><span class="sxs-lookup"><span data-stu-id="5dd57-160">The maximum allowed percentage of unhealthy nodes.</span></span> <span data-ttu-id="5dd57-161">有効な値は、0 から 100 までの整数値です。</span><span class="sxs-lookup"><span data-stu-id="5dd57-161">Allowed values are integer values from zero to 100.</span></span> </p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="5dd57-162">指定した値は、0 から 100 までの整数値の範囲外でした。</span><span class="sxs-lookup"><span data-stu-id="5dd57-162">The specified value was outside the range of integer values from zero to 100.</span></span> </p>
  - uid: system.fabric._cluster_health_policy.toNative(PinCollection)
    id: toNative(PinCollection)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: toNative(PinCollection pinCollection)
    nameWithType: ClusterHealthPolicy.toNative(PinCollection pinCollection)
    fullName: long system.fabric.ClusterHealthPolicy.toNative(PinCollection pinCollection)
    overload: system.fabric._cluster_health_policy.toNative*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 42
    package: system.fabric
    syntax:
      content: public long toNative(PinCollection pinCollection)
      parameters:
        - id: pinCollection
          type: system.fabric._pin_collection
      return:
        type: 0364520f
references:
  - uid: system.fabric._cluster_health_policy.ClusterHealthPolicy*
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy.ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy.ClusterHealthPolicy
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._cluster_health_policy.toNative*
    name: toNative
    nameWithType: ClusterHealthPolicy.toNative
    fullName: long system.fabric.ClusterHealthPolicy.toNative
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap*
    name: getApplicationTypeHealthPolicyMap
    nameWithType: ClusterHealthPolicy.getApplicationTypeHealthPolicyMap
    fullName: ApplicationTypeHealthPolicyMap system.fabric.ClusterHealthPolicy.getApplicationTypeHealthPolicyMap
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: d357ea40
    spec.java:
      - name: byte
        fullName: byte
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes*
    name: setMaxPercentUnhealthyNodes
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyNodes
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyNodes
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes*
    name: getMaxPercentUnhealthyNodes
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyNodes
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyNodes
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications*
    name: setMaxPercentUnhealthyApplications
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyApplications
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyApplications
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications*
    name: getMaxPercentUnhealthyApplications
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._cluster_health_policy.setConsiderWarningAsError*
    name: setConsiderWarningAsError
    nameWithType: ClusterHealthPolicy.setConsiderWarningAsError
    fullName: void system.fabric.ClusterHealthPolicy.setConsiderWarningAsError
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getConsiderWarningAsError*
    name: getConsiderWarningAsError
    nameWithType: ClusterHealthPolicy.getConsiderWarningAsError
    fullName: boolean system.fabric.ClusterHealthPolicy.getConsiderWarningAsError
    package: system.fabric
  - uid: system.fabric._application_type_health_policy_map
    parent: system.fabric
    href: system.fabric._application_type_health_policy_map.yml
    name: ApplicationTypeHealthPolicyMap
    nameWithType: ApplicationTypeHealthPolicyMap
    fullName: system.fabric.ApplicationTypeHealthPolicyMap
    type: Class
    summary: "<p><span data-ttu-id=\"5dd57-163\">クラスターの正常性評価で使用されるアプリケーションの種類の正常性ポリシーのエントリのポリシーのマップを定義します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-163\">Defines a policy map with entries for application type health policies, which is used during cluster health evaluation.</span></span> </p>\n<p><span data-ttu-id=\"5dd57-164\">\r\n\r\n  <b>注釈:</b>アプリケーションの種類の正常性ポリシー マップは、特殊なアプリケーションの種類を記述するクラスターの正常性評価で使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-164\">\r\n\r\n  <b>Remarks:</b>The application type health policy map can be used during cluster health evaluation to describe special application types.</span></span> <span data-ttu-id=\"5dd57-165\">マップに含まれるアプリケーションの種類がグローバルではなく、マップでは、含まれている割合に対して評価されます<xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-165\">The application types included in the map are evaluated against the percentage included in the map, and not with the global <xref uid=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy#getMaxPercentUnhealthyApplications()</xref>.</span></span> <span data-ttu-id=\"5dd57-166\">マップで指定されたアプリケーションの種類のアプリケーションは、アプリケーションのグローバル プールに対してはカウントされません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-166\">The applications of application types specified in the map are not counted against the global pool of applications.</span></span> </p>"
    syntax:
      content: public class ApplicationTypeHealthPolicyMap
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    name: getMaxPercentUnhealthyApplications()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    type: Method
    summary: "<p><span data-ttu-id=\"5dd57-167\">許容される異常なアプリケーションの割合の最大値を設定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-167\">Sets the maximum allowed percentage of unhealthy applications.</span></span></p>\n<p><span data-ttu-id=\"5dd57-168\">\r\n\r\n  <b>注釈:</b>割合を表すことのできる正常なクラスターがエラーと見なされるまでアプリケーションの最大許容パーセンテージです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-168\">\r\n\r\n  <b>Remarks:</b>The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.</span></span> <span data-ttu-id=\"5dd57-169\">許容パーセンテージ内であっても、1 つ以上の異常なアプリケーションがある場合は、正常性は Warning として評価されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-169\">If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.</span></span> <span data-ttu-id=\"5dd57-170\">これには、計算に含まれているアプリケーションの種類のすべてのアプリケーションの除外、クラスターに配置されたアプリケーションの総数に対して異常なアプリケーションの数で割ることによって、 <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">applicationtypehealthpolicymapの値</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-170\">This is calculated by dividing the number of unhealthy applications over the total number of applications deployed in the cluster, excluding all applications of an application types that are included in the <xref uid=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\">ApplicationTypeHealthPolicyMap</xref>.</span></span> <span data-ttu-id=\"5dd57-171\">切り上げ計算が実行され、少数のアプリケーションに対する 1 つのエラーは許容されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-171\">The computation rounds up to tolerate one failure on small numbers of applications.</span></span> <span data-ttu-id=\"5dd57-172\">既定のパーセンテージは 0 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"5dd57-172\">Default percentage: zero.</span></span> </p>"
    syntax: *ref_1