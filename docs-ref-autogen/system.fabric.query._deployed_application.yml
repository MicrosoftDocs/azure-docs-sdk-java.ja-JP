### YamlMime:ManagedReference
items:
  - uid: system.fabric.query._deployed_application
    id: _deployed_application
    parent: system.fabric.query
    children:
      - system.fabric.query._deployed_application.getApplicationName()
      - system.fabric.query._deployed_application.getApplicationTypeName()
      - system.fabric.query._deployed_application.getDeploymentStatus()
      - system.fabric.query._deployed_application.getLogDir()
      - system.fabric.query._deployed_application.getTmpDir()
      - system.fabric.query._deployed_application.getWorkDir()
      - system.fabric.query._deployed_application.toString()
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: DeployedApplication
    nameWithType: DeployedApplication
    fullName: system.fabric.query.DeployedApplication
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 11
    package: system.fabric.query
    summary: <p><span data-ttu-id="f79ca-101">アプリケーション € のインスタンスを記述™ サービス ホストで実行されている、<xref uid="system.fabric.query._service" data-throw-if-not-resolved="false">サービス</xref>ファブリック<xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">ノード</xref>です。</span><span class="sxs-lookup"><span data-stu-id="f79ca-101">Describes an instance of an applicationâ€™s service host running on a <xref uid="system.fabric.query._service" data-throw-if-not-resolved="false">Service</xref> Fabric <xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">Node</xref>.</span></span> </p>
    syntax:
      content: public class DeployedApplication
    inheritance:
      - java.lang.Object
  - uid: system.fabric.query._deployed_application.getApplicationName()
    id: getApplicationName()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: DeployedApplication.getApplicationName()
    fullName: URI system.fabric.query.DeployedApplication.getApplicationName()
    overload: system.fabric.query._deployed_application.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 47
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-102">アプリケーションの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-102">Gets the application name.</span></span></p>
      <p></p>
    syntax:
      content: public URI getApplicationName()
      return:
        type: '62304784'
        description: <p><span data-ttu-id="f79ca-103">アプリケーション名。</span><span class="sxs-lookup"><span data-stu-id="f79ca-103">The application name.</span></span> </p>
  - uid: system.fabric.query._deployed_application.getApplicationTypeName()
    id: getApplicationTypeName()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getApplicationTypeName()
    nameWithType: DeployedApplication.getApplicationTypeName()
    fullName: String system.fabric.query.DeployedApplication.getApplicationTypeName()
    overload: system.fabric.query._deployed_application.getApplicationTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 56
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-104">アプリケーションの種類名を取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-104">Gets the application type name.</span></span></p>
      <p></p>
    syntax:
      content: public String getApplicationTypeName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="f79ca-105">アプリケーションの種類名です。</span><span class="sxs-lookup"><span data-stu-id="f79ca-105">The application type name.</span></span> </p>
  - uid: system.fabric.query._deployed_application.getDeploymentStatus()
    id: getDeploymentStatus()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getDeploymentStatus()
    nameWithType: DeployedApplication.getDeploymentStatus()
    fullName: DeploymentStatus system.fabric.query.DeployedApplication.getDeploymentStatus()
    overload: system.fabric.query._deployed_application.getDeploymentStatus*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 65
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-106">展開済みアプリケーション インスタンスの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-106">Gets the status of the deployed application instance.</span></span></p>
      <p></p>
    syntax:
      content: public DeploymentStatus getDeploymentStatus()
      return:
        type: system.fabric._deployment_status
        description: <p><span data-ttu-id="f79ca-107">展開済みアプリケーション インスタンスの状態。</span><span class="sxs-lookup"><span data-stu-id="f79ca-107">The status of the deployed application instance.</span></span> </p>
  - uid: system.fabric.query._deployed_application.getLogDir()
    id: getLogDir()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getLogDir()
    nameWithType: DeployedApplication.getLogDir()
    fullName: String system.fabric.query.DeployedApplication.getLogDir()
    overload: system.fabric.query._deployed_application.getLogDir*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 83
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-108">展開済みアプリケーション インスタンスによって使用されるログ ディレクトリ パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-108">Gets the log directory path used by the deployed application instance.</span></span></p>
      <p></p>
    syntax:
      content: public String getLogDir()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="f79ca-109">展開済みアプリケーション インスタンスによって使用されるログ ディレクトリ パス。</span><span class="sxs-lookup"><span data-stu-id="f79ca-109">The log directory path used by the deployed application instance.</span></span> </p>
  - uid: system.fabric.query._deployed_application.getTmpDir()
    id: getTmpDir()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getTmpDir()
    nameWithType: DeployedApplication.getTmpDir()
    fullName: String system.fabric.query.DeployedApplication.getTmpDir()
    overload: system.fabric.query._deployed_application.getTmpDir*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 92
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-110">展開済みアプリケーション インスタンスによって使用される一時ディレクトリのパスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-110">Gets the temp directory path used by the deployed application instance.</span></span></p>
      <p></p>
    syntax:
      content: public String getTmpDir()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="f79ca-111">展開済みアプリケーション インスタンスによって使用される一時ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="f79ca-111">The temp directory path used by the deployed application instance.</span></span> </p>
  - uid: system.fabric.query._deployed_application.getWorkDir()
    id: getWorkDir()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: getWorkDir()
    nameWithType: DeployedApplication.getWorkDir()
    fullName: String system.fabric.query.DeployedApplication.getWorkDir()
    overload: system.fabric.query._deployed_application.getWorkDir*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 74
    package: system.fabric.query
    summary: |-
      <p><span data-ttu-id="f79ca-112">展開済みアプリケーションのインスタンスによって使用される作業ディレクトリ パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-112">Gets the work directory path used by the deployed application instance.</span></span></p>
      <p></p>
    syntax:
      content: public String getWorkDir()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="f79ca-113">展開済みアプリケーション インスタンスによって使用される作業ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="f79ca-113">The work directory path used by the deployed application instance.</span></span> </p>
  - uid: system.fabric.query._deployed_application.toString()
    id: toString()
    parent: system.fabric.query._deployed_application
    href: system.fabric.query._deployed_application.yml
    langs:
      - java
    name: toString()
    nameWithType: DeployedApplication.toString()
    fullName: String system.fabric.query.DeployedApplication.toString()
    overload: system.fabric.query._deployed_application.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      startLine: 97
    package: system.fabric.query
    syntax:
      content: public String toString()
      return:
        type: '26831127'
references:
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric.query._deployed_application.getApplicationName*
    name: getApplicationName
    nameWithType: DeployedApplication.getApplicationName
    fullName: URI system.fabric.query.DeployedApplication.getApplicationName
    package: system.fabric.query
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric.query._deployed_application.getApplicationTypeName*
    name: getApplicationTypeName
    nameWithType: DeployedApplication.getApplicationTypeName
    fullName: String system.fabric.query.DeployedApplication.getApplicationTypeName
    package: system.fabric.query
  - uid: system.fabric.query._deployed_application.getDeploymentStatus*
    name: getDeploymentStatus
    nameWithType: DeployedApplication.getDeploymentStatus
    fullName: DeploymentStatus system.fabric.query.DeployedApplication.getDeploymentStatus
    package: system.fabric.query
  - uid: system.fabric.query._deployed_application.getWorkDir*
    name: getWorkDir
    nameWithType: DeployedApplication.getWorkDir
    fullName: String system.fabric.query.DeployedApplication.getWorkDir
    package: system.fabric.query
  - uid: system.fabric.query._deployed_application.getLogDir*
    name: getLogDir
    nameWithType: DeployedApplication.getLogDir
    fullName: String system.fabric.query.DeployedApplication.getLogDir
    package: system.fabric.query
  - uid: system.fabric.query._deployed_application.getTmpDir*
    name: getTmpDir
    nameWithType: DeployedApplication.getTmpDir
    fullName: String system.fabric.query.DeployedApplication.getTmpDir
    package: system.fabric.query
  - uid: system.fabric.query._deployed_application.toString*
    name: toString
    nameWithType: DeployedApplication.toString
    fullName: String system.fabric.query.DeployedApplication.toString
    package: system.fabric.query
  - uid: system.fabric._deployment_status
    parent: system.fabric
    href: system.fabric._deployment_status.yml
    name: DeploymentStatus
    nameWithType: DeploymentStatus
    fullName: system.fabric.DeploymentStatus
    type: Enum
    summary: <p><span data-ttu-id="f79ca-114">ノードでパッケージのステータスを指定します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-114">Specifies the status of the package on the node</span></span> </p>
    syntax:
      content: public enum DeploymentStatus
  - uid: system.fabric.query._service
    parent: system.fabric.query
    href: system.fabric.query._service.yml
    name: Service
    nameWithType: Service
    fullName: system.fabric.query.Service
    type: Class
    summary: <p><span data-ttu-id="f79ca-115">サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="f79ca-115">Represents a service.</span></span> </p>
    syntax:
      content: public class Service
  - uid: system.fabric.query._node
    parent: system.fabric.query
    href: system.fabric.query._node.yml
    name: Node
    nameWithType: Node
    fullName: system.fabric.query.Node
    type: Class
    summary: |-
      <p><span data-ttu-id="f79ca-116">このクラスには詳細が含まれています、<xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">ノード</xref>です。</span><span class="sxs-lookup"><span data-stu-id="f79ca-116">This class contains the details of a <xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">Node</xref>.</span></span> <span data-ttu-id="f79ca-117">これらの詳細を含める - 名前、ip、ノード型、コードのバージョン、構成のバージョン、ノードの状態、ノードのアップタイム、ヘルス状態には、シード ノードのアップグレード ドメイン、フォールト ドメイン、nodeId、ノードのインスタンス id およびノード非アクティブ化の結果である場合。</span><span class="sxs-lookup"><span data-stu-id="f79ca-117">These details include - name, ip, node-type, code-version, config-version, node-status, node uptime, health-state, if it is a seed-node, upgrade domain, fault domain, nodeId, node instance-id and node de-activation result.</span></span></p>
      <p></p>
    syntax:
      content: public class Node