### YamlMime:ManagedReference
items:
  - uid: system.fabric._stateful_service_context
    id: _stateful_service_context
    parent: system.fabric
    children:
      - system.fabric._stateful_service_context.getReplicaId()
      - 'system.fabric._stateful_service_context.StatefulServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    href: system.fabric._stateful_service_context.yml
    langs:
      - java
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceContext.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceContext.java
      startLine: 5
    package: system.fabric
    syntax:
      content: public class StatefulServiceContext extends ServiceContext
    inheritance:
      - java.lang.Object
      - system.fabric._service_context
    inheritedMembers:
      - system.fabric._service_context.getCodePackageActivationContext()
      - system.fabric._service_context.getInitializationData()
      - system.fabric._service_context.getNodeContext()
      - system.fabric._service_context.getPartitionId()
      - system.fabric._service_context.getReplicaOrInstanceId()
      - system.fabric._service_context.getServiceName()
      - system.fabric._service_context.getServiceTypeName()
      - system.fabric._service_context.getTraceId()
      - 'system.fabric._service_context.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
  - uid: system.fabric._stateful_service_context.getReplicaId()
    id: getReplicaId()
    parent: system.fabric._stateful_service_context
    href: system.fabric._stateful_service_context.yml
    langs:
      - java
    name: getReplicaId()
    nameWithType: StatefulServiceContext.getReplicaId()
    fullName: long system.fabric.StatefulServiceContext.getReplicaId()
    overload: system.fabric._stateful_service_context.getReplicaId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceContext.java
      startLine: 7
    package: system.fabric
    syntax:
      content: public long getReplicaId()
      return:
        type: 0364520f
  - uid: 'system.fabric._stateful_service_context.StatefulServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    id: 'StatefulServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    parent: system.fabric._stateful_service_context
    href: system.fabric._stateful_service_context.yml
    langs:
      - java
    name: 'StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)'
    nameWithType: 'StatefulServiceContext.StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)'
    fullName: 'system.fabric.StatefulServiceContext.StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)'
    overload: system.fabric._stateful_service_context.StatefulServiceContext*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StatefulServiceContext.java
      startLine: 13
    package: system.fabric
    syntax:
      content: 'public StatefulServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaId)'
      parameters:
        - id: nodeContext
          type: system.fabric._node_context
        - id: codePackageActivationContext
          type: system.fabric._code_package_activation_context
        - id: serviceTypeName
          type: '26831127'
        - id: serviceName
          type: '62304784'
        - id: initializationData
          type: ccd9418d
        - id: partitionId
          type: add9545a
        - id: replicaId
          type: 0364520f
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._stateful_service_context.getReplicaId*
    name: getReplicaId
    nameWithType: StatefulServiceContext.getReplicaId
    fullName: long system.fabric.StatefulServiceContext.getReplicaId
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: system.fabric._stateful_service_context.StatefulServiceContext*
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext.StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext.StatefulServiceContext
    package: system.fabric
  - uid: system.fabric._service_context.getCodePackageActivationContext()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getCodePackageActivationContext()
    nameWithType: ServiceContext.getCodePackageActivationContext()
    fullName: CodePackageActivationContext system.fabric.ServiceContext.getCodePackageActivationContext()
    type: Method
    summary: |-
      <p>コード パッケージのアクティベーション コンテキストを取得します。</p>
      <p></p>
    syntax:
      content: public CodePackageActivationContext getCodePackageActivationContext()
      return:
        type: system.fabric._code_package_activation_context
        description: <p>コード パッケージのアクティベーション コンテキスト。 </p>
  - uid: system.fabric._service_context.getInitializationData()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getInitializationData()
    nameWithType: ServiceContext.getInitializationData()
    fullName: 'byte [] system.fabric.ServiceContext.getInitializationData()'
    type: Method
    summary: |-
      <p>サービスの初期化データを取得します。</p>
      <p></p>
    syntax:
      content: 'public byte [] getInitializationData()'
      return:
        type: ccd9418d
        description: <p>初期化データ。 </p>
  - uid: system.fabric._service_context.getNodeContext()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getNodeContext()
    nameWithType: ServiceContext.getNodeContext()
    fullName: NodeContext system.fabric.ServiceContext.getNodeContext()
    type: Method
    summary: |-
      <p>サービスのレプリカがインスタンス化されるノードのノードのコンテキストを取得します。</p>
      <p></p>
    syntax:
      content: public NodeContext getNodeContext()
      return:
        type: system.fabric._node_context
        description: <p>ノードのコンテキスト。 </p>
  - uid: system.fabric._service_context.getPartitionId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getPartitionId()
    nameWithType: ServiceContext.getPartitionId()
    fullName: UUID system.fabric.ServiceContext.getPartitionId()
    type: Method
    summary: |-
      <p>パーティション id を取得します。</p>
      <p></p>
    syntax:
      content: public UUID getPartitionId()
      return:
        type: add9545a
        description: <p>パーティション id。 </p>
  - uid: system.fabric._service_context.getReplicaOrInstanceId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getReplicaOrInstanceId()
    nameWithType: ServiceContext.getReplicaOrInstanceId()
    fullName: long system.fabric.ServiceContext.getReplicaOrInstanceId()
    type: Method
    summary: |-
      <p>ステートフル サービス レプリカ id またはステートレス サービス インスタンス id を取得します。</p>
      <p></p>
    syntax:
      content: public long getReplicaOrInstanceId()
      return:
        type: 0364520f
        description: <p>ステートフル サービス レプリカ id またはステートレス サービス インスタンス id。 </p>
  - uid: system.fabric._service_context.getServiceName()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getServiceName()
    nameWithType: ServiceContext.getServiceName()
    fullName: URI system.fabric.ServiceContext.getServiceName()
    type: Method
    summary: |-
      <p>サービス名を取得します。</p>
      <p></p>
    syntax:
      content: public URI getServiceName()
      return:
        type: '62304784'
        description: <p>サービスの名前。 </p>
  - uid: system.fabric._service_context.getServiceTypeName()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getServiceTypeName()
    nameWithType: ServiceContext.getServiceTypeName()
    fullName: String system.fabric.ServiceContext.getServiceTypeName()
    type: Method
    summary: |-
      <p>サービス型の名前を取得します。</p>
      <p></p>
    syntax:
      content: public String getServiceTypeName()
      return:
        type: '26831127'
        description: <p>サービス型の名前。 </p>
  - uid: system.fabric._service_context.getTraceId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: getTraceId()
    nameWithType: ServiceContext.getTraceId()
    fullName: String system.fabric.ServiceContext.getTraceId()
    type: Method
    summary: "<p>サービスのトレース id を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>生成されたトレースのトレース id を識別子として使用することができます。 </p>"
    syntax:
      content: public String getTraceId()
      return:
        type: '26831127'
        description: <p>サービスのトレース id。 </p>
  - uid: 'system.fabric._service_context.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    name: 'ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    nameWithType: 'ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    fullName: 'system.fabric.ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    type: Constructor
    summary: |-
      <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.ServiceContext</xref>クラスです。</p>
      <p></p>
    syntax:
      content: 'protected ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
      parameters:
        - id: nodeContext
          type: system.fabric._node_context
          description: <p>ノードのコンテキスト。 </p>
        - id: codePackageActivationContext
          type: system.fabric._code_package_activation_context
          description: <p>コード パッケージのアクティベーション コンテキスト。 </p>
        - id: serviceTypeName
          type: '26831127'
          description: <p>サービス型の名前。 </p>
        - id: serviceName
          type: '62304784'
          description: <p>サービスの名前。 </p>
        - id: initializationData
          type: ccd9418d
          description: <p>初期化データ。 </p>
        - id: partitionId
          type: add9545a
          description: <p>パーティション id。 </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>レプリカまたはインスタンスの id です。 </p>
  - uid: system.fabric._service_context
    parent: system.fabric
    href: system.fabric._service_context.yml
    name: ServiceContext
    nameWithType: ServiceContext
    fullName: system.fabric.ServiceContext
    type: Class
    summary: <p>下にあるサービスが動作しているサービス コンテキストを表します。 </p>
    syntax:
      content: public class ServiceContext
  - uid: system.fabric._node_context
    parent: system.fabric
    href: system.fabric._node_context.yml
    name: NodeContext
    nameWithType: NodeContext
    fullName: system.fabric.NodeContext
    type: Class
    summary: <p>ノードのコンテキストをカプセル化するクラス。 </p>
    syntax:
      content: public class NodeContext
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: <p>Service Fabric サービスのアクティブ化コンテキストを表します。 これは、ファブリックのアクティブ化サービスでのみ有効です。 </p>
    syntax:
      content: public interface CodePackageActivationContext