### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
    id: _fabric_transport_actor_remoting_client_factory
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)'
      - microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
    href: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.yml
    langs:
      - java
    name: FabricTransportActorRemotingClientFactory
    nameWithType: FabricTransportActorRemotingClientFactory
    fullName: microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricTransportActorRemotingClientFactory.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricTransportActorRemotingClientFactory.java
      startLine: 19
    package: microsoft.servicefabric.actors
    summary: <p><xref uid="microsoft.servicefabric.services.remoting.client._service_remoting_client_factory" data-throw-if-not-resolved="false">Microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory</xref>ファブリック TCP トランスポートを使用して作成する<xref uid="microsoft.servicefabric.services.remoting.client._service_remoting_client" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceRemotingClient</xref>経由でリモート処理は実行されているインターフェイスでアクターと通信する<xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener</xref></p>
    syntax:
      content: public class FabricTransportActorRemotingClientFactory extends FabricTransportServiceRemotingClientFactory
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.communication.client._communication_client_factory
      - microsoft.servicefabric.services.remoting.client._service_remoting_client_factory
      - microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    inheritedMembers:
      - 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)'
      - 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)'
      - 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)'
      - 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.reportOperationExceptionAsync(ServiceRemotingClient,ExceptionInformation,OperationRetrySettings)'
      - 'microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)'
  - uid: 'microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)'
    id: 'FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)'
    parent: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
    href: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.yml
    langs:
      - java
    name: 'FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    nameWithType: 'FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    fullName: 'microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    overload: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricTransportActorRemotingClientFactory.java
      startLine: 49
    package: microsoft.servicefabric.actors
    summary: |-
      <p>ファブリック トランスポート ベースのアクターのリモート処理クライアント ファクトリを構築します。</p>
      <p></p>
    syntax:
      content: 'public FabricTransportActorRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
      parameters:
        - id: fabricTransportSettings
          type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
          description: <p>ファブリック トランスポートの設定。 場合は、設定は、セキュリティなしで指定された、または null の既定の設定ではありません。 </p>
        - id: callbackClient
          type: microsoft.servicefabric.services.remoting._service_remoting_callback_client
          description: <p>サービスからのコールバックを受信するコールバック クライアント。 </p>
        - id: servicePartitionResolver
          type: microsoft.servicefabric.services.client._service_partition_resolver
          description: '<p>サービス エンドポイントを解決するのにはサービス パーティション リゾルバー。 既定のサービス パーティション リゾルバーがによって返される指定しない場合、 <xref uid="microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault()" data-throw-if-not-resolved="false">microsoft.servicefabric.services.client.FabricServicePartitionResolver#getDefault()</xref>を使用します。 </p>'
        - id: exceptionHandlers
          type: 5618da2dmicrosoft.servicefabric.services.communication.client._exception_handlera08ddfce
          description: <p>アクターと通信中に発生した例外を処理する例外ハンドラーです。 </p>
        - id: traceId
          type: '26831127'
          description: <p>このコンポーネントからのトレースを診断で使用する id。 </p>
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
    id: FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient)
    parent: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
    href: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.yml
    langs:
      - java
    name: FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    nameWithType: FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    fullName: microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
    overload: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricTransportActorRemotingClientFactory.java
      startLine: 26
    package: microsoft.servicefabric.actors
    summary: |-
      <p>ファブリック トランスポート ベースのアクターのリモート処理クライアント ファクトリを構築します。</p>
      <p></p>
    syntax:
      content: public FabricTransportActorRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
      parameters:
        - id: callbackClient
          type: microsoft.servicefabric.services.remoting._service_remoting_callback_client
          description: <p>サービスからのコールバックを受信するコールバック クライアント。 </p>
references:
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.FabricTransportActorRemotingClientFactory*
    name: FabricTransportActorRemotingClientFactory
    nameWithType: FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory
    fullName: microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory.FabricTransportActorRemotingClientFactory
    package: microsoft.servicefabric.actors
  - uid: 5618da2dmicrosoft.servicefabric.services.communication.client._exception_handlera08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: microsoft.servicefabric.services.communication.client._exception_handler
        name: ExceptionHandler
        fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
        href: microsoft.servicefabric.services.communication.client._exception_handler.yml
      - name: '>'
        fullName: '>'
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings,ServiceRemotingCallbackClient,ServicePartitionResolver,List<ExceptionHandler>,String)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: 'FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    nameWithType: 'FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    fullName: 'microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
    type: Constructor
    summary: "<p>ファブリック トランスポート ベースのサービスのリモート処理クライアント ファクトリを構築します。</p>\n<p>\r\n\r\n  <b>注釈:</b>このファクトリは、ファブリック TCP トランスポート レベルでの例外を処理する内部ファブリック トランスポート例外ハンドラーを使用し、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ServiceRemotingExceptionHandler</xref>、だけでなく、コンス トラクターに指定された例外ハンドラーです。 </p>"
    syntax:
      content: 'public FabricTransportServiceRemotingClientFactory(FabricTransportRemotingSettings fabricTransportSettings, ServiceRemotingCallbackClient callbackClient, ServicePartitionResolver servicePartitionResolver, List<ExceptionHandler> exceptionHandlers, String traceId)'
      parameters:
        - id: fabricTransportSettings
          type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
          description: <p>ファブリック トランスポートの設定。 場合は、設定は、セキュリティなしで指定された、または null の既定の設定ではありません。 </p>
        - id: callbackClient
          type: microsoft.servicefabric.services.remoting._service_remoting_callback_client
          description: <p>サービスからのコールバックを受信するコールバック クライアント。 </p>
        - id: servicePartitionResolver
          type: microsoft.servicefabric.services.client._service_partition_resolver
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\">サービス</xref>サービス エンドポイントを解決する競合回避モジュールをパーティション分割します。 既定のサービス パーティション リゾルバーがによって返される指定しない場合、 <xref uid=\"microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault()\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.services.client.FabricServicePartitionResolver#getDefault()</xref>を使用します。 </p>"
        - id: exceptionHandlers
          type: 5618da2dmicrosoft.servicefabric.services.communication.client._exception_handlera08ddfce
          description: <p>サービスと通信中に発生した例外を処理する例外ハンドラーです。 </p>
        - id: traceId
          type: '26831127'
          description: <p>このコンポーネントからのトレースを診断で使用する id。 </p>
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: 'getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    nameWithType: 'FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<ServiceRemotingClient> microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>1 つまたは複数の通信リスナーを含む指定されたサービスのパーティションを解決し、指定された listenerName に対応するエンドポイントと通信するクライアントを返します。 フォームのサービスのエンドポイントは、{「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceRemotingClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
      parameters:
        - id: serviceUri
          type: '62304784'
          description: <p>サービスの Uri を解決するのには </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p>解決するのには、パーティションを識別するキー </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p>レプリカの指定パーティション キーで識別されるパーティションには、クライアントに接続する必要があります </p>
        - id: listenerName
          type: '26831127'
          description: <p>クライアントが接続する、選択したレプリカのエンドポイントでどのリスナーを指定します。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>クライアントを作成するときに発生する例外を使用する再試行ポリシーを指定します。</p>
      return:
        type: 9cdf14d0microsoft.servicefabric.services.remoting.client._service_remoting_clienta08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、CommunicationClient ( <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">microsoft.servicefabric.services.communication.client.CommunicationClient</xref>) オブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: 'getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    nameWithType: 'FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<ServiceRemotingClient> microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>1 つまたは複数の通信リスナーを含む指定されたサービスのパーティションを再解決し、指定された listenerName に対応するエンドポイントと通信するクライアントを返します。 フォームのサービスのエンドポイントは、{「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ServiceRemotingClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)'
      parameters:
        - id: previousRsp
          type: system.fabric._resolved_service_partition
          description: <p>以前の ResolvedServicePartition 値 </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p>レプリカの指定パーティション キーで識別されるパーティションには、クライアントに接続する必要があります </p>
        - id: listenerName
          type: '26831127'
          description: <p>クライアントが接続する、選択したレプリカのエンドポイントでどのリスナーを指定します。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>クライアントを作成するときに発生する例外を使用する再試行ポリシーを指定します。</p>
      return:
        type: 9cdf14d0microsoft.servicefabric.services.remoting.client._service_remoting_clienta08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、CommunicationClient ( <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">microsoft.servicefabric.services.communication.client.CommunicationClient</xref>) オブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.reportOperationExceptionAsync(ServiceRemotingClient,ExceptionInformation,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: 'reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    nameWithType: 'FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<OperationRetryControl> microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory.reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>メッセージを送信するときに、CommunicationClient で発生する例外処理、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(ServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
      parameters:
        - id: client
          type: microsoft.servicefabric.services.remoting.client._service_remoting_client
          description: <p>クライアントの通信 </p>
        - id: exceptionInformation
          type: microsoft.servicefabric.services.communication.client._exception_information
          description: <p>サービスと通信中に発生した例外に関する情報。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>報告された例外を処理するために使用する必要があります再試行ポリシーを指定します。</p>
      return:
        type: 9cdf14d0microsoft.servicefabric.services.communication.client._operation_retry_controla08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、 <xref uid="" data-throw-if-not-resolved="false">OperationRetryControl</xref>再試行ポリシーでこの例外の情報を提供するオブジェクト。 </p>
  - uid: 'microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)'
    parent: microsoft.servicefabric.services.communication.client._communication_client_factory
    href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
    name: 'reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    nameWithType: 'CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    fullName: 'CompletableFuture<OperationRetryControl> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
    type: Method
    summary: |-
      <p>発生する例外処理、 <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>サービスにメッセージを送信するときに</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)'
      parameters:
        - id: client
          type: 4500d4bf
          description: <p>クライアントの通信 </p>
        - id: exceptionInformation
          type: microsoft.servicefabric.services.communication.client._exception_information
          description: <p>サービスと通信中に発生した例外に関する情報。 </p>
        - id: retrySettings
          type: microsoft.servicefabric.services.communication.client._operation_retry_settings
          description: <p>報告された例外を処理するために使用する必要があります再試行ポリシーを指定します。 </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.services.communication.client._operation_retry_controla08ddfce
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>未処理の操作を表すです。 タスクの結果は、 <xref uid="microsoft.servicefabric.services.communication.client._operation_retry_control" data-throw-if-not-resolved="false">OperationRetryControl</xref>再試行ポリシーでこの例外の情報を提供するオブジェクト。 </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
    parent: microsoft.servicefabric.services.remoting.fabrictransport.client
    href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
    name: FabricTransportServiceRemotingClientFactory
    nameWithType: FabricTransportServiceRemotingClientFactory
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
    type: Class
    summary: <p><xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClientFactory</xref>ファブリック TCP トランスポートを使用して作成する<xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClient</xref> 経由でリモート処理は実行されているインターフェイスでステートレスおよびステートフルなサービスと通信します。<xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener</xref>です。 </p>
    syntax:
      content: public class FabricTransportServiceRemotingClientFactory
  - uid: microsoft.servicefabric.services.remoting._service_remoting_callback_client
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_callback_client.yml
    name: ServiceRemotingCallbackClient
    nameWithType: ServiceRemotingCallbackClient
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingCallbackClient
    type: Interface
    summary: <p>クライアントにリモート処理リスナーからのコールバック機構を提供するために実装する必要があります、インターフェイスを定義します。 </p>
    syntax:
      content: public interface ServiceRemotingCallbackClient
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    parent: microsoft.servicefabric.services.remoting.fabrictransport
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    name: FabricTransportRemotingSettings
    nameWithType: FabricTransportRemotingSettings
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
    type: Class
    summary: <p>FabricTransport 通信を構成する設定です。 </p>
    syntax:
      content: public class FabricTransportRemotingSettings
  - uid: microsoft.servicefabric.services.client._service_partition_resolver
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_resolver.yml
    name: ServicePartitionResolver
    nameWithType: ServicePartitionResolver
    fullName: microsoft.servicefabric.services.client.ServicePartitionResolver
    type: Interface
    summary: <p>サービスのエンドポイントを決定するのに役立つクラスを実装します。 </p>
    syntax:
      content: public interface ServicePartitionResolver
  - uid: microsoft.servicefabric.services.communication.client._exception_handler
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._exception_handler.yml
    name: ExceptionHandler
    nameWithType: ExceptionHandler
    fullName: microsoft.servicefabric.services.communication.client.ExceptionHandler
    type: Interface
    summary: <p>Service fabric サービスと通信中に発生した例外を処理するためのインターフェイスを定義します。 </p>
    syntax:
      content: public interface ExceptionHandler
  - uid: microsoft.servicefabric.services.client._fabric_service_partition_resolver.getDefault()
    parent: microsoft.servicefabric.services.client._fabric_service_partition_resolver
    href: microsoft.servicefabric.services.client._fabric_service_partition_resolver.yml
    name: getDefault()
    nameWithType: FabricServicePartitionResolver.getDefault()
    fullName: static ServicePartitionResolver microsoft.servicefabric.services.client.FabricServicePartitionResolver.getDefault()
    type: Method
    summary: |-
      <p>既定値を取得<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref></p>
      <p></p>
    syntax:
      content: public static ServicePartitionResolver getDefault()
      return:
        type: microsoft.servicefabric.services.client._service_partition_resolver
        description: <p>既定の<xref uid="microsoft.servicefabric.services.client._service_partition_resolver" data-throw-if-not-resolved="false">ServicePartitionResolver</xref></p>
  - uid: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory.yml
    name: ServiceRemotingClientFactory
    nameWithType: ServiceRemotingClientFactory
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
    type: Interface
    summary: <p>クライアント ファクトリには、リモート処理の通信を提供するために実装する必要がありますのあるインターフェイスを定義します。 </p>
    syntax:
      content: public interface ServiceRemotingClientFactory
  - uid: microsoft.servicefabric.services.remoting.client._service_remoting_client
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_remoting_client.yml
    name: ServiceRemotingClient
    nameWithType: ServiceRemotingClient
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClient
    type: Interface
    summary: <p>クライアントを提供する実装する必要がありますのあるインターフェイスを定義する<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>リモート通信します。 </p>
    syntax:
      content: public interface ServiceRemotingClient
  - uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d
    parent: microsoft.servicefabric.services.remoting.fabrictransport.runtime
    href: microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d.yml
    name: FabricTransportServiceRemotingListener
    nameWithType: FabricTransportServiceRemotingListener
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener
    type: Class
    summary: <p><xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>ステートレスおよびステートフルなサービスのインターフェイスのリモート処理を提供するファブリック TCP トランスポートを使用します。 </p>
    syntax:
      content: public class FabricTransportServiceRemotingListener