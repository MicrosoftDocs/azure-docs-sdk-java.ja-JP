### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider
    id: _volatile_actor_state_provider
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._volatile_actor_state_provider.abort()
      - microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync(ActorId)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.changeRoleAsync(ReplicaRole,CancellationToken)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.closeAsync(CancellationToken)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync(ActorId,String)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.currentReplicaRole()
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync(ActorId,String)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync(ActorId)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync(int,ContinuationToken)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyContext()
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyState(SequenceNumber,OperationDataStream)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.getLastCommittedSequenceNumber()
      - microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(ActorTypeInformation)
      - microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(StatefulServiceInitializationParameters)
      - microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync(CancellationToken)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync(ActorId,String)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.onDataLossAsync(CancellationToken)
      - microsoft.servicefabric.actors._volatile_actor_state_provider.onSnapshotAsync(Duration)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync(ActorId)
      - microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String)
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String,RestorePolicy)'
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.traceId()
      - microsoft.servicefabric.actors._volatile_actor_state_provider.traceType()
      - microsoft.servicefabric.actors._volatile_actor_state_provider.transientErrorRetryDelay()
      - 'microsoft.servicefabric.actors._volatile_actor_state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
      - microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider()
      - microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider(ReplicatorSettings)
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 60
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-101\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>揮発性の永続化つまりの実装</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-101\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> implementation for Volatile persistence i.e</span></span> <span data-ttu-id=\"458c8-102\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>状態が保持されるメモリ内のみです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-102\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> state is kept in-memory only.</span></span> </p>"
    syntax: &ref_1
      content: 'public class VolatileActorStateProvider implements ActorStateProvider,StateProvider'
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.data._state_provider_replica
      - microsoft.servicefabric.actors._actor_state_provider
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.abort()
    id: abort()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: abort()
    nameWithType: VolatileActorStateProvider.abort()
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.abort()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 244
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-103\">状態プロバイダーのレプリカを強制的に中止します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-103\">Forcefully abort the state provider replica.</span></span> </p>\n<p><span data-ttu-id=\"458c8-104\">\r\n\r\n  <b>注釈:</b>この通常ノードで、永続的な障害が検出されたときにエラーまたは発生 Service Fabric は、内部エラーのため、レプリカのライフ サイクルを確実に管理できません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-104\">\r\n\r\n  <b>Remarks:</b>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's life-cycle due to internal failures.</span></span> </p>"
    syntax:
      content: public void abort()
    overridden: microsoft.servicefabric.data._state_provider_replica.abort()
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync(ActorId)
    id: actorActivatedAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: actorActivatedAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.actorActivatedAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.actorActivatedAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 548
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-105">指定した id に置き換えます。 アクターのライセンス認証プロセスの一部としてこのメソッドが呼び出されます</span><span class="sxs-lookup"><span data-stu-id="458c8-105">This method is invoked as part of the activation process of the actor with the specified Id.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-106">アクティブ化したアクターの id です。</span><span class="sxs-lookup"><span data-stu-id="458c8-106">Id of the actor that is activated.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-107">表す非同期のタスク<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブ化通知の処理です。</span><span class="sxs-lookup"><span data-stu-id="458c8-107">A task that represents the asynchronous <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> activation notification processing.</span></span> </p>
    overridden: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    id: 'backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'VolatileActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 282
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-108\">このアクター状態プロバイダーによって管理されている状態の完全バックアップを実行します</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-108\">Performs a full backup of state managed by this actor state provider</span></span></p>\n<p><span data-ttu-id=\"458c8-109\">\r\n\r\n  <b>注釈:</b>でバックアップ/復元がサポートされていない<xref uid=\"microsoft.servicefabric.actors._volatile_actor_state_provider\" data-throw-if-not-resolved=\"false\">VolatileActorStateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-109\">\r\n\r\n  <b>Remarks:</b>Backup/restore is not supported by <xref uid=\"microsoft.servicefabric.actors._volatile_actor_state_provider\" data-throw-if-not-resolved=\"false\">VolatileActorStateProvider</xref>.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: option
          type: microsoft.servicefabric.data._backup_option
          description: "<p><span data-ttu-id=\"458c8-110\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.data._backup_option\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.data.BackupOption</xref>コールバックの</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-110\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.data._backup_option\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.data.BackupOption</xref> for the callback</span></span> </p>"
        - id: timeout
          type: e02a2de0
          description: "<p><span data-ttu-id=\"458c8-111\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.time.Duration</xref>バックアップのタイムアウトを説明します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-111\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.time.Duration</xref> that describes timeout for the backup</span></span> </p>"
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p><span data-ttu-id="458c8-112">バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出される BackupCallbackCallback です。</span><span class="sxs-lookup"><span data-stu-id="458c8-112">BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-113">非同期のバックアップ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-113">Task that represents the asynchronous backup operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    exceptions:
      - type: b1c38b44
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    id: 'backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'VolatileActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 260
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-114\">このアクター状態プロバイダーによって管理されている状態の完全バックアップを実行します</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-114\">Performs a full backup of state managed by this actor state provider</span></span></p>\n<p><span data-ttu-id=\"458c8-115\">\r\n\r\n  <b>注釈:</b>でバックアップ/復元がサポートされていない<xref uid=\"microsoft.servicefabric.actors._volatile_actor_state_provider\" data-throw-if-not-resolved=\"false\">VolatileActorStateProvider</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-115\">\r\n\r\n  <b>Remarks:</b>Backup/restore is not supported by <xref uid=\"microsoft.servicefabric.actors._volatile_actor_state_provider\" data-throw-if-not-resolved=\"false\">VolatileActorStateProvider</xref>.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p><span data-ttu-id="458c8-116">バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出される BackupCallbackCallback です。</span><span class="sxs-lookup"><span data-stu-id="458c8-116">BackupCallbackCallback to be called when the backup folder has been created locally and is ready to be moved out of the node.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-117">非同期のバックアップ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-117">Task that represents the asynchronous backup operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    exceptions:
      - type: b1c38b44
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.changeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'VolatileActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.changeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 180
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-118">そのロールが変更される、たとえばプライマリまたはセカンダリに、状態プロバイダーのレプリカを通知します。</span><span class="sxs-lookup"><span data-stu-id="458c8-118">Notify the state provider replica that its role is changing, for example to Primary or Secondary.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: '<p><span data-ttu-id="458c8-119">新しい<xref uid="" data-throw-if-not-resolved="false">ReplicaRole</xref>、プライマリまたはセカンダリなどです。</span><span class="sxs-lookup"><span data-stu-id="458c8-119">The new <xref uid="" data-throw-if-not-resolved="false">ReplicaRole</xref>, such as primary or secondary.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-120\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-120\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-121">非同期の変更の役割の操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-121">Task that represents the asynchronous change role operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: VolatileActorStateProvider.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.closeAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 231
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-122\">状態プロバイダーの複製が正常にクローズします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-122\">Gracefully close the state provider replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-123\">\r\n\r\n  <b>注釈:</b>これは、レプリカのコードにアップグレードされている、負荷分散のため、レプリカの移動または一時的なエラーが検出された場合に通常に発生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-123\">\r\n\r\n  <b>Remarks:</b>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected.</span></span> </p>"
    syntax:
      content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-124\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-124\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-125">非同期の close 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-125">Task that represents the asynchronous close operation.</span></span> </p>
    overridden: microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync(ActorId,String)'
    id: 'containsStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'containsStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 655
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-126">アクター状態プロバイダーに指定した状態の名前を持つ、アクター状態が含まれているかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="458c8-126">Checks whether actor state provider contains an actor state with specified state name.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-127">状態の有無を確認する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-127">ID of the actor for which to check state existence.</span></span> </p>
        - id: stateName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-128">有無を確認するアクター状態の名前です。</span><span class="sxs-lookup"><span data-stu-id="458c8-128">Name of the actor state to check for existence.</span></span> </p>
      return:
        type: 7e53ac82
        description: <p><span data-ttu-id="458c8-129">非同期チェック操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-129">A task that represents the asynchronous check operation.</span></span> <span data-ttu-id="458c8-130">TResult パラメーターの値は、指定した名前の状態には、それ以外の場合の false が存在する場合は true です。</span><span class="sxs-lookup"><span data-stu-id="458c8-130">The value of TResult parameter is true if state with specified name exists otherwise false.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.currentReplicaRole()
    id: currentReplicaRole()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: currentReplicaRole()
    nameWithType: VolatileActorStateProvider.currentReplicaRole()
    fullName: ReplicaRole microsoft.servicefabric.actors.VolatileActorStateProvider.currentReplicaRole()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.currentReplicaRole*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 837
    package: microsoft.servicefabric.actors
    syntax:
      content: public ReplicaRole currentReplicaRole()
      return:
        type: system.fabric._replica_role
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync(ActorId,String)'
    id: 'deleteReminderAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'deleteReminderAsync(ActorId actorId, String reminderName)'
    nameWithType: 'VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 800
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-131">存在する場合は、指定されたアクター アラームを削除します。</span><span class="sxs-lookup"><span data-stu-id="458c8-131">Deletes the specified actor reminder if it exists.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-132">アラームを削除するアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-132">ID of the actor to delete the reminder.</span></span> </p>
        - id: reminderName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-133">削除するアラームの名前です。</span><span class="sxs-lookup"><span data-stu-id="458c8-133">Name of the reminder to delete.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-134">非同期の削除操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-134">A task that represents the asynchronous delete operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync(ActorId)
    id: enumerateStateNamesAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: enumerateStateNamesAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 726
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-135\">指定されたアクターに関連付けられているすべての状態名の列挙可能なが作成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-135\">Creates an enumerable of all the state names associated with specified actor.</span></span></p>\n<p><span data-ttu-id=\"458c8-136\">\r\n\r\n  <b>注釈:</b>アクター状態プロバイダーから返された列挙子に安全に読み取りと同時に使用し、状態プロバイダーに書き込みます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-136\">\r\n\r\n  <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider.</span></span> <span data-ttu-id=\"458c8-137\">状態プロバイダーのスナップショットの一貫したビューを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-137\">It represents a snapshot consistent view of the state provider.</span></span> </p>"
    syntax:
      content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-138">列挙可能なを作成する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-138">ID of the actor for which to create enumerable.</span></span> </p>
      return:
        type: d20512af
        description: <p><span data-ttu-id="458c8-139">非同期の列挙操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-139">A task that represents the asynchronous enumeration operation.</span></span> <span data-ttu-id="458c8-140">TResult パラメーターの値は、指定されたアクターに関連付けられているすべての州名の列挙です。</span><span class="sxs-lookup"><span data-stu-id="458c8-140">The value of TResult parameter is an enumerable of all state names associated with specified actor.</span></span> </p>
    overridden: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync(int,ContinuationToken)'
    id: 'getActorsAsync(int,ContinuationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    nameWithType: 'VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    fullName: 'CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 760
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-141\">状態プロバイダーから ActorIds を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-141\">Gets ActorIds from the State Provider.</span></span></p>\n<p><span data-ttu-id=\"458c8-142\">\r\n\r\n  <b>注釈:</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-142\">\r\n\r\n  <b>Remarks:</b> The</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int itemsCount, ContinuationToken continuationToken)'
      parameters:
        - id: itemsCount
          type: f75371fa
          description: <p><span data-ttu-id="458c8-143">返される要求された項目の数。</span><span class="sxs-lookup"><span data-stu-id="458c8-143">Number of items requested to be returned.</span></span> </p>
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: <p><span data-ttu-id="458c8-144">クエリから結果を開始する継続トークンです。</span><span class="sxs-lookup"><span data-stu-id="458c8-144">A continuation token to start querying the results from.</span></span> <span data-ttu-id="458c8-145">継続トークンの null 値は、開始、先頭の値の形式を返すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="458c8-145">A null value of continuation token means start returning values form the beginning.</span></span> </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
        description: <p><span data-ttu-id="458c8-146">サーバーへの呼び出しの非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-146">A task that represents the asynchronous operation of call to server.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyContext()
    id: getCopyContext()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: getCopyContext()
    nameWithType: VolatileActorStateProvider.getCopyContext()
    fullName: OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyContext()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 462
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-147\">作成され、プライマリ レプリカにコンテキストを送信する開かれた後は、セカンダリ レプリカ上のコンテキストを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-147\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-148\">\r\n\r\n  <b>注釈:</b>、プライマリ レプリカが、コンテキストを分析しを使用して状態を返送<xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider #getCopyState(SequenceNumber, OperationDataStream)</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-148\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id=\"458c8-149\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref>が新しく作成された、アイドル状態のセカンダリ レプリカで呼び出され、プライマリ レプリカとの双方向メッセージ交換を非同期的に確立するためのメカニズムを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-149\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"458c8-150\">セカンダリ レプリカは、送信<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>オブジェクトをプライマリ レプリカがセカンダリ レプリカでコンテキストを収集する場合の進行状況を判断できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-150\">The Secondary replica sends <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"458c8-151\">プライマリ レプリカは、必要な状態に戻すを送信して応答します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-151\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"458c8-152\">参照してください<xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider #getCopyState(SequenceNumber, OperationDataStream)</xref>交換の一方のプライマリ レプリカにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-152\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"458c8-153\">メモリ内のサービスでは、 <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref>メソッドは呼び出されません、セカンダリ レプリカの状態は認識されている (空され、状態のすべてが必要)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-153\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax:
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="458c8-154">返します<xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-154">Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span></span> </p>
    overridden: system.fabric._state_provider.getCopyContext()
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    id: 'getCopyState(SequenceNumber,OperationDataStream)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 496
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-155\">プライマリ レプリカのセカンダリ レプリカを作成する必要がある状態を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-155\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-156\">\r\n\r\n  <b>注釈:</b>単に<xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref>経由でプライマリ レプリカにコンテキストを送信するセカンダリ レプリカを有効にする<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>、 <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider #getCopyState(SequenceNumber, OperationDataStream)</xref>により、プライマリ レプリカで応答する、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-156\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>.</span></span> <span data-ttu-id=\"458c8-157\">ストリームには使用して、セカンダリ レプリカに配信されるオブジェクトが含まれています、 <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">StateReplicator#getCopyStream()</xref>のメソッド、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref>クラスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-157\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">StateReplicator#getCopyStream()</xref> method of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"458c8-158\">オブジェクトを実装<xref uid=\"\" data-throw-if-not-resolved=\"false\">操作</xref>し、指定されたデータが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-158\">The objects implement <xref uid=\"\" data-throw-if-not-resolved=\"false\">Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"458c8-159\">プライマリ レプリカは、この呼び出しを受け取る、それを作成し、返す別<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>を格納している<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-159\">When the Primary replica receives this call, it should create and return another <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref> that contains <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>.</span></span> <span data-ttu-id=\"458c8-160\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>を表すデータと状態をセカンダリ レプリカ</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-160\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax:
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="458c8-161">最大最終シーケンス番号 (LSN) を使用してコピー ストリームに配置する必要があります、 <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="458c8-161">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="458c8-162">この数より大きい Lsn が経由でレプリケーション ストリームの一部として、セカンダリ レプリカに配信される、 <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">StateReplicator#getReplicationStream()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="458c8-162">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: <p><span data-ttu-id="458c8-163"><xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>を格納している、 <xref uid="" data-throw-if-not-resolved="false">OperationData</xref>セカンダリ レプリカによって作成されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="458c8-163">An <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref> that contains the <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="458c8-164">指定された遅延を解消する必要があります。</span><span class="sxs-lookup"><span data-stu-id="458c8-164">requires to catch up to the provided</span></span> </p>
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="458c8-165">返します<xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-165">Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span></span> </p>
    overridden: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    exceptions:
      - type: 12fe80de
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getLastCommittedSequenceNumber()
    id: getLastCommittedSequenceNumber()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: getLastCommittedSequenceNumber()
    nameWithType: VolatileActorStateProvider.getLastCommittedSequenceNumber()
    fullName: long microsoft.servicefabric.actors.VolatileActorStateProvider.getLastCommittedSequenceNumber()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.getLastCommittedSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 364
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-166\">サービスがコミットされた最後のシーケンス番号を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-166\">Obtains the last sequence number that the service has committed.</span></span></p>\n<p><span data-ttu-id=\"458c8-167\">\r\n\r\n  <b>注釈:</b>データの損失が疑われると、最初の起動時に、永続的な状態がある場合に、サービスでこのメソッドが呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-167\">\r\n\r\n  <b>Remarks:</b>This method is called on a service when it first starts up, in case it has any persistent state, and when data loss is suspected.</span></span> <span data-ttu-id=\"458c8-168\">ステートフル サービス レプリカ起動すると、以前の更新から可能性がありますが保存されるデータを復元するオプションがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-168\">When a stateful service replica starts up, it has the option to restore any data that might have persisted from previous updates.</span></span> <span data-ttu-id=\"458c8-169\">このようないくつかの状態に復元するか、現在の進行状況がそのデータの最後に書き込まれたシーケンス番号です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-169\">If it restores some state in this manner, its current progress is the last written sequence number for that data.</span></span> <span data-ttu-id=\"458c8-170\">揮発性サービスは、単に 0 を返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-170\">A volatile service can simply return 0.</span></span> <span data-ttu-id=\"458c8-171\">によって現在コミット進行状況がわかるため、フェールオーバー中に新しいプライマリ選択を判断するこのメソッドは、メモと呼ばれる、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref>その時点でクラスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-171\">Note that this method is not called to determine a new primary election during fail-over, because the current committed progress is already known by the <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> class at that time.</span></span> </p>"
    syntax:
      content: public long getLastCommittedSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="458c8-172">長さを返します。</span><span class="sxs-lookup"><span data-stu-id="458c8-172">Returns long.</span></span> </p>
    overridden: system.fabric._state_provider.getLastCommittedSequenceNumber()
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(ActorTypeInformation)
    id: initialize(ActorTypeInformation)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: initialize(ActorTypeInformation actorTypeInformation)
    nameWithType: VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 536
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-173">関連付けられているアクター型の型情報を使用してアクター状態プロバイダーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="458c8-173">Initializes the actor state provider with type information of the actor type associated with it.</span></span></p>
      <p></p>
    syntax:
      content: public void initialize(ActorTypeInformation actorTypeInformation)
      parameters:
        - id: actorTypeInformation
          type: microsoft.servicefabric.actors._actor_type_information
          description: "<p><span data-ttu-id=\"458c8-174\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref>アクター クラスの情報を入力します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-174\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref> Type information of the actor class.</span></span> </p>"
    overridden: microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize(StatefulServiceInitializationParameters)
    id: initialize(StatefulServiceInitializationParameters)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize(StatefulServiceInitializationParameters initializationParameters)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 130
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-175\">サービスの初期化情報を使用して、状態プロバイダーのレプリカを初期化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-175\">Initialize the state provider replica using the service initialization information.</span></span></p>\n<p><span data-ttu-id=\"458c8-176\">\r\n\r\n  <b>注釈:</b>初期化中に複雑な処理を行う必要はありません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-176\">\r\n\r\n  <b>Remarks:</b>No complex processing should be done during Initialize.</span></span> <span data-ttu-id=\"458c8-177\">OpenAsync では、高価なまたは実行時間の長いの初期化を行う必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-177\">Expensive or long-running initialization should be done in OpenAsync.</span></span> </p>"
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: "<p><span data-ttu-id=\"458c8-178\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">StatefulServiceInitializationParameters</xref>サービス名、パーティション id、レプリカの id、およびコード パッケージ情報などです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-178\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">StatefulServiceInitializationParameters</xref> such as service name, partition id, replica id, and code package information.</span></span> </p>"
    overridden: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync(CancellationToken)
    id: loadRemindersAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: loadRemindersAsync(CancellationToken cancellationToken)
    nameWithType: VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 818
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-179">アクター状態プロバイダーに含まれているすべてのアラームを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="458c8-179">Loads all the reminders contained in the actor state provider.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-180\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-180\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
        description: <p><span data-ttu-id="458c8-181">非同期ロード操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-181">A task that represents the asynchronous load operation.</span></span> <span data-ttu-id="458c8-182">TResult パラメーターの値は、アクター状態プロバイダーに含まれているすべてのアクター アラームのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="458c8-182">The value of TResult parameter is a collection of all actor reminders contained in the actor state provider.</span></span> </p>
    overridden: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync(CancellationToken)
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync(ActorId,String)'
    id: 'loadStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'loadStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    fullName: 'public<T> CompletableFuture<T> microsoft.servicefabric.actors.VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 575
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-183">指定された状態の名前に関連付けられているアクターの状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="458c8-183">Loads the actor state associated with the specified state name.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-184">アクティブ化したアクターの id です。</span><span class="sxs-lookup"><span data-stu-id="458c8-184">Id of the actor that is activated.</span></span> </p>
        - id: stateName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-185">StateName です。</span><span class="sxs-lookup"><span data-stu-id="458c8-185">StateName.</span></span> </p>
      return:
        type: 6d056e8b
        description: <p><span data-ttu-id="458c8-186">非同期ロード操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-186">A task that represents the asynchronous load operation.</span></span> <span data-ttu-id="458c8-187">TResult のパラメーターの値には、特定の状態名に関連付けられているアクター状態の値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-187">The value of TResult parameter contains value of actor state associated with given state name.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)'
    exceptions:
      - type: c27a23df
        description: <p><span data-ttu-id="458c8-188">場合<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>状態名が存在しないに関連付けられた状態を指定します。</span><span class="sxs-lookup"><span data-stu-id="458c8-188">If <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> state associated with specified state name does not exist.</span></span> </p>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.onDataLossAsync(CancellationToken)
    id: onDataLossAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: VolatileActorStateProvider.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.onDataLossAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.onDataLossAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 437
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-189\">このレプリカ セット内のレプリカのな書き込みクォーラムが失われていることと、そのためデータが失われる可能性がありますが発生したことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-189\">Indicates that a write quorum of replicas in this replica set has been lost, and that therefore data loss might have occurred.</span></span> <span data-ttu-id=\"458c8-190\">レプリカ セットは、プライマリ レプリカが含まれているレプリカの大部分で構成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-190\">The replica set consists of a majority of replicas, which includes the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-191\">\r\n\r\n  <b>注釈:</b>Service Fabric ランタイムが、プライマリ レプリカが含まれており、レプリカのクォーラムの障害に従っていることが新しいプライマリ レプリカとすぐに、新しいプライマリ レプリカでこのメソッドを呼び出します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-191\">\r\n\r\n  <b>Remarks:</b>When the Service Fabric runtime observes the failure of a quorum of replicas, which includes the Primary replica, it elects a new Primary replica and immediately calls this method on the new Primary replica.</span></span> <span data-ttu-id=\"458c8-192\">データ損失の可能性が通知をプライマリ レプリカは、外部データ ソースからの状態を復元することもできます。 またはが現在の状態で実行を続行できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-192\">A Primary replica that is informed of possible data loss can choose to restore its state from some external data source or can continue to run with the state that it currently has.</span></span> <span data-ttu-id=\"458c8-193\">サービスが、現在の状態で実行され続ける場合は、状態の変更が行われていないことを示す、このメソッドから false を返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-193\">If the service continues to run with its current state, it should return false from this method, which indicates that no state change has been made.</span></span> <span data-ttu-id=\"458c8-194\">復元または不完全な作業は、ロールバックなどの状態を変更した場合は true を返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-194\">If it has restored or altered its state, such as rolling back incomplete work, it should return true.</span></span> <span data-ttu-id=\"458c8-195\">True が返される場合はその他のレプリカの状態が不適切な想定されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-195\">If true is returned, then the state in other replicas must be assumed to be incorrect.</span></span> <span data-ttu-id=\"458c8-196\">そのため、Service Fabric ランタイムでは、レプリカ セットから他のレプリカを削除し、それらを再作成します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-196\">Therefore, the Service Fabric runtime removes the other replicas from the replica set and recreates them.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-197\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-197\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="458c8-198">返します<xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref>型の<xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>状態が変更されたかどうかを示すです。</span><span class="sxs-lookup"><span data-stu-id="458c8-198">Returns <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, that indicates whether state changed.</span></span> <span data-ttu-id="458c8-199">メソッドが true を返します、変更されたときまたは変更されていない場合、false が返されます。</span><span class="sxs-lookup"><span data-stu-id="458c8-199">When it changed, the method returns true or when it did not change, the method returns false.</span></span> </p>'
    overridden: system.fabric._state_provider.onDataLossAsync(CancellationToken)
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.onSnapshotAsync(Duration)
    id: onSnapshotAsync(Duration)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: onSnapshotAsync(Duration currentLogicalTime)
    nameWithType: VolatileActorStateProvider.onSnapshotAsync(Duration currentLogicalTime)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.onSnapshotAsync(Duration currentLogicalTime)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.onSnapshotAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 339
    package: microsoft.servicefabric.actors
    syntax:
      content: public CompletableFuture<?> onSnapshotAsync(Duration currentLogicalTime)
      parameters:
        - id: currentLogicalTime
          type: e02a2de0
      return:
        type: 16409f84
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    id: 'openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'VolatileActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> microsoft.servicefabric.actors.VolatileActorStateProvider.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 155
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-200\">使用するため、状態プロバイダーのレプリカを開きます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-200\">Open the state provider replica for use.</span></span></p>\n<p><span data-ttu-id=\"458c8-201\">\r\n\r\n  <b>注釈:</b>拡張状態プロバイダーの初期化タスクを開始できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-201\">\r\n\r\n  <b>Remarks:</b>Extended state provider initialization tasks can be started at this time.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p><span data-ttu-id="458c8-202"><xref uid="" data-throw-if-not-resolved="false">ReplicaOpenMode</xref>これは、新規または既存のレプリカであるかどうかを示すです。</span><span class="sxs-lookup"><span data-stu-id="458c8-202">The <xref uid="" data-throw-if-not-resolved="false">ReplicaOpenMode</xref> that indicates whether this is a new or existing replica.</span></span> </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><span data-ttu-id="458c8-203"><xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref>レプリカが属しているパーティション。</span><span class="sxs-lookup"><span data-stu-id="458c8-203">The <xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref> partition the replica belongs to.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-204\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-204\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: <p><span data-ttu-id="458c8-205">非同期の open 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-205">Task that represents the asynchronous open operation.</span></span> <span data-ttu-id="458c8-206">結果には、パーティション内の他の状態プロバイダーのレプリカ間で状態のレプリケーションを担当するレプリケーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-206">The result contains the replicator responsible for replicating state between other state provider replicas in the partition.</span></span> </p>
    overridden: 'microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync(ActorId)
    id: removeActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: removeActorAsync(ActorId actorId)
    nameWithType: VolatileActorStateProvider.removeActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.removeActorAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 675
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-207">すべての既存の状態と指定されたアクターにアトミックに関連付けられている通知を削除します。</span><span class="sxs-lookup"><span data-stu-id="458c8-207">Removes all the existing states and reminders associated with specified actor atomically.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-208">状態を削除するアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-208">ID of the actor for which to remove state.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-209">非同期の削除操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-209">A task that represents the asynchronous remove operation.</span></span> </p>
    overridden: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String)
    id: restoreAsync(String)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: restoreAsync(String backupFolderPath)
    nameWithType: VolatileActorStateProvider.restoreAsync(String backupFolderPath)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.restoreAsync(String backupFolderPath)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 305
    package: microsoft.servicefabric.actors
    summary: '<p><span data-ttu-id="458c8-210">によって作成されたバックアップを復元<xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</xref>または<xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync (BackupOption、期間、BiFunction)</xref><b>解説:</b>でバックアップ/復元がサポートされていない<xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-210">Restore a backup taken by <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</xref> or <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</xref><b>Remarks:</b>Backup/restore is not supported by <xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>.</span></span> </p>'
    syntax:
      content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: <p><span data-ttu-id="458c8-211">レプリカを復元するがディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="458c8-211">Directory from where replica will be restored from.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-212">非同期の復元操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-212">Task that represents the asynchronous restore operation.</span></span> </p>
    overridden: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
    exceptions:
      - type: b1c38b44
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync(String,RestorePolicy)'
    id: 'restoreAsync(String,RestorePolicy)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    nameWithType: 'VolatileActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 327
    package: microsoft.servicefabric.actors
    summary: '<p><span data-ttu-id="458c8-213">によって作成されたバックアップを復元<xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</xref>または<xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync (BackupOption、期間、BiFunction)</xref><b>解説:</b>でバックアップ/復元がサポートされていない<xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-213">Restore a backup taken by <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BiFunction)</xref> or <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.data.StateProviderReplica#backupAsync(BackupOption, Duration, BiFunction)</xref><b>Remarks:</b>Backup/restore is not supported by <xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>.</span></span> </p>'
    syntax:
      content: 'public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: <p><span data-ttu-id="458c8-214">レプリカを復元するがディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="458c8-214">Directory from where replica will be restored from.</span></span> </p>
        - id: restorePolicy
          type: microsoft.servicefabric.data._restore_policy
          description: <p><span data-ttu-id="458c8-215"><xref uid="" data-throw-if-not-resolved="false">RestorePolicy</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-215">The <xref uid="" data-throw-if-not-resolved="false">RestorePolicy</xref>.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-216">非同期の復元操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-216">Task that represents the asynchronous restore operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)'
    exceptions:
      - type: b1c38b44
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
    id: 'saveReminderAsync(ActorId,ActorReminder)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    nameWithType: 'VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 781
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-217">指定されたアクター アラームを保存します。</span><span class="sxs-lookup"><span data-stu-id="458c8-217">Saves the specified actor reminder.</span></span> <span data-ttu-id="458c8-218">指定した名前のアクター アラームが存在しない場合は、それ以外の場合と同じ名前のアクター アラームを既存のアクター アラームが更新を追加します。</span><span class="sxs-lookup"><span data-stu-id="458c8-218">If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-219">アラームを保存する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-219">ID of actor for which to save reminder.</span></span> </p>
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: "<p><span data-ttu-id=\"458c8-220\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アラームを保存します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-220\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> reminder to save.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-221">非同期の保存操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-221">A task that represents the asynchronous save operation.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    id: 'saveStateAsync(ActorId,List<ActorStateChange>)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    nameWithType: 'VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 610
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-222">指定したアクター状態の変更のセットをアトミックに保存します。</span><span class="sxs-lookup"><span data-stu-id="458c8-222">Saves the specified set of actor state changes atomically.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-223">状態の変更を保存する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-223">ID of the actor for which to save the state changes.</span></span> </p>
        - id: stateChanges
          type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
          description: <p><span data-ttu-id="458c8-224">状態の変更を保存するコレクション。</span><span class="sxs-lookup"><span data-stu-id="458c8-224">Collection of state changes to save.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-225">非同期の保存操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-225">A task that represents the asynchronous save operation.</span></span> <span data-ttu-id="458c8-226">状態変更のコレクションには、指定された状態の名前の 1 つの項目を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="458c8-226">The collection of state changes should contain only one item for a given state name.</span></span> <span data-ttu-id="458c8-227">保存先に既に存在するか、存在しないアクター状態の更新/削除するアクターの状態を追加しようとしています。 操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="458c8-227">The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist.</span></span> </p>
    overridden: 'microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
    id: 'setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    nameWithType: 'VolatileActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    fullName: 'void microsoft.servicefabric.actors.VolatileActorStateProvider.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.setOnDataLossCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 333
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-228">疑いのあるデータ損失の可能性の中に呼び出される関数</span><span class="sxs-lookup"><span data-stu-id="458c8-228">Function called during suspected data-loss</span></span></p>
      <p></p>
    syntax:
      content: 'public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
      parameters:
        - id: onDataLossAsync
          type: 432ffe41system.fabric._cancellation_token774bd4f0
          description: '<p><span data-ttu-id="458c8-229">TODO です。</span><span class="sxs-lookup"><span data-stu-id="458c8-229">TODO.</span></span> <span data-ttu-id="458c8-230">疑いのあるデータ損失の処理の一部として呼び出される関数。</span><span class="sxs-lookup"><span data-stu-id="458c8-230">Function called as part of suspected data loss processing.</span></span> <span data-ttu-id="458c8-231">関数は、CancellationToken にし、イベントの非同期処理を表す CompletableFuture を返します。</span><span class="sxs-lookup"><span data-stu-id="458c8-231">Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event.</span></span> <span data-ttu-id="458c8-232">True を返すには、レプリカの状態が復元されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-232">Returning true, indicates that the replica''s state has been restored.</span></span> <span data-ttu-id="458c8-233">False は、レプリカの状態が変更されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-233">False indicates that the replica''s state has not been changed.</span></span> </p>'
    overridden: 'microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.traceId()
    id: traceId()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: traceId()
    nameWithType: VolatileActorStateProvider.traceId()
    fullName: String microsoft.servicefabric.actors.VolatileActorStateProvider.traceId()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.traceId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 832
    package: microsoft.servicefabric.actors
    syntax:
      content: public String traceId()
      return:
        type: '26831127'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.traceType()
    id: traceType()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: traceType()
    nameWithType: VolatileActorStateProvider.traceType()
    fullName: String microsoft.servicefabric.actors.VolatileActorStateProvider.traceType()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.traceType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 827
    package: microsoft.servicefabric.actors
    syntax:
      content: public String traceType()
      return:
        type: '26831127'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.transientErrorRetryDelay()
    id: transientErrorRetryDelay()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: transientErrorRetryDelay()
    nameWithType: VolatileActorStateProvider.transientErrorRetryDelay()
    fullName: Duration microsoft.servicefabric.actors.VolatileActorStateProvider.transientErrorRetryDelay()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.transientErrorRetryDelay*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 842
    package: microsoft.servicefabric.actors
    syntax:
      content: public Duration transientErrorRetryDelay()
      return:
        type: e02a2de0
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    id: 'updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'VolatileActorStateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.updateEpochAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 404
    package: microsoft.servicefabric.actors
    summary: "<p><span data-ttu-id=\"458c8-234\">レプリカ セットの構成が変更の理由で変更または、プライマリ レプリカへの変更をしようとしましたが、レプリカを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-234\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"458c8-235\">変更は、エラーまたは以前のプライマリ レプリカの負荷分散のために発生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-235\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"458c8-236\">エポックの変更は、特定のプライマリ レプリカによって送信された実際の構成の期間に操作を分割することによって、バリアとして機能します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-236\">Epoch changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-237\">\r\n\r\n  <b>注釈:</b>レプリカ セットのプライマリ レプリカが変更されているか、変更が試みられたために、このメソッドが呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-237\">\r\n\r\n  <b>Remarks:</b>This method is called because the Primary replica of the replica set has changed, or a change was attempted.</span></span> <span data-ttu-id=\"458c8-238\">セカンダリ レプリカは、新しいプライマリ レプリカになるとしているか、間違っている場合、新しいプライマリ レプリカにこのメソッドを受信、発生したレプリケーション ストリームから新しいプライマリ レプリカから最初の操作を取得しようとするときにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-238\">Secondary replicas receive this method either when they are about to become the new Primary replica, or, if they are not the new Primary replica, they receive it when they attempt to get the first operation from the new Primary replica from the replication stream.</span></span> <span data-ttu-id=\"458c8-239\">プライマリ レプリカでは、試行が失敗した、プライマリ レプリカをスワップする場合は、このメソッドを受け取ることがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-239\">Primary replicas might occasionally receive this method if there is an attempt to swap the Primary replica, which fails.</span></span> <span data-ttu-id=\"458c8-240\">内の情報、 <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">StateProvider #updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref>メソッドは、レプリカが受信した各エポックの一覧で、進行状況のベクトルを維持するためにサービスを有効にし、含まれていた最大の LSN です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-240\">The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"458c8-241\">現在適用されている最大の LSN と進行状況のベクター データは、セカンダリ レプリカをどのように操作の進行を記述するコピー操作中に送信するのに便利です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-241\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe how far the operation has progressed.</span></span> <span data-ttu-id=\"458c8-242\">コピー操作中に、セカンダリ レプリカから受信した進行状況のベクトルを比較するには、セカンダリ レプリカが最新かどうか、どの状態は、セカンダリ レプリカに送信する必要があり、セカンダリ レプリカが false の進行状況を行われたかどうかを判断するプライマリ レプリカが有効にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-242\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"458c8-243\">False の進行状況は、以前のエポックの LSN が、プライマリ レプリカを受信する LSN よりも大きいことを意味します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-243\">False progress means that an LSN in a previous epoch was greater than the LSN that the Primary replica receives.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p><span data-ttu-id="458c8-244">新しい<xref uid="" data-throw-if-not-resolved="false">エポック</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-244">The new <xref uid="" data-throw-if-not-resolved="false">Epoch</xref>.</span></span> </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: <p><span data-ttu-id="458c8-245">以前のエポックで発見された最大のシーケンス番号 (LSN)。</span><span class="sxs-lookup"><span data-stu-id="458c8-245">The maximum sequence number (LSN) that should have been observed in the previous epoch.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-246\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-246\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-247">タスクを返します。</span><span class="sxs-lookup"><span data-stu-id="458c8-247">Returns Task.</span></span> </p>
    overridden: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider()
    id: VolatileActorStateProvider()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: VolatileActorStateProvider()
    nameWithType: VolatileActorStateProvider.VolatileActorStateProvider()
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider.VolatileActorStateProvider()
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 92
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="458c8-248">インスタンスを作成<xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-248">Creates an instance of <xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>.</span></span> </p>
    syntax:
      content: public VolatileActorStateProvider()
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider(ReplicatorSettings)
    id: VolatileActorStateProvider(ReplicatorSettings)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    langs:
      - java
    name: VolatileActorStateProvider(ReplicatorSettings replicatorSettings)
    nameWithType: VolatileActorStateProvider.VolatileActorStateProvider(ReplicatorSettings replicatorSettings)
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider.VolatileActorStateProvider(ReplicatorSettings replicatorSettings)
    overload: microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/VolatileActorStateProvider.java
      startLine: 103
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="458c8-249">インスタンスを作成<xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref>で複製物作成会社の設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="458c8-249">Creates an instance of <xref uid="microsoft.servicefabric.actors._volatile_actor_state_provider" data-throw-if-not-resolved="false">VolatileActorStateProvider</xref> with specified replicator settings.</span></span></p>
      <p></p>
    syntax:
      content: public VolatileActorStateProvider(ReplicatorSettings replicatorSettings)
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="458c8-250">A <xref uid="" data-throw-if-not-resolved="false">ReplicatorSettings</xref>複製物作成会社の設定を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="458c8-250">A <xref uid="" data-throw-if-not-resolved="false">ReplicatorSettings</xref> object that describes replicator settings.</span></span> </p>
references:
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.VolatileActorStateProvider*
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider.VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider.VolatileActorStateProvider
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.initialize*
    name: initialize
    nameWithType: VolatileActorStateProvider.initialize
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.initialize
    package: microsoft.servicefabric.actors
  - uid: 9cdf14d0system.fabric._replicatora08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._replicator
        name: Replicator
        fullName: system.fabric.Replicator
        href: system.fabric._replicator.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.openAsync*
    name: openAsync
    nameWithType: VolatileActorStateProvider.openAsync
    fullName: CompletableFuture<Replicator> microsoft.servicefabric.actors.VolatileActorStateProvider.openAsync
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.changeRoleAsync*
    name: changeRoleAsync
    nameWithType: VolatileActorStateProvider.changeRoleAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.changeRoleAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.closeAsync*
    name: closeAsync
    nameWithType: VolatileActorStateProvider.closeAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.closeAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.abort*
    name: abort
    nameWithType: VolatileActorStateProvider.abort
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.abort
    package: microsoft.servicefabric.actors
  - uid: b1c38b44
    spec.java:
      - name: UnsupportedOperationException
        fullName: UnsupportedOperationException
  - uid: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
    spec.java:
      - name: BiFunction<
        fullName: BiFunction<
      - uid: microsoft.servicefabric.data._backup_info
        name: BackupInfo
        fullName: microsoft.servicefabric.data.BackupInfo
        href: microsoft.servicefabric.data._backup_info.yml
      - name: ', '
        fullName: ', '
      - uid: system.fabric._cancellation_token
        name: CancellationToken
        fullName: system.fabric.CancellationToken
        href: system.fabric._cancellation_token.yml
      - name: ', CompletableFuture<Boolean>>'
        fullName: ', CompletableFuture<Boolean>>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.backupAsync*
    name: backupAsync
    nameWithType: VolatileActorStateProvider.backupAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.backupAsync
    package: microsoft.servicefabric.actors
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.restoreAsync*
    name: restoreAsync
    nameWithType: VolatileActorStateProvider.restoreAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.restoreAsync
    package: microsoft.servicefabric.actors
  - uid: 432ffe41system.fabric._cancellation_token774bd4f0
    spec.java:
      - name: Function<
        fullName: Function<
      - uid: system.fabric._cancellation_token
        name: CancellationToken
        fullName: system.fabric.CancellationToken
        href: system.fabric._cancellation_token.yml
      - name: ', CompletableFuture<Boolean>>'
        fullName: ', CompletableFuture<Boolean>>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.setOnDataLossCallback*
    name: setOnDataLossCallback
    nameWithType: VolatileActorStateProvider.setOnDataLossCallback
    fullName: void microsoft.servicefabric.actors.VolatileActorStateProvider.setOnDataLossCallback
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.onSnapshotAsync*
    name: onSnapshotAsync
    nameWithType: VolatileActorStateProvider.onSnapshotAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.onSnapshotAsync
    package: microsoft.servicefabric.actors
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getLastCommittedSequenceNumber*
    name: getLastCommittedSequenceNumber
    nameWithType: VolatileActorStateProvider.getLastCommittedSequenceNumber
    fullName: long microsoft.servicefabric.actors.VolatileActorStateProvider.getLastCommittedSequenceNumber
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.updateEpochAsync*
    name: updateEpochAsync
    nameWithType: VolatileActorStateProvider.updateEpochAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.updateEpochAsync
    package: microsoft.servicefabric.actors
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.onDataLossAsync*
    name: onDataLossAsync
    nameWithType: VolatileActorStateProvider.onDataLossAsync
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.onDataLossAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyContext*
    name: getCopyContext
    nameWithType: VolatileActorStateProvider.getCopyContext
    fullName: OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyContext
    package: microsoft.servicefabric.actors
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyState*
    name: getCopyState
    nameWithType: VolatileActorStateProvider.getCopyState
    fullName: OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyState
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.actorActivatedAsync*
    name: actorActivatedAsync
    nameWithType: VolatileActorStateProvider.actorActivatedAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.actorActivatedAsync
    package: microsoft.servicefabric.actors
  - uid: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: microsoft.servicefabric.actors._actor_state_change
        name: ActorStateChange
        fullName: microsoft.servicefabric.actors.ActorStateChange
        href: microsoft.servicefabric.actors._actor_state_change.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.saveStateAsync*
    name: saveStateAsync
    nameWithType: VolatileActorStateProvider.saveStateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.containsStateAsync*
    name: containsStateAsync
    nameWithType: VolatileActorStateProvider.containsStateAsync
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.containsStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.removeActorAsync*
    name: removeActorAsync
    nameWithType: VolatileActorStateProvider.removeActorAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.removeActorAsync
    package: microsoft.servicefabric.actors
  - uid: d20512af
    spec.java:
      - name: CompletableFuture<List<String>>
        fullName: CompletableFuture<List<String>>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.enumerateStateNamesAsync*
    name: enumerateStateNamesAsync
    nameWithType: VolatileActorStateProvider.enumerateStateNamesAsync
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.VolatileActorStateProvider.enumerateStateNamesAsync
    package: microsoft.servicefabric.actors
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._paged_result
        name: PagedResult
        fullName: microsoft.servicefabric.actors.PagedResult
        href: microsoft.servicefabric.actors._paged_result.yml
      - name: <
        fullName: <
      - uid: microsoft.servicefabric.actors._actor_id
        name: ActorId
        fullName: microsoft.servicefabric.actors.ActorId
        href: microsoft.servicefabric.actors._actor_id.yml
      - name: '>>'
        fullName: '>>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getActorsAsync*
    name: getActorsAsync
    nameWithType: VolatileActorStateProvider.getActorsAsync
    fullName: CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.VolatileActorStateProvider.getActorsAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.saveReminderAsync*
    name: saveReminderAsync
    nameWithType: VolatileActorStateProvider.saveReminderAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.saveReminderAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.deleteReminderAsync*
    name: deleteReminderAsync
    nameWithType: VolatileActorStateProvider.deleteReminderAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.deleteReminderAsync
    package: microsoft.servicefabric.actors
  - uid: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._actor_reminder_collection
        name: ActorReminderCollection
        fullName: microsoft.servicefabric.actors.ActorReminderCollection
        href: microsoft.servicefabric.actors._actor_reminder_collection.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadRemindersAsync*
    name: loadRemindersAsync
    nameWithType: VolatileActorStateProvider.loadRemindersAsync
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.VolatileActorStateProvider.loadRemindersAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.traceType*
    name: traceType
    nameWithType: VolatileActorStateProvider.traceType
    fullName: String microsoft.servicefabric.actors.VolatileActorStateProvider.traceType
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.traceId*
    name: traceId
    nameWithType: VolatileActorStateProvider.traceId
    fullName: String microsoft.servicefabric.actors.VolatileActorStateProvider.traceId
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.currentReplicaRole*
    name: currentReplicaRole
    nameWithType: VolatileActorStateProvider.currentReplicaRole
    fullName: ReplicaRole microsoft.servicefabric.actors.VolatileActorStateProvider.currentReplicaRole
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.transientErrorRetryDelay*
    name: transientErrorRetryDelay
    nameWithType: VolatileActorStateProvider.transientErrorRetryDelay
    fullName: Duration microsoft.servicefabric.actors.VolatileActorStateProvider.transientErrorRetryDelay
    package: microsoft.servicefabric.actors
  - uid: c27a23df
    spec.java:
      - name: FabricKeyNotFoundException
        fullName: FabricKeyNotFoundException
  - uid: 6d056e8b
    spec.java:
      - name: <T> CompletableFuture<T>
        fullName: <T> CompletableFuture<T>
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.loadStateAsync*
    name: loadStateAsync
    nameWithType: VolatileActorStateProvider.loadStateAsync
    fullName: public<T> CompletableFuture<T> microsoft.servicefabric.actors.VolatileActorStateProvider.loadStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    summary: <p><span data-ttu-id="458c8-251">アクター状態プロバイダーは、アクター ランタイムと通信するために実装する必要があるインターフェイスを表します。</span><span class="sxs-lookup"><span data-stu-id="458c8-251">Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it.</span></span> </p>
    syntax:
      content: public interface ActorStateProvider extends StateProviderReplica
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: <p><span data-ttu-id="458c8-252">サービスが対話するために実装する必要がありますの動作を定義、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-252">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>
    syntax:
      content: public interface StateProvider
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p><span data-ttu-id="458c8-253">アクターを実装する型についてを説明します。</span><span class="sxs-lookup"><span data-stu-id="458c8-253">Contains information about the type implementing an actor.</span></span> </p>
    syntax:
      content: public class ActorTypeInformation
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"458c8-254\">高可用性と信頼性のレプリケート状態です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-254\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"458c8-255\">\r\n\r\n  <b>注釈:</b>の既定の実装を提供、 <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>、 <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>、および<xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref>インターフェイスの実装と共に、ユーザーのサービスが使用できる、 <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>インターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-255\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"458c8-256\">インスタンス、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスが経由で取得した、 <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider、system.fabric.ReplicatorSettings)</xref>メソッドにキャストできる<xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-256\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._state_replicator2
    parent: system.fabric
    href: system.fabric._state_replicator2.yml
    name: StateReplicator2
    nameWithType: StateReplicator2
    fullName: system.fabric.StateReplicator2
    type: Interface
    summary: <p><span data-ttu-id="458c8-257">レプリケーションに関連する関数を公開、 <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>クラスによって使用されている<xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref>を高可用性を保証する状態をレプリケートします。</span><span class="sxs-lookup"><span data-stu-id="458c8-257">Exposes replication-related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>
    syntax:
      content: public interface StateReplicator2 extends StateReplicator
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    summary: <p><span data-ttu-id="458c8-258">レプリカのロールを定義します。</span><span class="sxs-lookup"><span data-stu-id="458c8-258">Defines the replica role</span></span> </p>
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._stateful_service_partition
    parent: system.fabric
    href: system.fabric._stateful_service_partition.yml
    name: StatefulServicePartition
    nameWithType: StatefulServicePartition
    fullName: system.fabric.StatefulServicePartition
    type: Interface
    syntax:
      content: public interface StatefulServicePartition extends ServicePartition
  - uid: system.fabric._stateful_service_initialization_parameters
    parent: system.fabric
    href: system.fabric._stateful_service_initialization_parameters.yml
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: system.fabric.StatefulServiceInitializationParameters
    type: Class
    summary: <p><span data-ttu-id="458c8-259">ステートフルなサービスのサービスの初期化パラメーターを定義します。</span><span class="sxs-lookup"><span data-stu-id="458c8-259">Defines service initialization parameters for a stateful service.</span></span> </p>
    syntax:
      content: public class StatefulServiceInitializationParameters extends ServiceInitializationParameters
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
    type: Class
    summary: "<p><span data-ttu-id=\"458c8-260\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>揮発性の永続化つまりの実装</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-260\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> implementation for Volatile persistence i.e</span></span> <span data-ttu-id=\"458c8-261\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>状態が保持されるメモリ内のみです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-261\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> state is kept in-memory only.</span></span> </p>"
    syntax: *ref_1
  - uid: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-262\">サービスの初期化情報を使用して、状態プロバイダーのレプリカを初期化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-262\">Initialize the state provider replica using the service initialization information.</span></span></p>\n<p><span data-ttu-id=\"458c8-263\">\r\n\r\n  <b>注釈:</b>初期化中に複雑な処理を行う必要はありません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-263\">\r\n\r\n  <b>Remarks:</b>No complex processing should be done during Initialize.</span></span> <span data-ttu-id=\"458c8-264\">OpenAsync では、高価なまたは実行時間の長いの初期化を行う必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-264\">Expensive or long-running initialization should be done in OpenAsync.</span></span> </p>"
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: '<p><span data-ttu-id="458c8-265">サービス名、パーティション id、レプリカの id、およびコード パッケージ情報などのサービスの初期化情報。</span><span class="sxs-lookup"><span data-stu-id="458c8-265">Service initialization information such as service name, partition id, replica id, and code package information.</span></span> </p>'
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator extends PrimaryReplicator
  - uid: 'microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-266\">使用するため、状態プロバイダーのレプリカを開きます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-266\">Open the state provider replica for use.</span></span></p>\n<p><span data-ttu-id=\"458c8-267\">\r\n\r\n  <b>注釈:</b>拡張状態プロバイダーの初期化タスクを開始できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-267\">\r\n\r\n  <b>Remarks:</b>Extended state provider initialization tasks can be started at this time.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p><span data-ttu-id="458c8-268">これが新規または既存のレプリカであるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-268">Indicates whether this is a new or existing replica.</span></span> </p>
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p><span data-ttu-id="458c8-269">このレプリカが属しているパーティション。</span><span class="sxs-lookup"><span data-stu-id="458c8-269">The partition this replica belongs to.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-270\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-270\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: <p><span data-ttu-id="458c8-271">非同期の open 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-271">Task that represents the asynchronous open operation.</span></span> <span data-ttu-id="458c8-272">結果には、パーティション内の他の状態プロバイダーのレプリカ間で状態のレプリケーションを担当するレプリケーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-272">The result contains the replicator responsible for replicating state between other state provider replicas in the partition.</span></span> </p>
  - uid: system.fabric._replica_open_mode
    parent: system.fabric
    href: system.fabric._replica_open_mode.yml
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: system.fabric.ReplicaOpenMode
    type: Enum
    syntax:
      content: public enum ReplicaOpenMode
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="458c8-273">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。</span><span class="sxs-lookup"><span data-stu-id="458c8-273">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="458c8-274">インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="458c8-274">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="458c8-275">キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。</span><span class="sxs-lookup"><span data-stu-id="458c8-275">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="458c8-276">取り消しを開始するトークンを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="458c8-276">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="458c8-277">所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。</span><span class="sxs-lookup"><span data-stu-id="458c8-277">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="458c8-278">通知を受信するオブジェクトは、適切な方法で応答できます。</span><span class="sxs-lookup"><span data-stu-id="458c8-278">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: 'microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-279">そのロールが変更される、たとえばプライマリまたはセカンダリに、状態プロバイダーのレプリカを通知します。</span><span class="sxs-lookup"><span data-stu-id="458c8-279">Notify the state provider replica that its role is changing, for example to Primary or Secondary.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: '<p><span data-ttu-id="458c8-280">プライマリまたはセカンダリなど、新しいレプリカ ロール。</span><span class="sxs-lookup"><span data-stu-id="458c8-280">The new replica role, such as primary or secondary.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-281\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-281\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-282">非同期の変更の役割の操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-282">Task that represents the asynchronous change role operation.</span></span> </p>
  - uid: microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: StateProviderReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken cancellationToken)
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-283\">状態プロバイダーの複製が正常にクローズします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-283\">Gracefully close the state provider replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-284\">\r\n\r\n  <b>注釈:</b>これは、レプリカのコードにアップグレードされている、負荷分散のため、レプリカの移動または一時的なエラーが検出された場合に通常に発生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-284\">\r\n\r\n  <b>Remarks:</b>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected.</span></span> </p>"
    syntax:
      content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-285\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-285\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-286">非同期の close 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-286">Task that represents the asynchronous close operation.</span></span> </p>
  - uid: microsoft.servicefabric.data._state_provider_replica.abort()
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: abort()
    nameWithType: StateProviderReplica.abort()
    fullName: void microsoft.servicefabric.data.StateProviderReplica.abort()
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-287\">状態プロバイダーのレプリカを強制的に中止します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-287\">Forcefully abort the state provider replica.</span></span> </p>\n<p><span data-ttu-id=\"458c8-288\">\r\n\r\n  <b>注釈:</b>この通常ノードで、永続的な障害が検出されたときにエラーまたは発生 Service Fabric は、内部エラーのため、レプリカのライフ サイクルを確実に管理できません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-288\">\r\n\r\n  <b>Remarks:</b>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures.</span></span> </p>"
    syntax:
      content: public void abort()
  - uid: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-289\">これによって管理されるすべての信頼性の高い状態の完全バックアップを実行<xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-289\">Performs a full backup of all reliable state managed by this <xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>.</span></span></p>\n<p><span data-ttu-id=\"458c8-290\">\r\n\r\n  <b>注釈:</b>完全バックアップが 1 時間のタイムアウトを設定して実行されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-290\">\r\n\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout.</span></span> <span data-ttu-id=\"458c8-291\">BackupCallback によって返されるブール値では、サービスが正常に外部の場所に、バックアップ フォルダーを移動するかどうかを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-291\">Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location.</span></span> <span data-ttu-id=\"458c8-292\">False が返される場合は BackupAsync backupCallback false が返されたことを示す関連するメッセージで UnsupportedOperationException がスローされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-292\">If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false.</span></span> <span data-ttu-id=\"458c8-293\">また、バックアップはマークされます失敗とします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-293\">Also, backup will be marked as unsuccessful.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p><span data-ttu-id="458c8-294">バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出されるコールバック</span><span class="sxs-lookup"><span data-stu-id="458c8-294">Callback to be called when the backup folder has been created locally and is ready to be moved out of the node</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-295">非同期のバックアップ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-295">Task that represents the asynchronous backup operation.</span></span> </p>
  - uid: microsoft.servicefabric.data._backup_info
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._backup_info.yml
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: microsoft.servicefabric.data.BackupInfo
    type: Class
    summary: <p><span data-ttu-id="458c8-296">バックアップに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="458c8-296">Provides info about the backup.</span></span> </p>
    syntax:
      content: public class BackupInfo
  - uid: 'microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    nameWithType: 'StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-297\">これによって管理されるすべての信頼性の高い状態の完全バックアップを実行<xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-297\">Performs a full backup of all reliable state managed by this <xref uid=\"microsoft.servicefabric.data._reliable_state_manager\" data-throw-if-not-resolved=\"false\">ReliableStateManager</xref>.</span></span></p>\n<p><span data-ttu-id=\"458c8-298\">\r\n\r\n  <b>注釈:</b>完全バックアップが 1 時間のタイムアウトを設定して実行されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-298\">\r\n\r\n  <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout.</span></span> <span data-ttu-id=\"458c8-299\">BackupCallback によって返されるブール値では、サービスが正常に外部の場所に、バックアップ フォルダーを移動するかどうかを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-299\">Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location.</span></span> <span data-ttu-id=\"458c8-300\">False が返される場合は BackupAsync backupCallback false が返されたことを示す関連するメッセージで UnsupportedOperationException がスローされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-300\">If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false.</span></span> <span data-ttu-id=\"458c8-301\">また、バックアップはマークされます失敗とします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-301\">Also, backup will be marked as unsuccessful.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)'
      parameters:
        - id: option
          type: microsoft.servicefabric.data._backup_option
          description: <p><span data-ttu-id="458c8-302">実行するバックアップの種類。</span><span class="sxs-lookup"><span data-stu-id="458c8-302">The type of backup to perform.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="458c8-303">この操作のタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="458c8-303">The timeout for this operation.</span></span> </p>
        - id: backupCallback
          type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
          description: <p><span data-ttu-id="458c8-304">バックアップ フォルダーがローカルで作成された、ノード外に移動する準備ができているときに呼び出されるコールバック</span><span class="sxs-lookup"><span data-stu-id="458c8-304">Callback to be called when the backup folder has been created locally and is ready to be moved out of the node</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-305">非同期のバックアップ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-305">Task that represents the asynchronous backup operation.</span></span> </p>
  - uid: microsoft.servicefabric.data._backup_option
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._backup_option.yml
    name: BackupOption
    nameWithType: BackupOption
    fullName: microsoft.servicefabric.data.BackupOption
    type: Enum
    summary: <p><span data-ttu-id="458c8-306">バックアップの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-306">Indicates the kind of the backup.</span></span> </p>
    syntax:
      content: public enum BackupOption
  - uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: restoreAsync(String backupFolderPath)
    nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
    fullName: CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-307\">作成したバックアップを復元します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-307\">Restore a backup taken.</span></span></p>\n<p><span data-ttu-id=\"458c8-308\">\r\n\r\n  <b>注釈:</b>安全な復元が実行されて、現在のレプリカの状態は、データを復元する場合、復元は完了のみを意味します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-308\">\r\n\r\n  <b>Remarks:</b>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica.</span></span> </p>"
    syntax:
      content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: '<p><span data-ttu-id="458c8-309">レプリカがから復元するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="458c8-309">The directory where the replica is to be restored from.</span></span> <span data-ttu-id="458c8-310">このパラメーターを null にすることはできませんを空または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-310">This parameter cannot be null, empty or contain just whitespace.</span></span> <span data-ttu-id="458c8-311">UNC パスも指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="458c8-311">UNC paths may also be provided.</span></span> </p>'
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-312">非同期の復元操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-312">Task that represents the asynchronous restore operation.</span></span> </p>
  - uid: 'microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    nameWithType: 'StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-313">作成したバックアップを復元します。</span><span class="sxs-lookup"><span data-stu-id="458c8-313">Restore a backup taken</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy)'
      parameters:
        - id: backupFolderPath
          type: '26831127'
          description: '<p><span data-ttu-id="458c8-314">レプリカがから復元するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="458c8-314">The directory where the replica is to be restored from.</span></span> <span data-ttu-id="458c8-315">このパラメーターを null にすることはできませんを空または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-315">This parameter cannot be null, empty or contain just whitespace.</span></span> <span data-ttu-id="458c8-316">UNC パスも指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="458c8-316">UNC paths may also be provided.</span></span> </p>'
        - id: restorePolicy
          type: microsoft.servicefabric.data._restore_policy
          description: <p><span data-ttu-id="458c8-317">復元のポリシー。</span><span class="sxs-lookup"><span data-stu-id="458c8-317">The restore policy.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-318">非同期の復元操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-318">Task that represents the asynchronous restore operation.</span></span> </p>
  - uid: microsoft.servicefabric.data._restore_policy
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._restore_policy.yml
    name: RestorePolicy
    nameWithType: RestorePolicy
    fullName: microsoft.servicefabric.data.RestorePolicy
    type: Enum
    summary: <p><span data-ttu-id="458c8-319">復元操作のポリシーです。</span><span class="sxs-lookup"><span data-stu-id="458c8-319">Policy for restore operation.</span></span> </p>
    syntax:
      content: public enum RestorePolicy
  - uid: 'microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)'
    parent: microsoft.servicefabric.data._state_provider_replica
    href: microsoft.servicefabric.data._state_provider_replica.yml
    name: 'setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    nameWithType: 'StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    fullName: 'void microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-320">疑いのあるデータ損失の可能性の中に呼び出される関数</span><span class="sxs-lookup"><span data-stu-id="458c8-320">Function called during suspected data-loss</span></span></p>
      <p></p>
    syntax:
      content: 'public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)'
      parameters:
        - id: onDataLossAsync
          type: 432ffe41system.fabric._cancellation_token774bd4f0
          description: '<p><span data-ttu-id="458c8-321">TODO です。</span><span class="sxs-lookup"><span data-stu-id="458c8-321">TODO.</span></span> <span data-ttu-id="458c8-322">疑いのあるデータ損失の処理の一部として呼び出される関数。</span><span class="sxs-lookup"><span data-stu-id="458c8-322">Function called as part of suspected data loss processing.</span></span> <span data-ttu-id="458c8-323">関数は、CancellationToken にし、イベントの非同期処理を表す CompletableFuture を返します。</span><span class="sxs-lookup"><span data-stu-id="458c8-323">Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event.</span></span> <span data-ttu-id="458c8-324">True を返すには、レプリカの状態が復元されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-324">Returning true, indicates that the replica''s state has been restored.</span></span> <span data-ttu-id="458c8-325">False は、レプリカの状態が変更されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="458c8-325">False indicates that the replica''s state has not been changed.</span></span> </p>'
  - uid: system.fabric._state_provider.getLastCommittedSequenceNumber()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getLastCommittedSequenceNumber()
    nameWithType: StateProvider.getLastCommittedSequenceNumber()
    fullName: long system.fabric.StateProvider.getLastCommittedSequenceNumber()
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-326">サービスがコミットされた最後のシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="458c8-326">Obtains the last sequence number that the service has committed.</span></span></p>
      <p></p>
    syntax:
      content: public long getLastCommittedSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="458c8-327">長さを返します。</span><span class="sxs-lookup"><span data-stu-id="458c8-327">Returns long.</span></span> </p>
  - uid: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-328\">レプリカ セットの構成が変更の理由で変更または、プライマリ レプリカへの変更をしようとしましたが、レプリカを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-328\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"458c8-329\">変更は、エラーまたは以前のプライマリ レプリカの負荷分散のために発生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-329\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"458c8-330\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>変更が特定のプライマリ レプリカによって送信された実際の構成の期間に操作を分割することによって、バリアとして機能します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-330\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-331\">\r\n\r\n  <b>注釈:</b>内の情報、 <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (エポック、SequenceNumber、CancellationToken)</xref>メソッドにより、進行状況ベクターは、各エポックの一覧を維持するためにサービスレプリカが受信して、最大 LSN に含まれていた。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-331\">\r\n\r\n  <b>Remarks:</b>The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"458c8-332\">現在適用されている最大の LSN と進行状況のベクター データは、レプリカの状態を説明するコピー操作中に送信するセカンダリ レプリカに役立ちます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-332\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe the state of the replica.</span></span> <span data-ttu-id=\"458c8-333\">コピー操作中に、セカンダリ レプリカから受信した進行状況のベクトルを比較するには、セカンダリ レプリカが最新かどうか、どの状態は、セカンダリ レプリカに送信する必要があり、セカンダリ レプリカが false の進行状況を行われたかどうかを判断するプライマリ レプリカが有効にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-333\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"458c8-334\">False の進行状況は、セカンダリ レプリカは、以前のエポックの LSN が、プライマリ レプリカは、その進行状況のベクター内にある LSN よりも大きかったレポートを意味します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-334\">False progress means that a secondary replica reports an LSN in a previous epoch was greater than the LSN that the Primary replica has in its progress vector.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p><span data-ttu-id="458c8-335">新しい<xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-335">The new <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>.</span></span> </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: <p><span data-ttu-id="458c8-336">以前のエポックの最大シーケンス番号 (LSN)。</span><span class="sxs-lookup"><span data-stu-id="458c8-336">The maximum sequence number (LSN) in the previous epoch.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-337\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-337\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-338">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-338">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span></span> </p>
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p><span data-ttu-id=\"458c8-339\">Service Fabric でパーティションの現在のバージョンを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-339\">Represents the current version of the partition in Service Fabric.</span></span> </p>\n<p><span data-ttu-id=\"458c8-340\">\r\n\r\n  <b>注釈:</b>、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>パーティション全体の構成番号です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-340\">\r\n\r\n  <b>Remarks:</b>An <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> is a configuration number for the partition as a whole.</span></span> <span data-ttu-id=\"458c8-341\">レプリカの構成は、たとえば、プライマリ レプリカが変更されたときに、変更を設定すると、新しいプライマリ レプリカからレプリケートされた操作と呼ばれます新しい<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>、古いプライマリによって送信された 1 つからレプリカです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-341\">When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> from the ones which were sent by the old Primary replica.</span></span> <span data-ttu-id=\"458c8-342\">プライマリが変更されたというは、通常、元のプライマリ レプリカの影響を受ける失敗によって影響を受けませんセカンダリ レプリカに直接表示されません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-342\">The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica.</span></span> <span data-ttu-id=\"458c8-343\">プライマリ レプリカが変更されたことを追跡するために、セカンダリ レプリカに伝達するがします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-343\">To track that the Primary replica has changed has to be communicated to the Secondary replica.</span></span> <span data-ttu-id=\"458c8-344\">使用してこのような通信が発生した、 <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch、system.fabric.SequenceNumber、system.fabric.CancellationToken)</xref>メソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-344\">This communication occurs via the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> <span data-ttu-id=\"458c8-345\">ほとんどのサービスがの内部フィールドの詳細を無視することができます、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>ことを知っておく通常で十分ですので、<xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">エポック</xref>が変更されたと操作の相対順序を判別するエポックを比較してシステム内のイベント。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-345\">Most services can ignore the details of the inner fields of the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> as it is usually sufficient to know that the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system.</span></span> <span data-ttu-id=\"458c8-346\">比較操作は、この目的で提供されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-346\">Comparison operations are provided for this purpose.</span></span> </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._sequence_number
    parent: system.fabric
    href: system.fabric._sequence_number.yml
    name: SequenceNumber
    nameWithType: SequenceNumber
    fullName: system.fabric.SequenceNumber
    type: Class
    syntax:
      content: public class SequenceNumber
  - uid: system.fabric._state_provider.onDataLossAsync(CancellationToken)
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-347\">このレプリカ セット内のレプリカのな書き込みクォーラムが失われていることと、そのためデータが失われる可能性がありますが発生したことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-347\">Indicates that a write quorum of replicas in this replica set has been lost, and that therefore data loss might have occurred.</span></span> <span data-ttu-id=\"458c8-348\">レプリカ セットは、プライマリ レプリカが含まれているレプリカの大部分で構成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-348\">The replica set consists of a majority of replicas, which includes the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-349\">\r\n\r\n  <b>注釈:</b>Service Fabric ランタイムが、プライマリ レプリカが含まれており、レプリカのクォーラムの障害に従っていることが新しいプライマリ レプリカとすぐに、新しいプライマリ レプリカでこのメソッドを呼び出します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-349\">\r\n\r\n  <b>Remarks:</b>When the Service Fabric runtime observes the failure of a quorum of replicas, which includes the Primary replica, it elects a new Primary replica and immediately calls this method on the new Primary replica.</span></span> <span data-ttu-id=\"458c8-350\">データ損失の可能性が通知をプライマリ レプリカは、外部データ ソースからの状態を復元することもできます。 またはが現在の状態で実行を続行できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-350\">A Primary replica that is informed of possible data loss can choose to restore its state from some external data source or can continue to run with the state that it currently has.</span></span> <span data-ttu-id=\"458c8-351\">サービスが、現在の状態で実行され続ける場合は、状態の変更が行われていないことを示す、このメソッドから false を返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-351\">If the service continues to run with its current state, it should return false from this method, which indicates that no state change has been made.</span></span> <span data-ttu-id=\"458c8-352\">復元または不完全な作業は、ロールバックなどの状態を変更した場合は true を返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-352\">If it has restored or altered its state, such as rolling back incomplete work, it should return true.</span></span> <span data-ttu-id=\"458c8-353\">True が返される場合はその他のレプリカの状態が不適切な想定されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-353\">If true is returned, then the state in other replicas must be assumed to be incorrect.</span></span> <span data-ttu-id=\"458c8-354\">そのため、Service Fabric ランタイムでは、レプリカ セットから他のレプリカを削除し、それらを再作成します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-354\">Therefore, the Service Fabric runtime removes the other replicas from the replica set and recreates them.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-355\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-355\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="458c8-356">返します<xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>型の<xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>、この通知の処理の一部として状態プロバイダーでの状態が変更されたかどうかを示す</span><span class="sxs-lookup"><span data-stu-id="458c8-356">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, that indicates whether the state provider as part of processing this notification has changed its state</span></span> </p>'
  - uid: system.fabric._operation_data_stream
    parent: system.fabric
    href: system.fabric._operation_data_stream.yml
    name: OperationDataStream
    nameWithType: OperationDataStream
    fullName: system.fabric.OperationDataStream
    type: Interface
    syntax:
      content: public interface OperationDataStream
  - uid: system.fabric._state_provider.getCopyContext()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getCopyContext()
    nameWithType: StateProvider.getCopyContext()
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext()
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-357\">作成され、プライマリ レプリカにコンテキストを送信する開かれた後は、セカンダリ レプリカ上のコンテキストを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-357\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-358\">\r\n\r\n  <b>注釈:</b>、プライマリ レプリカが、コンテキストを分析しを使用して状態を返送<xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber、OperationDataStream)</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-358\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> .</span></span> <span data-ttu-id=\"458c8-359\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref>が新しく作成された、アイドル状態のセカンダリ レプリカで呼び出され、プライマリ レプリカとの双方向メッセージ交換を非同期的に確立するためのメカニズムを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-359\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"458c8-360\">セカンダリ レプリカは、送信<xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>オブジェクトをプライマリ レプリカがセカンダリ レプリカでコンテキストを収集する場合の進行状況を判断できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-360\">The Secondary replica sends <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"458c8-361\">プライマリ レプリカは、必要な状態に戻すを送信して応答します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-361\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"458c8-362\">参照してください<xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber、OperationDataStream)</xref>交換の一方のプライマリ レプリカにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-362\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"458c8-363\">メモリ内のサービスでは、 <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref>メソッドは呼び出されません、セカンダリ レプリカの状態は認識されている (空され、状態のすべてが必要)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-363\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax:
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="458c8-364">返します<xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-364">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream system.fabric.StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-365\">プライマリ レプリカのセカンダリ レプリカを作成する必要がある状態を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-365\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"458c8-366\">\r\n\r\n  <b>注釈:</b>単に<xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref>経由でプライマリ レプリカにコンテキストを送信するセカンダリ レプリカを有効にする<xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>、 <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber、OperationDataStream)</xref>により、プライマリ レプリカで応答する、 <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-366\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span></span> <span data-ttu-id=\"458c8-367\">ストリームには使用して、セカンダリ レプリカに配信されるオブジェクトが含まれています、 <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref>のメソッド、 <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>クラスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-367\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> method of the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"458c8-368\">オブジェクトを実装<xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>指定されたデータが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-368\">The objects implement <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"458c8-369\">プライマリ レプリカは、この呼び出しを受け取る、それを作成し、返す別<xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>を格納している<xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-369\">When the Primary replica receives this call, it should create and return another <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> that contains <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span></span> <span data-ttu-id=\"458c8-370\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>を表すデータと状態をセカンダリ レプリカ</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-370\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax:
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="458c8-371">最大最終シーケンス番号 (LSN) を使用してコピー ストリームに配置する必要があります、 <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="458c8-371">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="458c8-372">この数より大きい Lsn が経由でレプリケーション ストリームの一部として、セカンダリ レプリカに配信される、 <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="458c8-372">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: <p><span data-ttu-id="458c8-373"><xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">System.fabric.OperationDataStream</xref>を格納している、 <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref>セカンダリ レプリカによって作成されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="458c8-373">An <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> that contains the <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="458c8-374">指定された遅延を解消する必要があります。</span><span class="sxs-lookup"><span data-stu-id="458c8-374">requires to catch up to the provided</span></span> </p>
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="458c8-375">返します<xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-375">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: system.fabric._state_replicator.getCopyStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getCopyStream()
    nameWithType: StateReplicator.getCopyStream()
    fullName: OperationStream system.fabric.StateReplicator.getCopyStream()
    type: Method
    summary: <p><span data-ttu-id="458c8-376">ストリームのコピーを取得します</span><span class="sxs-lookup"><span data-stu-id="458c8-376">Gets copy stream</span></span> </p>
    syntax:
      content: public OperationStream getCopyStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="458c8-377">返される CopyStream を含む<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>を実装するオブジェクト<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-377">The returned CopyStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="458c8-378"><xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>オブジェクトが、CopyState から取得した<xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref>から、プライマリ レプリカを返す<xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider #getCopyState(SequenceNumber,OperationDataStream)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-378">The <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects are obtained from the CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> that the Primary replica returns from <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id="458c8-379">レプリカが作成され、遅延を解消するのには、する必要があります、CopyStream を取得し、送信、適用、および承認を実装するオブジェクトのコピーを開始<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-379">When a replica is created and has to catch up, it should obtain the CopyStream and begin to send, apply, and acknowledge the Copy objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="458c8-380">並行して、レプリカは、対応する応答<xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref>と<xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="458c8-380">In parallel, the replica responds to the corresponding <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> and <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>calls.</span></span> <span data-ttu-id="458c8-381">ストリームが空ときに、返された<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>メソッドは null です。</span><span class="sxs-lookup"><span data-stu-id="458c8-381">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: system.fabric._state_replicator.getReplicationStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getReplicationStream()
    nameWithType: StateReplicator.getReplicationStream()
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
    type: Method
    summary: <p><span data-ttu-id="458c8-382">レプリケーション ストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="458c8-382">Gets replication stream.</span></span> </p>
    syntax:
      content: public OperationStream getReplicationStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="458c8-383">ReplicationStream 実装<xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-383">The ReplicationStream implements <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span></span> <span data-ttu-id="458c8-384">含まれています、ReplicationStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>を実装するオブジェクト<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-384">The ReplicationStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="458c8-385">オブジェクトが経由でプライマリ レプリカによって提供される<xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator #replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-385">The objects are provided by the Primary replica via <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator#replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span></span> <span data-ttu-id="458c8-386">一般に、セカンダリ レプリカを送信する必要があります<xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>です。</span><span class="sxs-lookup"><span data-stu-id="458c8-386">Generally a Secondary replica should send <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span></span> <span data-ttu-id="458c8-387">Service Fabric では、これを行うサービスは必要ありません、一般にサービスがすべて転送<xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref>コピーからオブジェクトが最初に、ストリームし、レプリケーション ストリームからの操作を転送します。</span><span class="sxs-lookup"><span data-stu-id="458c8-387">Although Service Fabric does not require services to do so, generally services should transfer all <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects out of the copy stream first, and then transfer operations out of the replication stream.</span></span> <span data-ttu-id="458c8-388">同時に両方のコピーからの転送がサポートされていますが、増加状態を適用する際の複雑さは正しく更新し、高度なサービスにのみ推奨されます。</span><span class="sxs-lookup"><span data-stu-id="458c8-388">The transfer from both copies in parallel is supported but increases the complexity of applying state updates correctly and is recommended only for advanced services.</span></span> <span data-ttu-id="458c8-389">ストリームが空ときに、返された<xref uid="system.fabric._operation" data-throw-if-not-resolved="false">操作</xref>メソッドは null です。</span><span class="sxs-lookup"><span data-stu-id="458c8-389">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: microsoft.servicefabric.actors._actor_state_provider.initialize(ActorTypeInformation)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: initialize(ActorTypeInformation actorTypeInformation)
    nameWithType: ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    fullName: void microsoft.servicefabric.actors.ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-390">関連付けられているアクター型の型情報を使用してアクター状態プロバイダーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="458c8-390">Initializes the actor state provider with type information of the actor type associated with it.</span></span></p>
      <p></p>
    syntax:
      content: public void initialize(ActorTypeInformation actorTypeInformation)
      parameters:
        - id: actorTypeInformation
          type: microsoft.servicefabric.actors._actor_type_information
          description: <p><span data-ttu-id="458c8-391">アクター クラスの型情報</span><span class="sxs-lookup"><span data-stu-id="458c8-391">Type information of the actor class</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.actorActivatedAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: actorActivatedAsync(ActorId actorId)
    nameWithType: ActorStateProvider.actorActivatedAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.actorActivatedAsync(ActorId actorId)
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-392">指定した id に置き換えます。 アクターのライセンス認証プロセスの一部としてこのメソッドが呼び出されます</span><span class="sxs-lookup"><span data-stu-id="458c8-392">This method is invoked as part of the activation process of the actor with the specified Id.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-393">アクティブ化したアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-393">ID of the actor that is activated.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-394">表す非同期のタスク<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アクティブ化通知の処理です。</span><span class="sxs-lookup"><span data-stu-id="458c8-394">A task that represents the asynchronous <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> activation notification processing.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p><span data-ttu-id=\"458c8-395\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-395\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref> represents identity of an actor within an actor service.</span></span> <span data-ttu-id=\"458c8-396\">アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-396\">The actors can be identified by <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> or long.</span></span> </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="458c8-397">信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="458c8-397">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    nameWithType: 'ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-398\">指定したアクター状態の変更のセットをアトミックに保存します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-398\">Saves the specified set of actor state changes atomically.</span></span></p>\n<p><span data-ttu-id=\"458c8-399\">\r\n\r\n  <b>注釈:</b>状態変更のコレクションは、指定された状態の名前の 1 つの項目を含める必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-399\">\r\n\r\n  <b>Remarks:</b> The collection of state changes should contain only one item for a given state name.</span></span> <span data-ttu-id=\"458c8-400\">保存先に既に存在するか、存在しないアクター状態の更新/削除するアクターの状態を追加しようとしています。 操作は失敗します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-400\">The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-401">状態の変更を保存する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-401">ID of the actor for which to save the state changes.</span></span> </p>
        - id: stateChanges
          type: 5618da2dmicrosoft.servicefabric.actors._actor_state_changea08ddfce
          description: <p><span data-ttu-id="458c8-402">状態の変更を保存するコレクション。</span><span class="sxs-lookup"><span data-stu-id="458c8-402">Collection of state changes to save.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-403">非同期の保存操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-403">A task that represents the asynchronous save operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_state_change
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_change.yml
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: microsoft.servicefabric.actors.ActorStateChange
    type: Class
    summary: <p><span data-ttu-id="458c8-404">表しますが、指定された状態の名前を持つアクター状態に変わります。</span><span class="sxs-lookup"><span data-stu-id="458c8-404">Represents change to an actor state with a given state name.</span></span> </p>
    syntax:
      content: public class ActorStateChange
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.containsStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'containsStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'ActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateProvider.containsStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-405">アクター状態プロバイダーに指定した状態の名前を持つ、アクター状態が含まれているかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="458c8-405">Checks whether actor state provider contains an actor state with specified state name.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-406">状態の有無を確認する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-406">ID of the actor for which to check state existence.</span></span> </p>
        - id: stateName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-407">有無を確認するアクター状態の名前です。</span><span class="sxs-lookup"><span data-stu-id="458c8-407">Name of the actor state to check for existence.</span></span> </p>
      return:
        type: 7e53ac82
        description: <p><span data-ttu-id="458c8-408">非同期チェック操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-408">A task that represents the asynchronous check operation.</span></span> <span data-ttu-id="458c8-409">TResult パラメーターの値は、指定した名前の状態には、それ以外の場合の false が存在する場合は true です。</span><span class="sxs-lookup"><span data-stu-id="458c8-409">The value of TResult parameter is true if state with specified name exists otherwise false.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.removeActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: removeActorAsync(ActorId actorId)
    nameWithType: ActorStateProvider.removeActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.removeActorAsync(ActorId actorId)
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-410">すべての既存の状態と指定されたアクターにアトミックに関連付けられている通知を削除します。</span><span class="sxs-lookup"><span data-stu-id="458c8-410">Removes all the existing states and reminders associated with specified actor atomically.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-411">状態を削除するアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-411">ID of the actor for which to remove state.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-412">非同期の削除操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-412">A task that represents the asynchronous remove operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_state_provider.enumerateStateNamesAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: enumerateStateNamesAsync(ActorId actorId)
    nameWithType: ActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateProvider.enumerateStateNamesAsync(ActorId actorId)
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-413\">指定されたアクターに関連付けられているすべての状態名の列挙可能なが作成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-413\">Creates an enumerable of all the state names associated with specified actor.</span></span></p>\n<p><span data-ttu-id=\"458c8-414\">\r\n\r\n  <b>注釈:</b>アクター状態プロバイダーから返された列挙子に安全に読み取りと同時に使用し、状態プロバイダーに書き込みます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-414\">\r\n\r\n  <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider.</span></span> <span data-ttu-id=\"458c8-415\">状態プロバイダーのスナップショットの一貫したビューを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-415\">It represents a snapshot consistent view of the state provider.</span></span> </p>"
    syntax:
      content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-416">列挙可能なを作成する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-416">ID of the actor for which to create enumerable.</span></span> </p>
      return:
        type: d20512af
        description: <p><span data-ttu-id="458c8-417">非同期の列挙操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-417">A task that represents the asynchronous enumeration operation.</span></span> <span data-ttu-id="458c8-418">TResult パラメーターの値は、指定されたアクターに関連付けられているすべての州名の列挙です。</span><span class="sxs-lookup"><span data-stu-id="458c8-418">The value of TResult parameter is an enumerable of all state names associated with specified actor.</span></span> </p>
  - uid: microsoft.servicefabric.actors._paged_result
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._paged_result.yml
    name: PagedResult<T>
    nameWithType: PagedResult<T>
    fullName: microsoft.servicefabric.actors.PagedResult<T>
    type: Class
    summary: |-
      <p><span data-ttu-id="458c8-419">アクター クエリの呼び出しの結果を表します。</span><span class="sxs-lookup"><span data-stu-id="458c8-419">Represents the result of actor query calls.</span></span></p>
      <p></p>
    syntax:
      content: public class PagedResult<T>
      typeParameters:
        - type: 8ce1ecb9
          description: <p><span data-ttu-id="458c8-420">このクエリ結果に含まれる項目の種類。</span><span class="sxs-lookup"><span data-stu-id="458c8-420">Type of the items this query result contains.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.getActorsAsync(int,ContinuationToken)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    nameWithType: 'ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    fullName: 'CompletableFuture<PagedResult<ActorId>> microsoft.servicefabric.actors.ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"458c8-421\">状態プロバイダーから ActorIds を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-421\">Gets ActorIds from the State Provider.</span></span></p>\n<p><span data-ttu-id=\"458c8-422\">\r\n\r\n  <b>注釈:</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-422\">\r\n\r\n  <b>Remarks:</b> The</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken)'
      parameters:
        - id: numItemsToReturn
          type: f75371fa
          description: <p><span data-ttu-id="458c8-423">返される要求された項目の数。</span><span class="sxs-lookup"><span data-stu-id="458c8-423">Number of items requested to be returned.</span></span> </p>
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: <p><span data-ttu-id="458c8-424">クエリから結果を開始する継続トークンです。</span><span class="sxs-lookup"><span data-stu-id="458c8-424">A continuation token to start querying the results from.</span></span> <span data-ttu-id="458c8-425">継続トークンの null 値は、開始、先頭の値の形式を返すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="458c8-425">A null value of continuation token means start returning values form the beginning.</span></span> </p>
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
        description: <p><span data-ttu-id="458c8-426">サーバーへの呼び出しの非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-426">A task that represents the asynchronous operation of call to server.</span></span> </p>
  - uid: microsoft.servicefabric.actors._continuation_token
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._continuation_token.yml
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: microsoft.servicefabric.actors.ContinuationToken
    type: Class
    summary: "<p><span data-ttu-id=\"458c8-427\">クエリ操作の継続トークンを表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-427\">Represents a continuation token for query operations.</span></span> </p>\n<p><span data-ttu-id=\"458c8-428\">\r\n\r\n  <b>注釈:</b>メソッドを使用して結果のセットの一部を返す可能性があります、 <xref uid=\"microsoft.servicefabric.actors._paged_result\" data-throw-if-not-resolved=\"false\">PagedResult</xref>オブジェクトが使用可能な結果の次のセットを返す、後続の呼び出しで使用できるオブジェクトにも継続トークンを返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-428\">\r\n\r\n  <b>Remarks:</b>A method that may return a partial set of results via a <xref uid=\"microsoft.servicefabric.actors._paged_result\" data-throw-if-not-resolved=\"false\">PagedResult</xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results.</span></span> </p>"
    syntax:
      content: public class ContinuationToken
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.saveReminderAsync(ActorId,ActorReminder)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    nameWithType: 'ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-429">指定されたアクター アラームを保存します。</span><span class="sxs-lookup"><span data-stu-id="458c8-429">Saves the specified actor reminder.</span></span> <span data-ttu-id="458c8-430">指定した名前のアクター アラームが存在しない場合は、それ以外の場合と同じ名前のアクター アラームを既存のアクター アラームが更新を追加します。</span><span class="sxs-lookup"><span data-stu-id="458c8-430">If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-431">アラームを保存する対象のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-431">ID of the actor for which to save the reminder.</span></span> </p>
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: "<p><span data-ttu-id=\"458c8-432\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アラームを保存します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-432\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> reminder to save.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-433">非同期の保存操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-433">A task that represents the asynchronous save operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_reminder
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder.yml
    name: ActorReminder
    nameWithType: ActorReminder
    fullName: microsoft.servicefabric.actors.ActorReminder
    type: Interface
    summary: <p><span data-ttu-id="458c8-434">アラームの設定をカプセル化、<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref></span><span class="sxs-lookup"><span data-stu-id="458c8-434">Encapsulates Reminder set on an <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref></span></span></p>
    syntax:
      content: public interface ActorReminder
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.deleteReminderAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'deleteReminderAsync(ActorId actorId, String reminderName)'
    nameWithType: 'ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-435">存在する場合は、指定されたアクター アラームを削除します。</span><span class="sxs-lookup"><span data-stu-id="458c8-435">Deletes the specified actor reminder if it exists.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-436">アラームを削除するアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-436">ID of the actor for which to delete the reminder.</span></span> </p>
        - id: reminderName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-437">削除するアラームの名前です。</span><span class="sxs-lookup"><span data-stu-id="458c8-437">Name of the reminder to delete.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="458c8-438">非同期の削除操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-438">A task that represents the asynchronous delete operation.</span></span> </p>
  - uid: microsoft.servicefabric.actors._actor_reminder_collection
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder_collection.yml
    name: ActorReminderCollection
    nameWithType: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.ActorReminderCollection
    type: Interface
    summary: <p><span data-ttu-id="458c8-439">キャプチャ<xref uid="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref>アクターの</span><span class="sxs-lookup"><span data-stu-id="458c8-439">Captures <xref uid="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref> for Actors</span></span> </p>
    syntax:
      content: public interface ActorReminderCollection
  - uid: microsoft.servicefabric.actors._actor_state_provider.loadRemindersAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: loadRemindersAsync(CancellationToken cancellationToken)
    nameWithType: ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<ActorReminderCollection> microsoft.servicefabric.actors.ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-440">アクター状態プロバイダーに含まれているすべてのアラームを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="458c8-440">Loads all the reminders contained in the actor state provider.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"458c8-441\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>操作の取り消し状態を表すオブジェクト。</span><span class=\"sxs-lookup\"><span data-stu-id=\"458c8-441\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_reminder_collectiona08ddfce
        description: <p><span data-ttu-id="458c8-442">非同期ロード操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-442">A task that represents the asynchronous load operation.</span></span> <span data-ttu-id="458c8-443">TResult パラメーターの値は、アクター状態プロバイダーに含まれているすべてのアクター アラームのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="458c8-443">The value of TResult parameter is a collection of all actor reminders contained in the actor state provider.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._actor_state_provider.loadStateAsync(ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_state_provider
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: 'loadStateAsync(ActorId actorId, String stateName)'
    nameWithType: 'ActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    fullName: '<T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateProvider.loadStateAsync(ActorId actorId, String stateName)'
    type: Method
    summary: |-
      <p><span data-ttu-id="458c8-444">指定された状態の名前に関連付けられているアクターの状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="458c8-444">Loads the actor state associated with the specified state name.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: <p><span data-ttu-id="458c8-445">状態の読み込み先のアクターの ID です。</span><span class="sxs-lookup"><span data-stu-id="458c8-445">ID of the actor for which to load the state.</span></span> </p>
        - id: stateName
          type: '26831127'
          description: <p><span data-ttu-id="458c8-446">読み込みにアクター状態の名前です。</span><span class="sxs-lookup"><span data-stu-id="458c8-446">Name of the actor state to load.</span></span> </p>
      return:
        type: 6d056e8b
        description: <p><span data-ttu-id="458c8-447">非同期ロード操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="458c8-447">A task that represents the asynchronous load operation.</span></span> <span data-ttu-id="458c8-448">TResult のパラメーターの値には、特定の状態名に関連付けられているアクター状態の値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="458c8-448">The value of TResult parameter contains value of actor state associated with given state name.</span></span> </p>
  - uid: system.fabric._configuration_package
    parent: system.fabric
    href: system.fabric._configuration_package.yml
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: system.fabric.ConfigurationPackage
    type: Class
    summary: <p><span data-ttu-id="458c8-449">構成パッケージを表します。</span><span class="sxs-lookup"><span data-stu-id="458c8-449">Represents a configuration package.</span></span> </p>
    syntax:
      content: public class ConfigurationPackage