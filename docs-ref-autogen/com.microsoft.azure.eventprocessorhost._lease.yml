### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._lease
    id: _lease
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._lease.getEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.getOwner()
      - com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._lease.getToken()
      - com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.isExpired()
      - com.microsoft.azure.eventprocessorhost._lease.Lease()
      - com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
      - com.microsoft.azure.eventprocessorhost._lease.Lease(String)
      - com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
      - com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
      - com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 22
    package: com.microsoft.azure.eventprocessorhost
    summary: "<p><span data-ttu-id=\"535fd-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>クラスがパブリックで上級ユーザーを実装できるように、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> <span data-ttu-id=\"535fd-102\">実装している場合を除き、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>このクラスのオブジェクトに対処する必要はありませんか、クラスを直接派生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-102\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly.</span></span> </p>\n\n<p><span data-ttu-id=\"535fd-103\">実装する場合、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>詳細持ち運びし、isExpired をオーバーライドするには、このクラスから派生する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-103\">When implementing an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired.</span></span> <span data-ttu-id=\"535fd-104\">データ フィールドが残されていますプライベートの代わりに、完全なセットがあるために、保護の getter および setter (partitionId は不変) を除くを同等のアクセスを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-104\">The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access.</span></span> <span data-ttu-id=\"535fd-105\">AzureBlobLease を実装する場合などがなかった、get アクセス操作子以上のアクセス権の必要性と set アクセス操作子を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-105\">When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide.</span></span> </p>\n<p><span data-ttu-id=\"535fd-106\">なお、<xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>オブジェクトには、パーティション リースに関する情報が含まれているのみです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-106\">Note that a <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> object just carries information about a partition lease.</span></span> <span data-ttu-id=\"535fd-107\">取得/更新/解放する機能、リースがすべてで、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-107\">The functionality to acquire/renew/release a lease is all on the <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> </p>"
    syntax: &ref_1
      content: public class Lease
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch()
    id: getEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getEpoch()
    nameWithType: Lease.getEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 74
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-108">エポックは、Event Hub レシーバーによって使用される概念です。</span><span class="sxs-lookup"><span data-stu-id="535fd-108">Epoch is a concept used by Event Hub receivers.</span></span> <span data-ttu-id="535fd-109">基本的には、既存のレシーバーよりも高いエポックのパーティションで、受信者の作成前、受信側強制的に切断します。</span><span class="sxs-lookup"><span data-stu-id="535fd-109">Basically, if a receiver is created on a partition with a higher epoch than the existing receiver, the previous receiver is forcibly disconnected.</span></span> <span data-ttu-id="535fd-110">低いエポック、既存の受信側に失敗すると、受信者を作成しようとしています。</span><span class="sxs-lookup"><span data-stu-id="535fd-110">Attempting to create a receiver with a lower epoch that the existing receiver will fail.</span></span> <span data-ttu-id="535fd-111"><xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>ホストは、リースを盗み、それは高いエポックの受信者を作成できるように周りエポックを実行します。</span><span class="sxs-lookup"><span data-stu-id="535fd-111">The <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> carries the epoch around so that when a host steals a lease, it can create a receiver with a higher epoch.</span></span></p>
      <p></p>
    syntax:
      content: public long getEpoch()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner()
    id: getOwner()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getOwner()
    nameWithType: Lease.getOwner()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner()
    overload: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 106
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-112">リースの所有者の名前は、 <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref>現在リースを保持します。</span><span class="sxs-lookup"><span data-stu-id="535fd-112">The owner of a lease is the name of the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> which currently holds the lease.</span></span></p>
      <p></p>
    syntax:
      content: public String getOwner()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: Lease.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 126
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-113">パーティションの id を返しますこれ<xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>です。</span><span class="sxs-lookup"><span data-stu-id="535fd-113">Returns the id of the partition that this <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> is for.</span></span> <span data-ttu-id="535fd-114">変更できないのでは対応する setter、</span><span class="sxs-lookup"><span data-stu-id="535fd-114">Immutable so there is no corresponding setter.</span></span></p>
      <p></p>
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken()
    id: getToken()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getToken()
    nameWithType: Lease.getToken()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken()
    overload: com.microsoft.azure.eventprocessorhost._lease.getToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 138
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-115"><xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>「トークン」と呼ばれる任意の文字列を実行します。</span><span class="sxs-lookup"><span data-stu-id="535fd-115">The <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> carries an arbitrary string called the "token".</span></span> <span data-ttu-id="535fd-116">AzureStorageCheckpointLeaseManager では、これを使用して、Azure ストレージ API で使用される blob のリース ID を格納します。</span><span class="sxs-lookup"><span data-stu-id="535fd-116">AzureStorageCheckpointLeaseManager uses this to store the blob lease ID used by the Azure Storage API.</span></span> <span data-ttu-id="535fd-117">その他の実装の<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>ものを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="535fd-117">Other implementations of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> may use it for anything.</span></span></p>
      <p></p>
    syntax:
      content: public String getToken()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
    id: incrementEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: incrementEpoch()
    nameWithType: Lease.incrementEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 95
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-118">エポックの値に最も一般的な操作をリースを盗むの後にインクリメントがします。</span><span class="sxs-lookup"><span data-stu-id="535fd-118">The most common operation on the epoch value is incrementing it after stealing a lease.</span></span> <span data-ttu-id="535fd-119">この便利な関数には、get の増分値のセット必要になりますが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="535fd-119">This convenience function replaces the get-increment-set that would otherwise be required.</span></span></p>
      <p></p>
    syntax:
      content: public long incrementEpoch()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="535fd-120">エポックの新しい値。</span><span class="sxs-lookup"><span data-stu-id="535fd-120">The new value of the epoch.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired()
    id: isExpired()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: isExpired()
    nameWithType: Lease.isExpired()
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired()
    overload: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 160
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-121">実装<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>クラスから派生し、リースの有効期限の概念をサポートしている<xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>リースを検査し、期限切れになったかどうかを返す関数をオーバーライドする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="535fd-121">If an implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> supports the concept of lease expiration, then a class derived from <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> may override this function to inspect the lease and return whether it has expired.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isExpired()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="535fd-122">リース期限が切れて、false 場合は有効である場合は true。</span><span class="sxs-lookup"><span data-stu-id="535fd-122">true if the lease is expired, false if it is still valid</span></span> </p>'
    exceptions:
      - type: 8a99d4b0
        description: <p><span data-ttu-id="535fd-123">上書きは大変な作業は、例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="535fd-123">An override which does significant work may need to throw exceptions.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease()
    id: Lease()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease()
    nameWithType: Lease.Lease()
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease()
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 33
    package: com.microsoft.azure.eventprocessorhost
    summary: <p><span data-ttu-id="535fd-124">使用しないでください。GSon デシリアライザーに対してのみ追加</span><span class="sxs-lookup"><span data-stu-id="535fd-124">Do not use; added only for GSon deserializer</span></span> </p>
    syntax:
      content: protected Lease()
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
    id: Lease(Lease)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(Lease source)
    nameWithType: Lease.Lease(Lease source)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(Lease source)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 57
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-125">作成、<xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>を複製して、指定された<xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>です。</span><span class="sxs-lookup"><span data-stu-id="535fd-125">Create a <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> by duplicating the given <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref>.</span></span></p>
      <p></p>
    syntax:
      content: public Lease(Lease source)
      parameters:
        - id: source
          type: com.microsoft.azure.eventprocessorhost._lease
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(String)
    id: Lease(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(String partitionId)
    nameWithType: Lease.Lease(String partitionId)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(String partitionId)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 43
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-126">作成、<xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">リース</xref>所定のパーティションにします。</span><span class="sxs-lookup"><span data-stu-id="535fd-126">Create a <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> for the given partition.</span></span></p>
      <p></p>
    syntax:
      content: public Lease(String partitionId)
      parameters:
        - id: partitionId
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
    id: setEpoch(long)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setEpoch(long epoch)
    nameWithType: Lease.setEpoch(long epoch)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch(long epoch)
    overload: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 84
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-127">エポックの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="535fd-127">Set the epoch value.</span></span></p>
      <p></p>
    syntax:
      content: public void setEpoch(long epoch)
      parameters:
        - id: epoch
          type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
    id: setOwner(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setOwner(String owner)
    nameWithType: Lease.setOwner(String owner)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner(String owner)
    overload: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 116
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-128">所有者の文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="535fd-128">Set the owner string.</span></span> <span data-ttu-id="535fd-129">ホストが、リースを盗むときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="535fd-129">Used when a host steals a lease.</span></span></p>
      <p></p>
    syntax:
      content: public void setOwner(String owner)
      parameters:
        - id: owner
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    id: setToken(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setToken(String token)
    nameWithType: Lease.setToken(String token)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken(String token)
    overload: com.microsoft.azure.eventprocessorhost._lease.setToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 148
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="535fd-130">トークンの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="535fd-130">Set the token value.</span></span></p>
      <p></p>
    syntax:
      content: public void setToken(String token)
      parameters:
        - id: token
          type: '26831127'
references:
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease*
    name: Lease
    nameWithType: Lease.Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease
    package: com.microsoft.azure.eventprocessorhost
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    name: getEpoch
    nameWithType: Lease.getEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    name: setEpoch
    nameWithType: Lease.setEpoch
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    name: incrementEpoch
    nameWithType: Lease.incrementEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    name: getOwner
    nameWithType: Lease.getOwner
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    name: setOwner
    nameWithType: Lease.setOwner
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    name: getPartitionId
    nameWithType: Lease.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken*
    name: getToken
    nameWithType: Lease.getToken
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken*
    name: setToken
    nameWithType: Lease.setToken
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    name: isExpired
    nameWithType: Lease.isExpired
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._azure_blob_lease
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p><span data-ttu-id=\"535fd-131\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>クラスがパブリックで上級ユーザーを実装できるように、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-131\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> <span data-ttu-id=\"535fd-132\">実装している場合を除き、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>このクラスのオブジェクトに対処する必要はありませんか、クラスを直接派生します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-132\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly.</span></span> </p>\n\n<p><span data-ttu-id=\"535fd-133\">実装する場合、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>詳細持ち運びし、isExpired をオーバーライドするには、このクラスから派生する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-133\">When implementing an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired.</span></span> <span data-ttu-id=\"535fd-134\">データ フィールドが残されていますプライベートの代わりに、完全なセットがあるために、保護の getter および setter (partitionId は不変) を除くを同等のアクセスを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-134\">The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access.</span></span> <span data-ttu-id=\"535fd-135\">AzureBlobLease を実装する場合などがなかった、get アクセス操作子以上のアクセス権の必要性と set アクセス操作子を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-135\">When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide.</span></span> </p>\n<p><span data-ttu-id=\"535fd-136\">なお、<xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">リース</xref>オブジェクトには、パーティション リースに関する情報が含まれているのみです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-136\">Note that a <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> object just carries information about a partition lease.</span></span> <span data-ttu-id=\"535fd-137\">取得/更新/解放する機能、リースがすべてで、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"535fd-137\">The functionality to acquire/renew/release a lease is all on the <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> </p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
    name: ILeaseManager
    nameWithType: ILeaseManager
    fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
    type: Interface
    syntax:
      content: public interface ILeaseManager