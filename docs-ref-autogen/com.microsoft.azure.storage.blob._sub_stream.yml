### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.blob._sub_stream
    id: _sub_stream
    parent: com.microsoft.azure.storage.blob
    children:
      - com.microsoft.azure.storage.blob._sub_stream.close()
      - com.microsoft.azure.storage.blob._sub_stream.getInputStream()
      - com.microsoft.azure.storage.blob._sub_stream.getLength()
      - com.microsoft.azure.storage.blob._sub_stream.mark(int)
      - com.microsoft.azure.storage.blob._sub_stream.markSupported()
      - com.microsoft.azure.storage.blob._sub_stream.read()
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
      - com.microsoft.azure.storage.blob._sub_stream.reset()
      - com.microsoft.azure.storage.blob._sub_stream.skip(long)
      - 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 24
    package: com.microsoft.azure.storage.blob
    syntax: &ref_1
      content: public class SubStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.blob._sub_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: close()
    nameWithType: SubStream.close()
    fullName: void com.microsoft.azure.storage.blob.SubStream.close()
    overload: com.microsoft.azure.storage.blob._sub_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 329
    package: com.microsoft.azure.storage.blob
    summary: <p><span data-ttu-id="6c24c-101">サブストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-101">Closes the substream.</span></span> </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream()
    id: getInputStream()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getInputStream()
    nameWithType: SubStream.getInputStream()
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream()
    overload: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 91
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public InputStream getInputStream()
      return:
        type: 76fcb9b7
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength()
    id: getLength()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getLength()
    nameWithType: SubStream.getLength()
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength()
    overload: com.microsoft.azure.storage.blob._sub_stream.getLength*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 95
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public long getLength()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    id: mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    overload: com.microsoft.azure.storage.blob._sub_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 295
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-102">サブストリーム内の現在位置をマークします。</span><span class="sxs-lookup"><span data-stu-id="6c24c-102">Marks the current position in the substream.</span></span> <span data-ttu-id="6c24c-103">メソッドへの後続の呼び出しは、この格納されている位置に、ストリームの位置が変更されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-103">A subsequent call to the  method will reposition the stream to this stored position.</span></span></p>
      <p></p>
    syntax: &ref_4
      content: public synchronized void mark(int readlimit)
      parameters:
        - id: readlimit
          type: f75371fa
          description: <p><span data-ttu-id="6c24c-104">マークの位置の前に読み取り可能バイト数の上限は無効になります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-104">the maximum limit of bytes that can be read before the mark position becomes invalid.</span></span> </p>
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: '<span data-ttu-id="6c24c-105">サブストリーム:: reset()</span><span class="sxs-lookup"><span data-stu-id="6c24c-105">SubStream::reset()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: SubStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported()
    overload: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 321
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-106">サブストリーム ラッパー クラスでは、マークの入力ストリームとのみ互換性があり、したがっては常に true を返します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-106">The substream wrapper class is only compatible with markable input streams and hence will always return true.</span></span> <span data-ttu-id="6c24c-107">クラスのコンス トラクターでは、この要件が適用されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-107">This requirement is enforced in the class constructor.</span></span></p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: |-
          <p>

            <code>true</code>

          </p>
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: '<span data-ttu-id="6c24c-108">SubStream::mark(int)</span><span class="sxs-lookup"><span data-stu-id="6c24c-108">SubStream::mark(int)</span></span>'
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: '<span data-ttu-id="6c24c-109">サブストリーム:: reset()</span><span class="sxs-lookup"><span data-stu-id="6c24c-109">SubStream::reset()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 112
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-110">ラップされたストリームから次のデータ バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-110">Reads the next byte of data from the wrapped stream.</span></span> <span data-ttu-id="6c24c-111">値のバイトとして返されます、対象の範囲内です。</span><span class="sxs-lookup"><span data-stu-id="6c24c-111">The value byte is returned as an  in the range  to .</span></span> <span data-ttu-id="6c24c-112">バイトが使用できない場合、サブストリームの末尾に達しているため、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-112">If no byte is available because the end of the substream has been reached, the value  is returned.</span></span> <span data-ttu-id="6c24c-113">このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-113">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: '<p><span data-ttu-id="6c24c-114">次のデータ、バイトまたは<code>-1</code>サブストリームの終端に達した場合。</span><span class="sxs-lookup"><span data-stu-id="6c24c-114">the next byte of data, or <code>-1</code> if the end of the substream is reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="6c24c-115">場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-115">if an I/O error occurs.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
    id: 'read(byte [])'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b)'
    nameWithType: 'SubStream.read(byte[] b)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 150
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-116">ラップされたストリームからバイト数を読み取り、バッファーの配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-116">Reads some number of bytes from the wrapped stream and stores them into the buffer array .</span></span> <span data-ttu-id="6c24c-117">実際に読み取られたバイト数は、整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-117">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="6c24c-118">このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-118">This method blocks until input data is available, end of file is detected, or an exception is thrown.</span></span> </p>
      <p><span data-ttu-id="6c24c-119">長さが 0 の場合は、なしバイトの読み取りし、返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。</span><span class="sxs-lookup"><span data-stu-id="6c24c-119">If the length of  is zero, then no bytes are read and  is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="6c24c-120">バイトが使用できない場合、サブストリームは、ファイルの最後にあるため、値が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-120">If no byte is available because the substream is at the end of the file, the value  is returned; otherwise, at least one byte is read and stored into .</span></span> </p>
      <p><span data-ttu-id="6c24c-121">読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-121">The first byte read is stored into element , the next one into , and so on.</span></span> <span data-ttu-id="6c24c-122">読み取ったバイト数は最大の長さに一致します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-122">The number of bytes read is, at most, equal to the length of .</span></span> <span data-ttu-id="6c24c-123">Let <em>k</em> ; 実際に読み取るバイト数であるこれらのバイトに格納されます要素から<em>k</em>、要素のまま<em>k</em>影響を受けていないからです。</span><span class="sxs-lookup"><span data-stu-id="6c24c-123">Let <em>k</em> be the number of bytes actually read; these bytes will be stored in elements  through <em>k</em>, leaving elements <em>k</em> through  unaffected.</span></span> </p>
      <p><span data-ttu-id="6c24c-124">クラスのメソッドと同じ効果があります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-124">The  method for class  has the same effect as:</span></span> <pre></pre></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b)'
      parameters:
        - id: b
          type: ccd9418d
          description: <p><span data-ttu-id="6c24c-125">データの読み取り先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="6c24c-125">the buffer into which the data is read.</span></span> </p>
      return:
        type: 3d3ee726
        description: '<p><span data-ttu-id="6c24c-126">バッファーに読み取られたバイトの合計数または<code>-1</code>ストリームの末尾に達しているためデータがある場合。</span><span class="sxs-lookup"><span data-stu-id="6c24c-126">the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="6c24c-127">最初のバイトは、ラップされたストリームが閉じられた場合、またはその他の場合は、ファイルの最後以外の何らかの理由で読み取りできない場合は、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-127">If the first byte cannot be read for any reason other than the end of the file, if the wrapped stream has been closed, or if some other I/O error occurs.</span></span> </p>'
      - type: 17c54119
        description: <p><span data-ttu-id="6c24c-128">場合<code>b</code>は<code>null</code>します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-128">if <code>b</code> is <code>null</code>.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
    id: 'read(byte [],int,int)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b, int off, int len)'
    nameWithType: 'SubStream.read(byte[] b, int off, int len)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b, int off, int len)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 190
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-129">サブストリームからのデータのバイト読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-129">Reads up to  bytes of data from the substream.</span></span> <span data-ttu-id="6c24c-130">Skip を最小化し、読み取りのオーバーヘッドのためにラップされたストリームからのデータをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="6c24c-130">Buffers data from the wrapped stream in order to minimize skip and read overhead.</span></span> <span data-ttu-id="6c24c-131">Wrappedstream がのみ呼び出せます、readBuffer を満たせない場合、読み取り要求。</span><span class="sxs-lookup"><span data-stu-id="6c24c-131">The wrappedstream will only be invoked if the readBuffer cannot fulfil the the read request.</span></span> <span data-ttu-id="6c24c-132">有効な結果を確保できるように、サブストリームからの読み取り前に、ラップされたストリームをマークする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-132">In order to ensure valid results, the wrapped stream must be marked prior to reading from the substream.</span></span> <span data-ttu-id="6c24c-133">これにより、ラップされたストリーム内の相対サブストリーム位置にリセットすることができます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-133">This allows us to reset to the relative substream position in the wrapped stream.</span></span> <span data-ttu-id="6c24c-134">実際に読み取られたバイト数は、整数として返されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-134">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="6c24c-135">これらすべての操作は、サブストリーム インスタンスでその他の同時要求は、競合状態では発生しないことを確認する組み込みのロック内で同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-135">All these operations are done synchronously within an intrinsic lock to ensure other concurrent requests by substream instances do not result in race conditions.</span></span> </p>
      <p><span data-ttu-id="6c24c-136">ラップされたストリームの読み取りを基になる呼び出しは、入力データが使用可能なファイルの終わりが検出されると、または例外がスローされるまで、ブロックをされます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-136">The underlying call to the read of the wrapped stream will blocks until input data is available, end of file is detected, or an exception is thrown.</span></span> </p>
      <p><span data-ttu-id="6c24c-137">ゼロ、読み取られたバイト数がないが返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。</span><span class="sxs-lookup"><span data-stu-id="6c24c-137">If  is zero, then no bytes are read and  is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="6c24c-138">バイトが使用できない場合、サブストリームがファイルの終端であるため、値が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-138">If no byte is available because the substream is at end of file, the value  is returned; otherwise, at least one byte is read and stored into .</span></span></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b, int off, int len)'
      parameters:
        - id: b
          type: ccd9418d
          description: <p><span data-ttu-id="6c24c-139">データの読み取り先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="6c24c-139">the buffer into which the data is read.</span></span> </p>
        - id: 'off'
          type: f75371fa
          description: <p><span data-ttu-id="6c24c-140">配列内の開始オフセット<code>b</code>でデータが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-140">the start offset in array <code>b</code> at which the data is written.</span></span> </p>
        - id: len
          type: f75371fa
          description: <p><span data-ttu-id="6c24c-141">読み取るバイトの最大数。</span><span class="sxs-lookup"><span data-stu-id="6c24c-141">the maximum number of bytes to read.</span></span> </p>
      return:
        type: 3d3ee726
        description: '<p><span data-ttu-id="6c24c-142">バッファーに読み取られたバイトの合計数または<code>-1</code>ストリームの末尾に達しているためデータがある場合。</span><span class="sxs-lookup"><span data-stu-id="6c24c-142">the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="6c24c-143">ファイルの最後以外の何らかの理由で、最初のバイトを読み取りできない場合またはラップされたストリームが閉じられた場合またはその他の I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-143">If the first byte cannot be read for any reason other than end of file, or if the wrapped stream has been closed, or if some other I/O error occurs.</span></span> </p>'
      - type: 17c54119
        description: <p><span data-ttu-id="6c24c-144">場合<code>b</code>は<code>null</code>します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-144">If <code>b</code> is <code>null</code>.</span></span> </p>
      - type: 473ec288
        description: '<p><span data-ttu-id="6c24c-145">場合<code>off</code>が負の値、<code>len</code>が負の値、または<code>len</code>がより大きい<code>b.length - off</code></span><span class="sxs-lookup"><span data-stu-id="6c24c-145">If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off</code></span></span></p>'
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.read()
        description: '<span data-ttu-id="6c24c-146">サブストリーム:: read()</span><span class="sxs-lookup"><span data-stu-id="6c24c-146">SubStream::read()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    overload: com.microsoft.azure.storage.blob._sub_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 308
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-147">メソッドが呼び出された最後のインデックスにサブストリーム位置を再配置します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-147">Repositions the substream position to the index where the  method was last called.</span></span> </p>
      <p><span data-ttu-id="6c24c-148">サブストリームのリセットの新しい位置には、その後の読み込みされるまでの有効になりません。</span><span class="sxs-lookup"><span data-stu-id="6c24c-148">The new reset position on substream does not take effect until subsequent reads.</span></span></p>
      <p></p>
    syntax: &ref_3
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: '<span data-ttu-id="6c24c-149">SubStream::mark(int)</span><span class="sxs-lookup"><span data-stu-id="6c24c-149">SubStream::mark(int)</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip(long)
    id: skip(long)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: skip(long n)
    nameWithType: SubStream.skip(long n)
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip(long n)
    overload: com.microsoft.azure.storage.blob._sub_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 276
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-150">によってサブストリームの現在の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-150">Advances the current position of the substream by .</span></span> <span data-ttu-id="6c24c-151">メソッドでは、ラップされたストリーム クラスの基になるメソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6c24c-151">The  method does not invoke the underlying  method of the wrapped stream class.</span></span> <span data-ttu-id="6c24c-152">バイトの実際のスキップを考慮する後続のサブストリーム読み取り操作中にします。</span><span class="sxs-lookup"><span data-stu-id="6c24c-152">The actual skipping of bytes will be accounted for during subsequent substream read operations.</span></span></p>
      <p></p>
    syntax:
      content: public long skip(long n)
      parameters:
        - id: 'n'
          type: 0364520f
          description: <p><span data-ttu-id="6c24c-153">効果的にスキップするバイト数。</span><span class="sxs-lookup"><span data-stu-id="6c24c-153">the number of bytes to be effectively skipped.</span></span> </p>
      return:
        type: 0364520f
        description: <p><span data-ttu-id="6c24c-154">実際のバイト数がスキップされました。</span><span class="sxs-lookup"><span data-stu-id="6c24c-154">the actual number of bytes skipped.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    id: 'SubStream(InputStream,long,long,Object)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    nameWithType: 'SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    fullName: 'com.microsoft.azure.storage.blob.SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    overload: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 64
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="6c24c-155">ラップされたストリームからの最大パーティションを新しいサブストリーム インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-155">Creates a new substream instance that partitions the wrapped stream  from  up to .</span></span> <span data-ttu-id="6c24c-156">同じ基になるをラップする各サブストリーム インスタンスは、同時実行操作からの競合状態を回避する同じ相互排他を共有する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-156">Each substream instance that wraps the same underlying  must share the same mutual exclusion  to avoid race conditions from concurrent operations.</span></span></p>
      <p></p>
    syntax:
      content: 'public SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
      parameters:
        - id: source
          type: 76fcb9b7
          description: <p><span data-ttu-id="6c24c-157">ラップされるマーク InputStream です。</span><span class="sxs-lookup"><span data-stu-id="6c24c-157">The markable InputStream to be wrapped.</span></span> </p>
        - id: startIndex
          type: 0364520f
          description: <p><span data-ttu-id="6c24c-158">有効なインデックスで開始位置を示す、サブストリーム論理的にラップされたストリーム。</span><span class="sxs-lookup"><span data-stu-id="6c24c-158">A valid index in the wrapped stream where the substream should logically begin.</span></span> </p>
        - id: streamLength
          type: 0364520f
          description: <p><span data-ttu-id="6c24c-159">サブストリームの長さ。</span><span class="sxs-lookup"><span data-stu-id="6c24c-159">The length of the substream.</span></span> </p>
        - id: lock
          type: '79317049'
          description: '<p><span data-ttu-id="6c24c-160">スレッド セーフである、同時インスタンスで操作をサブストリーム同じ InputStream をラップすることを確認する組み込みのロック。</span><span class="sxs-lookup"><span data-stu-id="6c24c-160">An intrinsic lock to ensure thread-safe, concurrent operations on substream instances wrapping the same InputStream.</span></span> </p>'
    exceptions:
      - type: 8a99d4b0
references:
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    name: SubStream
    nameWithType: SubStream.SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream.SubStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    name: getInputStream
    nameWithType: SubStream.getInputStream
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength*
    name: getLength
    nameWithType: SubStream.getLength
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength
    package: com.microsoft.azure.storage.blob
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.blob._sub_stream.read*
    name: read
    nameWithType: SubStream.read
    fullName: int com.microsoft.azure.storage.blob.SubStream.read
    package: com.microsoft.azure.storage.blob
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip*
    name: skip
    nameWithType: SubStream.skip
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip
    package: com.microsoft.azure.storage.blob
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark*
    name: mark
    nameWithType: SubStream.mark
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset*
    name: reset
    nameWithType: SubStream.reset
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset
    package: com.microsoft.azure.storage.blob
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    name: markSupported
    nameWithType: SubStream.markSupported
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.close*
    name: close
    nameWithType: SubStream.close
    fullName: void com.microsoft.azure.storage.blob.SubStream.close
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream
    parent: com.microsoft.azure.storage.blob
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    type: Method
    summary: |-
      <p><span data-ttu-id="6c24c-161">ラップされたストリームから次のデータ バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6c24c-161">Reads the next byte of data from the wrapped stream.</span></span> <span data-ttu-id="6c24c-162">値のバイトとして返されます、対象の範囲内です。</span><span class="sxs-lookup"><span data-stu-id="6c24c-162">The value byte is returned as an  in the range  to .</span></span> <span data-ttu-id="6c24c-163">バイトが使用できない場合、サブストリームの末尾に達しているため、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-163">If no byte is available because the end of the substream has been reached, the value  is returned.</span></span> <span data-ttu-id="6c24c-164">このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-164">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    type: Method
    summary: |-
      <p><span data-ttu-id="6c24c-165">メソッドが呼び出された最後のインデックスにサブストリーム位置を再配置します。</span><span class="sxs-lookup"><span data-stu-id="6c24c-165">Repositions the substream position to the index where the  method was last called.</span></span> </p>
      <p><span data-ttu-id="6c24c-166">サブストリームのリセットの新しい位置には、その後の読み込みされるまでの有効になりません。</span><span class="sxs-lookup"><span data-stu-id="6c24c-166">The new reset position on substream does not take effect until subsequent reads.</span></span></p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    type: Method
    summary: |-
      <p><span data-ttu-id="6c24c-167">サブストリーム内の現在位置をマークします。</span><span class="sxs-lookup"><span data-stu-id="6c24c-167">Marks the current position in the substream.</span></span> <span data-ttu-id="6c24c-168">メソッドへの後続の呼び出しは、この格納されている位置に、ストリームの位置が変更されます。</span><span class="sxs-lookup"><span data-stu-id="6c24c-168">A subsequent call to the  method will reposition the stream to this stored position.</span></span></p>
      <p></p>
    syntax: *ref_4