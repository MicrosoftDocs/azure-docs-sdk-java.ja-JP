### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.blob._sub_stream
    id: _sub_stream
    parent: com.microsoft.azure.storage.blob
    children:
      - com.microsoft.azure.storage.blob._sub_stream.close()
      - com.microsoft.azure.storage.blob._sub_stream.getInputStream()
      - com.microsoft.azure.storage.blob._sub_stream.getLength()
      - com.microsoft.azure.storage.blob._sub_stream.mark(int)
      - com.microsoft.azure.storage.blob._sub_stream.markSupported()
      - com.microsoft.azure.storage.blob._sub_stream.read()
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
      - com.microsoft.azure.storage.blob._sub_stream.reset()
      - com.microsoft.azure.storage.blob._sub_stream.skip(long)
      - 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 24
    package: com.microsoft.azure.storage.blob
    syntax: &ref_1
      content: public class SubStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.blob._sub_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: close()
    nameWithType: SubStream.close()
    fullName: void com.microsoft.azure.storage.blob.SubStream.close()
    overload: com.microsoft.azure.storage.blob._sub_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 329
    package: com.microsoft.azure.storage.blob
    summary: <p>サブストリームを閉じます。 </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream()
    id: getInputStream()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getInputStream()
    nameWithType: SubStream.getInputStream()
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream()
    overload: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 91
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public InputStream getInputStream()
      return:
        type: 76fcb9b7
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength()
    id: getLength()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getLength()
    nameWithType: SubStream.getLength()
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength()
    overload: com.microsoft.azure.storage.blob._sub_stream.getLength*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 95
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public long getLength()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    id: mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    overload: com.microsoft.azure.storage.blob._sub_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 295
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>サブストリーム内の現在位置をマークします。 メソッドへの後続の呼び出しは、この格納されている位置に、ストリームの位置が変更されます。</p>
      <p></p>
    syntax: &ref_4
      content: public synchronized void mark(int readlimit)
      parameters:
        - id: readlimit
          type: f75371fa
          description: <p>マークの位置の前に読み取り可能バイト数の上限は無効になります。 </p>
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: 'サブストリーム:: reset()'
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: SubStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported()
    overload: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 321
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>サブストリーム ラッパー クラスでは、マークの入力ストリームとのみ互換性があり、したがっては常に true を返します。 クラスのコンス トラクターでは、この要件が適用されます。</p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: |-
          <p>

            <code>true</code>

          </p>
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: 'SubStream::mark(int)'
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: 'サブストリーム:: reset()'
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 112
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>ラップされたストリームから次のデータ バイトを読み取ります。 値のバイトとして返されます、対象の範囲内です。 バイトが使用できない場合、サブストリームの末尾に達しているため、値が返されます。 このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: <p>次のデータ、バイトまたは<code>-1</code>サブストリームの終端に達した場合。 </p>
    exceptions:
      - type: cbf33bbe
        description: <p>場合は、I/O エラーが発生します。 </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
    id: 'read(byte [])'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b)'
    nameWithType: 'SubStream.read(byte[] b)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 150
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>ラップされたストリームからバイト数を読み取り、バッファーの配列に格納します。 実際に読み取られたバイト数は、整数として返されます。 このメソッドはブロックされるまで、入力データが使用可能なファイルの終わりが検出されると、または、例外がスローされます。 </p>
      <p>長さが 0 の場合は、なしバイトの読み取りし、返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。 バイトが使用できない場合、サブストリームは、ファイルの最後にあるため、値が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。 </p>
      <p>読み取る最初のバイトは、要素や、[次へ] のいずれかに格納されます。 読み取ったバイト数は最大の長さに一致します。 Let <em>k</em> ; 実際に読み取るバイト数であるこれらのバイトに格納されます要素から<em>k</em>、要素のまま<em>k</em>影響を受けていないからです。 </p>
      <p>クラスのメソッドと同じ効果があります。 <pre></pre></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b)'
      parameters:
        - id: b
          type: ccd9418d
          description: <p>データの読み取り先のバッファー。 </p>
      return:
        type: 3d3ee726
        description: <p>バッファーに読み取られたバイトの合計数または<code>-1</code>ストリームの末尾に達しているためデータがある場合。 </p>
    exceptions:
      - type: cbf33bbe
        description: <p>最初のバイトは、ラップされたストリームが閉じられた場合、またはその他の場合は、ファイルの最後以外の何らかの理由で読み取りできない場合は、I/O エラーが発生します。 </p>
      - type: 17c54119
        description: <p>場合<code>b</code>は<code>null</code>します。 </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
    id: 'read(byte [],int,int)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b, int off, int len)'
    nameWithType: 'SubStream.read(byte[] b, int off, int len)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b, int off, int len)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 190
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>サブストリームからのデータのバイト読み取ります。 Skip を最小化し、読み取りのオーバーヘッドのためにラップされたストリームからのデータをバッファーします。 Wrappedstream がのみ呼び出せます、readBuffer を満たせない場合、読み取り要求。 有効な結果を確保できるように、サブストリームからの読み取り前に、ラップされたストリームをマークする必要があります。 これにより、ラップされたストリーム内の相対サブストリーム位置にリセットすることができます。 実際に読み取られたバイト数は、整数として返されます。 これらすべての操作は、サブストリーム インスタンスでその他の同時要求は、競合状態では発生しないことを確認する組み込みのロック内で同期的に実行されます。 </p>
      <p>ラップされたストリームの読み取りを基になる呼び出しは、入力データが使用可能なファイルの終わりが検出されると、または例外がスローされるまで、ブロックをされます。 </p>
      <p>ゼロ、読み取られたバイト数がないが返されます。それ以外の場合は、少なくとも 1 バイトを読み取ろうとしています。 バイトが使用できない場合、サブストリームがファイルの終端であるため、値が返されます。それ以外の場合、少なくとも 1 バイトが読み取られに格納します。</p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b, int off, int len)'
      parameters:
        - id: b
          type: ccd9418d
          description: <p>データの読み取り先のバッファー。 </p>
        - id: 'off'
          type: f75371fa
          description: <p>配列内の開始オフセット<code>b</code>でデータが書き込まれます。 </p>
        - id: len
          type: f75371fa
          description: <p>読み取るバイトの最大数。 </p>
      return:
        type: 3d3ee726
        description: <p>バッファーに読み取られたバイトの合計数または<code>-1</code>ストリームの末尾に達しているためデータがある場合。 </p>
    exceptions:
      - type: cbf33bbe
        description: <p>ファイルの最後以外の何らかの理由で、最初のバイトを読み取りできない場合またはラップされたストリームが閉じられた場合またはその他の I/O エラーが発生します。 </p>
      - type: 17c54119
        description: <p>場合<code>b</code>は<code>null</code>します。 </p>
      - type: 473ec288
        description: <p>場合<code>off</code>が負の値、<code>len</code>が負の値、または<code>len</code>がより大きい<code>b.length - off</code></p>
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.read()
        description: 'サブストリーム:: read()'
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    overload: com.microsoft.azure.storage.blob._sub_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 308
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>メソッドが呼び出された最後のインデックスにサブストリーム位置を再配置します。 </p>
      <p>サブストリームのリセットの新しい位置には、その後の読み込みされるまでの有効になりません。</p>
      <p></p>
    syntax: &ref_3
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: 'SubStream::mark(int)'
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip(long)
    id: skip(long)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: skip(long n)
    nameWithType: SubStream.skip(long n)
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip(long n)
    overload: com.microsoft.azure.storage.blob._sub_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 276
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>によってサブストリームの現在の位置を進めます。 メソッドでは、ラップされたストリーム クラスの基になるメソッドは呼び出されません。 バイトの実際のスキップを考慮する後続のサブストリーム読み取り操作中にします。</p>
      <p></p>
    syntax:
      content: public long skip(long n)
      parameters:
        - id: 'n'
          type: 0364520f
          description: <p>効果的にスキップするバイト数。 </p>
      return:
        type: 0364520f
        description: <p>実際のバイト数がスキップされました。 </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    id: 'SubStream(InputStream,long,long,Object)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    nameWithType: 'SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    fullName: 'com.microsoft.azure.storage.blob.SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    overload: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 64
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>ラップされたストリームからの最大パーティションを新しいサブストリーム インスタンスを作成します。 同じ基になるをラップする各サブストリーム インスタンスは、同時実行操作からの競合状態を回避する同じ相互排他を共有する必要があります。</p>
      <p></p>
    syntax:
      content: 'public SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
      parameters:
        - id: source
          type: 76fcb9b7
          description: <p>ラップされるマーク InputStream です。 </p>
        - id: startIndex
          type: 0364520f
          description: <p>有効なインデックスで開始位置を示す、サブストリーム論理的にラップされたストリーム。 </p>
        - id: streamLength
          type: 0364520f
          description: <p>サブストリームの長さ。 </p>
        - id: lock
          type: '79317049'
          description: <p>スレッド セーフである、同時インスタンスで操作をサブストリーム同じ InputStream をラップすることを確認する組み込みのロック。 </p>
    exceptions:
      - type: 8a99d4b0
references:
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    name: SubStream
    nameWithType: SubStream.SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream.SubStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    name: getInputStream
    nameWithType: SubStream.getInputStream
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength*
    name: getLength
    nameWithType: SubStream.getLength
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength
    package: com.microsoft.azure.storage.blob
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.blob._sub_stream.read*
    name: read
    nameWithType: SubStream.read
    fullName: int com.microsoft.azure.storage.blob.SubStream.read
    package: com.microsoft.azure.storage.blob
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip*
    name: skip
    nameWithType: SubStream.skip
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip
    package: com.microsoft.azure.storage.blob
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark*
    name: mark
    nameWithType: SubStream.mark
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset*
    name: reset
    nameWithType: SubStream.reset
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset
    package: com.microsoft.azure.storage.blob
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    name: markSupported
    nameWithType: SubStream.markSupported
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.close*
    name: close
    nameWithType: SubStream.close
    fullName: void com.microsoft.azure.storage.blob.SubStream.close
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream
    parent: com.microsoft.azure.storage.blob
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    type: Method
    summary: |-
      <p>ラップされたストリームから次のデータ バイトを読み取ります。 値のバイトとして返されます、対象の範囲内です。 バイトが使用できない場合、サブストリームの末尾に達しているため、値が返されます。 このメソッドはブロックされるまで、入力データが使用可能なストリームの末尾が検出されると、または、例外がスローされます。</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    type: Method
    summary: |-
      <p>メソッドが呼び出された最後のインデックスにサブストリーム位置を再配置します。 </p>
      <p>サブストリームのリセットの新しい位置には、その後の読み込みされるまでの有効になりません。</p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    type: Method
    summary: |-
      <p>サブストリーム内の現在位置をマークします。 メソッドへの後続の呼び出しは、この格納されている位置に、ストリームの位置が変更されます。</p>
      <p></p>
    syntax: *ref_4