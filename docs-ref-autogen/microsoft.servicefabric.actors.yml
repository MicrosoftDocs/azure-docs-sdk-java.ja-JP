### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors
    id: actors
    children:
      - microsoft.servicefabric.actors._actor
      - microsoft.servicefabric.actors._actor_base
      - microsoft.servicefabric.actors._actor_call_type
      - microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
      - microsoft.servicefabric.actors._actor_concurrency_settings
      - microsoft.servicefabric.actors._actor_dirty_state_handler
      - microsoft.servicefabric.actors._actor_event_proxy
      - microsoft.servicefabric.actors._actor_event_publisher
      - microsoft.servicefabric.actors._actor_event_publisher_e
      - microsoft.servicefabric.actors._actor_events
      - microsoft.servicefabric.actors._actor_extensions
      - microsoft.servicefabric.actors._actor_garbage_collection
      - microsoft.servicefabric.actors._actor_garbage_collection_settings
      - microsoft.servicefabric.actors._actor_id
      - microsoft.servicefabric.actors._actor_id_kind
      - microsoft.servicefabric.actors._actor_information
      - microsoft.servicefabric.actors._actor_message_headers
      - microsoft.servicefabric.actors._actor_method_attributes
      - microsoft.servicefabric.actors._actor_method_context
      - microsoft.servicefabric.actors._actor_method_dispatcher_base
      - microsoft.servicefabric.actors._actor_name_format
      - microsoft.servicefabric.actors._actor_proxy
      - microsoft.servicefabric.actors._actor_proxy_base
      - microsoft.servicefabric.actors._actor_proxy_event_utility
      - microsoft.servicefabric.actors._actor_proxy_factory
      - microsoft.servicefabric.actors._actor_reentrancy_mode
      - microsoft.servicefabric.actors._actor_reminder
      - microsoft.servicefabric.actors._actor_reminder_attributes
      - microsoft.servicefabric.actors._actor_reminder_collection
      - microsoft.servicefabric.actors._actor_reminder_state
      - microsoft.servicefabric.actors._actor_remoting_exception_handler
      - microsoft.servicefabric.actors._actor_runtime
      - microsoft.servicefabric.actors._actor_service
      - microsoft.servicefabric.actors._actor_service_attribute
      - microsoft.servicefabric.actors._actor_service_partition_client
      - microsoft.servicefabric.actors._actor_service_proxy
      - microsoft.servicefabric.actors._actor_service_remoting_dispatcher
      - microsoft.servicefabric.actors._actor_service_settings
      - microsoft.servicefabric.actors._actor_state_change
      - microsoft.servicefabric.actors._actor_state_manager
      - microsoft.servicefabric.actors._actor_state_provider
      - microsoft.servicefabric.actors._actor_state_provider_attribute
      - microsoft.servicefabric.actors._actor_timer
      - microsoft.servicefabric.actors._actor_type_extensions
      - microsoft.servicefabric.actors._actor_type_information
      - microsoft.servicefabric.actors._continuation_token
      - microsoft.servicefabric.actors._diagnostics_manager
      - microsoft.servicefabric.actors._fabric_actor
      - microsoft.servicefabric.actors._fabric_actor_proxy_factory
      - microsoft.servicefabric.actors._fabric_actor_reference
      - microsoft.servicefabric.actors._fabric_actor_service
      - microsoft.servicefabric.actors._fabric_transport_actor_remoting
      - microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
      - microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener
      - microsoft.servicefabric.actors._kvs_actor_state_provider
      - microsoft.servicefabric.actors._observable
      - microsoft.servicefabric.actors._paged_result
      - microsoft.servicefabric.actors._readonly
      - microsoft.servicefabric.actors._reentrancy_mode
      - microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception
      - microsoft.servicefabric.actors._reentrant
      - microsoft.servicefabric.actors._remindable
      - microsoft.servicefabric.actors._reminder_not_found_exception
      - microsoft.servicefabric.actors._state_change_kind
      - microsoft.servicefabric.actors._state_persistence
      - microsoft.servicefabric.actors._state_persistence_attribute
      - microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors.yml
    langs:
      - java
    name: microsoft.servicefabric.actors
    nameWithType: microsoft.servicefabric.actors
    fullName: microsoft.servicefabric.actors
    type: Namespace
    source:
      remote:
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActivationDiagnosticData.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActivationDiagnosticData.java
    syntax:
      content: package microsoft.servicefabric.actors
references:
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>信頼できるアクターのインターフェイスを継承するための基本インターフェイスです。 </p>
    syntax:
      content: public interface Actor
  - uid: microsoft.servicefabric.actors._actor_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_base.yml
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    summary: "<p>アクターの基本クラスを表します。 <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref></p>\n<p>\r\n\r\n  <b>注釈:</b>アクターの基本データ型は、共通するアクターから派生するアクターによって実装された機能を提供<xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>アクター ガベージ コレクションとのフェールオーバーの制限が、状態が保持されます。 状態の取得と格納がアクター状態プロバイダーによって提供される<xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>です。 </p>"
    syntax:
      content: public class ActorBase
  - uid: microsoft.servicefabric.actors._actor_call_type
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_call_type.yml
    name: ActorCallType
    nameWithType: ActorCallType
    fullName: microsoft.servicefabric.actors.ActorCallType
    type: Enum
    summary: "<p>アクター ランタイムによって呼び出されるメソッドに関連付けられている呼び出しの種類を表します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>の一部として提供されるこの<xref uid=\"microsoft.servicefabric.actors._actor_method_context\" data-throw-if-not-resolved=\"false\">ActorMethodContext</xref>への引数として渡される<xref uid=\"microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid=\"microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。 </p>"
    syntax:
      content: public enum ActorCallType
  - uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
    name: ActorConcurrencyLockTimeoutException
    nameWithType: ActorConcurrencyLockTimeoutException
    fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
    type: Class
    summary: <p>メソッドをディスパッチする同時実行のロックをランタイムが有効にするを取得できない場合に、アクター ランタイムによってスローされる例外に基づいています。 </p>
    syntax:
      content: public class ActorConcurrencyLockTimeoutException extends FabricException
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    name: ActorConcurrencySettings
    nameWithType: ActorConcurrencySettings
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
    type: Class
    summary: <p>論理呼び出しコンテキスト ベースの再入のサポートの順番でディスパッチ アクター メソッドを呼び出します。 このクラスは、アクターをベースにする同時実行のロックを構成する設定を提供します。 </p>
    syntax:
      content: public class ActorConcurrencySettings
  - uid: microsoft.servicefabric.actors._actor_dirty_state_handler
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_dirty_state_handler.yml
    name: ActorDirtyStateHandler
    nameWithType: ActorDirtyStateHandler
    fullName: microsoft.servicefabric.actors.ActorDirtyStateHandler
    type: Interface
    summary: <p>呼び出しが許可される前に処理する必要がある場合は、アクターの状態がダーティと、 </p>
    syntax:
      content: public interface ActorDirtyStateHandler
  - uid: microsoft.servicefabric.actors._actor_event_proxy
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_event_proxy.yml
    name: ActorEventProxy
    nameWithType: ActorEventProxy
    fullName: microsoft.servicefabric.actors.ActorEventProxy
    type: Class
    summary: <p>アクター イベント サブスクライバーでメソッドを呼び出すプロキシの基本実装を提供します。 </p>
    syntax:
      content: public class ActorEventProxy extends ProxyBase
  - uid: microsoft.servicefabric.actors._actor_event_publisher
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_event_publisher.yml
    name: ActorEventPublisher
    nameWithType: ActorEventPublisher
    fullName: microsoft.servicefabric.actors.ActorEventPublisher
    type: Interface
    summary: <p>アクター イベントの発行元を表します。 アクター イベントの発行元は、このインターフェイスを実装する必要があります。 </p>
    syntax:
      content: public interface ActorEventPublisher
  - uid: microsoft.servicefabric.actors._actor_event_publisher_e
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_event_publisher_e.yml
    name: ActorEventPublisherE<TActorEvents>
    nameWithType: ActorEventPublisherE<TActorEvents>
    fullName: microsoft.servicefabric.actors.ActorEventPublisherE<TActorEvents>
    type: Interface
    summary: |-
      <p>アクター イベントの発行元を表します。 アクター イベントの発行元は、このインターフェイスを実装する必要があります。</p>
      <p></p>
    syntax:
      content: public interface ActorEventPublisherE<TActorEvents extends ActorEvents> extends ActorEventPublisher
      typeParameters:
        - type: 6e1c167f
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>イベント インターフェイス型から派生した<xref uid=\"microsoft.servicefabric.actors._actor_events\" data-throw-if-not-resolved=\"false\">ActorEvents</xref>です。 </p>"
  - uid: microsoft.servicefabric.actors._actor_events
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_events.yml
    name: ActorEvents
    nameWithType: ActorEvents
    fullName: microsoft.servicefabric.actors.ActorEvents
    type: Interface
    summary: <p>アクターのイベントを表します。 アクターのイベントを作成するインターフェイスは、このインターフェイスを実装する必要があります。 </p>
    syntax:
      content: public interface ActorEvents
  - uid: microsoft.servicefabric.actors._actor_extensions
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_extensions.yml
    name: ActorExtensions
    nameWithType: ActorExtensions
    fullName: microsoft.servicefabric.actors.ActorExtensions
    type: Class
    summary: <p>アクターの拡張メソッドを含むクラスです。 </p>
    syntax:
      content: public class ActorExtensions
  - uid: microsoft.servicefabric.actors._actor_garbage_collection
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_garbage_collection.yml
    name: ActorGarbageCollection
    nameWithType: ActorGarbageCollection
    fullName: microsoft.servicefabric.actors.ActorGarbageCollection
    type: Interface
    summary: <p>ガベージ コレクションの動作を構成する設定<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>サービス。 </p>
    syntax:
      content: public interface ActorGarbageCollection
  - uid: microsoft.servicefabric.actors._actor_garbage_collection_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_garbage_collection_settings.yml
    name: ActorGarbageCollectionSettings
    nameWithType: ActorGarbageCollectionSettings
    fullName: microsoft.servicefabric.actors.ActorGarbageCollectionSettings
    type: Class
    summary: <p>ガベージ コレクションの動作を構成する設定<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>サービス。 </p>
    syntax:
      content: public class ActorGarbageCollectionSettings
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">ActorId</xref>アクター サービス内でアクターの id を表します。 アクターによって識別できます<xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref>か、または長。 </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor_id_kind
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id_kind.yml
    name: ActorIdKind
    nameWithType: ActorIdKind
    fullName: microsoft.servicefabric.actors.ActorIdKind
    type: Enum
    summary: <p>Id 値の型を指定<xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref>です。 </p>
    syntax:
      content: public enum ActorIdKind
  - uid: microsoft.servicefabric.actors._actor_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_information.yml
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    summary: <p>によって返されるアクターに関する情報を表します<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>メソッドの呼び出しをクエリします。 </p>
    syntax:
      content: public class ActorInformation
  - uid: microsoft.servicefabric.actors._actor_message_headers
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_message_headers.yml
    name: ActorMessageHeaders
    nameWithType: ActorMessageHeaders
    fullName: microsoft.servicefabric.actors.ActorMessageHeaders
    type: Class
    summary: <p>アクターのメッセージのヘッダー。 </p>
    syntax:
      content: public class ActorMessageHeaders
  - uid: microsoft.servicefabric.actors._actor_method_attributes
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_attributes.yml
    name: ActorMethodAttributes
    nameWithType: ActorMethodAttributes
    fullName: microsoft.servicefabric.actors.ActorMethodAttributes
    type: Enum
    syntax:
      content: public enum ActorMethodAttributes
  - uid: microsoft.servicefabric.actors._actor_method_context
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_context.yml
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: microsoft.servicefabric.actors.ActorMethodContext
    type: Class
    summary: '<p><xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref>に渡す引数として渡されるアクター ランタイムによって呼び出されるメソッドに関する情報を格納<xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref>と<xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>です。 </p>'
    syntax:
      content: public class ActorMethodContext
  - uid: microsoft.servicefabric.actors._actor_method_dispatcher_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_dispatcher_base.yml
    name: ActorMethodDispatcherBase
    nameWithType: ActorMethodDispatcherBase
    fullName: microsoft.servicefabric.actors.ActorMethodDispatcherBase
    type: Class
    summary: <p>クライアントからの要求を適切なインターフェイスと、リモート オブジェクトのメソッドにディスパッチする型を生成するコード ジェネレーターのリモート処理によって使用される基本クラスです。 </p>
    syntax:
      content: public class ActorMethodDispatcherBase extends MethodDispatcherBaseWithSerializer
  - uid: microsoft.servicefabric.actors._actor_name_format
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_name_format.yml
    name: ActorNameFormat
    nameWithType: ActorNameFormat
    fullName: microsoft.servicefabric.actors.ActorNameFormat
    type: Class
    summary: <p>サービス名、アプリケーション名の形式、アクター インターフェイスの型のように名前を生成するための静的メソッドが含まれています。 </p>
    syntax:
      content: public class ActorNameFormat
  - uid: microsoft.servicefabric.actors._actor_proxy
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy.yml
    name: ActorProxy
    nameWithType: ActorProxy
    fullName: microsoft.servicefabric.actors.ActorProxy
    type: Interface
    summary: <p>アクター サービスに対するプロキシ アクセスを実装するため、インターフェイスを提供します。 </p>
    syntax:
      content: public interface ActorProxy
  - uid: microsoft.servicefabric.actors._actor_proxy_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    name: ActorProxyBase
    nameWithType: ActorProxyBase
    fullName: microsoft.servicefabric.actors.ActorProxyBase
    type: Class
    summary: <p>IActor インターフェイスを実装するアクターのリモート オブジェクトへのプロキシの基本実装を提供します。 </p>
    syntax:
      content: public class ActorProxyBase extends ProxyBase implements ActorProxy
  - uid: microsoft.servicefabric.actors._actor_proxy_event_utility
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy_event_utility.yml
    name: ActorProxyEventUtility
    nameWithType: ActorProxyEventUtility
    fullName: microsoft.servicefabric.actors.ActorProxyEventUtility
    type: Class
    summary: <p>アクター イベントに関連する拡張メソッドが含まれています。 </p>
    syntax:
      content: public class ActorProxyEventUtility
  - uid: microsoft.servicefabric.actors._actor_proxy_factory
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy_factory.yml
    name: ActorProxyFactory
    nameWithType: ActorProxyFactory
    fullName: microsoft.servicefabric.actors.ActorProxyFactory
    type: Interface
    summary: <p>アクター プロキシ ファクトリ クラスを作成するメソッドを含むインターフェイスを定義します。 </p>
    syntax:
      content: public interface ActorProxyFactory
  - uid: microsoft.servicefabric.actors._actor_reentrancy_mode
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reentrancy_mode.yml
    name: ActorReentrancyMode
    nameWithType: ActorReentrancyMode
    fullName: microsoft.servicefabric.actors.ActorReentrancyMode
    type: Enum
    summary: <p>アクター メソッドの呼び出しのための再入モードを指定します。 </p>
    syntax:
      content: public enum ActorReentrancyMode
  - uid: microsoft.servicefabric.actors._actor_reminder
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder.yml
    name: ActorReminder
    nameWithType: ActorReminder
    fullName: microsoft.servicefabric.actors.ActorReminder
    type: Interface
    summary: <p>アラームの設定をカプセル化、<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref></p>
    syntax:
      content: public interface ActorReminder
  - uid: microsoft.servicefabric.actors._actor_reminder_attributes
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder_attributes.yml
    name: ActorReminderAttributes
    nameWithType: ActorReminderAttributes
    fullName: microsoft.servicefabric.actors.ActorReminderAttributes
    type: Enum
    syntax:
      content: public enum ActorReminderAttributes
  - uid: microsoft.servicefabric.actors._actor_reminder_collection
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder_collection.yml
    name: ActorReminderCollection
    nameWithType: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.ActorReminderCollection
    type: Interface
    summary: <p>キャプチャ<xref uid="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref>アクターの </p>
    syntax:
      content: public interface ActorReminderCollection
  - uid: microsoft.servicefabric.actors._actor_reminder_state
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder_state.yml
    name: ActorReminderState
    nameWithType: ActorReminderState
    fullName: microsoft.servicefabric.actors.ActorReminderState
    type: Interface
    summary: <p>内部状態を表す<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>アラーム </p>
    syntax:
      content: public interface ActorReminderState extends ActorReminder
  - uid: microsoft.servicefabric.actors._actor_remoting_exception_handler
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_remoting_exception_handler.yml
    name: ActorRemotingExceptionHandler
    nameWithType: ActorRemotingExceptionHandler
    fullName: microsoft.servicefabric.actors.ActorRemotingExceptionHandler
    type: Class
    summary: "<p>このクラスは、リモート アクター インターフェイス経由での service fabric アクターと通信中に発生した例外の処理を提供します。</p>\n<p>\r\n\r\n  <b>注釈:</b>この例外ハンドラーは、次のシナリオに関連する例外を処理します。 </p>\n\n<p>\n\n  <itemizedlist>\n\n    <listitem>\n\n      <p>&lt;示されている&gt;重複したメッセージを:&lt;が示されている/&gt; </p>\n\n      <p>例外処理のロジックに基づくクライアントからアクターに対して実行される操作が再試行されます。 これらの例外は、サービスのフェールオーバーを含むさまざまなエラー状態を表します。 したがって、アクターが重複するメッセージを受信することです。 アクターによって前のメッセージの処理中に重複するメッセージを受信する場合、ランタイムは、クライアントに内部例外を返します。 クライアントは、アクターから結果を戻すために、操作を再試行します。 クライアントがアクターの観点から重複する操作が実行され、操作は既に処理されて、し、重複するメッセージが到着した場合と同様の方法で処理が必要です。 </p>\n\n      <p></p>\n\n      <p></p>\n\n    </listitem>\n\n    <listitem>\n\n      <p>&lt;示されている&gt;<xref uid=\"microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception\" data-throw-if-not-resolved=\"false\">ActorConcurrencyLockTimeoutException</xref>:&lt;が示されている/&gt; </p>\n\n      <p>アクターの操作は、基にする同時実行のロックを使用して実行されます ( <xref uid=\"microsoft.servicefabric.actors._actor_concurrency_settings\" data-throw-if-not-resolved=\"false\">ActorConcurrencySettings</xref>) 論理呼び出しコンテキスト ベースの再入をサポートします。 実行時間の長いアクター操作した場合は、このロックはタイムアウトが発生するの買収可能性があります。ロックの取得こともできます (アクター A および B が互いを同時にほぼ呼び出してアクター) に、デッドロックが発生した場合はタイムアウトが発生します。 </p>\n\n      <p></p>\n\n      <p>同時実行のロックのタイムアウトに関連する例外を返すことによって処理される<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>から、 <xref uid=\"microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)\" data-throw-if-not-resolved=\"false\">ExceptionHandler #handleException(ExceptionInformation, OperationRetrySettings)</xref>メソッド操作を実行するクライアントが別のアクターにない場合。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult #isTransient</xref>のプロパティ、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>設定を true に、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>の retryDelay プロパティは、ランダムな値にするように設定<xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationRetrySettings</xref>の MaxRetryBackoffIntervalOnTransientErrors と<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingRetryResult</xref>の MaxRetryCount プロパティに設定されている<xref uid=\"\" data-throw-if-not-resolved=\"false\">整数 #MAX_VALUE</xref>です。 </p>\n\n      <p></p>\n\n      <p>同時実行のロックのタイムアウトに関連する例外を返すことによって処理される<xref uid=\"\" data-throw-if-not-resolved=\"false\">ExceptionHandlingThrowResult</xref>から、 <xref uid=\"microsoft.servicefabric.services.communication.client._exception_handler.handleException(ExceptionInformation,OperationRetrySettings)\" data-throw-if-not-resolved=\"false\">ExceptionHandler #handleException(ExceptionInformation, OperationRetrySettings)</xref>メソッド、操作を実行するクライアントが別のアクターの場合。 これにより、呼び出しチェーンまでアンワインドするデッドロック状態では、元のクライアントにバックアップし、そこから、操作が再試行します。 </p>\n\n      <p></p>\n\n    </listitem>\n\n  </itemizedlist>\n\n</p>"
    syntax:
      content: public class ActorRemotingExceptionHandler implements ExceptionHandler
  - uid: microsoft.servicefabric.actors._actor_runtime
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_runtime.yml
    name: ActorRuntime
    nameWithType: ActorRuntime
    fullName: microsoft.servicefabric.actors.ActorRuntime
    type: Class
    summary: <p>Service Fabric ランタイムにアクターの種類を登録するメソッドが含まれています。 </p>
    syntax:
      content: public class ActorRuntime
  - uid: microsoft.servicefabric.actors._actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service.yml
    name: ActorService
    nameWithType: ActorService
    fullName: microsoft.servicefabric.actors.ActorService
    type: Interface
    summary: <p>呼び出すことができるメソッドを含むインターフェイスを定義する<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>サービス レベルです。 </p>
    syntax:
      content: public interface ActorService extends Service
  - uid: microsoft.servicefabric.actors._actor_service_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_attribute.yml
    name: ActorServiceAttribute
    nameWithType: ActorServiceAttribute
    fullName: microsoft.servicefabric.actors.ActorServiceAttribute
    type: Interface
    summary: <p>この属性は、アクター サービスのプロパティを構成できます。 属性は、アクターの型に適用されます。 </p>
    syntax:
      content: public interface ActorServiceAttribute
  - uid: microsoft.servicefabric.actors._actor_service_partition_client
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_partition_client.yml
    name: ActorServicePartitionClient
    nameWithType: ActorServicePartitionClient
    fullName: microsoft.servicefabric.actors.ActorServicePartitionClient
    type: Interface
    syntax:
      content: public interface ActorServicePartitionClient extends ServiceRemotingPartitionClient
  - uid: microsoft.servicefabric.actors._actor_service_proxy
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_proxy.yml
    name: ActorServiceProxy
    nameWithType: ActorServiceProxy
    fullName: microsoft.servicefabric.actors.ActorServiceProxy
    type: Class
    summary: <p>Service Fabric クラスターで実行しているアクター サービスとの対話し、アクター サービス レベルの操作を実行するクライアントによって使用されるプロキシ。 </p>
    syntax:
      content: public class ActorServiceProxy
  - uid: microsoft.servicefabric.actors._actor_service_remoting_dispatcher
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_remoting_dispatcher.yml
    name: ActorServiceRemotingDispatcher
    nameWithType: ActorServiceRemotingDispatcher
    fullName: microsoft.servicefabric.actors.ActorServiceRemotingDispatcher
    type: Class
    summary: <p>実装を提供<xref uid="" data-throw-if-not-resolved="false">ServiceRemotingMessageHandler</xref>アクター サービスとサービスでホストされているアクターのメッセージをディスパッチすることができます。 </p>
    syntax:
      content: public class ActorServiceRemotingDispatcher extends ServiceRemotingDispatcher
  - uid: microsoft.servicefabric.actors._actor_service_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_settings.yml
    name: ActorServiceSettings
    nameWithType: ActorServiceSettings
    fullName: microsoft.servicefabric.actors.ActorServiceSettings
    type: Class
    summary: <p>動作を構成する設定<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>サービス。 </p>
    syntax:
      content: public class ActorServiceSettings
  - uid: microsoft.servicefabric.actors._actor_state_change
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_change.yml
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: microsoft.servicefabric.actors.ActorStateChange
    type: Class
    summary: <p>表しますが、指定された状態の名前を持つアクター状態に変わります。 </p>
    syntax:
      content: public class ActorStateChange
  - uid: microsoft.servicefabric.actors._actor_state_manager
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    name: ActorStateManager
    nameWithType: ActorStateManager
    fullName: microsoft.servicefabric.actors.ActorStateManager
    type: Interface
    summary: <p>インターフェイスのマネージャーの状態を表します<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref>を実装します。 </p>
    syntax:
      content: public interface ActorStateManager
  - uid: microsoft.servicefabric.actors._actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    summary: <p>アクター状態プロバイダーは、アクター ランタイムと通信するために実装する必要があるインターフェイスを表します。 </p>
    syntax:
      content: public interface ActorStateProvider extends StateProviderReplica
  - uid: microsoft.servicefabric.actors._actor_state_provider_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider_attribute.yml
    name: ActorStateProviderAttribute
    nameWithType: ActorStateProviderAttribute
    fullName: microsoft.servicefabric.actors.ActorStateProviderAttribute
    type: Interface
    syntax:
      content: public interface ActorStateProviderAttribute
  - uid: microsoft.servicefabric.actors._actor_timer
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_timer.yml
    name: ActorTimer
    nameWithType: ActorTimer
    fullName: microsoft.servicefabric.actors.ActorTimer
    type: Interface
    summary: <p>タイマーを表す、<xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">アクター</xref></p>
    syntax:
      content: public interface ActorTimer
  - uid: microsoft.servicefabric.actors._actor_type_extensions
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_extensions.yml
    name: ActorTypeExtensions
    nameWithType: ActorTypeExtensions
    fullName: microsoft.servicefabric.actors.ActorTypeExtensions
    type: Class
    syntax:
      content: public class ActorTypeExtensions
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p>アクターを実装する型についてを説明します。 </p>
    syntax:
      content: public class ActorTypeInformation
  - uid: microsoft.servicefabric.actors._continuation_token
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._continuation_token.yml
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: microsoft.servicefabric.actors.ContinuationToken
    type: Class
    summary: "<p>クエリ操作の継続トークンを表します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>メソッドを使用して結果のセットの一部を返す可能性があります、 <xref uid=\"microsoft.servicefabric.actors._paged_result\" data-throw-if-not-resolved=\"false\">PagedResult</xref>オブジェクトが使用可能な結果の次のセットを返す、後続の呼び出しで使用できるオブジェクトにも継続トークンを返します。 </p>"
    syntax:
      content: public class ContinuationToken
  - uid: microsoft.servicefabric.actors._diagnostics_manager
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._diagnostics_manager.yml
    name: DiagnosticsManager
    nameWithType: DiagnosticsManager
    fullName: microsoft.servicefabric.actors.DiagnosticsManager
    type: Interface
    syntax:
      content: public interface DiagnosticsManager
  - uid: microsoft.servicefabric.actors._fabric_actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor.yml
    name: FabricActor
    nameWithType: FabricActor
    fullName: microsoft.servicefabric.actors.FabricActor
    type: Class
    summary: "<p>関連付けられている複数の信頼性の高い '名前付き' 状態を持つことができるアクターを表します。 <xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></p>\n<p>\r\n\r\n  <b>注釈:</b>アクター ガベージ コレクションとのフェールオーバーの制限が、状態が保持されます。 状態の取得と格納がアクター状態プロバイダーによって提供される<xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>です。 </p>"
    syntax:
      content: public class FabricActor extends ActorBase
  - uid: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: FabricActorProxyFactory
    nameWithType: FabricActorProxyFactory
    fullName: microsoft.servicefabric.actors.FabricActorProxyFactory
    type: Class
    summary: <p>リモートのアクターのオブジェクトへのプロキシを作成するファクトリ クラスです。 </p>
    syntax:
      content: public class FabricActorProxyFactory implements ActorProxyFactory
  - uid: microsoft.servicefabric.actors._fabric_actor_reference
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_reference.yml
    name: FabricActorReference
    nameWithType: FabricActorReference
    fullName: microsoft.servicefabric.actors.FabricActorReference
    type: Class
    summary: <p>シリアル化のアクターへの参照のカプセル化します。 </p>
    syntax:
      content: public class FabricActorReference
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    summary: "<p>ベース Microsoft Service Fabric アクターの信頼性の高いサービスの基本クラスを表します。 </p>\n<p>\r\n\r\n  <b>注釈:</b>アクターが、任意のサービス レベルの動作をオーバーライドする場合は、独自のカスタム アクター サービスを実装するには、このクラスから派生します。 </p>"
    syntax:
      content: public class FabricActorService extends StatefulServiceBase implements ActorService
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_transport_actor_remoting.yml
    name: FabricTransportActorRemoting
    nameWithType: FabricTransportActorRemoting
    fullName: microsoft.servicefabric.actors.FabricTransportActorRemoting
    type: Interface
    summary: <p>アクターの既定のリモート処理プロバイダーとしてのファブリック TCP トランスポートを設定します。 </p>
    syntax:
      content: public interface FabricTransportActorRemoting
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_transport_actor_remoting_client_factory.yml
    name: FabricTransportActorRemotingClientFactory
    nameWithType: FabricTransportActorRemotingClientFactory
    fullName: microsoft.servicefabric.actors.FabricTransportActorRemotingClientFactory
    type: Class
    summary: <p><xref uid="microsoft.servicefabric.services.remoting.client._service_remoting_client_factory" data-throw-if-not-resolved="false">Microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory</xref>ファブリック TCP トランスポートを使用して作成する<xref uid="microsoft.servicefabric.services.remoting.client._service_remoting_client" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceRemotingClient</xref>経由でリモート処理は実行されているインターフェイスでアクターと通信する<xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener</xref></p>
    syntax:
      content: public class FabricTransportActorRemotingClientFactory extends FabricTransportServiceRemotingClientFactory
  - uid: microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_transport_actor_service_remoting_listener.yml
    name: FabricTransportActorServiceRemotingListener
    nameWithType: FabricTransportActorServiceRemotingListener
    fullName: microsoft.servicefabric.actors.FabricTransportActorServiceRemotingListener
    type: Class
    summary: <p><xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">Microsoft.servicefabric.services.remoting.ServiceRemotingListener</xref>アクター サービス用のアクターとサービスのインターフェイスのリモート処理を提供するファブリック TCP トランスポートを使用します。 </p>
    syntax:
      content: public class FabricTransportActorServiceRemotingListener extends FabricTransportServiceRemotingListener
  - uid: microsoft.servicefabric.actors._kvs_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._kvs_actor_state_provider.yml
    name: KvsActorStateProvider
    nameWithType: KvsActorStateProvider
    fullName: microsoft.servicefabric.actors.KvsActorStateProvider
    type: Class
    syntax:
      content: public class KvsActorStateProvider implements ActorStateProvider
  - uid: microsoft.servicefabric.actors._observable
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: microsoft.servicefabric.actors.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: microsoft.servicefabric.actors._paged_result
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._paged_result.yml
    name: PagedResult<T>
    nameWithType: PagedResult<T>
    fullName: microsoft.servicefabric.actors.PagedResult<T>
    type: Class
    summary: |-
      <p>アクター クエリの呼び出しの結果を表します。</p>
      <p></p>
    syntax:
      content: public class PagedResult<T>
      typeParameters:
        - type: 8ce1ecb9
          description: <p>このクエリ結果に含まれる項目の種類。 </p>
  - uid: microsoft.servicefabric.actors._readonly
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._readonly.yml
    name: Readonly
    nameWithType: Readonly
    fullName: microsoft.servicefabric.actors.Readonly
    type: Interface
    syntax:
      content: public interface Readonly
  - uid: microsoft.servicefabric.actors._reentrancy_mode
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._reentrancy_mode.yml
    name: ReentrancyMode
    nameWithType: ReentrancyMode
    fullName: microsoft.servicefabric.actors.ReentrancyMode
    type: Enum
    summary: <p>アクター メソッドの呼び出しのための再入モードを指定します。 </p>
    syntax:
      content: public enum ReentrancyMode
  - uid: microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._reentrancy_mode_disallowed_exception.yml
    name: ReentrancyModeDisallowedException
    nameWithType: ReentrancyModeDisallowedException
    fullName: microsoft.servicefabric.actors.ReentrancyModeDisallowedException
    type: Class
    summary: '<p>アクターの再入可能呼び出しが行われたときにアクター ランタイムによってスローされる例外とその<xref uid="microsoft.servicefabric.actors._reentrancy_mode" data-throw-if-not-resolved="false">ReentrancyMode</xref>に設定されている<xref uid="microsoft.servicefabric.actors._reentrancy_mode.Disallowed" data-throw-if-not-resolved="false">ReentrancyMode #Disallowed</xref>です。 </p>'
    syntax:
      content: public class ReentrancyModeDisallowedException extends FabricException
  - uid: microsoft.servicefabric.actors._reentrant
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._reentrant.yml
    name: Reentrant
    nameWithType: Reentrant
    fullName: microsoft.servicefabric.actors.Reentrant
    type: Interface
    syntax:
      content: public interface Reentrant
  - uid: microsoft.servicefabric.actors._remindable
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._remindable.yml
    name: Remindable
    nameWithType: Remindable
    fullName: microsoft.servicefabric.actors.Remindable
    type: Interface
    summary: <p>インターフェイス アラームを使用するアクターが実装する必要があります。 </p>
    syntax:
      content: public interface Remindable
  - uid: microsoft.servicefabric.actors._reminder_not_found_exception
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._reminder_not_found_exception.yml
    name: ReminderNotFoundException
    nameWithType: ReminderNotFoundException
    fullName: microsoft.servicefabric.actors.ReminderNotFoundException
    type: Class
    summary: <p>アクターの指定のアラームが見つからない場合に、アクター ランタイムによってスローされる例外。 </p>
    syntax:
      content: public class ReminderNotFoundException extends FabricException
  - uid: microsoft.servicefabric.actors._state_change_kind
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._state_change_kind.yml
    name: StateChangeKind
    nameWithType: StateChangeKind
    fullName: microsoft.servicefabric.actors.StateChangeKind
    type: Enum
    summary: '<p>アクターの状態変化の種類を表す状態<xref uid="" data-throw-if-not-resolved="false">ActorStateProvider #saveStateAsync(ActorId, java.util.List)</xref>一連のアクター状態の変更内容を保存します。 </p>'
    syntax:
      content: public enum StateChangeKind
  - uid: microsoft.servicefabric.actors._state_persistence
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._state_persistence.yml
    name: StatePersistence
    nameWithType: StatePersistence
    fullName: microsoft.servicefabric.actors.StatePersistence
    type: Enum
    summary: <p>アクター サービス用のアクター状態の格納方法を示します。 </p>
    syntax:
      content: public enum StatePersistence
  - uid: microsoft.servicefabric.actors._state_persistence_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._state_persistence_attribute.yml
    name: StatePersistenceAttribute
    nameWithType: StatePersistenceAttribute
    fullName: microsoft.servicefabric.actors.StatePersistenceAttribute
    type: Interface
    summary: <p>(メモリ内にのみ) が、永続化または格納されないすべてのアクターの状態を volatile にする必要があるかどうかを示します。 この属性に指定されたストアの種類は、アクター サービスで使用される状態プロバイダーの種類に一致する必要があります。 </p>
    syntax:
      content: public interface StatePersistenceAttribute
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>揮発性の永続化つまりの実装 <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">アクター</xref>状態が保持されるメモリ内のみです。 </p>"
    syntax:
      content: 'public class VolatileActorStateProvider implements ActorStateProvider,StateProvider'