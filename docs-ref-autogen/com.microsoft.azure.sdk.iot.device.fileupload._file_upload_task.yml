### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task
    id: _file_upload_task
    parent: com.microsoft.azure.sdk.iot.device.fileupload
    children:
      - com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.run()
    href: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.yml
    langs:
      - java
    name: FileUploadTask
    nameWithType: FileUploadTask
    fullName: com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/fileupload/FileUploadTask.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/fileupload/FileUploadTask.java
      startLine: 48
    package: com.microsoft.azure.sdk.iot.device.fileupload
    summary: "<p><span data-ttu-id=\"466db-101\">Iot Hub を使用して、Azure ストレージにファイルの非同期アップロードするための手段を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-101\">Provide means to asynchronous upload file in the Azure Storage using the IoTHub.</span></span></p>\n<p><span data-ttu-id=\"466db-102\">ファイルのアップロード プロセスは、次の図の 3 つの手順で構成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-102\">The file upload process is composed by 3 steps represented in the follow diagram.</span></span><span data-ttu-id=\"466db-103\"> +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+|デバイス | |Iot Hub | |記憶域 | |サービス |+-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ </span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-103\"> +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ | Device | | Iot Hub | | Storage | | Service | +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ +------------<mdash></mdash>+ </span></span><table rows=\"3\" cols=\"3\"><row><entry thead=\"yes\"><p></p></entry><entry thead=\"yes\"><p></p></entry><entry thead=\"yes\"><p></p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"466db-104\">REQUEST_BLOB</span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-104\">REQUEST_BLOB</span></span> </p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p></p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"466db-105\">+<mdash></mdash>要求の blob<mdash></mdash>&gt;</span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-105\">+<mdash></mdash> request blob <mdash></mdash>&gt;</span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p></p></entry></row></table><span data-ttu-id=\"466db-106\">\r\n|&lt;<ndash></ndash>blob の SAS トークン<ndash> </ndash> + ||||||UPLOAD_FILE | | |+-<mdash> </mdash>ファイルを指定された blob にアップロード<mdash> </mdash> &gt;| | +&lt; --- <mdash> </mdash>を---アップロードの末尾<mdash></mdash> + | | |NOTIFY_IOTHUB | | |+<mdash> </mdash>ステータスを通知する<ndash> </ndash> &gt;| | | + ---<mdash> </mdash> ---使用可能な新しいファイルを通知する<mdash></mdash>&gt;| | |</span><span class=\"sxs-lookup\"><span data-stu-id=\"466db-106\">\r\n|&lt;<ndash></ndash> blob SAS token <ndash></ndash>+ | | | | | | UPLOAD_FILE | | | +-<mdash></mdash> upload file to the provided blob <mdash></mdash>&gt;| | +&lt;---<mdash></mdash> end of upload with  ---<mdash></mdash>+ | | | | | NOTIFY_IOTHUB | | | +<mdash></mdash> notify status <ndash></ndash>&gt;| | | | +---<mdash></mdash> notify new file available ----<mdash></mdash>&gt;| | | | |</span></span> </p>"
    syntax:
      content: public class FileUploadTask
    inheritance:
      - java.lang.Object
      - Runnable
  - uid: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.run()
    id: run()
    parent: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task
    href: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.yml
    langs:
      - java
    name: run()
    nameWithType: FileUploadTask.run()
    fullName: void com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.run()
    overload: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.run*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/fileupload/FileUploadTask.java
      startLine: 131
    package: com.microsoft.azure.sdk.iot.device.fileupload
    summary: <p><span data-ttu-id="466db-107">実行可能</span><span class="sxs-lookup"><span data-stu-id="466db-107">Runnable</span></span> </p>
    syntax:
      content: public void run()
references:
  - uid: com.microsoft.azure.sdk.iot.device.fileupload._file_upload_task.run*
    name: run
    nameWithType: FileUploadTask.run
    fullName: void com.microsoft.azure.sdk.iot.device.fileupload.FileUploadTask.run
    package: com.microsoft.azure.sdk.iot.device.fileupload
  - uid: com.microsoft.azure.sdk.iot.device._custom_logger
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
    name: CustomLogger
    nameWithType: CustomLogger
    fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
    type: Class
    syntax:
      content: public class CustomLogger
  - uid: com.microsoft.azure.sdk.iot.device._object_lock
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._object_lock.yml
    name: ObjectLock
    nameWithType: ObjectLock
    fullName: com.microsoft.azure.sdk.iot.device.ObjectLock
    type: Class
    summary: <p><span data-ttu-id="466db-108">このクラスは基底クラスの待機のモック作成を有効にし、関数を通知します。</span><span class="sxs-lookup"><span data-stu-id="466db-108">This class enables mocking of the base class wait and notify functions</span></span> </p>
    syntax:
      content: public class ObjectLock
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport_manager.yml
    name: HttpsTransportManager
    nameWithType: HttpsTransportManager
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportManager
    type: Class
    summary: <p><span data-ttu-id="466db-109">Https 用のトランスポート マネージャーの実装です。</span><span class="sxs-lookup"><span data-stu-id="466db-109">Implementation of the transport manager for https.</span></span> </p>
    syntax:
      content: public class HttpsTransportManager
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="466db-110">IoT Hub イベント コールバックのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="466db-110">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="466db-111">このインターフェイスの実装を作成する開発者が必要し、トランスポートが呼び出されます<xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #execute(IotHubStatusCode, Object)</xref> IoT Hub からの応答を受信するとします。</span><span class="sxs-lookup"><span data-stu-id="466db-111">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_status_code
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_status_code.yml
    name: IotHubStatusCode
    nameWithType: IotHubStatusCode
    fullName: com.microsoft.azure.sdk.iot.device.IotHubStatusCode
    type: Enum
    summary: <p><span data-ttu-id="466db-112">IoT Hub ステータス コードの場合は。</span><span class="sxs-lookup"><span data-stu-id="466db-112">An IoT Hub status code.</span></span> <span data-ttu-id="466db-113">デバイスを IoT Hub からのメッセージに含まれています。</span><span class="sxs-lookup"><span data-stu-id="466db-113">Included in a message from an IoT Hub to a device.</span></span> </p>
    syntax:
      content: public enum IotHubStatusCode
  - uid: com.microsoft.azure.sdk.iot.deps.serializer._file_upload_status_parser
    parent: com.microsoft.azure.sdk.iot.deps.serializer
    href: com.microsoft.azure.sdk.iot.deps.serializer._file_upload_status_parser.yml
    name: FileUploadStatusParser
    nameWithType: FileUploadStatusParser
    fullName: com.microsoft.azure.sdk.iot.deps.serializer.FileUploadStatusParser
    type: Class
    summary: '<p><span data-ttu-id="466db-114">Json シリアライザーでファイルのアップロードの 1 つのファイルのステータスの表現。</span><span class="sxs-lookup"><span data-stu-id="466db-114">Representation of the status of a single file for the File Upload, with a Json serializer.</span></span> <span data-ttu-id="466db-115">JSON 形式の Ex: {「correlationId」:"{相関 ID が受信した最初の要求から}"、"isSuccess": bool"statusCode": XXX"statusDescription":"状態の説明"}</span><span class="sxs-lookup"><span data-stu-id="466db-115">Ex of JSON format: { "correlationId": "{correlation ID received from the initial request}", "isSuccess": bool, "statusCode": XXX, "statusDescription": "Description of status" }</span></span> </p>'
    syntax:
      content: public class FileUploadStatusParser