### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base
    id: _service_proxy_base
    parent: microsoft.servicefabric.services.remoting.client
    children:
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI)'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody(Object)
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage(byte [])'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue(Object)
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType()
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient()
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke(int,int,byte [])'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage(Object)
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: ServiceProxyBase
    nameWithType: ServiceProxyBase
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 16
    package: microsoft.servicefabric.services.remoting.client
    summary: <p><span data-ttu-id="2c74a-101">プロキシをリモート IService インターフェイスの基本実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-101">Provides the base implementation for the proxy to the remoted IService interfaces.</span></span> </p>
    syntax:
      content: public class ServiceProxyBase extends ProxyBase implements ServiceProxy
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.remoting.builder._proxy_base
    inheritedMembers:
      - microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
      - microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI)'
    id: 'create(Class<T>,URI)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> serviceInterfaceType, URI serviceUri)'
    nameWithType: 'ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri)'
    fullName: 'static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 23
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'public static static<T extends Service> T create(Class<T> serviceInterfaceType, URI serviceUri)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
        - id: serviceUri
          type: '62304784'
      return:
        type: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    id: 'create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    nameWithType: 'ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    fullName: 'static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 75
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p><span data-ttu-id="2c74a-102">サービスによって実装される TServiceInterface リモート インターフェイスを使用して、指定されたサービスと通信するプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-102">Creates a proxy to communicate to the specified service using the remoted interface TServiceInterface that the service implements.</span></span></p>
      <p></p>
    syntax:
      content: 'public static static<T extends Service> T create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: <p><span data-ttu-id="2c74a-103">リモート処理は実行されているインターフェイスの種類</span><span class="sxs-lookup"><span data-stu-id="2c74a-103">Interface type that is being remoted</span></span> </p>
        - id: serviceUri
          type: '62304784'
          description: <p><span data-ttu-id="2c74a-104">Uri、<xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">サービス</xref>です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-104">Uri of the <xref uid="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false">Service</xref>.</span></span> </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: <p><span data-ttu-id="2c74a-105">サービス パーティションを決定するパーティション キーはこのサービス プロキシからの要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-105">The Partition key that determines which service partition is responsible for handling requests from this service proxy</span></span> </p>
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: <p><span data-ttu-id="2c74a-106">クライアントが接続するどのレプリカまたはサービス パーティションのインスタンスを決定します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-106">Determines which replica or instance of the service partition the client should connect to.</span></span> </p>
        - id: listenerName
          type: '26831127'
          description: '<p><span data-ttu-id="2c74a-107">サービスに 1 つの通信リスナーがある場合、このパラメーターは Optional です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-107">This parameter is Optional if the service has a single communication listener.</span></span> <span data-ttu-id="2c74a-108">サービスのエンドポイントがの形式は {「エンドポイント」: {"Listener1":"Endpoint1"、"Listener2":"Endpoint2"...}}。</span><span class="sxs-lookup"><span data-stu-id="2c74a-108">The endpoints from the service are of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}.</span></span> <span data-ttu-id="2c74a-109">サービスは、複数のエンドポイントを公開するときにこのパラメーターは、リモート通信に使用するには、そのエンドポイントのうちを識別します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-109">When the service exposes multiple endpoints, this parameter identifies which of those endpoints to use for the remoting communication.</span></span></p>'
      return:
        type: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
        description: <p><span data-ttu-id="2c74a-110">リモート処理は実行されているインターフェイスを実装するプロキシ。</span><span class="sxs-lookup"><span data-stu-id="2c74a-110">The proxy that implement the interface that is being remoted.</span></span> <span data-ttu-id="2c74a-111">返されるオブジェクトが実装も<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-111">The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface.</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody(Object)
    id: createRequestMessageBody(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: createRequestMessageBody(Object requestMessageBodyValue)
    nameWithType: ServiceProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 101
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: protected Object createRequestMessageBody(Object requestMessageBodyValue)
      parameters:
        - id: requestMessageBodyValue
          type: '79317049'
      return:
        type: '79317049'
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage(byte [])'
    id: 'deserializeMessage(byte [])'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'deserializeMessage(byte[] msgBodyValue)'
    nameWithType: 'ServiceProxyBase.deserializeMessage(byte[] msgBodyValue)'
    fullName: 'Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.deserializeMessage(byte[] msgBodyValue)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 96
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected Object deserializeMessage(byte[] msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: ccd9418d
      return:
        type: '79317049'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue(Object)
    id: getResponseMessageBodyValue(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getResponseMessageBodyValue(Object responseMessageBody)
    nameWithType: ServiceProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 122
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: protected Object getResponseMessageBodyValue(Object responseMessageBody)
      parameters:
        - id: responseMessageBody
          type: '79317049'
      return:
        type: '79317049'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType()
    id: getServiceInterfaceType()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getServiceInterfaceType()
    nameWithType: ServiceProxyBase.getServiceInterfaceType()
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServiceInterfaceType()
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 33
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p><span data-ttu-id="2c74a-112">リモート処理は実行されているインターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="2c74a-112">The interface type that is being remoted.</span></span></p>
      <p></p>
    syntax:
      content: public Class<?> getServiceInterfaceType()
      return:
        type: a19781f8
        description: "<p><span data-ttu-id=\"2c74a-113\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\">サービス</xref>インターフェイス型です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c74a-113\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\">Service</xref> interface type.</span></span> </p>"
    overridden: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient()
    id: getServicePartitionClient()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getServicePartitionClient()
    nameWithType: ServiceProxyBase.getServicePartitionClient()
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServicePartitionClient()
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 43
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p><span data-ttu-id="2c74a-114">サービスに要求を送信するために使用するサービス パーティションのクライアントです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-114">The service partition client used to send requests to the service.</span></span></p>
      <p></p>
    syntax:
      content: public ServiceRemotingPartitionClient getServicePartitionClient()
      return:
        type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
        description: <p><span data-ttu-id="2c74a-115">によって使用される ServicePartitionClient、 <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-115">ServicePartitionClient used by the <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>.</span></span> </p>
    overridden: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
    id: 'initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    nameWithType: 'ServiceProxyBase.initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    fullName: 'void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 126
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'public void initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
      parameters:
        - id: serviceProxyGenerator
          type: microsoft.servicefabric.services.remoting.builder._service_proxy_generator
        - id: remotingPartitionClient
          type: 2d260c2d
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke(int,int,byte [])'
    id: 'invoke(int,int,byte [])'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    nameWithType: 'ServiceProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    fullName: 'void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 108
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
    id: 'invokeAsync(int,int,byte [],CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    nameWithType: 'ServiceProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 113
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5fe2dfa4
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage(Object)
    id: serializeMessage(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: serializeMessage(Object msgBodyValue)
    nameWithType: ServiceProxyBase.serializeMessage(Object msgBodyValue)
    fullName: 'byte [] microsoft.servicefabric.services.remoting.client.ServiceProxyBase.serializeMessage(Object msgBodyValue)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 91
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected byte [] serializeMessage(Object msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: '79317049'
      return:
        type: ccd9418d
references:
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
    spec.java:
      - name: 'static<T extends '
        fullName: 'static<T extends '
      - uid: microsoft.servicefabric.services.remoting._service
        name: Service
        fullName: microsoft.servicefabric.services.remoting.Service
        href: microsoft.servicefabric.services.remoting._service.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    name: create
    nameWithType: ServiceProxyBase.create
    fullName: static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create
    package: microsoft.servicefabric.services.remoting.client
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType*
    name: getServiceInterfaceType
    nameWithType: ServiceProxyBase.getServiceInterfaceType
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServiceInterfaceType
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient*
    name: getServicePartitionClient
    nameWithType: ServiceProxyBase.getServicePartitionClient
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServicePartitionClient
    package: microsoft.servicefabric.services.remoting.client
  - uid: 2d260c2d
    spec.java:
      - name: ServiceRemotingPartitionClientImpl
        fullName: ServiceRemotingPartitionClientImpl
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize*
    name: initialize
    nameWithType: ServiceProxyBase.initialize
    fullName: void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.initialize
    package: microsoft.servicefabric.services.remoting.client
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage*
    name: serializeMessage
    nameWithType: ServiceProxyBase.serializeMessage
    fullName: 'byte [] microsoft.servicefabric.services.remoting.client.ServiceProxyBase.serializeMessage'
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage*
    name: deserializeMessage
    nameWithType: ServiceProxyBase.deserializeMessage
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.deserializeMessage
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody*
    name: createRequestMessageBody
    nameWithType: ServiceProxyBase.createRequestMessageBody
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.createRequestMessageBody
    package: microsoft.servicefabric.services.remoting.client
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke*
    name: invoke
    nameWithType: ServiceProxyBase.invoke
    fullName: void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invoke
    package: microsoft.servicefabric.services.remoting.client
  - uid: 5fe2dfa4
    spec.java:
      - name: 'CompletableFuture<byte[]>'
        fullName: 'CompletableFuture<byte[]>'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync*
    name: invokeAsync
    nameWithType: ServiceProxyBase.invokeAsync
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invokeAsync'
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue*
    name: getResponseMessageBodyValue
    nameWithType: ServiceProxyBase.getResponseMessageBodyValue
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getResponseMessageBodyValue
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: continueWith(CompletableFuture<Object> future)
    nameWithType: ProxyBase.continueWith(CompletableFuture<Object> future)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object> future)
    type: Method
    summary: <p><span data-ttu-id="2c74a-116">応答本文を取得する値を持たない後も続行する、生成されたプロキシ クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-116">Called by the generated proxy class to continue after getting the response body that does not have value.</span></span> </p>
    syntax:
      content: protected CompletableFuture<?> continueWith(CompletableFuture<Object> future)
      parameters:
        - id: future
          type: 55aa5245
          description: <p><span data-ttu-id="2c74a-117">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>リモート メソッド呼び出しの非同期操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-117">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call.</span></span> </p>
      return:
        type: 16409f84
        description: <p><span data-ttu-id="2c74a-118">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>リモート メソッド呼び出しの非同期操作を表すです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-118">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation for remote method call.</span></span> </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'getReturnValue(int interfaceId, int methodId, Object responseBody)'
    nameWithType: 'ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    fullName: 'abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    type: Method
    summary: <p><span data-ttu-id="2c74a-119">キャスト、応答本文を入力して、値を抽出し、派生クラスによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-119">Implemented by the derived class to type cast the response body and extract the value from it.</span></span> </p>
    syntax:
      content: 'protected abstract Object getReturnValue(int interfaceId, int methodId, Object responseBody)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-120">アクター インターフェイスのインターフェイス Id です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-120">Interface Id for the actor interface.</span></span> </p>
        - id: methodId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-121">アクター メソッドのメソッドの Id。</span><span class="sxs-lookup"><span data-stu-id="2c74a-121">Method Id for the actor method.</span></span> </p>
        - id: responseBody
          type: '79317049'
          description: <p><span data-ttu-id="2c74a-122">応答本文です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-122">Response body.</span></span> </p>
      return:
        type: 1377799a
        description: <p><span data-ttu-id="2c74a-123">戻り値としてのメソッド呼び出しの<xref uid="" data-throw-if-not-resolved="false">オブジェクト</xref>です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-123">Return value of method call as <xref uid="" data-throw-if-not-resolved="false">Object</xref>.</span></span> </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    nameWithType: 'ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    fullName: 'void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    type: Method
    summary: <p><span data-ttu-id="2c74a-124">リモート オブジェクトにメッセージを送信する、生成されたプロキシ クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-124">Called by the generated proxy class to send the message to the remote object.</span></span> </p>
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-125">リモート インターフェイスの id です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-125">Id of the remote interface.</span></span> </p>
        - id: methodId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-126">Invokved するリモート メソッドの id です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-126">Id of the remote method to be invokved.</span></span> </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p><span data-ttu-id="2c74a-127">リモート オブジェクトに送信されるメッセージの本文。</span><span class="sxs-lookup"><span data-stu-id="2c74a-127">Message body to be sent to remote object.</span></span> </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    nameWithType: 'ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    type: Method
    summary: <p><span data-ttu-id="2c74a-128">リモート オブジェクトに要求を送信し、応答を受け取るに生成されたプロキシ クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-128">Called by the generated proxy class to send the request to the remote object and get the response back.</span></span> </p>
    syntax:
      content: 'protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-129">リモート インターフェイスの id です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-129">Id of the remote interface.</span></span> </p>
        - id: methodId
          type: f75371fa
          description: <p><span data-ttu-id="2c74a-130">リモート メソッドを呼び出すの id です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-130">Id of the remote method to be invoked.</span></span> </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p><span data-ttu-id="2c74a-131">要求本文です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-131">Request body.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 55aa5245
        description: <p><span data-ttu-id="2c74a-132">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>リモート オブジェクトに非同期操作の非同期呼び出しを表すです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-132">A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents the asynchronous operation async call to remote object.</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase()
    nameWithType: ProxyBase.ProxyBase()
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
    type: Constructor
    summary: <p><span data-ttu-id="2c74a-133">新しいインスタンスを初期化、 <xref uid="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false">ProxyBase</xref>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-133">Initializes a new instance of the <xref uid="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false">ProxyBase</xref> class.</span></span> </p>
    syntax:
      content: protected ProxyBase()
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase
    nameWithType: ProxyBase
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
    type: Class
    summary: <p><span data-ttu-id="2c74a-134">リモート インターフェイスのプロキシを生成するコード ジェネレーターのリモート処理によって使用される基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-134">The base class used by remoting code generator to generate the proxy for the remoted interfaces.</span></span> </p>
    syntax:
      content: public class ProxyBase
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: ServiceProxy
    nameWithType: ServiceProxy
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
    type: Interface
    summary: <p><span data-ttu-id="2c74a-135">これは、リモート処理の基本のクライアント側インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-135">This is the base Client side interface for Remoting.</span></span> <span data-ttu-id="2c74a-136">フレームワークのリモート処理インフラストラクチャを通じて IService から継承するすべてのサービス コントラクトを提供<xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>と<xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>です。</span><span class="sxs-lookup"><span data-stu-id="2c74a-136">The framework provides the Remoting infrastructure for all the service contracts inheriting from IService through <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> and <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref>.</span></span> </p>
    syntax:
      content: public interface ServiceProxy
  - uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
    name: FabricServiceProxyFactory
    nameWithType: FabricServiceProxyFactory
    fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory
    type: Class
    summary: <p><span data-ttu-id="2c74a-137">指定されたサービスへのリモート通信にプロキシを作成するファクトリを指定します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-137">Specifies the factory that creates proxies for remote communication to the specified service.</span></span> </p>
    syntax:
      content: public class FabricServiceProxyFactory implements ServiceProxyFactory
  - uid: microsoft.servicefabric.services.remoting.builder._service_proxy_generator
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._service_proxy_generator.yml
    name: ServiceProxyGenerator
    nameWithType: ServiceProxyGenerator
    fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
    type: Class
    syntax:
      content: public class ServiceProxyGenerator
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: <p><span data-ttu-id="2c74a-138">これは、サービスのインターフェイスのリモート処理を有効にするためのマーカー インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-138">This is the marker interface for enabling interface Remoting for services.</span></span> <span data-ttu-id="2c74a-139"><xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref>このインターフェイスから派生する、サービスによって実装されたすべてのインターフェイスのリモート処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-139">An <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> provides remoting for all interfaces implemented by the service that derive from this interface.</span></span> <span data-ttu-id="2c74a-140">リモート インターフェイスは、クライアント側プロキシを経由してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-140">The remoted interfaces can be accessed via Proxy on the client side.</span></span> </p>
    syntax:
      content: public interface Service
  - uid: microsoft.servicefabric.services.client._service_partition_key
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_key.yml
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: microsoft.servicefabric.services.client.ServicePartitionKey
    type: Class
    summary: <p><span data-ttu-id="2c74a-141">サービス パーティションに対処するためにキーを定義します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-141">Defines a key to address a service partition.</span></span> </p>
    syntax:
      content: public class ServicePartitionKey
  - uid: microsoft.servicefabric.services.communication.client._target_replica_selector
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._target_replica_selector.yml
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
    type: Enum
    summary: <p><span data-ttu-id="2c74a-142">この列挙体は、どのように、ターゲット レプリカまたはインスタンスを選択する特定のパーティション用の通信チャネルを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-142">This enumeration specifies how the target replica or instance should be chosen when creating a communication channel for a particular partition.</span></span> </p>
    syntax:
      content: public enum TargetReplicaSelector
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: getServiceInterfaceType()
    nameWithType: ServiceProxy.getServiceInterfaceType()
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxy.getServiceInterfaceType()
    type: Method
    summary: |-
      <p><span data-ttu-id="2c74a-143">リモート処理は実行されているインターフェイスの型。</span><span class="sxs-lookup"><span data-stu-id="2c74a-143">The interface type that is being remoted.</span></span></p>
      <p></p>
    syntax:
      content: public Class<?> getServiceInterfaceType()
      return:
        type: a19781f8
        description: "<p><span data-ttu-id=\"2c74a-144\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\">サービス</xref>インターフェイスの種類</span><span class=\"sxs-lookup\"><span data-stu-id=\"2c74a-144\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\">Service</xref> interface type</span></span> </p>"
  - uid: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client.yml
    name: ServiceRemotingPartitionClient
    nameWithType: ServiceRemotingPartitionClient
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingPartitionClient
    type: Interface
    summary: <p><span data-ttu-id="2c74a-145">サービス パーティションの特定のレプリカへのリモート処理経由で通信するクライアントのインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-145">Defines the interface for the client that communicate over remoting to a particular replica of a service partition.</span></span> </p>
    syntax:
      content: public interface ServiceRemotingPartitionClient
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: getServicePartitionClient()
    nameWithType: ServiceProxy.getServicePartitionClient()
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxy.getServicePartitionClient()
    type: Method
    summary: |-
      <p><span data-ttu-id="2c74a-146">サービスに要求を送信するために使用するサービス パーティションのクライアントです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-146">The service partition client used to send requests to the service.</span></span></p>
      <p></p>
    syntax:
      content: public ServiceRemotingPartitionClient getServicePartitionClient()
      return:
        type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
        description: <p><span data-ttu-id="2c74a-147">によって使用される ServicePartitionClient、 <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref></span><span class="sxs-lookup"><span data-stu-id="2c74a-147">ServicePartitionClient used by the <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">ServiceProxy</xref></span></span></p>
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="2c74a-148">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref>操作を取り消す必要がある通知を伝達するために使用します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-148">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="2c74a-149">インスタンス化して、キャンセル トークンを作成する、 <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref>からキャンセル トークンを管理するオブジェクトを取得、 <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2c74a-149">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="2c74a-150">キャンセル トークンをキャンセルの通知を受け取る必要のある操作の任意の数を渡します。</span><span class="sxs-lookup"><span data-stu-id="2c74a-150">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="2c74a-151">取り消しを開始するトークンを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="2c74a-151">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="2c74a-152">所有するオブジェクトを呼び出すと<xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>、キャンセル トークンの取り消されたプロパティの設定を true にします。</span><span class="sxs-lookup"><span data-stu-id="2c74a-152">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="2c74a-153">通知を受信するオブジェクトは、適切な方法で応答できます。</span><span class="sxs-lookup"><span data-stu-id="2c74a-153">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken