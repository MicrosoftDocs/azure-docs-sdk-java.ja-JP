### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.table._table_entity
    id: _table_entity
    parent: com.microsoft.azure.storage.table
    children:
      - com.microsoft.azure.storage.table._table_entity.getEtag()
      - com.microsoft.azure.storage.table._table_entity.getPartitionKey()
      - com.microsoft.azure.storage.table._table_entity.getRowKey()
      - com.microsoft.azure.storage.table._table_entity.getTimestamp()
      - 'com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)'
      - com.microsoft.azure.storage.table._table_entity.setEtag(String)
      - com.microsoft.azure.storage.table._table_entity.setPartitionKey(String)
      - com.microsoft.azure.storage.table._table_entity.setRowKey(String)
      - com.microsoft.azure.storage.table._table_entity.setTimestamp(Date)
      - com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: TableEntity
    nameWithType: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    type: Interface
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 73
    package: com.microsoft.azure.storage.table
    summary: "<p><span data-ttu-id=\"b9395-101\">テーブルのエンティティ型に必要なインターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-101\">An interface required for table entity types.</span></span> <span data-ttu-id=\"b9395-102\"><xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>インターフェイスは、共通のエンティティ プロパティの getter および setter メソッドを宣言し、およびシリアル化と逆シリアル化のプロパティ マップを使用してすべてのエンティティ プロパティのメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-102\">The <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map.</span></span> <span data-ttu-id=\"b9395-103\">実装するクラスを作成する<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>プロパティの格納、取得、シリアル化および逆シリアル化をカスタマイズして、テーブル エンティティの追加のカスタム ロジックを指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-103\">Create classes implementing <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity.</span></span> </p>\n<p><span data-ttu-id=\"b9395-104\">ストレージ クライアント ライブラリには 2 つの実装が含まれています<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>単純なプロパティ アクセスとシリアル化を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-104\">The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that provide for simple property access and serialization:</span></span> </p>\n<p><span data-ttu-id=\"b9395-105\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>実装<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>し格納およびプロパティを取得する単純なプロパティ マップを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-105\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> and provides a simple property map to store and retrieve properties.</span></span> <span data-ttu-id=\"b9395-106\">使用して、 <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>簡単なアクセスのプロパティのサブセットのみを返す場合 (たとえば、クエリの select 句) をエンティティのプロパティまたはの場合、クエリが異なる複数のエンティティ型を返すことができますプロパティ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-106\">Use a <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties.</span></span> <span data-ttu-id=\"b9395-107\">また、この種類を使用する、プロパティ情報を失うことがなく異種エンティティの一括テーブルの更新を実行することができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-107\">You can also use this type to perform bulk table updates of heterogeneous entities without losing property information.</span></span> </p>\n\n<p><span data-ttu-id=\"b9395-108\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の実装は、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>でシリアル化と逆シリアル化をリフレクション ベースで動作を使用する、およびメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-108\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that uses reflection-based serialization and deserialization behavior in its  and  methods.</span></span> <span data-ttu-id=\"b9395-109\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-派生クラスの型と名前付けをシリアル化して自動的に逆シリアル化の規則に従っているメソッドを使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-109\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically.</span></span> </p>\n\n<p><span data-ttu-id=\"b9395-110\">実装するクラス<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>活用できる、自動リフレクション ベースのシリアル化および逆シリアル化の動作で<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>で静的メソッドを呼び出すことによって、 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-110\">Any class that implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> by invoking the static methods  in  and  in .</span></span> <span data-ttu-id=\"b9395-111\">クラスは、シリアル化しても、自動的に逆シリアル化するには、型および名前付け規則に従うメソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-111\">The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically.</span></span> <span data-ttu-id=\"b9395-112\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-112\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"b9395-113\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-113\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-114\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-114\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-115\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-115\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"b9395-116\">クラスの説明の表を参照して<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> Java 対応するプロパティの型のマップ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-116\">See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"b9395-117\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-117\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"b9395-118\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-118\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"b9395-119\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-119\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"b9395-120\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>リフレクション メソッドを使用して、サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-120\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass that uses the reflection methods.</span></span> </p>\n<p></p>"
    syntax: &ref_1
      content: public interface TableEntity
    see:
      - type: com.microsoft.azure.storage.table._table_service_entity
        description: <span data-ttu-id="b9395-121">TableServiceEntity</span><span class="sxs-lookup"><span data-stu-id="b9395-121">TableServiceEntity</span></span>
      - type: com.microsoft.azure.storage.table._dynamic_table_entity
        description: <span data-ttu-id="b9395-122">DynamicTableEntity</span><span class="sxs-lookup"><span data-stu-id="b9395-122">DynamicTableEntity</span></span>
  - uid: com.microsoft.azure.storage.table._table_entity.getEtag()
    id: getEtag()
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: getEtag()
    nameWithType: TableEntity.getEtag()
    fullName: String com.microsoft.azure.storage.table.TableEntity.getEtag()
    overload: com.microsoft.azure.storage.table._table_entity.getEtag*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 82
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-123">エンティティのことを確認する ETag 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-123">Gets the ETag value to verify for the entity.</span></span> <span data-ttu-id="b9395-124">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-124">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="b9395-125">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="b9395-125">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public String getEtag()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-126">A<code>String</code>エンティティの ETag を表します。</span><span class="sxs-lookup"><span data-stu-id="b9395-126">A <code>String</code> which represents the ETag for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.getPartitionKey()
    id: getPartitionKey()
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: getPartitionKey()
    nameWithType: TableEntity.getPartitionKey()
    fullName: String com.microsoft.azure.storage.table.TableEntity.getPartitionKey()
    overload: com.microsoft.azure.storage.table._table_entity.getPartitionKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 90
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-127">エンティティの PartitionKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-127">Gets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getPartitionKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-128">A<code>String</code>エンティティの PartitionKey 値を表します。</span><span class="sxs-lookup"><span data-stu-id="b9395-128">A <code>String</code> which represents the PartitionKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.getRowKey()
    id: getRowKey()
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: getRowKey()
    nameWithType: TableEntity.getRowKey()
    fullName: String com.microsoft.azure.storage.table.TableEntity.getRowKey()
    overload: com.microsoft.azure.storage.table._table_entity.getRowKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 98
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-129">エンティティの RowKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-129">Gets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getRowKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-130">A<code>String</code>エンティティの RowKey 値を表します。</span><span class="sxs-lookup"><span data-stu-id="b9395-130">A <code>String</code> which represents the RowKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.getTimestamp()
    id: getTimestamp()
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: getTimestamp()
    nameWithType: TableEntity.getTimestamp()
    fullName: Date com.microsoft.azure.storage.table.TableEntity.getTimestamp()
    overload: com.microsoft.azure.storage.table._table_entity.getTimestamp*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 106
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-131">エンティティのタイムスタンプを取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-131">Gets the Timestamp for the entity.</span></span> <span data-ttu-id="b9395-132">サーバーでは、変更することはできません、タイムスタンプの値を管理します。</span><span class="sxs-lookup"><span data-stu-id="b9395-132">The server manages the value of Timestamp, which cannot be modified.</span></span></p>
      <p></p>
    syntax:
      content: public Date getTimestamp()
      return:
        type: '12977444'
        description: <p><span data-ttu-id="b9395-133">A<code>java.util.Date</code>エンティティのタイムスタンプ値を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-133">A <code>java.util.Date</code> object which represents the Timestamp value for the entity.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)'
    id: 'readEntity(HashMap<String, EntityProperty>,OperationContext)'
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: 'readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    nameWithType: 'TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    fullName: 'void com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    overload: com.microsoft.azure.storage.table._table_entity.readEntity*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 121
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-134">実装するオブジェクトのインスタンスは追加<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>プロパティ名のマップを表す指定されたプロパティのパラメーターを使用して<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値。</span><span class="sxs-lookup"><span data-stu-id="b9395-134">Populates an instance of the object implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> using the specified properties parameter, which represents a map of  property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values.</span></span></p>
      <p></p>
    syntax:
      content: 'public void readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
      parameters:
        - id: properties
          type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="b9395-135"><code>java.util.HashMap</code>の<code>String</code>に<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値を使用してテーブル エンティティ インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b9395-135">The <code>java.util.HashMap</code> of <code>String</code> to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to use to populate the table entity instance.</span></span> </p>
        - id: opContext
          type: com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-136"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-136">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: <p><span data-ttu-id="b9395-137">場合は、操作中にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="b9395-137">If an error occurs during the operation.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.setEtag(String)
    id: setEtag(String)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: setEtag(String etag)
    nameWithType: TableEntity.setEtag(String etag)
    fullName: void com.microsoft.azure.storage.table.TableEntity.setEtag(String etag)
    overload: com.microsoft.azure.storage.table._table_entity.setEtag*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 131
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-138">エンティティのことを確認する ETag 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-138">Sets the ETag value to verify for the entity.</span></span> <span data-ttu-id="b9395-139">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-139">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="b9395-140">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="b9395-140">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public void setEtag(String etag)
      parameters:
        - id: etag
          type: '26831127'
          description: <p><span data-ttu-id="b9395-141">A<code>String</code>エンティティに設定する ETag を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-141">A <code>String</code> which specifies the ETag to set for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.setPartitionKey(String)
    id: setPartitionKey(String)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: setPartitionKey(String partitionKey)
    nameWithType: TableEntity.setPartitionKey(String partitionKey)
    fullName: void com.microsoft.azure.storage.table.TableEntity.setPartitionKey(String partitionKey)
    overload: com.microsoft.azure.storage.table._table_entity.setPartitionKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 139
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-142">エンティティの PartitionKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-142">Sets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setPartitionKey(String partitionKey)
      parameters:
        - id: partitionKey
          type: '26831127'
          description: <p><span data-ttu-id="b9395-143">A<code>String</code>エンティティに設定する PartitionKey 値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-143">A <code>String</code> which specifies the PartitionKey value to set for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.setRowKey(String)
    id: setRowKey(String)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: setRowKey(String rowKey)
    nameWithType: TableEntity.setRowKey(String rowKey)
    fullName: void com.microsoft.azure.storage.table.TableEntity.setRowKey(String rowKey)
    overload: com.microsoft.azure.storage.table._table_entity.setRowKey*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 147
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-144">エンティティの RowKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-144">Sets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setRowKey(String rowKey)
      parameters:
        - id: rowKey
          type: '26831127'
          description: <p><span data-ttu-id="b9395-145">A<code>String</code>エンティティに設定する RowKey 値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-145">A <code>String</code> which specifies the RowKey value to set for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.setTimestamp(Date)
    id: setTimestamp(Date)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: setTimestamp(Date timeStamp)
    nameWithType: TableEntity.setTimestamp(Date timeStamp)
    fullName: void com.microsoft.azure.storage.table.TableEntity.setTimestamp(Date timeStamp)
    overload: com.microsoft.azure.storage.table._table_entity.setTimestamp*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 156
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-146">エンティティのタイムスタンプ値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-146">Sets the Timestamp value for the entity.</span></span> <span data-ttu-id="b9395-147">そのタイムスタンプは、サービスで読み取り専用プロパティであり、ユーザーによっては設定しないでに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b9395-147">Note that timestamp is a read-only property on the service and should not be set by the user.</span></span></p>
      <p></p>
    syntax:
      content: public void setTimestamp(Date timeStamp)
      parameters:
        - id: timeStamp
          type: '12977444'
          description: <p><span data-ttu-id="b9395-148">A<code>java.util.Date</code>エンティティに設定するタイムスタンプ値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-148">A <code>java.util.Date</code> which specifies the Timestamp value to set for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
    id: writeEntity(OperationContext)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    langs:
      - java
    name: writeEntity(OperationContext opContext)
    nameWithType: TableEntity.writeEntity(OperationContext opContext)
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext opContext)'
    overload: com.microsoft.azure.storage.table._table_entity.writeEntity*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableEntity.java
      startLine: 172
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="b9395-149">プロパティ名のマップを返します<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型のテーブル エンティティ インスタンスのシリアル化されたコンテンツを表す値です。</span><span class="sxs-lookup"><span data-stu-id="b9395-149">Returns a map of  property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values that represents the serialized content of the table entity instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> writeEntity(OperationContext opContext)'
      parameters:
        - id: opContext
          type: com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-150"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-150">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="b9395-151">A<code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型のテーブル エンティティのプロパティを表す値です。</span><span class="sxs-lookup"><span data-stu-id="b9395-151">A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values representing the properties of the table entity.</span></span></p>
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: <p><span data-ttu-id="b9395-152">場合は、操作中にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="b9395-152">If an error occurs during the operation.</span></span> </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.storage.table._table_entity.getEtag*
    name: getEtag
    nameWithType: TableEntity.getEtag
    fullName: String com.microsoft.azure.storage.table.TableEntity.getEtag
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.getPartitionKey*
    name: getPartitionKey
    nameWithType: TableEntity.getPartitionKey
    fullName: String com.microsoft.azure.storage.table.TableEntity.getPartitionKey
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.getRowKey*
    name: getRowKey
    nameWithType: TableEntity.getRowKey
    fullName: String com.microsoft.azure.storage.table.TableEntity.getRowKey
    package: com.microsoft.azure.storage.table
  - uid: '12977444'
    spec.java:
      - name: Date
        fullName: Date
  - uid: com.microsoft.azure.storage.table._table_entity.getTimestamp*
    name: getTimestamp
    nameWithType: TableEntity.getTimestamp
    fullName: Date com.microsoft.azure.storage.table.TableEntity.getTimestamp
    package: com.microsoft.azure.storage.table
  - uid: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
    spec.java:
      - name: 'HashMap<String, '
        fullName: 'HashMap<String, '
      - uid: com.microsoft.azure.storage.table._entity_property
        name: EntityProperty
        fullName: com.microsoft.azure.storage.table.EntityProperty
        href: com.microsoft.azure.storage.table._entity_property.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.storage.table._table_entity.readEntity*
    name: readEntity
    nameWithType: TableEntity.readEntity
    fullName: void com.microsoft.azure.storage.table.TableEntity.readEntity
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.setEtag*
    name: setEtag
    nameWithType: TableEntity.setEtag
    fullName: void com.microsoft.azure.storage.table.TableEntity.setEtag
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.setPartitionKey*
    name: setPartitionKey
    nameWithType: TableEntity.setPartitionKey
    fullName: void com.microsoft.azure.storage.table.TableEntity.setPartitionKey
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.setRowKey*
    name: setRowKey
    nameWithType: TableEntity.setRowKey
    fullName: void com.microsoft.azure.storage.table.TableEntity.setRowKey
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.setTimestamp*
    name: setTimestamp
    nameWithType: TableEntity.setTimestamp
    fullName: void com.microsoft.azure.storage.table.TableEntity.setTimestamp
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_entity.writeEntity*
    name: writeEntity
    nameWithType: TableEntity.writeEntity
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableEntity.writeEntity'
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_service_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: TableServiceEntity
    nameWithType: TableServiceEntity
    fullName: com.microsoft.azure.storage.table.TableServiceEntity
    type: Class
    summary: "<p><span data-ttu-id=\"b9395-153\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>クラスは、ストレージ サービス内のテーブル エンティティの基本オブジェクト型を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-153\">The <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> class represents the base object type for a table entity in the Storage service.</span></span> <span data-ttu-id=\"b9395-154\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の基本実装を提供、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>を提供するインターフェイスとメソッドを既定ではおよびリフレクションを使用してすべてのプロパティを逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-154\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> provides a base implementation for the <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection.</span></span> <span data-ttu-id=\"b9395-155\">テーブル エンティティ クラスがこのクラスを拡張し、オーバーライド、および提供するメソッドをカスタマイズしたかより多くのパフォーマンスの高いシリアル化ロジック。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-155\">A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic.</span></span> </p>\n<p><span data-ttu-id=\"b9395-156\">リフレクションの使用によりのサブクラス<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>シリアル化を実装することがなく逆シリアル化およびシリアル化のコードそのものです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-156\">The use of reflection allows subclasses of <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> to be serialized and deserialized without having to implement the serialization code themselves.</span></span> <span data-ttu-id=\"b9395-157\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-157\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"b9395-158\">活用するために、自動のシリアル化コード、テーブル エンティティ クラスは、対応するテーブル内のエンティティ Microsoft Azure テーブル ストレージ内の各プロパティの getter および setter メソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-158\">To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage.</span></span> <span data-ttu-id=\"b9395-159\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-159\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-160\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-160\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-161\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-161\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"b9395-162\">Java 対応するプロパティの型のマップは、次の表を参照してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-162\">See the table below for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"b9395-163\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-163\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"b9395-164\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-164\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"b9395-165\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-165\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"b9395-166\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-166\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass.</span></span> </p>\n<p><span data-ttu-id=\"b9395-167\">次の表は、Microsoft Azure ストレージでサポートされているプロパティのデータ型と逆シリアル化したときに、対応する Java 型を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-167\">The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized.</span></span> <table rows=\"9\" cols=\"4\"><row><entry thead=\"yes\"><p><span data-ttu-id=\"b9395-168\">ストレージの種類</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-168\">Storage Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"b9395-169\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>値</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-169\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> Value</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"b9395-170\">Java の型</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-170\">Java Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"b9395-171\">説明</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-171\">Description</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-172\"><b>Edm.Binary</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-172\"><b>Edm.Binary</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-173\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType #BINARY</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-173\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType#BINARY</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-174\">バイト配列のサイズは最大 64 KB です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-174\">An array of bytes up to 64 KB in size.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-175\"><b>Edm.Boolean</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-175\"><b>Edm.Boolean</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-176\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType #BOOLEAN</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-176\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType#BOOLEAN</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-177\">ブール値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-177\">A Boolean value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-178\"><b>Edm.DateTime</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-178\"><b>Edm.DateTime</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-179\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType # 日付 _ 時刻</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-179\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType#DATE_TIME</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-180\">世界協定時刻 (UTC) を表す 64 ビット値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-180\">A 64-bit value expressed as Coordinated Universal Time (UTC).</span></span> <span data-ttu-id=\"b9395-181\">サポートされている範囲は、西暦 1601 年 1 月 1 日深夜 12時 00分から始まります</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-181\">The supported range begins from 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id=\"b9395-182\">始まります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-182\">(C.E.), UTC.</span></span> <span data-ttu-id=\"b9395-183\">この範囲は 9999 年 12 月 31 日に終了します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-183\">The range ends at December 31, 9999.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-184\"><b>Edm.Double</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-184\"><b>Edm.Double</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-185\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType #DOUBLE</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-185\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType#DOUBLE</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-186\">64 ビット倍精度浮動小数点値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-186\">A 64-bit double-precision floating point value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-187\"><b>Edm.Guid</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-187\"><b>Edm.Guid</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-188\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType #GUID</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-188\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType#GUID</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-189\">グローバルで一意となる 128 ビットの識別子。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-189\">A 128-bit globally unique identifier.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-190\"><b>Edm.Int32</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-190\"><b>Edm.Int32</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-191\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType # INT32</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-191\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType#INT32</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-192\">32 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-192\">A 32-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-193\"><b>Edm.Int64</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-193\"><b>Edm.Int64</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-194\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType # INT64</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-194\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType#INT64</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-195\">64 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-195\">A 64-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"b9395-196\"><b>Edm.String</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-196\"><b>Edm.String</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-197\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType #STRING</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-197\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType#STRING</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"b9395-198\">UTF-16 エンコードの値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-198\">A UTF-16-encoded value.</span></span> <span data-ttu-id=\"b9395-199\">文字列値には、最大 64 KB の可能性があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-199\">String values may be up to 64 KB in size.</span></span>  </p></entry></row></table></p>\n<p><span data-ttu-id=\"b9395-200\">MSDN のトピックを参照してください<ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">テーブル サービス データ モデルについて</ulink>テーブル、エンティティ、および Microsoft Azure ストレージ サービスで使用されているプロパティの概要についてはします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-200\">See the MSDN topic <ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">Understanding the Table Service Data Model</ulink> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service.</span></span> </p>\n<p><span data-ttu-id=\"b9395-201\">使用できる EDM プリミティブ データ型と名前の概要については、次を参照してください、。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-201\">For an overview of the available EDM primitive data types and names, see the</span></span></p>\n<p><span data-ttu-id=\"b9395-202\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">プリミティブ データ型</ulink>のセクションで、 <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData プロトコルの概要</ulink>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-202\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</ulink> section of the <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</ulink>.</span></span> </p>\n\n<p></p>"
    syntax:
      content: public class TableServiceEntity
  - uid: com.microsoft.azure.storage.table._table_service_entity.getEtag()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getEtag()
    nameWithType: TableServiceEntity.getEtag()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-203">エンティティのことを確認する ETag 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-203">Gets the ETag value to verify for the entity.</span></span> <span data-ttu-id="b9395-204">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-204">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="b9395-205">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="b9395-205">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public String getEtag()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-206">A<code>String</code>エンティティの ETag が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9395-206">A <code>String</code> containing the ETag for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getPartitionKey()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getPartitionKey()
    nameWithType: TableServiceEntity.getPartitionKey()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-207">エンティティの PartitionKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-207">Gets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getPartitionKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-208">A<code>String</code>エンティティの PartitionKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="b9395-208">A <code>String</code> containing the PartitionKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getRowKey()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getRowKey()
    nameWithType: TableServiceEntity.getRowKey()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-209">エンティティの RowKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-209">Gets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getRowKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="b9395-210">A<code>String</code>エンティティの RowKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="b9395-210">A <code>String</code> containing the RowKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getTimestamp()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getTimestamp()
    nameWithType: TableServiceEntity.getTimestamp()
    fullName: Date com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-211">エンティティのタイムスタンプを取得します。</span><span class="sxs-lookup"><span data-stu-id="b9395-211">Gets the Timestamp for the entity.</span></span> <span data-ttu-id="b9395-212">サーバーでは、変更することはできません、タイムスタンプの値を管理します。</span><span class="sxs-lookup"><span data-stu-id="b9395-212">The server manages the value of Timestamp, which cannot be modified.</span></span></p>
      <p></p>
    syntax:
      content: public Date getTimestamp()
      return:
        type: '12977444'
        description: <p><span data-ttu-id="b9395-213">A<code>java.util.Date</code>エンティティのタイムスタンプ値を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-213">A <code>java.util.Date</code> object which represents the Timestamp value for the entity.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    name: 'readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    nameWithType: 'DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    fullName: 'void com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-214">これは追加<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンスに対するプロパティ名の指定したマップを使用して<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値。</span><span class="sxs-lookup"><span data-stu-id="b9395-214">Populates this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance using the specified map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values.</span></span></p>
      <p></p>
    syntax:
      content: 'public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
      parameters:
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="b9395-215"><code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値がこれに格納する<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b9395-215">The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to store in this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-216"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-216">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._table_service_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)'
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: 'readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    nameWithType: 'TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    fullName: 'void com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-217">プロパティ名のマップを使用してこのテーブル エンティティ インスタンスを追加<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値。</span><span class="sxs-lookup"><span data-stu-id="b9395-217">Populates this table entity instance using the map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values.</span></span> </p>
      <p><span data-ttu-id="b9395-218">このメソッドを呼び出して<xref uid="com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap&lt;String, EntityProperty&gt;,final OperationContext)" data-throw-if-not-resolved="false">TableServiceEntity #readEntityWithReflection</xref>メソッドは、リフレクションを使用してテーブル エンティティ インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b9395-218">This method invokes <xref uid="com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap&lt;String, EntityProperty&gt;,final OperationContext)" data-throw-if-not-resolved="false">TableServiceEntity#readEntityWithReflection</xref> to populate the table entity instance the method is called on using reflection.</span></span> <span data-ttu-id="b9395-219">テーブルのエンティティ クラスを拡張する<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> Microsoft Azure のストレージ クラスで、テーブル エンティティの特定のプロパティの getter および setter メソッドを実装することによってこの動作の利点を活かすを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b9395-219">Table entity classes that extend <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents.</span></span> </p>
      <p><span data-ttu-id="b9395-220">このメソッドを拡張するクラスでオーバーライド<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>をカスタムのシリアル化コードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b9395-220">Override this method in classes that extend <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to invoke custom serialization code.</span></span></p>
      <p></p>
    syntax:
      content: 'public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
      parameters:
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="b9395-221"><code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ値を逆シリアル化し、このテーブル エンティティ インスタンスに格納します。</span><span class="sxs-lookup"><span data-stu-id="b9395-221">The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data values to deserialize and store in this table entity instance.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-222"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-222">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._entity_property
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._entity_property.yml
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    type: Class
    summary: "<p><span data-ttu-id=\"b9395-223\">テーブル エンティティの単一の型指定されたプロパティ値を表すクラス。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-223\">A class which represents a single typed property value in a table entity.</span></span> <span data-ttu-id=\"b9395-224\"><xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>ストアのデータ型として、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-224\">An <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>.</span></span> <span data-ttu-id=\"b9395-225\">可能性のあるオブジェクトの型がプリミティブ型ではなく、値がシリアル化およびとして格納されている、します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-225\">The value, which may be  for object types, but not for primitive types, is serialized and stored as a .</span></span> </p>\n<p><span data-ttu-id=\"b9395-226\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>のサポートされている値の型のオーバー ロードされたコンス トラクターとメソッドのオーバー ロードを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-226\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> provides overloaded constructors and overloads of the  method for supported value types.</span></span> <span data-ttu-id=\"b9395-227\">コンス トラクターまたはメソッドのセットの各オーバー ロードされた、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>とパラメーターの型に基づいて、適切な値をシリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-227\">Each overloaded constructor or  method sets the <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> and serializes the value appropriately based on the parameter type.</span></span> </p>\n\n<p><span data-ttu-id=\"b9395-228\">いずれかを使用して、<em>型</em>逆シリアル化する方法、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>として適切な Java の型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-228\">Use one of the <em>Type</em> methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as the appropriate Java type.</span></span> <span data-ttu-id=\"b9395-229\">メソッドがスローされます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref>場合、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> Java の型として逆シリアル化することはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-229\">The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> if the <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> cannot be deserialized as the Java type.</span></span> </p>"
    syntax:
      content: public class EntityProperty
  - uid: com.microsoft.azure.storage._operation_context
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._operation_context.yml
    name: OperationContext
    nameWithType: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    type: Class
    summary: <p><span data-ttu-id="b9395-230">現在の論理演算を表します。</span><span class="sxs-lookup"><span data-stu-id="b9395-230">Represents the current logical operation.</span></span> <span data-ttu-id="b9395-231">論理操作では、複数の個別の物理的な要求と一対多リレーションシップがあります。</span><span class="sxs-lookup"><span data-stu-id="b9395-231">A logical operation may have a one-to-many relationship with multiple individual physical requests.</span></span> </p>
    syntax:
      content: public class OperationContext
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p><span data-ttu-id="b9395-232">Microsoft Azure ストレージ サービスの例外を表します。</span><span class="sxs-lookup"><span data-stu-id="b9395-232">Represents an exception for the Microsoft Azure storage service.</span></span> </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.table._table_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_entity.yml
    name: TableEntity
    nameWithType: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    type: Interface
    summary: "<p><span data-ttu-id=\"b9395-233\">テーブルのエンティティ型に必要なインターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-233\">An interface required for table entity types.</span></span> <span data-ttu-id=\"b9395-234\"><xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>インターフェイスは、共通のエンティティ プロパティの getter および setter メソッドを宣言し、およびシリアル化と逆シリアル化のプロパティ マップを使用してすべてのエンティティ プロパティのメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-234\">The <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map.</span></span> <span data-ttu-id=\"b9395-235\">実装するクラスを作成する<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>プロパティの格納、取得、シリアル化および逆シリアル化をカスタマイズして、テーブル エンティティの追加のカスタム ロジックを指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-235\">Create classes implementing <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity.</span></span> </p>\n<p><span data-ttu-id=\"b9395-236\">ストレージ クライアント ライブラリには 2 つの実装が含まれています<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>単純なプロパティ アクセスとシリアル化を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-236\">The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that provide for simple property access and serialization:</span></span> </p>\n<p><span data-ttu-id=\"b9395-237\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>実装<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>し格納およびプロパティを取得する単純なプロパティ マップを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-237\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> and provides a simple property map to store and retrieve properties.</span></span> <span data-ttu-id=\"b9395-238\">使用して、 <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>簡単なアクセスのプロパティのサブセットのみを返す場合 (たとえば、クエリの select 句) をエンティティのプロパティまたはの場合、クエリが異なる複数のエンティティ型を返すことができますプロパティ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-238\">Use a <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties.</span></span> <span data-ttu-id=\"b9395-239\">また、この種類を使用する、プロパティ情報を失うことがなく異種エンティティの一括テーブルの更新を実行することができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-239\">You can also use this type to perform bulk table updates of heterogeneous entities without losing property information.</span></span> </p>\n\n<p><span data-ttu-id=\"b9395-240\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の実装は、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>でシリアル化と逆シリアル化をリフレクション ベースで動作を使用する、およびメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-240\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that uses reflection-based serialization and deserialization behavior in its  and  methods.</span></span> <span data-ttu-id=\"b9395-241\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-派生クラスの型と名前付けをシリアル化して自動的に逆シリアル化の規則に従っているメソッドを使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-241\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically.</span></span> </p>\n\n<p><span data-ttu-id=\"b9395-242\">実装するクラス<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>活用できる、自動リフレクション ベースのシリアル化および逆シリアル化の動作で<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>で静的メソッドを呼び出すことによって、 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-242\">Any class that implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> by invoking the static methods  in  and  in .</span></span> <span data-ttu-id=\"b9395-243\">クラスは、シリアル化しても、自動的に逆シリアル化するには、型および名前付け規則に従うメソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-243\">The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically.</span></span> <span data-ttu-id=\"b9395-244\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-244\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"b9395-245\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-245\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-246\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-246\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"b9395-247\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-247\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"b9395-248\">クラスの説明の表を参照して<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> Java 対応するプロパティの型のマップ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-248\">See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"b9395-249\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-249\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"b9395-250\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-250\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"b9395-251\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-251\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"b9395-252\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>リフレクション メソッドを使用して、サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"b9395-252\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass that uses the reflection methods.</span></span> </p>\n<p></p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.table._table_service_entity.setEtag(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setEtag(final String etag)
    nameWithType: TableServiceEntity.setEtag(final String etag)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String etag)
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-253">エンティティのことを確認する ETag 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-253">Sets the ETag value to verify for the entity.</span></span> <span data-ttu-id="b9395-254">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-254">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="b9395-255">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="b9395-255">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public void setEtag(final String etag)
      parameters:
        - id: etag
          type: 3d93591e
          description: <p><span data-ttu-id="b9395-256">A<code>String</code>エンティティの ETag が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9395-256">A <code>String</code> containing the ETag for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setPartitionKey(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setPartitionKey(final String partitionKey)
    nameWithType: TableServiceEntity.setPartitionKey(final String partitionKey)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String partitionKey)
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-257">エンティティの PartitionKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-257">Sets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setPartitionKey(final String partitionKey)
      parameters:
        - id: partitionKey
          type: 3d93591e
          description: <p><span data-ttu-id="b9395-258">A<code>String</code>エンティティの PartitionKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="b9395-258">A <code>String</code> containing the PartitionKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setRowKey(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setRowKey(final String rowKey)
    nameWithType: TableServiceEntity.setRowKey(final String rowKey)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String rowKey)
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-259">エンティティの RowKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-259">Sets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setRowKey(final String rowKey)
      parameters:
        - id: rowKey
          type: 3d93591e
          description: <p><span data-ttu-id="b9395-260">A<code>String</code>エンティティの RowKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="b9395-260">A <code>String</code> containing the RowKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setTimestamp(final Date)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setTimestamp(final Date timeStamp)
    nameWithType: TableServiceEntity.setTimestamp(final Date timeStamp)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date timeStamp)
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-261">エンティティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-261">Sets the  value for the entity.</span></span> <span data-ttu-id="b9395-262">タイムスタンプ プロパティ、サービスでのみ設定、読み取り専用プロパティであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b9395-262">Note that the timestamp property is a read-only property, set by the service only.</span></span></p>
      <p></p>
    syntax:
      content: public void setTimestamp(final Date timeStamp)
      parameters:
        - id: timeStamp
          type: 970a8f17
          description: <p><span data-ttu-id="b9395-263">A<code>java.util.Date</code>を含む、<code>timeStamp</code>エンティティの値。</span><span class="sxs-lookup"><span data-stu-id="b9395-263">A <code>java.util.Date</code> containing the <code>timeStamp</code> value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity(final OperationContext)
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    name: writeEntity(final OperationContext opContext)
    nameWithType: DynamicTableEntity.writeEntity(final OperationContext opContext)
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-264">プロパティ名のマップを返します<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>これからのデータ値<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b9395-264">Returns the map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data values from this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)'
      parameters:
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-265"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-265">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="b9395-266">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値がこれに格納されている<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b9395-266">A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values stored in this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.writeEntity(final OperationContext)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: writeEntity(final OperationContext opContext)
    nameWithType: TableServiceEntity.writeEntity(final OperationContext opContext)
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-267">プロパティ名のマップを返します<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データは、このテーブル エンティティ インスタンスをシリアル化によって作成された値を入力します。</span><span class="sxs-lookup"><span data-stu-id="b9395-267">Returns a map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values created by serializing this table entity instance.</span></span> </p>
      <p><span data-ttu-id="b9395-268">このメソッドを呼び出して<xref uid="com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)" data-throw-if-not-resolved="false">writeEntityWithReflection</xref>メソッドは、リフレクションを使用してテーブル エンティティ インスタンスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-268">This method invokes <xref uid="com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)" data-throw-if-not-resolved="false">writeEntityWithReflection</xref> to serialize the table entity instance the method is called on using reflection.</span></span> <span data-ttu-id="b9395-269">テーブルのエンティティ クラスを拡張する<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> Microsoft Azure のストレージ クラスで、テーブル エンティティの特定のプロパティの getter および setter メソッドを実装することによってこの動作の利点を活かすを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b9395-269">Table entity classes that extend <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents.</span></span> <span data-ttu-id="b9395-270">プロパティ名は予約されており、場合は無視されます"PartitionKey"、"RowKey"と"Timestamp"の設定を持つ他のメソッドに注意してください、 <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref>注釈。</span><span class="sxs-lookup"><span data-stu-id="b9395-270">Note that the property names "PartitionKey", "RowKey", and "Timestamp" are reserved and will be ignored if set on other methods with the <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref> annotation.</span></span> </p>
      <p><span data-ttu-id="b9395-271">このメソッドを拡張するクラスでオーバーライド<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>をカスタムのシリアル化コードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b9395-271">Override this method in classes that extend <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to invoke custom serialization code.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)'
      parameters:
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-272"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-272">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span> </p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="b9395-273">A<code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データは、このテーブル エンティティ インスタンスからシリアル化のプロパティを表す値を入力します。</span><span class="sxs-lookup"><span data-stu-id="b9395-273">A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values representing the properties serialized from this table entity instance.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    name: DynamicTableEntity
    nameWithType: DynamicTableEntity
    fullName: com.microsoft.azure.storage.table.DynamicTableEntity
    type: Class
    summary: <p><span data-ttu-id="b9395-274">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>呼び出し元のエンティティのプロパティ マップに直接アクセスを許可する型。</span><span class="sxs-lookup"><span data-stu-id="b9395-274">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> type which allows callers direct access to the property map of the entity.</span></span> <span data-ttu-id="b9395-275">このクラスは拡張<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>をシリアル化と逆シリアル化のリフレクションの使用を排除します。</span><span class="sxs-lookup"><span data-stu-id="b9395-275">This class extends <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to eliminate the use of reflection for serialization and deserialization.</span></span> </p>
    syntax:
      content: public class DynamicTableEntity extends TableServiceEntity
  - uid: 'com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)'
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: 'readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    nameWithType: 'TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    fullName: 'static void com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-276">リフレクションを使用して、指定したオブジェクトのインスタンスには、テーブル エンティティのプロパティ マップを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-276">Deserializes the table entity property map into the specified object instance using reflection.</span></span> </p>
      <p><span data-ttu-id="b9395-277">この静的メソッドは、テーブル エンティティの種類を表し、そのクラス型でリフレクションを使用して、インスタンスに、プロパティ マップからのデータを逆シリアル化するメソッドを検索するオブジェクト インスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b9395-277">This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to deserialize the data from the property map into the instance.</span></span> </p>
      <p><span data-ttu-id="b9395-278">プロパティ マップの各プロパティ名とデータ型は、シリアル化および逆シリアル化に使用するメソッドを get アクセス操作子および set アクセス操作子のペアのクラス型のメソッドと比較されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-278">Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization.</span></span> <span data-ttu-id="b9395-279">プロパティに一致する名前を持つメソッド名は"get"、および"set"が付加される、またはクラスがスキャンされて、 <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref>注釈、プロパティ名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-279">The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref> annotation set with the property name.</span></span> <span data-ttu-id="b9395-280">メソッドは、戻り値の型またはパラメーターのデータ型の対応するデータ型に一致する必要があります<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>値。</span><span class="sxs-lookup"><span data-stu-id="b9395-280">The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> value.</span></span> <span data-ttu-id="b9395-281">このようなペアが見つかった場合、データは、インスタンスで set アクセス操作子メソッドを呼び出すことによって、インスタンスのオブジェクトにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b9395-281">If such a pair is found, the data is copied into the instance object by invoking the setter method on the instance.</span></span> <span data-ttu-id="b9395-282">名前とデータ型でメソッドのペアに一致しないプロパティはコピーされません。</span><span class="sxs-lookup"><span data-stu-id="b9395-282">Properties that do not match a method pair by name and data type are not copied.</span></span></p>
      <p></p>
    syntax:
      content: 'public static void readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
      parameters:
        - id: instance
          type: 1b60ba29
          description: <p><span data-ttu-id="b9395-283"><code>Object</code>実装するクラスのインスタンスへの参照を<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>内にテーブル エンティティ データを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-283">An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to deserialize the table entity data into.</span></span> </p>
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="b9395-284">A<code>java.util.HashMap</code>オブジェクトにマップする<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>インスタンス パラメーター オブジェクトに逆シリアル化する型指定されたデータ値を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-284">A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> objects containing typed data values to deserialize into the instance parameter object.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="b9395-285"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>を現在の操作コンテキストを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-285">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation.</span></span></p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: writeEntityWithReflection(final Object instance)
    nameWithType: TableServiceEntity.writeEntityWithReflection(final Object instance)
    fullName: 'static HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object instance)'
    type: Method
    summary: |-
      <p><span data-ttu-id="b9395-286">リフレクションを使用して、プロパティ マップにテーブル エンティティ インスタンスからプロパティのデータをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-286">Serializes the property data from a table entity instance into a property map using reflection.</span></span> </p>
      <p><span data-ttu-id="b9395-287">この静的メソッドは、テーブル エンティティの種類を表し、そのクラス型でリフレクションを使用して、プロパティ マップのインスタンスからデータをシリアル化メソッドを検索するオブジェクト インスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b9395-287">This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to serialize the data from the instance into the property map.</span></span> </p>
      <p><span data-ttu-id="b9395-288">プロパティ マップの各プロパティ名とデータ型は、シリアル化および逆シリアル化に使用するメソッドを get アクセス操作子および set アクセス操作子のペアのクラス型のメソッドと比較されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-288">Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization.</span></span> <span data-ttu-id="b9395-289">プロパティに一致する名前を持つメソッド名は"get"、および"set"が付加される、またはクラスがスキャンされて、 <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref>注釈、プロパティ名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-289">The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref> annotation set with the property name.</span></span> <span data-ttu-id="b9395-290">メソッドは、戻り値の型またはパラメーターのデータ型の対応するデータ型に一致する必要があります<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>値。</span><span class="sxs-lookup"><span data-stu-id="b9395-290">The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> value.</span></span> <span data-ttu-id="b9395-291">このようなペアが見つかった場合、データは、インスタンスで getter メソッドを呼び出すことによって、インスタンスのオブジェクトからコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b9395-291">If such a pair is found, the data is copied from the instance object by invoking the getter method on the instance.</span></span> <span data-ttu-id="b9395-292">名前とデータの種類が一致するメソッドのペアを持っていないプロパティはコピーされません。</span><span class="sxs-lookup"><span data-stu-id="b9395-292">Properties that do not have a method pair with matching name and data type are not copied.</span></span></p>
      <p></p>
    syntax:
      content: 'public static HashMap<String, EntityProperty> writeEntityWithReflection(final Object instance)'
      parameters:
        - id: instance
          type: 1b60ba29
          description: <p><span data-ttu-id="b9395-293"><code>Object</code>実装するクラスのインスタンスへの参照を<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>からテーブル エンティティのデータをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-293">An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to serialize the table entity data from.</span></span> </p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="b9395-294">A<code>java.util.HashMap</code>オブジェクトにマップする<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>インスタンス パラメーター オブジェクトをシリアル化される型指定されたデータ値を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9395-294">A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> objects containing typed data values serialized from the instance parameter object.</span></span></p>
  - uid: com.microsoft.azure.storage.table._store_as
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._store_as.yml
    name: StoreAs
    nameWithType: StoreAs
    fullName: com.microsoft.azure.storage.table.StoreAs
    type: Interface
    summary: |-
      <p><span data-ttu-id="b9395-295">注釈名プロパティをオーバーライドするために使用がシリアル化されでリフレクションを使用して逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b9395-295">An annotation used to override the name a property is serialized and deserialized with using reflection.</span></span> <span data-ttu-id="b9395-296">この注釈を使用して、set アクセス操作子メソッドによって保存または実装するクラスの get アクセス操作子メソッドによって取得されたデータに関連付けるプロパティ名を指定<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>リフレクション ベースのシリアル化と逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="b9395-296">Use this annotation to specify the property name to associate with the data stored by a setter method or retrieved by a getter method in a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> that uses reflection-based serialization and deserialization.</span></span> <span data-ttu-id="b9395-297">名前"PartitionKey"、"RowKey"、"Timestamp"、"Etag"は予約されている場合は無視されますが、注釈設定することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b9395-297">Note that the names "PartitionKey", "RowKey", "Timestamp", and "Etag" are reserved and will be ignored if set with the  annotation.</span></span> </p>
      <p><span data-ttu-id="b9395-298">例:</span><span class="sxs-lookup"><span data-stu-id="b9395-298">Example:</span></span> </p>
      <p></p>
      <p></p>
      <p><span data-ttu-id="b9395-299">この例では、メソッドを取得し、エンティティ プロパティの設定の名前付け方法<em>ObjectPropertyName</em> 、既定のケースを取得し、名前付きエンティティのプロパティを設定する注釈ことができます<em>EntityPropertyName</em>です。</span><span class="sxs-lookup"><span data-stu-id="b9395-299">This example shows how the methods that would get and set an entity property named <em>ObjectPropertyName</em> in the default case can be annotated to get and set an entity property named <em>EntityPropertyName</em>.</span></span> <span data-ttu-id="b9395-300">ドキュメントを参照して<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>詳細についてはリフレクション ベースのシリアル化および逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="b9395-300">See the documentation for <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> for more information on using reflection-based serialization and deserialization.</span></span></p>
      <p></p>
    syntax:
      content: public interface StoreAs
  - uid: com.microsoft.azure.storage.table._ignore
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._ignore.yml
    name: Ignore
    nameWithType: Ignore
    fullName: com.microsoft.azure.storage.table.Ignore
    type: Interface
    summary: |-
      <p><span data-ttu-id="b9395-301">注釈リフレクションによってプロパティをシリアル化または逆の使用を防ぐためのメソッドに設定します。</span><span class="sxs-lookup"><span data-stu-id="b9395-301">An annotation set on a method to prevent its use in serializing or deserializing a property by reflection.</span></span> <span data-ttu-id="b9395-302">実装するクラスのメソッドに注釈を適用<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>させるはリフレクション ベースのシリアル化および逆シリアル化中に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b9395-302">Apply the  annotation to methods in a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to force them to be ignored during reflection-based serialization and deserialization.</span></span> <span data-ttu-id="b9395-303">ドキュメントを参照して<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>詳細についてはリフレクション ベースのシリアル化および逆シリアル化を使用します。</span><span class="sxs-lookup"><span data-stu-id="b9395-303">See the documentation for <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> for more information on using reflection-based serialization and deserialization.</span></span></p>
      <p></p>
    syntax:
      content: public interface Ignore