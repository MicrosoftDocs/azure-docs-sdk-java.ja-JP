### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity
    id: _dynamic_table_entity
    parent: com.microsoft.azure.storage.table
    children:
      - com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity()
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(final HashMap<String, EntityProperty>)'
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String)'
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)'
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)'
      - com.microsoft.azure.storage.table._dynamic_table_entity.getProperties()
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)'
      - 'com.microsoft.azure.storage.table._dynamic_table_entity.setProperties(final HashMap<String, EntityProperty>)'
      - com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity(final OperationContext)
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: DynamicTableEntity
    nameWithType: DynamicTableEntity
    fullName: com.microsoft.azure.storage.table.DynamicTableEntity
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 27
    package: com.microsoft.azure.storage.table
    summary: <p><span data-ttu-id="70b94-101">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>呼び出し元のエンティティのプロパティ マップに直接アクセスを許可する型。</span><span class="sxs-lookup"><span data-stu-id="70b94-101">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> type which allows callers direct access to the property map of the entity.</span></span> <span data-ttu-id="70b94-102">このクラスは拡張<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>をシリアル化と逆シリアル化のリフレクションの使用を排除します。</span><span class="sxs-lookup"><span data-stu-id="70b94-102">This class extends <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to eliminate the use of reflection for serialization and deserialization.</span></span> </p>
    syntax: &ref_1
      content: public class DynamicTableEntity extends TableServiceEntity
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.storage.table._table_entity
      - com.microsoft.azure.storage.table._table_service_entity
    inheritedMembers:
      - com.microsoft.azure.storage.table._table_service_entity.etag
      - com.microsoft.azure.storage.table._table_service_entity.getEtag()
      - com.microsoft.azure.storage.table._table_service_entity.getPartitionKey()
      - com.microsoft.azure.storage.table._table_service_entity.getReflectedEntityCache()
      - com.microsoft.azure.storage.table._table_service_entity.getRowKey()
      - com.microsoft.azure.storage.table._table_service_entity.getTimestamp()
      - com.microsoft.azure.storage.table._table_service_entity.isReflectedEntityCacheDisabled()
      - com.microsoft.azure.storage.table._table_service_entity.partitionKey
      - 'com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)'
      - com.microsoft.azure.storage.table._table_service_entity.rowKey
      - com.microsoft.azure.storage.table._table_service_entity.setEtag(final String)
      - com.microsoft.azure.storage.table._table_service_entity.setPartitionKey(final String)
      - com.microsoft.azure.storage.table._table_service_entity.setReflectedEntityCacheDisabled(boolean)
      - com.microsoft.azure.storage.table._table_service_entity.setRowKey(final String)
      - com.microsoft.azure.storage.table._table_service_entity.setTimestamp(final Date)
      - com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity()
      - 'com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity(String,String)'
      - com.microsoft.azure.storage.table._table_service_entity.timeStamp
      - com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity()
    id: DynamicTableEntity()
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: DynamicTableEntity()
    nameWithType: DynamicTableEntity.DynamicTableEntity()
    fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 33
    package: com.microsoft.azure.storage.table
    summary: <p><span data-ttu-id="70b94-103">引数がない既定のコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="70b94-103">Nullary default constructor.</span></span> </p>
    syntax:
      content: public DynamicTableEntity()
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(final HashMap<String, EntityProperty>)'
    id: 'DynamicTableEntity(final HashMap<String, EntityProperty>)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'DynamicTableEntity(final HashMap<String, EntityProperty> properties)'
    nameWithType: 'DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)'
    fullName: 'com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 56
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-104">構築、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンスの指定したプロパティのマップを使用します。</span><span class="sxs-lookup"><span data-stu-id="70b94-104">Constructs a <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance using the specified property map.</span></span></p>
      <p></p>
    syntax:
      content: 'public DynamicTableEntity(final HashMap<String, EntityProperty> properties)'
      parameters:
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-105">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値を新しい格納<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>です。</span><span class="sxs-lookup"><span data-stu-id="70b94-105">A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String)'
    id: 'DynamicTableEntity(String,String)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'DynamicTableEntity(String partitionKey, String rowKey)'
    nameWithType: 'DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)'
    fullName: 'com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 45
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-106">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>指定されたパーティション キーと行キーを持つクラス。</span><span class="sxs-lookup"><span data-stu-id="70b94-106">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> class with the specified partition key and row key.</span></span></p>
      <p></p>
    syntax:
      content: 'public DynamicTableEntity(String partitionKey, String rowKey)'
      parameters:
        - id: partitionKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-107">A<code>String</code>のパーティション キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-107">A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
        - id: rowKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-108">A<code>String</code>の行キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-108">A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)'
    id: 'DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)'
    nameWithType: 'DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)'
    fullName: 'com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 71
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-109">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>指定されたパーティション キーと行キーを持つクラス。</span><span class="sxs-lookup"><span data-stu-id="70b94-109">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> class with the specified partition key and row key.</span></span></p>
      <p></p>
    syntax:
      content: 'public DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)'
      parameters:
        - id: partitionKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-110">A<code>String</code>のパーティション キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-110">A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
        - id: rowKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-111">A<code>String</code>の行キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-111">A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-112">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値を新しい格納<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>です。</span><span class="sxs-lookup"><span data-stu-id="70b94-112">A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)'
    id: 'DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)'
    nameWithType: 'DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)'
    fullName: 'com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 90
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-113">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>指定されたパーティション キーと行キーを持つクラス。</span><span class="sxs-lookup"><span data-stu-id="70b94-113">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> class with the specified partition key and row key.</span></span></p>
      <p></p>
    syntax:
      content: 'public DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)'
      parameters:
        - id: partitionKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-114">A<code>String</code>のパーティション キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-114">A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
        - id: rowKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-115">A<code>String</code>の行キーを表す、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-115">A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> </p>
        - id: etag
          type: '26831127'
          description: <p><span data-ttu-id="70b94-116">ETag、 <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-116">The ETag of the <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> to be initialized.</span></span> <span data-ttu-id="70b94-117">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-117">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="70b94-118">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="70b94-118">The client cannot update this value on the service.</span></span> </p>
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-119">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値を新しい格納<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>です。</span><span class="sxs-lookup"><span data-stu-id="70b94-119">A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties()
    id: getProperties()
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: getProperties()
    nameWithType: DynamicTableEntity.getProperties()
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 105
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-120">このプロパティのマップを取得<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-120">Gets the property map for this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> getProperties()'
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="70b94-121">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データは、この値を型指定された<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-121">A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values for this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)'
    id: 'readEntity(final HashMap<String, EntityProperty>,final OperationContext)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    nameWithType: 'DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    fullName: 'void com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.readEntity*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 120
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-122">これは追加<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンスに対するプロパティ名の指定したマップを使用して<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値。</span><span class="sxs-lookup"><span data-stu-id="70b94-122">Populates this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance using the specified map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values.</span></span></p>
      <p></p>
    syntax:
      content: 'public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
      parameters:
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-123"><code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値がこれに格納する<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-123">The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to store in this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="70b94-124"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-124">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span> </p>
    overridden: 'com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)'
  - uid: 'com.microsoft.azure.storage.table._dynamic_table_entity.setProperties(final HashMap<String, EntityProperty>)'
    id: 'setProperties(final HashMap<String, EntityProperty>)'
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: 'setProperties(final HashMap<String, EntityProperty> properties)'
    nameWithType: 'DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)'
    fullName: 'void com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.setProperties*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 131
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-125">このプロパティのマップを設定<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-125">Sets the property map for this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public void setProperties(final HashMap<String, EntityProperty> properties)'
      parameters:
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-126">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値でこれを設定する<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-126">A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to set in this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity(final OperationContext)
    id: writeEntity(final OperationContext)
    parent: com.microsoft.azure.storage.table._dynamic_table_entity
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    langs:
      - java
    name: writeEntity(final OperationContext opContext)
    nameWithType: DynamicTableEntity.writeEntity(final OperationContext opContext)
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext opContext)'
    overload: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/table/DynamicTableEntity.java
      startLine: 150
    package: com.microsoft.azure.storage.table
    summary: |-
      <p><span data-ttu-id="70b94-127">プロパティ名のマップを返します<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>これからのデータ値<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-127">Returns the map of property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data values from this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)'
      parameters:
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="70b94-128"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-128">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="70b94-129">A<code>java.util.HashMap</code>のマップを含む<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値がこれに格納されている<xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-129">A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values stored in this <xref uid="com.microsoft.azure.storage.table._dynamic_table_entity" data-throw-if-not-resolved="false">DynamicTableEntity</xref> instance.</span></span></p>
    overridden: com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: <p><span data-ttu-id="70b94-130">記憶域サービスのエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="70b94-130">if a Storage service error occurs.</span></span> </p>
references:
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.DynamicTableEntity*
    name: DynamicTableEntity
    nameWithType: DynamicTableEntity.DynamicTableEntity
    fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity
    package: com.microsoft.azure.storage.table
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
    spec.java:
      - name: 'final HashMap<String, '
        fullName: 'final HashMap<String, '
      - uid: com.microsoft.azure.storage.table._entity_property
        name: EntityProperty
        fullName: com.microsoft.azure.storage.table.EntityProperty
        href: com.microsoft.azure.storage.table._entity_property.yml
      - name: '>'
        fullName: '>'
  - uid: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
    spec.java:
      - name: 'HashMap<String, '
        fullName: 'HashMap<String, '
      - uid: com.microsoft.azure.storage.table._entity_property
        name: EntityProperty
        fullName: com.microsoft.azure.storage.table.EntityProperty
        href: com.microsoft.azure.storage.table._entity_property.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.getProperties*
    name: getProperties
    nameWithType: DynamicTableEntity.getProperties
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.getProperties'
    package: com.microsoft.azure.storage.table
  - uid: 93de0ef9com.microsoft.azure.storage._operation_context
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._operation_context
        name: OperationContext
        fullName: com.microsoft.azure.storage.OperationContext
        href: com.microsoft.azure.storage._operation_context.yml
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.readEntity*
    name: readEntity
    nameWithType: DynamicTableEntity.readEntity
    fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.readEntity
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.setProperties*
    name: setProperties
    nameWithType: DynamicTableEntity.setProperties
    fullName: void com.microsoft.azure.storage.table.DynamicTableEntity.setProperties
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity.writeEntity*
    name: writeEntity
    nameWithType: DynamicTableEntity.writeEntity
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity'
    package: com.microsoft.azure.storage.table
  - uid: com.microsoft.azure.storage.table._table_service_entity.etag
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: etag
    nameWithType: TableServiceEntity.etag
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.etag
    type: Field
    summary: <p><span data-ttu-id="70b94-131">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="70b94-131">Reserved for internal use.</span></span> <span data-ttu-id="70b94-132">エンティティの ETag の値。</span><span class="sxs-lookup"><span data-stu-id="70b94-132">The value of the ETag for the entity.</span></span> </p>
    syntax:
      content: protected String etag= null
      return:
        type: '26831127'
  - uid: com.microsoft.azure.storage.table._table_service_entity.getEtag()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getEtag()
    nameWithType: TableServiceEntity.getEtag()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-133">エンティティのことを確認する ETag 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="70b94-133">Gets the ETag value to verify for the entity.</span></span> <span data-ttu-id="70b94-134">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-134">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="70b94-135">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="70b94-135">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public String getEtag()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="70b94-136">A<code>String</code>エンティティの ETag が含まれています。</span><span class="sxs-lookup"><span data-stu-id="70b94-136">A <code>String</code> containing the ETag for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getPartitionKey()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getPartitionKey()
    nameWithType: TableServiceEntity.getPartitionKey()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-137">エンティティの PartitionKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="70b94-137">Gets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getPartitionKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="70b94-138">A<code>String</code>エンティティの PartitionKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-138">A <code>String</code> containing the PartitionKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getReflectedEntityCache()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getReflectedEntityCache()
    nameWithType: TableServiceEntity.getReflectedEntityCache()
    fullName: 'static ConcurrentHashMap<Class<?>, HashMap<String, PropertyPair>> com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()'
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-139">リフレクションされたエンティティのキャッシュでは、エンティティが逆シリアル化し、ペイロードが JSON メタデータを含まないときに既知のエンティティ型と、それぞれのリフレクションされたエンティティの辞書をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="70b94-139">The reflected entity cache caches known entity types and their respective reflected entity dictionaries when entities are deserialized and the payload does not include JSON metadata.</span></span></p>
      <p></p>
    syntax:
      content: 'protected static ConcurrentHashMap<Class<?>, HashMap<String, PropertyPair>> getReflectedEntityCache()'
      return:
        type: be7d6493
        description: '<p><span data-ttu-id="70b94-140"><code>ConcurrentHashMap&lt;Class&lt;?&gt;, HashMap&lt;String, PropertyPair&gt;&gt;</code>既知のエンティティの種類と、リフレクションされたエンティティの辞書を表す</span><span class="sxs-lookup"><span data-stu-id="70b94-140">The <code>ConcurrentHashMap&lt;Class&lt;?&gt;, HashMap&lt;String, PropertyPair&gt;&gt;</code> representing the known entity types and their reflected entity dictionaries</span></span> </p>'
  - uid: com.microsoft.azure.storage.table._table_service_entity.getRowKey()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getRowKey()
    nameWithType: TableServiceEntity.getRowKey()
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-141">エンティティの RowKey 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="70b94-141">Gets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public String getRowKey()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="70b94-142">A<code>String</code>エンティティの RowKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-142">A <code>String</code> containing the RowKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.getTimestamp()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: getTimestamp()
    nameWithType: TableServiceEntity.getTimestamp()
    fullName: Date com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-143">エンティティのタイムスタンプを取得します。</span><span class="sxs-lookup"><span data-stu-id="70b94-143">Gets the Timestamp for the entity.</span></span> <span data-ttu-id="70b94-144">サーバーでは、変更することはできません、タイムスタンプの値を管理します。</span><span class="sxs-lookup"><span data-stu-id="70b94-144">The server manages the value of Timestamp, which cannot be modified.</span></span></p>
      <p></p>
    syntax:
      content: public Date getTimestamp()
      return:
        type: '12977444'
        description: <p><span data-ttu-id="70b94-145">A<code>java.util.Date</code>エンティティのタイムスタンプ値を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-145">A <code>java.util.Date</code> object which represents the Timestamp value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.isReflectedEntityCacheDisabled()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: isReflectedEntityCacheDisabled()
    nameWithType: TableServiceEntity.isReflectedEntityCacheDisabled()
    fullName: static boolean com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-146">リフレクションされたエンティティのキャッシュが無効になっているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="70b94-146">Gets a value indicating whether or not the reflected entity cache is disabled.</span></span> <span data-ttu-id="70b94-147">ほとんどのシナリオでは、リフレクションされたエンティティのキャッシュを無効化はお勧めしませんパフォーマンスに与える影響のためです。</span><span class="sxs-lookup"><span data-stu-id="70b94-147">For most scenarios, disabling the reflected entity cache is not recommended due to its effect on performance.</span></span></p>
      <p><span data-ttu-id="70b94-148">リフレクションされたエンティティ キャッシュは、既知のエンティティ型と、それぞれのリフレクションされたエンティティの辞書を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-148">The reflected entity cache stores known entity types and their respective reflected entity dictionaries.</span></span> <span data-ttu-id="70b94-149">既知のエンティティ型にリフレクションを使用してではなく、ディクショナリから値が代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-149">Rather than using reflection on a known entity type, the values from the dictionary are used instead.</span></span></p>
      <p></p>
    syntax:
      content: public static boolean isReflectedEntityCacheDisabled()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"70b94-150\">\r\n\r\n  <code>true</code>場合は、リフレクションされたエンティティのキャッシュが無効にします。それ以外の場合、<code>false</code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-150\">\r\n\r\n  <code>true</code> if the reflected entity cache is disabled; otherwise, <code>false</code>.</span></span> </p>"
  - uid: com.microsoft.azure.storage.table._table_service_entity.partitionKey
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: partitionKey
    nameWithType: TableServiceEntity.partitionKey
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.partitionKey
    type: Field
    summary: <p><span data-ttu-id="70b94-151">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="70b94-151">Reserved for internal use.</span></span> <span data-ttu-id="70b94-152">エンティティのパーティション キーの値。</span><span class="sxs-lookup"><span data-stu-id="70b94-152">The value of the partition key in the entity.</span></span> </p>
    syntax:
      content: protected String partitionKey= null
      return:
        type: '26831127'
  - uid: 'com.microsoft.azure.storage.table._table_service_entity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)'
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: 'readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    nameWithType: 'TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    fullName: 'static void com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-153">リフレクションを使用して、指定したオブジェクトのインスタンスには、テーブル エンティティのプロパティ マップを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="70b94-153">Deserializes the table entity property map into the specified object instance using reflection.</span></span> </p>
      <p><span data-ttu-id="70b94-154">この静的メソッドは、テーブル エンティティの種類を表し、そのクラス型でリフレクションを使用して、インスタンスに、プロパティ マップからのデータを逆シリアル化するメソッドを検索するオブジェクト インスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="70b94-154">This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to deserialize the data from the property map into the instance.</span></span> </p>
      <p><span data-ttu-id="70b94-155">プロパティ マップの各プロパティ名とデータ型は、シリアル化および逆シリアル化に使用するメソッドを get アクセス操作子および set アクセス操作子のペアのクラス型のメソッドと比較されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-155">Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization.</span></span> <span data-ttu-id="70b94-156">プロパティに一致する名前を持つメソッド名は"get"、および"set"が付加される、またはクラスがスキャンされて、 <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref>注釈、プロパティ名を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-156">The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref> annotation set with the property name.</span></span> <span data-ttu-id="70b94-157">メソッドは、戻り値の型またはパラメーターのデータ型の対応するデータ型に一致する必要があります<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>値。</span><span class="sxs-lookup"><span data-stu-id="70b94-157">The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> value.</span></span> <span data-ttu-id="70b94-158">このようなペアが見つかった場合、データは、インスタンスで set アクセス操作子メソッドを呼び出すことによって、インスタンスのオブジェクトにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="70b94-158">If such a pair is found, the data is copied into the instance object by invoking the setter method on the instance.</span></span> <span data-ttu-id="70b94-159">名前とデータ型でメソッドのペアに一致しないプロパティはコピーされません。</span><span class="sxs-lookup"><span data-stu-id="70b94-159">Properties that do not match a method pair by name and data type are not copied.</span></span></p>
      <p></p>
    syntax:
      content: 'public static void readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)'
      parameters:
        - id: instance
          type: 1b60ba29
          description: <p><span data-ttu-id="70b94-160"><code>Object</code>実装するクラスのインスタンスへの参照を<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>内にテーブル エンティティ データを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="70b94-160">An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to deserialize the table entity data into.</span></span> </p>
        - id: properties
          type: 2e8e1cc0com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-161">A<code>java.util.HashMap</code>オブジェクトにマップする<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>インスタンス パラメーター オブジェクトに逆シリアル化する型指定されたデータ値を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-161">A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> objects containing typed data values to deserialize into the instance parameter object.</span></span> </p>
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="70b94-162"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>を現在の操作コンテキストを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-162">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation.</span></span></p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.rowKey
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: rowKey
    nameWithType: TableServiceEntity.rowKey
    fullName: String com.microsoft.azure.storage.table.TableServiceEntity.rowKey
    type: Field
    summary: <p><span data-ttu-id="70b94-163">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="70b94-163">Reserved for internal use.</span></span> <span data-ttu-id="70b94-164">エンティティの行キーの値。</span><span class="sxs-lookup"><span data-stu-id="70b94-164">The value of the row key in the entity.</span></span> </p>
    syntax:
      content: protected String rowKey= null
      return:
        type: '26831127'
  - uid: com.microsoft.azure.storage.table._table_service_entity.setEtag(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setEtag(final String etag)
    nameWithType: TableServiceEntity.setEtag(final String etag)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String etag)
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-165">エンティティのことを確認する ETag 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-165">Sets the ETag value to verify for the entity.</span></span> <span data-ttu-id="70b94-166">Microsoft Azure storage から読み取った最後後に、テーブル エンティティが変更されたかどうかを決定する、この値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-166">This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage.</span></span> <span data-ttu-id="70b94-167">クライアントは、サービス上でこの値を更新できません。</span><span class="sxs-lookup"><span data-stu-id="70b94-167">The client cannot update this value on the service.</span></span></p>
      <p></p>
    syntax:
      content: public void setEtag(final String etag)
      parameters:
        - id: etag
          type: 3d93591e
          description: <p><span data-ttu-id="70b94-168">A<code>String</code>エンティティの ETag が含まれています。</span><span class="sxs-lookup"><span data-stu-id="70b94-168">A <code>String</code> containing the ETag for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setPartitionKey(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setPartitionKey(final String partitionKey)
    nameWithType: TableServiceEntity.setPartitionKey(final String partitionKey)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String partitionKey)
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-169">エンティティの PartitionKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-169">Sets the PartitionKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setPartitionKey(final String partitionKey)
      parameters:
        - id: partitionKey
          type: 3d93591e
          description: <p><span data-ttu-id="70b94-170">A<code>String</code>エンティティの PartitionKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-170">A <code>String</code> containing the PartitionKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setReflectedEntityCacheDisabled(boolean)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
    nameWithType: TableServiceEntity.setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
    fullName: static void com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-171">リフレクションされたエンティティ キャッシュが無効になっているかどうかを示す、ブール値を表すを設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-171">Sets a boolean representing whether or not the reflected entity cache is disabled.</span></span> <span data-ttu-id="70b94-172">ほとんどのシナリオでは、リフレクションされたエンティティのキャッシュを無効化はお勧めしませんパフォーマンスに与える影響のためです。</span><span class="sxs-lookup"><span data-stu-id="70b94-172">For most scenarios, disabling the reflected entity cache is not recommended due to its effect on performance.</span></span></p>
      <p><span data-ttu-id="70b94-173">リフレクションされたエンティティ キャッシュは、既知のエンティティ型と、それぞれのリフレクションされたエンティティの辞書を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-173">The reflected entity cache stores known entity types and their respective reflected entity dictionaries.</span></span> <span data-ttu-id="70b94-174">既知のエンティティ型にリフレクションを使用してではなく、ディクショナリから値が代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-174">Rather than using reflection on a known entity type, the values from the dictionary are used instead.</span></span></p>
      <p></p>
    syntax:
      content: public static void setReflectedEntityCacheDisabled(boolean disableReflectedEntityCache)
      parameters:
        - id: disableReflectedEntityCache
          type: 4fc6e284
          description: "<p><span data-ttu-id=\"70b94-175\">\r\n\r\n  <code>true</code>リフレクションされたエンティティ キャッシュを無効にするにはそれ以外の場合、<code>false</code>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-175\">\r\n\r\n  <code>true</code> to disable the reflected entity cache; otherwise, <code>false</code>.</span></span> </p>"
  - uid: com.microsoft.azure.storage.table._table_service_entity.setRowKey(final String)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setRowKey(final String rowKey)
    nameWithType: TableServiceEntity.setRowKey(final String rowKey)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String rowKey)
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-176">エンティティの RowKey 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-176">Sets the RowKey value for the entity.</span></span></p>
      <p></p>
    syntax:
      content: public void setRowKey(final String rowKey)
      parameters:
        - id: rowKey
          type: 3d93591e
          description: <p><span data-ttu-id="70b94-177">A<code>String</code>エンティティの RowKey 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="70b94-177">A <code>String</code> containing the RowKey value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.setTimestamp(final Date)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: setTimestamp(final Date timeStamp)
    nameWithType: TableServiceEntity.setTimestamp(final Date timeStamp)
    fullName: void com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date timeStamp)
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-178">エンティティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-178">Sets the  value for the entity.</span></span> <span data-ttu-id="70b94-179">タイムスタンプ プロパティ、サービスでのみ設定、読み取り専用プロパティであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="70b94-179">Note that the timestamp property is a read-only property, set by the service only.</span></span></p>
      <p></p>
    syntax:
      content: public void setTimestamp(final Date timeStamp)
      parameters:
        - id: timeStamp
          type: 970a8f17
          description: <p><span data-ttu-id="70b94-180">A<code>java.util.Date</code>を含む、<code>timeStamp</code>エンティティの値。</span><span class="sxs-lookup"><span data-stu-id="70b94-180">A <code>java.util.Date</code> containing the <code>timeStamp</code> value for the entity.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity()
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: TableServiceEntity()
    nameWithType: TableServiceEntity.TableServiceEntity()
    fullName: com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity()
    type: Constructor
    summary: <p><span data-ttu-id="70b94-181">空の初期化<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70b94-181">Initializes an empty <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> instance.</span></span> </p>
    syntax:
      content: public TableServiceEntity()
  - uid: 'com.microsoft.azure.storage.table._table_service_entity.TableServiceEntity(String,String)'
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: 'TableServiceEntity(String partitionKey, String rowKey)'
    nameWithType: 'TableServiceEntity.TableServiceEntity(String partitionKey, String rowKey)'
    fullName: 'com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity(String partitionKey, String rowKey)'
    type: Constructor
    summary: |-
      <p><span data-ttu-id="70b94-182">新しいインスタンスを初期化、 <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>指定されたパーティション キーと行キーを持つクラス。</span><span class="sxs-lookup"><span data-stu-id="70b94-182">Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> class with the specified partition key and row key.</span></span></p>
      <p></p>
    syntax:
      content: 'public TableServiceEntity(String partitionKey, String rowKey)'
      parameters:
        - id: partitionKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-183">A<code>String</code>のパーティション キーを表す、 <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-183">A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to be initialized.</span></span> </p>
        - id: rowKey
          type: '26831127'
          description: <p><span data-ttu-id="70b94-184">A<code>String</code>の行キーを表す、 <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>初期化されるようにします。</span><span class="sxs-lookup"><span data-stu-id="70b94-184">A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to be initialized.</span></span> </p>
  - uid: com.microsoft.azure.storage.table._table_service_entity.timeStamp
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: timeStamp
    nameWithType: TableServiceEntity.timeStamp
    fullName: Date com.microsoft.azure.storage.table.TableServiceEntity.timeStamp
    type: Field
    summary: <p><span data-ttu-id="70b94-185">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="70b94-185">Reserved for internal use.</span></span> <span data-ttu-id="70b94-186">エンティティのタイムスタンプの値。</span><span class="sxs-lookup"><span data-stu-id="70b94-186">The value of the Timestamp in the entity.</span></span> </p>
    syntax:
      content: protected Date timeStamp= new Date()
      return:
        type: '12977444'
  - uid: com.microsoft.azure.storage.table._table_service_entity.writeEntityWithReflection(final Object)
    parent: com.microsoft.azure.storage.table._table_service_entity
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: writeEntityWithReflection(final Object instance)
    nameWithType: TableServiceEntity.writeEntityWithReflection(final Object instance)
    fullName: 'static HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object instance)'
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-187">リフレクションを使用して、プロパティ マップにテーブル エンティティ インスタンスからプロパティのデータをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="70b94-187">Serializes the property data from a table entity instance into a property map using reflection.</span></span> </p>
      <p><span data-ttu-id="70b94-188">この静的メソッドは、テーブル エンティティの種類を表し、そのクラス型でリフレクションを使用して、プロパティ マップのインスタンスからデータをシリアル化メソッドを検索するオブジェクト インスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="70b94-188">This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to serialize the data from the instance into the property map.</span></span> </p>
      <p><span data-ttu-id="70b94-189">プロパティ マップの各プロパティ名とデータ型は、シリアル化および逆シリアル化に使用するメソッドを get アクセス操作子および set アクセス操作子のペアのクラス型のメソッドと比較されます。</span><span class="sxs-lookup"><span data-stu-id="70b94-189">Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization.</span></span> <span data-ttu-id="70b94-190">プロパティに一致する名前を持つメソッド名は"get"、および"set"が付加される、またはクラスがスキャンされて、 <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref>注釈、プロパティ名を設定します。</span><span class="sxs-lookup"><span data-stu-id="70b94-190">The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table._store_as" data-throw-if-not-resolved="false">StoreAs</xref> annotation set with the property name.</span></span> <span data-ttu-id="70b94-191">メソッドは、戻り値の型またはパラメーターのデータ型の対応するデータ型に一致する必要があります<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>値。</span><span class="sxs-lookup"><span data-stu-id="70b94-191">The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> value.</span></span> <span data-ttu-id="70b94-192">このようなペアが見つかった場合、データは、インスタンスで getter メソッドを呼び出すことによって、インスタンスのオブジェクトからコピーされます。</span><span class="sxs-lookup"><span data-stu-id="70b94-192">If such a pair is found, the data is copied from the instance object by invoking the getter method on the instance.</span></span> <span data-ttu-id="70b94-193">名前とデータの種類が一致するメソッドのペアを持っていないプロパティはコピーされません。</span><span class="sxs-lookup"><span data-stu-id="70b94-193">Properties that do not have a method pair with matching name and data type are not copied.</span></span></p>
      <p></p>
    syntax:
      content: 'public static HashMap<String, EntityProperty> writeEntityWithReflection(final Object instance)'
      parameters:
        - id: instance
          type: 1b60ba29
          description: <p><span data-ttu-id="70b94-194"><code>Object</code>実装するクラスのインスタンスへの参照を<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>からテーブル エンティティのデータをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="70b94-194">An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> to serialize the table entity data from.</span></span> </p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="70b94-195">A<code>java.util.HashMap</code>オブジェクトにマップする<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>インスタンス パラメーター オブジェクトをシリアル化される型指定されたデータ値を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-195">A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> objects containing typed data values serialized from the instance parameter object.</span></span></p>
  - uid: com.microsoft.azure.storage.table._table_service_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_service_entity.yml
    name: TableServiceEntity
    nameWithType: TableServiceEntity
    fullName: com.microsoft.azure.storage.table.TableServiceEntity
    type: Class
    summary: "<p><span data-ttu-id=\"70b94-196\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>クラスは、ストレージ サービス内のテーブル エンティティの基本オブジェクト型を表します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-196\">The <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> class represents the base object type for a table entity in the Storage service.</span></span> <span data-ttu-id=\"70b94-197\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の基本実装を提供、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>を提供するインターフェイスとメソッドを既定ではおよびリフレクションを使用してすべてのプロパティを逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-197\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> provides a base implementation for the <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface that provides  and  methods that by default serialize and deserialize all properties via reflection.</span></span> <span data-ttu-id=\"70b94-198\">テーブル エンティティ クラスがこのクラスを拡張し、オーバーライド、および提供するメソッドをカスタマイズしたかより多くのパフォーマンスの高いシリアル化ロジック。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-198\">A table entity class may extend this class and override the  and  methods to provide customized or more performant serialization logic.</span></span> </p>\n<p><span data-ttu-id=\"70b94-199\">リフレクションの使用によりのサブクラス<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>シリアル化を実装することがなく逆シリアル化およびシリアル化のコードそのものです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-199\">The use of reflection allows subclasses of <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> to be serialized and deserialized without having to implement the serialization code themselves.</span></span> <span data-ttu-id=\"70b94-200\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-200\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"70b94-201\">活用するために、自動のシリアル化コード、テーブル エンティティ クラスは、対応するテーブル内のエンティティ Microsoft Azure テーブル ストレージ内の各プロパティの getter および setter メソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-201\">To take advantage of the automatic serialization code, your table entity classes should provide getter and setter methods for each property in the corresponding table entity in Microsoft Azure table storage.</span></span> <span data-ttu-id=\"70b94-202\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-202\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"70b94-203\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-203\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"70b94-204\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-204\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"70b94-205\">Java 対応するプロパティの型のマップは、次の表を参照してください。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-205\">See the table below for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"70b94-206\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-206\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"70b94-207\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-207\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"70b94-208\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-208\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"70b94-209\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-209\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass.</span></span> </p>\n<p><span data-ttu-id=\"70b94-210\">次の表は、Microsoft Azure ストレージでサポートされているプロパティのデータ型と逆シリアル化したときに、対応する Java 型を示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-210\">The following table shows the supported property data types in Microsoft Azure storage and the corresponding Java types when deserialized.</span></span> <table rows=\"9\" cols=\"4\"><row><entry thead=\"yes\"><p><span data-ttu-id=\"70b94-211\">ストレージの種類</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-211\">Storage Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"70b94-212\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>値</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-212\"><xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> Value</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"70b94-213\">Java の型</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-213\">Java Type</span></span> </p></entry><entry thead=\"yes\"><p><span data-ttu-id=\"70b94-214\">説明</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-214\">Description</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-215\"><b>Edm.Binary</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-215\"><b>Edm.Binary</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-216\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType #BINARY</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-216\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BINARY\" data-throw-if-not-resolved=\"false\">EdmType#BINARY</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-217\">バイト配列のサイズは最大 64 KB です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-217\">An array of bytes up to 64 KB in size.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-218\"><b>Edm.Boolean</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-218\"><b>Edm.Boolean</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-219\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType #BOOLEAN</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-219\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.BOOLEAN\" data-throw-if-not-resolved=\"false\">EdmType#BOOLEAN</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-220\">ブール値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-220\">A Boolean value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-221\"><b>Edm.DateTime</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-221\"><b>Edm.DateTime</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-222\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType # 日付 _ 時刻</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-222\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DATE_TIME\" data-throw-if-not-resolved=\"false\">EdmType#DATE_TIME</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-223\">世界協定時刻 (UTC) を表す 64 ビット値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-223\">A 64-bit value expressed as Coordinated Universal Time (UTC).</span></span> <span data-ttu-id=\"70b94-224\">サポートされている範囲は、西暦 1601 年 1 月 1 日深夜 12時 00分から始まります</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-224\">The supported range begins from 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id=\"70b94-225\">始まります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-225\">(C.E.), UTC.</span></span> <span data-ttu-id=\"70b94-226\">この範囲は 9999 年 12 月 31 日に終了します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-226\">The range ends at December 31, 9999.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-227\"><b>Edm.Double</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-227\"><b>Edm.Double</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-228\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType #DOUBLE</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-228\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.DOUBLE\" data-throw-if-not-resolved=\"false\">EdmType#DOUBLE</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-229\">64 ビット倍精度浮動小数点値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-229\">A 64-bit double-precision floating point value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-230\"><b>Edm.Guid</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-230\"><b>Edm.Guid</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-231\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType #GUID</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-231\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.GUID\" data-throw-if-not-resolved=\"false\">EdmType#GUID</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-232\">グローバルで一意となる 128 ビットの識別子。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-232\">A 128-bit globally unique identifier.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-233\"><b>Edm.Int32</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-233\"><b>Edm.Int32</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-234\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType # INT32</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-234\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT32\" data-throw-if-not-resolved=\"false\">EdmType#INT32</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-235\">32 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-235\">A 32-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-236\"><b>Edm.Int64</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-236\"><b>Edm.Int64</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-237\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType # INT64</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-237\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.INT64\" data-throw-if-not-resolved=\"false\">EdmType#INT64</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-238\">64 ビット整数値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-238\">A 64-bit integer value.</span></span>  </p></entry></row><row><entry thead=\"no\"><p><span data-ttu-id=\"70b94-239\"><b>Edm.String</b></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-239\"><b>Edm.String</b></span></span></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-240\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType #STRING</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-240\"><xref uid=\"com.microsoft.azure.storage.table._edm_type.STRING\" data-throw-if-not-resolved=\"false\">EdmType#STRING</xref></span></span></p></entry><entry thead=\"no\"><p></p></entry><entry thead=\"no\"><p><span data-ttu-id=\"70b94-241\">UTF-16 エンコードの値。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-241\">A UTF-16-encoded value.</span></span> <span data-ttu-id=\"70b94-242\">文字列値には、最大 64 KB の可能性があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-242\">String values may be up to 64 KB in size.</span></span>  </p></entry></row></table></p>\n<p><span data-ttu-id=\"70b94-243\">MSDN のトピックを参照してください<ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">テーブル サービス データ モデルについて</ulink>テーブル、エンティティ、および Microsoft Azure ストレージ サービスで使用されているプロパティの概要についてはします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-243\">See the MSDN topic <ulink url=\"http://msdn.microsoft.com//library/azure/dd179338.aspx\">Understanding the Table Service Data Model</ulink> for an overview of tables, entities, and properties as used in the Microsoft Azure Storage service.</span></span> </p>\n<p><span data-ttu-id=\"70b94-244\">使用できる EDM プリミティブ データ型と名前の概要については、次を参照してください、。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-244\">For an overview of the available EDM primitive data types and names, see the</span></span></p>\n<p><span data-ttu-id=\"70b94-245\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">プリミティブ データ型</ulink>のセクションで、 <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData プロトコルの概要</ulink>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-245\">\r\n\r\n  <ulink url=\"http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\">Primitive Data Types</ulink> section of the <ulink url=\"http://www.odata.org/developers/protocols/overview\">OData Protocol Overview</ulink>.</span></span> </p>\n\n<p></p>"
    syntax:
      content: public class TableServiceEntity
  - uid: com.microsoft.azure.storage.table._entity_property
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._entity_property.yml
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: com.microsoft.azure.storage.table.EntityProperty
    type: Class
    summary: "<p><span data-ttu-id=\"70b94-246\">テーブル エンティティの単一の型指定されたプロパティ値を表すクラス。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-246\">A class which represents a single typed property value in a table entity.</span></span> <span data-ttu-id=\"70b94-247\"><xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>ストアのデータ型として、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-247\">An <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>.</span></span> <span data-ttu-id=\"70b94-248\">可能性のあるオブジェクトの型がプリミティブ型ではなく、値がシリアル化およびとして格納されている、します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-248\">The value, which may be  for object types, but not for primitive types, is serialized and stored as a .</span></span> </p>\n<p><span data-ttu-id=\"70b94-249\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>のサポートされている値の型のオーバー ロードされたコンス トラクターとメソッドのオーバー ロードを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-249\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> provides overloaded constructors and overloads of the  method for supported value types.</span></span> <span data-ttu-id=\"70b94-250\">コンス トラクターまたはメソッドのセットの各オーバー ロードされた、 <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref>とパラメーターの型に基づいて、適切な値をシリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-250\">Each overloaded constructor or  method sets the <xref uid=\"com.microsoft.azure.storage.table._edm_type\" data-throw-if-not-resolved=\"false\">EdmType</xref> and serializes the value appropriately based on the parameter type.</span></span> </p>\n\n<p><span data-ttu-id=\"70b94-251\">いずれかを使用して、<em>型</em>逆シリアル化する方法、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>として適切な Java の型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-251\">Use one of the <em>Type</em> methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as the appropriate Java type.</span></span> <span data-ttu-id=\"70b94-252\">メソッドがスローされます、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref>または<xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref>場合、 <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> Java の型として逆シリアル化することはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-252\">The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> if the <xref uid=\"com.microsoft.azure.storage.table._entity_property\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> cannot be deserialized as the Java type.</span></span> </p>"
    syntax:
      content: public class EntityProperty
  - uid: com.microsoft.azure.storage.table._dynamic_table_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._dynamic_table_entity.yml
    name: DynamicTableEntity
    nameWithType: DynamicTableEntity
    fullName: com.microsoft.azure.storage.table.DynamicTableEntity
    type: Class
    summary: <p><span data-ttu-id="70b94-253">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>呼び出し元のエンティティのプロパティ マップに直接アクセスを許可する型。</span><span class="sxs-lookup"><span data-stu-id="70b94-253">A <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> type which allows callers direct access to the property map of the entity.</span></span> <span data-ttu-id="70b94-254">このクラスは拡張<xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref>をシリアル化と逆シリアル化のリフレクションの使用を排除します。</span><span class="sxs-lookup"><span data-stu-id="70b94-254">This class extends <xref uid="com.microsoft.azure.storage.table._table_service_entity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to eliminate the use of reflection for serialization and deserialization.</span></span> </p>
    syntax: *ref_1
  - uid: 'com.microsoft.azure.storage.table._table_entity.readEntity(HashMap<String, EntityProperty>,OperationContext)'
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    name: 'readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    nameWithType: 'TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    fullName: 'void com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-255">実装するオブジェクトのインスタンスは追加<xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref>プロパティ名のマップを表す指定されたプロパティのパラメーターを使用して<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値。</span><span class="sxs-lookup"><span data-stu-id="70b94-255">Populates an instance of the object implementing <xref uid="com.microsoft.azure.storage.table._table_entity" data-throw-if-not-resolved="false">TableEntity</xref> using the specified properties parameter, which represents a map of  property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values.</span></span></p>
      <p></p>
    syntax:
      content: 'public void readEntity(HashMap<String, EntityProperty> properties, OperationContext opContext)'
      parameters:
        - id: properties
          type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
          description: <p><span data-ttu-id="70b94-256"><code>java.util.HashMap</code>の<code>String</code>に<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型の値を使用してテーブル エンティティ インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="70b94-256">The <code>java.util.HashMap</code> of <code>String</code> to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values to use to populate the table entity instance.</span></span> </p>
        - id: opContext
          type: com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="70b94-257"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-257">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
  - uid: com.microsoft.azure.storage._operation_context
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._operation_context.yml
    name: OperationContext
    nameWithType: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    type: Class
    summary: <p><span data-ttu-id="70b94-258">現在の論理演算を表します。</span><span class="sxs-lookup"><span data-stu-id="70b94-258">Represents the current logical operation.</span></span> <span data-ttu-id="70b94-259">論理操作では、複数の個別の物理的な要求と一対多リレーションシップがあります。</span><span class="sxs-lookup"><span data-stu-id="70b94-259">A logical operation may have a one-to-many relationship with multiple individual physical requests.</span></span> </p>
    syntax:
      content: public class OperationContext
  - uid: com.microsoft.azure.storage.table._table_entity.writeEntity(OperationContext)
    parent: com.microsoft.azure.storage.table._table_entity
    href: com.microsoft.azure.storage.table._table_entity.yml
    name: writeEntity(OperationContext opContext)
    nameWithType: TableEntity.writeEntity(OperationContext opContext)
    fullName: 'HashMap<String, EntityProperty> com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext opContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="70b94-260">プロパティ名のマップを返します<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型のテーブル エンティティ インスタンスのシリアル化されたコンテンツを表す値です。</span><span class="sxs-lookup"><span data-stu-id="70b94-260">Returns a map of  property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values that represents the serialized content of the table entity instance.</span></span></p>
      <p></p>
    syntax:
      content: 'public HashMap<String, EntityProperty> writeEntity(OperationContext opContext)'
      parameters:
        - id: opContext
          type: com.microsoft.azure.storage._operation_context
          description: <p><span data-ttu-id="70b94-261"><xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref>操作の実行を追跡するために使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70b94-261">An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation.</span></span></p>
      return:
        type: 292b5718com.microsoft.azure.storage.table._entity_propertya08ddfce
        description: <p><span data-ttu-id="70b94-262">A<code>java.util.HashMap</code>の<code>String</code>プロパティの名前を<xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref>データ型のテーブル エンティティのプロパティを表す値です。</span><span class="sxs-lookup"><span data-stu-id="70b94-262">A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table._entity_property" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values representing the properties of the table entity.</span></span></p>
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p><span data-ttu-id="70b94-263">Microsoft Azure ストレージ サービスの例外を表します。</span><span class="sxs-lookup"><span data-stu-id="70b94-263">Represents an exception for the Microsoft Azure storage service.</span></span> </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.table._table_entity
    parent: com.microsoft.azure.storage.table
    href: com.microsoft.azure.storage.table._table_entity.yml
    name: TableEntity
    nameWithType: TableEntity
    fullName: com.microsoft.azure.storage.table.TableEntity
    type: Interface
    summary: "<p><span data-ttu-id=\"70b94-264\">テーブルのエンティティ型に必要なインターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-264\">An interface required for table entity types.</span></span> <span data-ttu-id=\"70b94-265\"><xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>インターフェイスは、共通のエンティティ プロパティの getter および setter メソッドを宣言し、およびシリアル化と逆シリアル化のプロパティ マップを使用してすべてのエンティティ プロパティのメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-265\">The <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface declares getter and setter methods for the common entity properties, and  and  methods for serialization and deserialization of all entity properties using a property map.</span></span> <span data-ttu-id=\"70b94-266\">実装するクラスを作成する<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>プロパティの格納、取得、シリアル化および逆シリアル化をカスタマイズして、テーブル エンティティの追加のカスタム ロジックを指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-266\">Create classes implementing <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity.</span></span> </p>\n<p><span data-ttu-id=\"70b94-267\">ストレージ クライアント ライブラリには 2 つの実装が含まれています<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>単純なプロパティ アクセスとシリアル化を提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-267\">The Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that provide for simple property access and serialization:</span></span> </p>\n<p><span data-ttu-id=\"70b94-268\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>実装<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>し格納およびプロパティを取得する単純なプロパティ マップを提供します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-268\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> and provides a simple property map to store and retrieve properties.</span></span> <span data-ttu-id=\"70b94-269\">使用して、 <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>簡単なアクセスのプロパティのサブセットのみを返す場合 (たとえば、クエリの select 句) をエンティティのプロパティまたはの場合、クエリが異なる複数のエンティティ型を返すことができますプロパティ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-269\">Use a <xref uid=\"com.microsoft.azure.storage.table._dynamic_table_entity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties.</span></span> <span data-ttu-id=\"70b94-270\">また、この種類を使用する、プロパティ情報を失うことがなく異種エンティティの一括テーブルの更新を実行することができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-270\">You can also use this type to perform bulk table updates of heterogeneous entities without losing property information.</span></span> </p>\n\n<p><span data-ttu-id=\"70b94-271\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>の実装は、 <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>でシリアル化と逆シリアル化をリフレクション ベースで動作を使用する、およびメソッドです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-271\">\r\n\r\n  <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that uses reflection-based serialization and deserialization behavior in its  and  methods.</span></span> <span data-ttu-id=\"70b94-272\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-派生クラスの型と名前付けをシリアル化して自動的に逆シリアル化の規則に従っているメソッドを使用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-272\"><xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically.</span></span> </p>\n\n<p><span data-ttu-id=\"70b94-273\">実装するクラス<xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>活用できる、自動リフレクション ベースのシリアル化および逆シリアル化の動作で<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>で静的メソッドを呼び出すことによって、 です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-273\">Any class that implements <xref uid=\"com.microsoft.azure.storage.table._table_entity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> by invoking the static methods  in  and  in .</span></span> <span data-ttu-id=\"70b94-274\">クラスは、シリアル化しても、自動的に逆シリアル化するには、型および名前付け規則に従うメソッドを提供する必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-274\">The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically.</span></span> <span data-ttu-id=\"70b94-275\">Getter メソッドと setter メソッドの両方が指定されたプロパティ名とデータ型の検出、し、適切なメソッドの呼び出しに自動的にデータを逆シリアル化または逆シリアル化します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-275\">When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data.</span></span> <span data-ttu-id=\"70b94-276\">リフレクションのコードは次の形式のペア内の get アクセス操作子および set アクセス操作子メソッド</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-276\">The reflection code looks for getter and setter methods in pairs of the form</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"70b94-277\">and</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-277\">and</span></span> </p>\n<p></p>\n<p><span data-ttu-id=\"70b94-278\">ここで<em>PropertyName</em>テーブル エンティティのプロパティ名と<em>型</em>Java の型、プロパティの EDM データ型と互換性のあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-278\">where <em>PropertyName</em> is a property name for the table entity, and <em>type</em> is a Java type compatible with the EDM data type of the property.</span></span> <span data-ttu-id=\"70b94-279\">クラスの説明の表を参照して<xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> Java 対応するプロパティの型のマップ。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-279\">See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table._table_service_entity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> for a map of property types to their Java equivalents.</span></span> <span data-ttu-id=\"70b94-280\"><xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>プロパティの名前規則に従っていない get アクセス操作子および set アクセス操作子メソッドでリフレクションのプロパティ名を指定する属性を持つ注釈を適用することがあります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-280\">The <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a  attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention.</span></span> <span data-ttu-id=\"70b94-281\">メソッド名と属性の<xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>注釈はリフレクションを使用してプロパティ名の照合の大文字小文字を区別します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-281\">Method names and the  attribute of <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection.</span></span> <span data-ttu-id=\"70b94-282\">使用して、<xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">無視</xref>メソッドが自動のシリアル化および逆シリアル化のリフレクションで使用されていることを防ぐための注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-282\">Use the <xref uid=\"com.microsoft.azure.storage.table._ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization.</span></span> <span data-ttu-id=\"70b94-283\">\"PartitionKey\"、\"RowKey\"、\"Timestamp\"、\"Etag\"の名前は予約されており、無視された場合に設定されますなお、 <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref>リフレクション メソッドを使用して、サブクラスで注釈。</span><span class=\"sxs-lookup\"><span data-stu-id=\"70b94-283\">Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table._store_as\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass that uses the reflection methods.</span></span> </p>\n<p></p>"
    syntax:
      content: public interface TableEntity