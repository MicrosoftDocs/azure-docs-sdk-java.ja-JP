### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._health_information
    id: _health_information
    parent: system.fabric.health
    children:
      - system.fabric.health._health_information.autoSequenceNumber
      - system.fabric.health._health_information.getDescription()
      - system.fabric.health._health_information.getHealthState()
      - system.fabric.health._health_information.getProperty()
      - system.fabric.health._health_information.getSequenceNumber()
      - system.fabric.health._health_information.getSourceId()
      - system.fabric.health._health_information.getTimeToLive()
      - 'system.fabric.health._health_information.HealthInformation(String,String,HealthState)'
      - system.fabric.health._health_information.isRemoveWhenExpired()
      - system.fabric.health._health_information.setDescription(String)
      - system.fabric.health._health_information.setRemoveWhenExpired(boolean)
      - system.fabric.health._health_information.setSequenceNumber(long)
      - system.fabric.health._health_information.setTimeToLiveSeconds(Duration)
      - system.fabric.health._health_information.unknownSequenceNumber
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: HealthInformation
    nameWithType: HealthInformation
    fullName: system.fabric.health.HealthInformation
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 12
    package: system.fabric.health
    summary: <p>エンティティのヘルス情報が含まれています。 この情報は、正常性レポートに含まれています。 正常性イベントの一部としても提供されます。 </p>
    syntax:
      content: public class HealthInformation
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._health_information.autoSequenceNumber
    id: autoSequenceNumber
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: autoSequenceNumber
    nameWithType: HealthInformation.autoSequenceNumber
    fullName: final long system.fabric.health.HealthInformation.autoSequenceNumber
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 16
    package: system.fabric.health
    syntax:
      content: public final long autoSequenceNumber= 0
      return:
        type: 4c60ae65
  - uid: system.fabric.health._health_information.getDescription()
    id: getDescription()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getDescription()
    nameWithType: HealthInformation.getDescription()
    fullName: String system.fabric.health.HealthInformation.getDescription()
    overload: system.fabric.health._health_information.getDescription*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 125
    package: system.fabric.health
    summary: "<p>正常性についての説明を取得します。 レポートに関する情報を追加するために使用フリー テキストを表します。</p>\n<p>\r\n\r\n  <b>注釈:</b>説明の文字列の最大文字数は 4096 文字です。 </p>"
    syntax:
      content: public String getDescription()
      return:
        type: '26831127'
        description: <p>人間の判読できる形式で正常性の情報を説明する文字列。 </p>
  - uid: system.fabric.health._health_information.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: HealthInformation.getHealthState()
    fullName: HealthState system.fabric.health.HealthInformation.getHealthState()
    overload: system.fabric.health._health_information.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 96
    package: system.fabric.health
    summary: "<p>正常性情報のヘルス状態を取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>承認済みの正常性状態は<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>、 <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref>と<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>です。 </p>"
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p>A <xref uid="system.fabric.health._health_state" data-throw-if-not-resolved="false">system.fabric.health.HealthState</xref>報告されたヘルス状態を表すです。 </p>
  - uid: system.fabric.health._health_information.getProperty()
    id: getProperty()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getProperty()
    nameWithType: HealthInformation.getProperty()
    fullName: String system.fabric.health.HealthInformation.getProperty()
    overload: system.fabric.health._health_information.getProperty*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 81
    package: system.fabric.health
    summary: "<p>正常性レポートのプロパティを取得します。</p>\n<p>\r\n\r\n  <b>注釈:</b>プロパティがエンティティの特定のプロパティの正常性イベントを分類するためのレポート機能を許可するには、文字列と固定列挙型ではありません。 たとえば、レポーター A は Node01 の \"ストレージ\" プロパティの正常性をレポートし、レポーター B は Node01 の \"接続\" プロパティの正常性をレポートできます。 正常性ストアでは、これらのレポートは Node01 エンティティの別個の正常性イベントとして扱われます。 </p>"
    syntax:
      content: public String getProperty()
      return:
        type: '26831127'
        description: <p>正常性レポートのプロパティを表す文字列。 SourceId と正常性に関する情報を一意に識別します。 </p>
  - uid: system.fabric.health._health_information.getSequenceNumber()
    id: getSequenceNumber()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getSequenceNumber()
    nameWithType: HealthInformation.getSequenceNumber()
    fullName: long system.fabric.health.HealthInformation.getSequenceNumber()
    overload: system.fabric.health._health_information.getSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 143
    package: system.fabric.health
    summary: "<p>レポートに関連付けられているシーケンス番号を取得します。 大きくなければなりません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#unknownSequenceNumber</xref>です。</p>\n<p>\r\n\r\n  <b>注釈:</b>レポート シーケンス番号は正常性ストア古いレポートを検出するために使用します。 多くの場合のレポート機能は、シーケンス番号を指定する必要はありません。 AutoSequenceNumber 既定値は、代わりに使用できます。 正常性のクライアントは、自動のシーケンス番号を持つレポートを受信すると、有効なシーケンス番号を自動シーケンス番号に置き換えます。 クライアント コンピューターの時刻が逆になる場合でも、同じプロセスで増加するシーケンス番号が保証されます。 </p>"
    syntax:
      content: public long getSequenceNumber()
      return:
        type: 0364520f
        description: <p>レポートのシーケンス番号を表す long です。 </p>
  - uid: system.fabric.health._health_information.getSourceId()
    id: getSourceId()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getSourceId()
    nameWithType: HealthInformation.getSourceId()
    fullName: String system.fabric.health.HealthInformation.getSourceId()
    overload: system.fabric.health._health_information.getSourceId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 64
    package: system.fabric.health
    summary: |-
      <p>ソースの正常性に関する情報を生成したウォッチドッグ/システム コンポーネントを識別する識別子を取得します。</p>
      <p></p>
    syntax:
      content: public String getSourceId()
      return:
        type: '26831127'
        description: <p>正常性レポートのソースを表す文字列。 </p>
  - uid: system.fabric.health._health_information.getTimeToLive()
    id: getTimeToLive()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: getTimeToLive()
    nameWithType: HealthInformation.getTimeToLive()
    fullName: Duration system.fabric.health.HealthInformation.getTimeToLive()
    overload: system.fabric.health._health_information.getTimeToLive*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 112
    package: system.fabric.health
    summary: "<p>正常性レポートが有効ではどのくらいの期間を取得します。 TimeSpan.Zero より大きくなければなりません。</p>\n<p>\r\n\r\n  <b>注釈:</b>クライアントは定期的に、レポートは有効期限よりも頻度が高くなるとレポートを送信する必要があります。 クライアントは、遷移の報告場合、time to live を無限に設定できます。 有効期限が経過すると、正常性に関する情報を含む正常性イベントが削除されているか、正常性ストアから RemoveWhenExpired true または場合に発生したエラー、評価された RemoveWhenExpired が false の場合。 </p>"
    syntax:
      content: public Duration getTimeToLive()
      return:
        type: e02a2de0
        description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>正常性レポートの有効期限の時刻を表すです。 </p>
  - uid: 'system.fabric.health._health_information.HealthInformation(String,String,HealthState)'
    id: 'HealthInformation(String,String,HealthState)'
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: 'HealthInformation(String sourceId, String property, HealthState healthState)'
    nameWithType: 'HealthInformation.HealthInformation(String sourceId, String property, HealthState healthState)'
    fullName: 'system.fabric.health.HealthInformation.HealthInformation(String sourceId, String property, HealthState healthState)'
    overload: system.fabric.health._health_information.HealthInformation*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 33
    package: system.fabric.health
    summary: <p>新しいインスタンスを初期化、 <xref uid="" data-throw-if-not-resolved="false">system.fabric.health.HealthInformation</xref>クラスです。 </p>
    syntax:
      content: 'public HealthInformation(String sourceId, String property, HealthState healthState)'
      parameters:
        - id: sourceId
          type: '26831127'
          description: <p>レポートのソース。 Null または空にすることはできません。 これは、「システム」、レポート作成システム コンポーネントの予約されたキーワードであるで開始できません。 </p>
        - id: property
          type: '26831127'
          description: <p>レポートのプロパティです。 Null または空にすることはできません。 </p>
        - id: healthState
          type: system.fabric.health._health_state
          description: <p>レポートの彼の正常性状態。 指定する必要があります。 値のいずれかを指定する必要があります<xref uid="system.fabric.health._health_state" data-throw-if-not-resolved="false">system.fabric.health.HealthState</xref>です。 </p>
  - uid: system.fabric.health._health_information.isRemoveWhenExpired()
    id: isRemoveWhenExpired()
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: isRemoveWhenExpired()
    nameWithType: HealthInformation.isRemoveWhenExpired()
    fullName: boolean system.fabric.health.HealthInformation.isRemoveWhenExpired()
    overload: system.fabric.health._health_information.isRemoveWhenExpired*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 163
    package: system.fabric.health
    summary: "<p>有効期限が切れるときに、レポートが health store から削除された whetherÂ を示す値を取得します。 場合は false、レポートには、期限が切れたときに、エラーとして扱われます。 既定では false。</p>\n<p>\r\n\r\n  <b>注釈:</b>クライアントは定期的に報告、RemoveWhenExpired false (既定) 設定が必要があります。 この方法は、レポート機能に問題があります。 デッドロック) および正常性レポートの有効期限し、エンティティとしてこのフラグが設定されるときに、エンティティがエラーで評価された、レポートできない<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>です。 定期的なヘルス クライアントは、処理バッチ処理、送信中と正常性ストアに対するメッセージ トランスポート正常性のクライアントによる遅延のアカウントに有効期限より高い頻度でレポートを送信する必要があります。 </p>"
    syntax:
      content: public boolean isRemoveWhenExpired()
      return:
        type: 4fc6e284
        description: <p>有効期限が切れる; health store からレポートを削除する場合は trueそれ以外の場合は false です。 </p>
  - uid: system.fabric.health._health_information.setDescription(String)
    id: setDescription(String)
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: setDescription(String description)
    nameWithType: HealthInformation.setDescription(String description)
    fullName: void system.fabric.health.HealthInformation.setDescription(String description)
    overload: system.fabric.health._health_information.setDescription*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 198
    package: system.fabric.health
    summary: "<p>正常性についての説明を設定します。 レポートに関する情報を追加するために使用フリー テキストを表します。</p>\n<p>\r\n\r\n  <b>注釈:</b>説明の文字列の最大文字数は 4096 文字です。 </p>"
    syntax:
      content: public void setDescription(String description)
      parameters:
        - id: description
          type: '26831127'
          description: <p>人間の判読できる形式で正常性の情報を説明する文字列。 </p>
  - uid: system.fabric.health._health_information.setRemoveWhenExpired(boolean)
    id: setRemoveWhenExpired(boolean)
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: setRemoveWhenExpired(boolean removeWhenExpired)
    nameWithType: HealthInformation.setRemoveWhenExpired(boolean removeWhenExpired)
    fullName: void system.fabric.health.HealthInformation.setRemoveWhenExpired(boolean removeWhenExpired)
    overload: system.fabric.health._health_information.setRemoveWhenExpired*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 243
    package: system.fabric.health
    summary: "<p>セット ヘルスからを whetherÂ レポートを示す値を削除は、有効期限が切れるときに格納します。 場合は false、レポートには、期限が切れたときに、エラーとして扱われます。 既定では false。</p>\n<p>\r\n\r\n  <b>注釈:</b>クライアントは定期的に報告、RemoveWhenExpired false (既定) 設定が必要があります。 この方法は、レポート機能に問題があります。 デッドロック) および正常性レポートの有効期限し、エンティティとしてこのフラグが設定されるときに、エンティティがエラーで評価された、レポートできない<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>です。 定期的なヘルス クライアントは、処理バッチ処理、送信中と正常性ストアに対するメッセージ トランスポート正常性のクライアントによる遅延のアカウントに有効期限より高い頻度でレポートを送信する必要があります。 </p>"
    syntax:
      content: public void setRemoveWhenExpired(boolean removeWhenExpired)
      parameters:
        - id: removeWhenExpired
          type: 4fc6e284
          description: <p>有効期限が切れる; health store からレポートを削除する場合は trueそれ以外の場合は false です。 </p>
  - uid: system.fabric.health._health_information.setSequenceNumber(long)
    id: setSequenceNumber(long)
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: setSequenceNumber(long sequenceNumber)
    nameWithType: HealthInformation.setSequenceNumber(long sequenceNumber)
    fullName: void system.fabric.health.HealthInformation.setSequenceNumber(long sequenceNumber)
    overload: system.fabric.health._health_information.setSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 219
    package: system.fabric.health
    summary: "<p>レポートに関連付けられているシーケンス番号を設定します。 大きくなければなりません<xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#unknownSequenceNumber</xref>です。</p>\n<p>\r\n\r\n  <b>注釈:</b>レポート シーケンス番号は正常性ストア古いレポートを検出するために使用します。 多くの場合のレポート機能は、シーケンス番号を指定する必要はありません。 AutoSequenceNumber 既定値は、代わりに使用できます。 正常性のクライアントは、自動のシーケンス番号を持つレポートを受信すると、有効なシーケンス番号を自動シーケンス番号に置き換えます。 クライアント コンピューターの時刻が逆になる場合でも、同じプロセスで増加するシーケンス番号が保証されます。 </p>"
    syntax:
      content: public void setSequenceNumber(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>レポートのシーケンス番号を表す long です。 </p>
    exceptions:
      - type: 3c87bd19
        description: <p>sequenceNumber が小さいか unknownSequenceNumber よりと等しい場合 </p>
  - uid: system.fabric.health._health_information.setTimeToLiveSeconds(Duration)
    id: setTimeToLiveSeconds(Duration)
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: setTimeToLiveSeconds(Duration timeToLive)
    nameWithType: HealthInformation.setTimeToLiveSeconds(Duration timeToLive)
    fullName: void system.fabric.health.HealthInformation.setTimeToLiveSeconds(Duration timeToLive)
    overload: system.fabric.health._health_information.setTimeToLiveSeconds*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 180
    package: system.fabric.health
    summary: "<p>正常性レポートが有効ではどのくらいの期間を設定します。 TimeSpan.Zero より大きくなければなりません。</p>\n<p>\r\n\r\n  <b>注釈:</b>クライアントは定期的に、レポートは有効期限よりも頻度が高くなるとレポートを送信する必要があります。 クライアントは、遷移の報告場合、time to live を無限に設定できます。 有効期限が経過すると、正常性に関する情報を含む正常性イベントが削除されているか、正常性ストアから RemoveWhenExpired true または場合に発生したエラー、評価された RemoveWhenExpired が false の場合。 </p>"
    syntax:
      content: public void setTimeToLiveSeconds(Duration timeToLive)
      parameters:
        - id: timeToLive
          type: e02a2de0
          description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>正常性レポートの有効期限の時刻を表すです。 </p>
  - uid: system.fabric.health._health_information.unknownSequenceNumber
    id: unknownSequenceNumber
    parent: system.fabric.health._health_information
    href: system.fabric.health._health_information.yml
    langs:
      - java
    name: unknownSequenceNumber
    nameWithType: HealthInformation.unknownSequenceNumber
    fullName: final long system.fabric.health.HealthInformation.unknownSequenceNumber
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      startLine: 14
    package: system.fabric.health
    syntax:
      content: public final long unknownSequenceNumber= -1
      return:
        type: 4c60ae65
references:
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric.health._health_information.HealthInformation*
    name: HealthInformation
    nameWithType: HealthInformation.HealthInformation
    fullName: system.fabric.health.HealthInformation.HealthInformation
    package: system.fabric.health
  - uid: system.fabric.health._health_information.getSourceId*
    name: getSourceId
    nameWithType: HealthInformation.getSourceId
    fullName: String system.fabric.health.HealthInformation.getSourceId
    package: system.fabric.health
  - uid: system.fabric.health._health_information.getProperty*
    name: getProperty
    nameWithType: HealthInformation.getProperty
    fullName: String system.fabric.health.HealthInformation.getProperty
    package: system.fabric.health
  - uid: system.fabric.health._health_information.getHealthState*
    name: getHealthState
    nameWithType: HealthInformation.getHealthState
    fullName: HealthState system.fabric.health.HealthInformation.getHealthState
    package: system.fabric.health
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: system.fabric.health._health_information.getTimeToLive*
    name: getTimeToLive
    nameWithType: HealthInformation.getTimeToLive
    fullName: Duration system.fabric.health.HealthInformation.getTimeToLive
    package: system.fabric.health
  - uid: system.fabric.health._health_information.getDescription*
    name: getDescription
    nameWithType: HealthInformation.getDescription
    fullName: String system.fabric.health.HealthInformation.getDescription
    package: system.fabric.health
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric.health._health_information.getSequenceNumber*
    name: getSequenceNumber
    nameWithType: HealthInformation.getSequenceNumber
    fullName: long system.fabric.health.HealthInformation.getSequenceNumber
    package: system.fabric.health
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric.health._health_information.isRemoveWhenExpired*
    name: isRemoveWhenExpired
    nameWithType: HealthInformation.isRemoveWhenExpired
    fullName: boolean system.fabric.health.HealthInformation.isRemoveWhenExpired
    package: system.fabric.health
  - uid: system.fabric.health._health_information.setTimeToLiveSeconds*
    name: setTimeToLiveSeconds
    nameWithType: HealthInformation.setTimeToLiveSeconds
    fullName: void system.fabric.health.HealthInformation.setTimeToLiveSeconds
    package: system.fabric.health
  - uid: system.fabric.health._health_information.setDescription*
    name: setDescription
    nameWithType: HealthInformation.setDescription
    fullName: void system.fabric.health.HealthInformation.setDescription
    package: system.fabric.health
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: system.fabric.health._health_information.setSequenceNumber*
    name: setSequenceNumber
    nameWithType: HealthInformation.setSequenceNumber
    fullName: void system.fabric.health.HealthInformation.setSequenceNumber
    package: system.fabric.health
  - uid: system.fabric.health._health_information.setRemoveWhenExpired*
    name: setRemoveWhenExpired
    nameWithType: HealthInformation.setRemoveWhenExpired
    fullName: void system.fabric.health.HealthInformation.setRemoveWhenExpired
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState