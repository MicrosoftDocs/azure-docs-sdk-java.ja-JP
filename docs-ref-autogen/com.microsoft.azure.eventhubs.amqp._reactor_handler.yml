### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler
    id: _reactor_handler
    parent: com.microsoft.azure.eventhubs.amqp
    children:
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher()
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal(Event)
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit(Event)
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher(final ReactorDispatcher)
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: ReactorHandler
    nameWithType: ReactorHandler
    fullName: com.microsoft.azure.eventhubs.amqp.ReactorHandler
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 15
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public class ReactorHandler
    inheritance:
      - java.lang.Object
      - BaseHandler
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher()
    id: getReactorDispatcher()
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: getReactorDispatcher()
    nameWithType: ReactorHandler.getReactorDispatcher()
    fullName: ReactorDispatcher com.microsoft.azure.eventhubs.amqp.ReactorHandler.getReactorDispatcher()
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 21
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public ReactorDispatcher getReactorDispatcher()
      return:
        type: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal(Event)
    id: onReactorFinal(Event)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: onReactorFinal(Event e)
    nameWithType: ReactorHandler.onReactorFinal(Event e)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorFinal(Event e)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 40
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void onReactorFinal(Event e)
      parameters:
        - id: e
          type: 70fceca4
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit(Event)
    id: onReactorInit(Event)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: onReactorInit(Event e)
    nameWithType: ReactorHandler.onReactorInit(Event e)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorInit(Event e)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 31
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void onReactorInit(Event e)
      parameters:
        - id: e
          type: 70fceca4
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher(final ReactorDispatcher)
    id: unsafeSetReactorDispatcher(final ReactorDispatcher)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    nameWithType: ReactorHandler.unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 26
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
      parameters:
        - id: reactorDispatcher
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
references:
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher*
    name: getReactorDispatcher
    nameWithType: ReactorHandler.getReactorDispatcher
    fullName: ReactorDispatcher com.microsoft.azure.eventhubs.amqp.ReactorHandler.getReactorDispatcher
    package: com.microsoft.azure.eventhubs.amqp
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
        name: ReactorDispatcher
        fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
        href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher*
    name: unsafeSetReactorDispatcher
    nameWithType: ReactorHandler.unsafeSetReactorDispatcher
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.unsafeSetReactorDispatcher
    package: com.microsoft.azure.eventhubs.amqp
  - uid: 70fceca4
    spec.java:
      - name: Event
        fullName: Event
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit*
    name: onReactorInit
    nameWithType: ReactorHandler.onReactorInit
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorInit
    package: com.microsoft.azure.eventhubs.amqp
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal*
    name: onReactorFinal
    nameWithType: ReactorHandler.onReactorFinal
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorFinal
    package: com.microsoft.azure.eventhubs.amqp
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
    name: ReactorDispatcher
    nameWithType: ReactorDispatcher
    fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>スレッド セーフであるのではないすべての呼び出しを<xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref>リアクター スレッドでの API がする必要があります。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref> ex - すべてのイベント駆動型 API 用の非インボックスの動作: onReceive で-onSocketRead 時に生じる可能性があります。 <xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref> Send() - インボックス - リアクターの別のスレッドで実行できなかった可能性がありますするなどの API をサポートしていませんでした。 フックするイベントを生成する、次のユーティリティ クラスを使用するように、<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>のイベント委任パターン。 使用して、<xref uid=\"\" data-throw-if-not-resolved=\"false\">パイプ</xref>をリアクター リッスンで IO として。 基数: 複数<xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>の 1 に接続できなかった<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>です。 各<xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> API を呼び出すことは、同期的に - 初期化する必要があります<xref uid=\"\" data-throw-if-not-resolved=\"false\">リアクター</xref>これはスレッド セーフではありません。 </p>"
    syntax:
      content: public class ReactorDispatcher