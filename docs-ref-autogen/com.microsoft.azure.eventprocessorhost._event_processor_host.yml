### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    id: _event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)'
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)'
      - com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)
      - com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString()
      - com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName()
      - com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManagerOptions()
      - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>)
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>,EventProcessorOptions)'
      - com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>)
      - 'com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)'
      - com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID()
      - com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown(boolean)
      - com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManagerOptions(PartitionManagerOptions)
      - com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 18
    package: com.microsoft.azure.eventprocessorhost
    syntax: &ref_2
      content: public class EventProcessorHost
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
    id: createHostName(String)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: createHostName(String prefix)
    nameWithType: EventProcessorHost.createHostName(String prefix)
    fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName(String prefix)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 597
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-101">安全に渡すに一意のホスト名を生成するための便利なメソッド、 <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref>ホスト名の引数を受け取るコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="634cb-101">Convenience method for generating unique host names, safe to pass to the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> constructors that take a hostName argument.</span></span></p>
      <p><span data-ttu-id="634cb-102">プレフィックスを指定する場合、構築された名前は、その文字列で始まります。</span><span class="sxs-lookup"><span data-stu-id="634cb-102">If a prefix is supplied, the constructed name begins with that string.</span></span> <span data-ttu-id="634cb-103">プレフィックス引数が null または空の文字列の場合は、構築済みの名前は、"javahost"で始まります。</span><span class="sxs-lookup"><span data-stu-id="634cb-103">If the prefix argument is null or an empty string, the constructed name begins with "javahost".</span></span> <span data-ttu-id="634cb-104">ダッシュでは、'-'、UUID が一意の名前を作成する追加されます。</span><span class="sxs-lookup"><span data-stu-id="634cb-104">Then a dash '-' and a UUID are appended to create a unique name.</span></span></p>
      <p></p>
    syntax: &ref_1
      content: public static String createHostName(String prefix)
      parameters:
        - id: prefix
          type: '26831127'
          description: '<p><span data-ttu-id="634cb-105">名前の先頭として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-105">String to use as the beginning of the name.</span></span> <span data-ttu-id="634cb-106">Null または空で、既定値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="634cb-106">If null or empty, a default is used.</span></span> </p>'
      return:
        type: '26831127'
        description: <p><span data-ttu-id="634cb-107">一意のホスト名に渡す<xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="634cb-107">A unique host name to pass to <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> constructors.</span></span> </p>
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String)'
    id: 'EventProcessorHost(final String,final String,final String,final String)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 63
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-108">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-108">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-109">Event Hubs が一般に使用されるためのスケール アウト、高トラフィックのシナリオ、一般に、プロセスあたり 1 つだけホストおよびする別のコンピューター上のプロセスで実行されます。</span><span class="sxs-lookup"><span data-stu-id="634cb-109">Since Event Hubs are generally used for scale-out, high-traffic scenarios, generally there will be only one host per process, and the processes will be run on separate machines.</span></span> <span data-ttu-id="634cb-110">ただし、通常は 1 台のコンピューター、または 1 つのプロセス内でも、複数のホストを実行するスループットが問題にならなければ、または開発およびテストに小さい場合は。</span><span class="sxs-lookup"><span data-stu-id="634cb-110">However, it is supported to run multiple hosts on one machine, or even within one process, if throughput is less of a concern, or for development and testing.</span></span> </p>
      <p><span data-ttu-id="634cb-111">このコンス トラクターのオーバー ロードは、組み込みとチェックポイントのリース マネージャーを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-111">This overload of the constructor uses the built-in lease and checkpoint managers.</span></span> <span data-ttu-id="634cb-112">StorageConnectionString パラメーターで指定された Azure ストレージ アカウントは、レコードのリースとチェックポイントに組み込みの管理者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="634cb-112">The Azure Storage account specified by the storageConnectionString parameter is used by the built-in managers to record leases and checkpoints.</span></span> </p>
      <p><span data-ttu-id="634cb-113">イベント ハブの接続文字列は、Java Event Hub クライアントから ConnectionStringBuilder クラスを使用して簡単に作成可能性があります。</span><span class="sxs-lookup"><span data-stu-id="634cb-113">The Event Hub connection string may be conveniently constructed using the ConnectionStringBuilder class from the Java Event Hub client.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
      parameters:
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-114">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-114">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-115">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-115">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-116">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-116">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-117">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-117">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String)'
    id: 'EventProcessorHost(final String,final String,final String,final String,final String)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 87
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-118">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-118">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-119">HostName パラメータは、このこの/イベント ハブ コンシューマー グループの組み合わせから受け取るすべてのイベント プロセッサ ホスト間で一意である必要がありますイベント プロセッサ ホストの名前です。</span><span class="sxs-lookup"><span data-stu-id="634cb-119">The hostName parameter is a name for this event processor host, which must be unique among all event processor hosts receiving from this Event Hub/consumer group combination.</span></span> <span data-ttu-id="634cb-120">ホスト名の引数がないオーバー ロードは、既定値は「javahost-」は UUID は、EventProcessorHost.createHostName(null) を呼び出すことによって作成された後にします。</span><span class="sxs-lookup"><span data-stu-id="634cb-120">The overload which does not have a hostName argument defaults to "javahost-" followed by a UUID, which is created by calling EventProcessorHost.createHostName(null).</span></span> <span data-ttu-id="634cb-121">呼び出してもその他の情報が含まれる一意のホスト名を生成する簡単な方法は、 <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)" data-throw-if-not-resolved="false">EventProcessorHost.createHostName</xref>("mystring") です。</span><span class="sxs-lookup"><span data-stu-id="634cb-121">An easy way to generate a unique hostName which also includes other information is to call <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)" data-throw-if-not-resolved="false">EventProcessorHost.createHostName</xref>("mystring").</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-122">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-122">A name for this event processor host.</span></span> <span data-ttu-id="634cb-123">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-123">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-124">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-124">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-125">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-125">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-126">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-126">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-127">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-127">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String)'
    id: 'EventProcessorHost(final String,final String,final String,final String,final String,final String)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 111
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-128">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-128">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-129">このオーバー ロードは、リースとチェックポイントを維持するために使用する Azure ストレージ コンテナー名を指定する引数を追加します。</span><span class="sxs-lookup"><span data-stu-id="634cb-129">This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-130">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-130">A name for this event processor host.</span></span> <span data-ttu-id="634cb-131">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-131">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-132">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-132">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-133">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-133">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-134">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-134">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-135">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-135">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
        - id: storageContainerName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-136">組み込みのリースとチェックポイント マネージャーで使用するための azure Storage コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="634cb-136">Azure Storage container name for use by built-in lease and checkpoint manager.</span></span> </p>
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)'
    id: 'EventProcessorHost(final String,final String,final String,final String,final String,final String,final ExecutorService)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 135
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-137">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-137">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-138">このオーバー ロードは、リースとチェックポイントを維持するために使用する Azure ストレージ コンテナー名を指定する引数を追加します。</span><span class="sxs-lookup"><span data-stu-id="634cb-138">This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final ExecutorService executorService)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-139">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-139">A name for this event processor host.</span></span> <span data-ttu-id="634cb-140">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-140">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-141">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-141">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-142">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-142">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-143">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-143">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-144">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-144">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
        - id: storageContainerName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-145">組み込みのリースとチェックポイント マネージャーで使用するための azure Storage コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="634cb-145">Azure Storage container name for use by built-in lease and checkpoint manager.</span></span> </p>
        - id: executorService
          type: ebf10a33
          description: '<p><span data-ttu-id="634cb-146">EventProcessorHost 内部実行プログラムを使用するユーザーが指定したスレッドの実行プログラム、または null。</span><span class="sxs-lookup"><span data-stu-id="634cb-146">User-supplied thread executor, or null to use EventProcessorHost-internal executor.</span></span> </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)'
    id: 'EventProcessorHost(final String,final String,final String,final String,final String,final String,final String)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 160
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-147">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-147">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-148">このオーバー ロードは、リースとチェックポイントを維持するために使用する Azure ストレージ コンテナー名を指定する引数を追加します。</span><span class="sxs-lookup"><span data-stu-id="634cb-148">This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-149">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-149">A name for this event processor host.</span></span> <span data-ttu-id="634cb-150">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-150">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-151">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-151">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-152">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-152">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-153">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-153">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-154">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-154">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
        - id: storageContainerName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-155">組み込みのリースとチェックポイント マネージャーで使用するための azure Storage コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="634cb-155">Azure Storage container name for use by built-in lease and checkpoint manager.</span></span> </p>
        - id: storageBlobPrefix
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-156">ストレージ コンテナー内の blob の名前を付けるときに使用されるプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="634cb-156">Prefix used when naming blobs within the storage container.</span></span> </p>
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)'
    id: 'EventProcessorHost(final String,final String,final String,final String,final String,final String,final String,final ExecutorService)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 187
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-157">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-157">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-158">このオーバー ロードは、リースとチェックポイントを維持するために使用する Azure ストレージ コンテナー名を指定する引数を追加します。</span><span class="sxs-lookup"><span data-stu-id="634cb-158">This overload adds an argument to specify the Azure Storage container name that will be used to persist leases and checkpoints.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, final String storageConnectionString, final String storageContainerName, final String storageBlobPrefix, final ExecutorService executorService)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-159">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-159">A name for this event processor host.</span></span> <span data-ttu-id="634cb-160">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-160">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-161">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-161">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-162">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-162">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-163">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-163">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: storageConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-164">永続化のリースとチェックポイントに使用する Azure ストレージ アカウントの接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-164">Connection string for the Azure Storage account to use for persisting leases and checkpoints.</span></span> </p>
        - id: storageContainerName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-165">組み込みのリースとチェックポイント マネージャーで使用するための azure Storage コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="634cb-165">Azure Storage container name for use by built-in lease and checkpoint manager.</span></span> </p>
        - id: storageBlobPrefix
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-166">ストレージ コンテナー内の blob の名前を付けるときに使用されるプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="634cb-166">Prefix used when naming blobs within the storage container.</span></span> </p>
        - id: executorService
          type: ebf10a33
          description: '<p><span data-ttu-id="634cb-167">EventProcessorHost 内部実行プログラムを使用するユーザーが指定したスレッドの実行プログラム、または null。</span><span class="sxs-lookup"><span data-stu-id="634cb-167">User-supplied thread executor, or null to use EventProcessorHost-internal executor.</span></span> </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)'
    id: 'EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 232
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-168">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-168">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-169">このオーバー ロードは、組み込み済みの Azure Storage に基づくを置換する独自のリースとチェックポイントの管理を提供する、呼び出し元を許可します。</span><span class="sxs-lookup"><span data-stu-id="634cb-169">This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-170">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-170">A name for this event processor host.</span></span> <span data-ttu-id="634cb-171">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-171">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-172">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-172">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-173">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-173">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-174">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-174">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: checkpointManager
          type: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
          description: '<p><span data-ttu-id="634cb-175">実装<xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>、置換チェックポイント マネージャーであります。</span><span class="sxs-lookup"><span data-stu-id="634cb-175">Implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>, to be replacement checkpoint manager.</span></span> </p>'
        - id: leaseManager
          type: com.microsoft.azure.eventprocessorhost._i_lease_manager
          description: '<p><span data-ttu-id="634cb-176">実装<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>置換のリース マネージャーを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-176">Implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>, to be replacement lease manager.</span></span> </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)'
    id: 'EventProcessorHost(final String,final String,final String,final String,ICheckpointManager,ILeaseManager,ExecutorService)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)'
    nameWithType: 'EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)'
    fullName: 'com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 257
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-177">Event Hub からイベントを処理する新しいホストを作成します。</span><span class="sxs-lookup"><span data-stu-id="634cb-177">Create a new host to process events from an Event Hub.</span></span></p>
      <p><span data-ttu-id="634cb-178">このオーバー ロードは、リースとチェックポイントのマネージャーに、組み込みの Azure Storage に基づくものを置き換えると executor サービスを提供する、独自に提供する、呼び出し元を許可します。</span><span class="sxs-lookup"><span data-stu-id="634cb-178">This overload allows the caller to provide their own lease and checkpoint managers to replace the built-in ones based on Azure Storage, and to provide an executor service.</span></span></p>
      <p></p>
    syntax:
      content: 'public EventProcessorHost(final String hostName, final String eventHubPath, final String consumerGroupName, final String eventHubConnectionString, ICheckpointManager checkpointManager, ILeaseManager leaseManager, ExecutorService executorService)'
      parameters:
        - id: hostName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-179">このイベント プロセッサ ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-179">A name for this event processor host.</span></span> <span data-ttu-id="634cb-180">メソッドのノートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="634cb-180">See method notes.</span></span> </p>
        - id: eventHubPath
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-181">Event Hub からイベントを受け取ることを指定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-181">Specifies the Event Hub to receive events from.</span></span> </p>
        - id: consumerGroupName
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-182">Event Hub からの受信時に使用するコンシューマー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="634cb-182">The name of the consumer group to use when receiving from the Event Hub.</span></span> </p>
        - id: eventHubConnectionString
          type: 3d93591e
          description: <p><span data-ttu-id="634cb-183">Event Hub から受信するための接続文字列。</span><span class="sxs-lookup"><span data-stu-id="634cb-183">Connection string for the Event Hub to receive from.</span></span> </p>
        - id: checkpointManager
          type: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
          description: '<p><span data-ttu-id="634cb-184">実装<xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>、置換チェックポイント マネージャーであります。</span><span class="sxs-lookup"><span data-stu-id="634cb-184">Implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>, to be replacement checkpoint manager.</span></span> </p>'
        - id: leaseManager
          type: com.microsoft.azure.eventprocessorhost._i_lease_manager
          description: '<p><span data-ttu-id="634cb-185">実装<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>置換のリース マネージャーを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-185">Implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>, to be replacement lease manager.</span></span> </p>'
        - id: executorService
          type: ddc463eb
          description: '<p><span data-ttu-id="634cb-186">EventProcessorHost 内部実行プログラムを使用するユーザーが指定したスレッドの実行プログラム、または null。</span><span class="sxs-lookup"><span data-stu-id="634cb-186">User-supplied thread executor, or null to use EventProcessorHost-internal executor.</span></span> </p>'
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown(long)
    id: forceExecutorShutdown(long)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: forceExecutorShutdown(long secondsToWait)
    nameWithType: EventProcessorHost.forceExecutorShutdown(long secondsToWait)
    fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.forceExecutorShutdown(long secondsToWait)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 582
    package: com.microsoft.azure.eventprocessorhost
    summary: '<p><span data-ttu-id="634cb-187">このメソッドは、不要になった、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="634cb-187">This method is no longer required and does nothing.</span></span> <span data-ttu-id="634cb-188">場合は、ユーザーは、スレッド プールを提供、おは決してシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="634cb-188">If the user supplies a thread pool, we will never shut it down.</span></span> <span data-ttu-id="634cb-189">自動的にシャット ダウンしても安全では常には、ここで、インスタンスごとには、内部スレッド プールです。</span><span class="sxs-lookup"><span data-stu-id="634cb-189">The internal thread pool is per-instance now, so it is always safe to auto shut down.</span></span> </p>'
    syntax:
      content: public static void forceExecutorShutdown(long secondsToWait)
      parameters:
        - id: secondsToWait
          type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString()
    id: getEventHubConnectionString()
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: getEventHubConnectionString()
    nameWithType: EventProcessorHost.getEventHubConnectionString()
    fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getEventHubConnectionString()
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 379
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-190">プロセッサのホストによって構築されたイベント ハブの接続文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="634cb-190">Returns the Event Hub connection string assembled by the processor host.</span></span></p>
      <p><span data-ttu-id="634cb-191">ConnectionStringBuilder を使用して、この文字列にアクセスできるようにする任意の値があることが明確ではないため、コンス トラクターに情報プロバイダーから、呼び出し元で、接続文字列をアセンブルします。</span><span class="sxs-lookup"><span data-stu-id="634cb-191">The connection string is assembled from info provider by the caller to the constructor using ConnectionStringBuilder, so it's not clear that there's any value to making this string accessible.</span></span></p>
      <p></p>
    syntax:
      content: public String getEventHubConnectionString()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="634cb-192">イベント ハブの接続文字列です。</span><span class="sxs-lookup"><span data-stu-id="634cb-192">Event Hub connection string.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName()
    id: getHostName()
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: getHostName()
    nameWithType: EventProcessorHost.getHostName()
    fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getHostName()
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 368
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-193">プロセッサのホスト名を返します。</span><span class="sxs-lookup"><span data-stu-id="634cb-193">Returns processor host name.</span></span></p>
      <p><span data-ttu-id="634cb-194">プロセッサのホスト名が自動的に生成された場合、これは、これを取得する唯一の方法。</span><span class="sxs-lookup"><span data-stu-id="634cb-194">If the processor host name was automatically generated, this is the only way to get it.</span></span></p>
      <p></p>
    syntax:
      content: public String getHostName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="634cb-195">プロセッサのホスト名</span><span class="sxs-lookup"><span data-stu-id="634cb-195">the processor host name</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManagerOptions()
    id: getPartitionManagerOptions()
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: getPartitionManagerOptions()
    nameWithType: EventProcessorHost.getPartitionManagerOptions()
    fullName: PartitionManagerOptions com.microsoft.azure.eventprocessorhost.EventProcessorHost.getPartitionManagerOptions()
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManagerOptions*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 401
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-196">既存のパーティション マネージャーのオプションを返しますオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="634cb-196">Returns the existing partition manager options object.</span></span> <span data-ttu-id="634cb-197">実装を提供している場合を除き、 <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> ICheckpointMananger のパーティション マネージャーのオプションを変更する、このメソッドを呼び出して既存のオブジェクトを取得し、値を調整することで set アクセス操作子を呼び出すとします。</span><span class="sxs-lookup"><span data-stu-id="634cb-197">Unless you are providing implementations of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> and ICheckpointMananger, to change partition manager options, call this method to get the existing object and call setters on it to adjust the values.</span></span></p>
      <p></p>
    syntax:
      content: public PartitionManagerOptions getPartitionManagerOptions()
      return:
        type: com.microsoft.azure.eventprocessorhost._partition_manager_options
        description: <p><span data-ttu-id="634cb-198">内部的に作成された PartitionManangerObjects オブジェクトまたは setPartitionManangerOptions で設定された置換オブジェクト</span><span class="sxs-lookup"><span data-stu-id="634cb-198">the internally-created PartitionManangerObjects object or any replacement object set with setPartitionManangerOptions</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>)
    id: registerEventProcessor(Class<T>)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: registerEventProcessor(Class<T> eventProcessorType)
    nameWithType: EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType)
    fullName: public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 431
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-199">イベント プロセッサのクラスを登録し、処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="634cb-199">Register class for event processor and start processing.</span></span></p>
      <p><span data-ttu-id="634cb-200">このオーバー ロードは、単に登録されたイベント プロセッサ クラスの新しいインスタンスを作成し、すべての既定のオプションを使用して既定イベント プロセッサ ファクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-200">This overload uses the default event processor factory, which simply creates new instances of the registered event processor class, and uses all the default options.</span></span> <pre>
      class EventProcessor implements <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref> { ... }
      <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> host = new <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref>(...);
      Future foo = host.registerEventProcessor(EventProcessor.class);
      foo.get();
      </pre></p>
      <p></p>
    syntax:
      content: public <T extends IEventProcessor> Future<?> registerEventProcessor(Class<T> eventProcessorType)
      parameters:
        - id: eventProcessorType
          type: ffb09d2d
          description: <p><span data-ttu-id="634cb-201">実装するクラス<xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref>です。</span><span class="sxs-lookup"><span data-stu-id="634cb-201">Class that implements <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref>.</span></span> </p>
      return:
        type: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
        description: '<p><span data-ttu-id="634cb-202">初期化が完了したときに完了する予定です。</span><span class="sxs-lookup"><span data-stu-id="634cb-202">Future that completes when initialization is finished.</span></span> <span data-ttu-id="634cb-203">初期化に失敗した場合は、get() がスローされます。</span><span class="sxs-lookup"><span data-stu-id="634cb-203">If initialization fails, get() will throw.</span></span> </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor(Class<T>,EventProcessorOptions)'
    id: 'registerEventProcessor(Class<T>,EventProcessorOptions)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)'
    nameWithType: 'EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)'
    fullName: 'public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 448
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-204">イベント プロセッサのクラスを登録し、処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="634cb-204">Register class for event processor and start processing.</span></span></p>
      <p><span data-ttu-id="634cb-205">このオーバー ロードは、登録済みのイベント プロセッサ クラスの新しいインスタンスを作成するだけが、ユーザー指定のオプションを既定イベント プロセッサ ファクトリを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-205">This overload uses the default event processor factory, which simply creates new instances of the registered event processor class, but takes user-specified options.</span></span></p>
      <p></p>
    syntax:
      content: 'public <T extends IEventProcessor> Future<?> registerEventProcessor(Class<T> eventProcessorType, EventProcessorOptions processorOptions)'
      parameters:
        - id: eventProcessorType
          type: ffb09d2d
          description: <p><span data-ttu-id="634cb-206">実装するクラス<xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref>です。</span><span class="sxs-lookup"><span data-stu-id="634cb-206">Class that implements <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref>.</span></span> </p>
        - id: processorOptions
          type: com.microsoft.azure.eventprocessorhost._event_processor_options
          description: <p><span data-ttu-id="634cb-207">プロセッサのホスト、およびイベント プロセッサのオプションです。</span><span class="sxs-lookup"><span data-stu-id="634cb-207">Options for the processor host and event processor(s).</span></span> </p>
      return:
        type: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
        description: '<p><span data-ttu-id="634cb-208">初期化が完了したときに完了する予定です。</span><span class="sxs-lookup"><span data-stu-id="634cb-208">Future that completes when initialization is finished.</span></span> <span data-ttu-id="634cb-209">初期化に失敗した場合は、get() がスローされます。</span><span class="sxs-lookup"><span data-stu-id="634cb-209">If initialization fails, get() will throw.</span></span> </p>'
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>)
    id: registerEventProcessorFactory(IEventProcessorFactory<?>)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: registerEventProcessorFactory(IEventProcessorFactory<?> factory)
    nameWithType: EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
    fullName: Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 468
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-210">ユーザーが指定したイベント プロセッサ ファクトリを登録し、処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="634cb-210">Register user-supplied event processor factory and start processing.</span></span></p>
      <p><span data-ttu-id="634cb-211">新しいイベント プロセッサを作成するには、作業の詳細だけ new'ing よりも、オブジェクトが必要とする場合は、ユーザーが実装するオブジェクトを作成する必要があります<xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor_factory" data-throw-if-not-resolved="false">IEventProcessorFactory</xref>呼び出し registerEventProcessor ではなく、このメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="634cb-211">If creating a new event processor requires more work than just new'ing an objects, the user must create an object that implements <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor_factory" data-throw-if-not-resolved="false">IEventProcessorFactory</xref> and pass it to this method, instead of calling registerEventProcessor.</span></span> </p>
      <p><span data-ttu-id="634cb-212">このオーバー ロードは、プロセッサのホスト、およびイベント プロセッサの既定のオプションを使用します。</span><span class="sxs-lookup"><span data-stu-id="634cb-212">This overload uses default options for the processor host and event processor(s).</span></span></p>
      <p></p>
    syntax:
      content: public Future<?> registerEventProcessorFactory(IEventProcessorFactory<?> factory)
      parameters:
        - id: factory
          type: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
          description: <p><span data-ttu-id="634cb-213">ユーザーが指定したイベント プロセッサのファクトリ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="634cb-213">User-supplied event processor factory object.</span></span> </p>
      return:
        type: 10f8d850
        description: '<p><span data-ttu-id="634cb-214">初期化が完了したときに完了する予定です。</span><span class="sxs-lookup"><span data-stu-id="634cb-214">Future that completes when initialization is finished.</span></span> <span data-ttu-id="634cb-215">初期化に失敗した場合は、get() がスローされます。</span><span class="sxs-lookup"><span data-stu-id="634cb-215">If initialization fails, get() will throw.</span></span> </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)'
    id: 'registerEventProcessorFactory(IEventProcessorFactory<?>,EventProcessorOptions)'
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: 'registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)'
    nameWithType: 'EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)'
    fullName: 'Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)'
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 482
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-216">ユーザーが指定したイベント プロセッサ ファクトリを登録し、処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="634cb-216">Register user-supplied event processor factory and start processing.</span></span></p>
      <p><span data-ttu-id="634cb-217">このオーバー ロードは、ユーザー指定のオプションを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="634cb-217">This overload takes user-specified options.</span></span></p>
      <p></p>
    syntax:
      content: 'public Future<?> registerEventProcessorFactory(IEventProcessorFactory<?> factory, EventProcessorOptions processorOptions)'
      parameters:
        - id: factory
          type: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
          description: <p><span data-ttu-id="634cb-218">ユーザーが指定したイベント プロセッサのファクトリ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="634cb-218">User-supplied event processor factory object.</span></span> </p>
        - id: processorOptions
          type: com.microsoft.azure.eventprocessorhost._event_processor_options
          description: <p><span data-ttu-id="634cb-219">プロセッサのホスト、およびイベント プロセッサのオプションです。</span><span class="sxs-lookup"><span data-stu-id="634cb-219">Options for the processor host and event processor(s).</span></span> </p>
      return:
        type: 10f8d850
        description: '<p><span data-ttu-id="634cb-220">初期化が完了したときに完了する予定です。</span><span class="sxs-lookup"><span data-stu-id="634cb-220">Future that completes when initialization is finished.</span></span> <span data-ttu-id="634cb-221">初期化に失敗した場合は、get() がスローされます。</span><span class="sxs-lookup"><span data-stu-id="634cb-221">If initialization fails, get() will throw.</span></span> </p>'
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID()
    id: safeCreateUUID()
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: safeCreateUUID()
    nameWithType: EventProcessorHost.safeCreateUUID()
    fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.safeCreateUUID()
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 619
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-222">同期された文字列 UUID 生成メソッドです。</span><span class="sxs-lookup"><span data-stu-id="634cb-222">Synchronized string UUID generation convenience method.</span></span></p>
      <p><span data-ttu-id="634cb-223">UUID.randomUUID().toString() 複数のスレッドから使用するとから返される null および空の文字列を見たし、本当にスレッド セーフであるがあるかどうかどうかのネットワーク上にクリア応答はありません。</span><span class="sxs-lookup"><span data-stu-id="634cb-223">We saw null and empty strings returned from UUID.randomUUID().toString() when used from multiple threads and there is no clear answer on the net about whether it is really thread-safe or not.</span></span> </p>
      <p><span data-ttu-id="634cb-224">Uuid の主要なユーザーの 1 つは、組み込みのリースとチェックポイント マネージャーは、ユーザーの実装で置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="634cb-224">One of the major users of UUIDs is the built-in lease and checkpoint manager, which can be replaced by user implementations.</span></span> <span data-ttu-id="634cb-225">この UUID 生成メソッドはパブリック ユーザー実装は同様に使用でき、問題を回避するためです。</span><span class="sxs-lookup"><span data-stu-id="634cb-225">This UUID generation method is public so user implementations can use it as well and avoid the problems.</span></span></p>
      <p></p>
    syntax:
      content: public static String safeCreateUUID()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="634cb-226">ダッシュ記号がない中かっこで文字列 UUID です。</span><span class="sxs-lookup"><span data-stu-id="634cb-226">A string UUID with dashes but no curly brackets.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown(boolean)
    id: setAutoExecutorShutdown(boolean)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: setAutoExecutorShutdown(boolean auto)
    nameWithType: EventProcessorHost.setAutoExecutorShutdown(boolean auto)
    fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setAutoExecutorShutdown(boolean auto)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 573
    package: com.microsoft.azure.eventprocessorhost
    summary: '<p><span data-ttu-id="634cb-227">このメソッドは、不要になった、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="634cb-227">This method is no longer required and does nothing.</span></span> <span data-ttu-id="634cb-228">場合は、ユーザーは、スレッド プールを提供、おは決してシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="634cb-228">If the user supplies a thread pool, we will never shut it down.</span></span> <span data-ttu-id="634cb-229">自動的にシャット ダウンしても安全では常には、ここで、インスタンスごとには、内部スレッド プールです。</span><span class="sxs-lookup"><span data-stu-id="634cb-229">The internal thread pool is per-instance now, so it is always safe to auto shut down.</span></span> </p>'
    syntax:
      content: public static void setAutoExecutorShutdown(boolean auto)
      parameters:
        - id: auto
          type: 4fc6e284
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManagerOptions(PartitionManagerOptions)
    id: setPartitionManagerOptions(PartitionManagerOptions)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: setPartitionManagerOptions(PartitionManagerOptions options)
    nameWithType: EventProcessorHost.setPartitionManagerOptions(PartitionManagerOptions options)
    fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setPartitionManagerOptions(PartitionManagerOptions options)
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManagerOptions*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 413
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-230">パーティション マネージャーのオプションを 1 回に設定します。</span><span class="sxs-lookup"><span data-stu-id="634cb-230">Set the partition manager options all at once.</span></span> <span data-ttu-id="634cb-231">このメソッドは通常のユーザーの実装を提供する場合にのみ使用<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>と<xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>から派生したクラスのオブジェクトを渡すことができるので、 <xref uid="com.microsoft.azure.eventprocessorhost._partition_manager_options" data-throw-if-not-resolved="false">PartitionManagerOptions</xref>、ユーザー実装に固有のオプションを含んでいる可能性があります<xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref>または ICheckpointMananger です。</span><span class="sxs-lookup"><span data-stu-id="634cb-231">Normally this method is used only when providing user implementations of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> and <xref uid="com.microsoft.azure.eventprocessorhost._i_checkpoint_manager" data-throw-if-not-resolved="false">ICheckpointManager</xref>, because it allows passing an object of a class derived from <xref uid="com.microsoft.azure.eventprocessorhost._partition_manager_options" data-throw-if-not-resolved="false">PartitionManagerOptions</xref>, which could contain options specific to the user-implemented <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> or ICheckpointMananger.</span></span> <span data-ttu-id="634cb-232">既定の Azure ストレージ ベースの実装を使用する場合に既存のオプション オブジェクトを取得し、値を調整するには、そのオブジェクトに対して set アクセス操作子を呼び出す getPartitionManangerOptions を呼び出すお勧めします。</span><span class="sxs-lookup"><span data-stu-id="634cb-232">When using the default, Azure Storage-based implementation, the recommendation is to call getPartitionManangerOptions to return the existing options object, then call setters on that object to adjust the values.</span></span></p>
      <p></p>
    syntax:
      content: public void setPartitionManagerOptions(PartitionManagerOptions options)
      parameters:
        - id: options
          type: com.microsoft.azure.eventprocessorhost._partition_manager_options
          description: <p>- <span data-ttu-id="634cb-233">目的のオプションを表す、PartitionManangerOptions オブジェクト (または派生オブジェクト)</span><span class="sxs-lookup"><span data-stu-id="634cb-233">a PartitionManangerOptions object (or derived object) representing the desired options</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor()
    id: unregisterEventProcessor()
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    langs:
      - java
    name: unregisterEventProcessor()
    nameWithType: EventProcessorHost.unregisterEventProcessor()
    fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.unregisterEventProcessor()
    overload: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorHost.java
      startLine: 526
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="634cb-234">イベントの処理を停止します。</span><span class="sxs-lookup"><span data-stu-id="634cb-234">Stop processing events.</span></span></p>
      <p><span data-ttu-id="634cb-235">シャット ダウンが完了するまでは返しません。</span><span class="sxs-lookup"><span data-stu-id="634cb-235">Does not return until the shutdown is complete.</span></span> </p>
    syntax:
      content: public void unregisterEventProcessor()
references:
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.EventProcessorHost*
    name: EventProcessorHost
    nameWithType: EventProcessorHost.EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost.EventProcessorHost
    package: com.microsoft.azure.eventprocessorhost
  - uid: ebf10a33
    spec.java:
      - name: final ExecutorService
        fullName: final ExecutorService
  - uid: ddc463eb
    spec.java:
      - name: ExecutorService
        fullName: ExecutorService
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getHostName*
    name: getHostName
    nameWithType: EventProcessorHost.getHostName
    fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getHostName
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getEventHubConnectionString*
    name: getEventHubConnectionString
    nameWithType: EventProcessorHost.getEventHubConnectionString
    fullName: String com.microsoft.azure.eventprocessorhost.EventProcessorHost.getEventHubConnectionString
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.getPartitionManagerOptions*
    name: getPartitionManagerOptions
    nameWithType: EventProcessorHost.getPartitionManagerOptions
    fullName: PartitionManagerOptions com.microsoft.azure.eventprocessorhost.EventProcessorHost.getPartitionManagerOptions
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setPartitionManagerOptions*
    name: setPartitionManagerOptions
    nameWithType: EventProcessorHost.setPartitionManagerOptions
    fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setPartitionManagerOptions
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory7e6ad1eb
    spec.java:
      - uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
        name: IEventProcessorFactory
        fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory
        href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
      - name: <?>
        fullName: <?>
  - uid: 10f8d850
    spec.java:
      - name: Future<?>
        fullName: Future<?>
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessorFactory*
    name: registerEventProcessorFactory
    nameWithType: EventProcessorHost.registerEventProcessorFactory
    fullName: Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessorFactory
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.unregisterEventProcessor*
    name: unregisterEventProcessor
    nameWithType: EventProcessorHost.unregisterEventProcessor
    fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorHost.unregisterEventProcessor
    package: com.microsoft.azure.eventprocessorhost
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: 36136266com.microsoft.azure.eventprocessorhost._i_event_processor3358aef8
    spec.java:
      - name: '<T extends '
        fullName: '<T extends '
      - uid: com.microsoft.azure.eventprocessorhost._i_event_processor
        name: IEventProcessor
        fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
        href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
      - name: '> Future<?>'
        fullName: '> Future<?>'
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.registerEventProcessor*
    name: registerEventProcessor
    nameWithType: EventProcessorHost.registerEventProcessor
    fullName: public<T extends IEventProcessor> Future<?> com.microsoft.azure.eventprocessorhost.EventProcessorHost.registerEventProcessor
    package: com.microsoft.azure.eventprocessorhost
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.setAutoExecutorShutdown*
    name: setAutoExecutorShutdown
    nameWithType: EventProcessorHost.setAutoExecutorShutdown
    fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.setAutoExecutorShutdown
    package: com.microsoft.azure.eventprocessorhost
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.forceExecutorShutdown*
    name: forceExecutorShutdown
    nameWithType: EventProcessorHost.forceExecutorShutdown
    fullName: static void com.microsoft.azure.eventprocessorhost.EventProcessorHost.forceExecutorShutdown
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName*
    name: createHostName
    nameWithType: EventProcessorHost.createHostName
    fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.safeCreateUUID*
    name: safeCreateUUID
    nameWithType: EventProcessorHost.safeCreateUUID
    fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.safeCreateUUID
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager.yml
    name: ICheckpointManager
    nameWithType: ICheckpointManager
    fullName: com.microsoft.azure.eventprocessorhost.ICheckpointManager
    type: Interface
    syntax:
      content: public interface ICheckpointManager
  - uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
    name: ILeaseManager
    nameWithType: ILeaseManager
    fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
    type: Interface
    syntax:
      content: public interface ILeaseManager
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
    name: IEventProcessorFactory<T>
    nameWithType: IEventProcessorFactory<T>
    fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T>
    type: Interface
    summary: |-
      <p><span data-ttu-id="634cb-236">イベント プロセッサ ファクトリ クラスで実装する必要がありますのあるインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="634cb-236">Interface that must be implemented by an event processor factory class.</span></span></p>
      <p><span data-ttu-id="634cb-237">だけを持つ新しいパラメーターなしのコンス トラクターのよりも多く作業が必要なイベント プロセッサ オブジェクトを作成する場合は、ユーザー指定のファクトリが必要です。</span><span class="sxs-lookup"><span data-stu-id="634cb-237">User-provided factories are needed if creating an event processor object requires more work than just a new with a parameterless constructor.</span></span></p>
      <p></p>
    syntax:
      content: public interface IEventProcessorFactory<T extends IEventProcessor>
      typeParameters:
        - type: 8ce1ecb9
          description: '<p><span data-ttu-id="634cb-238">イベント プロセッサ オブジェクトの種類がこのファクトリでは、実装する必要がありますによって生成される<xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref></span><span class="sxs-lookup"><span data-stu-id="634cb-238">The type of event processor objects produced by this factory, which must implement <xref uid="com.microsoft.azure.eventprocessorhost._i_event_processor" data-throw-if-not-resolved="false">IEventProcessor</xref></span></span></p>'
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_options
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
    name: EventProcessorOptions
    nameWithType: EventProcessorOptions
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
    type: Class
    syntax:
      content: public class EventProcessorOptions
  - uid: com.microsoft.azure.eventprocessorhost._partition_manager_options
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._partition_manager_options.yml
    name: PartitionManagerOptions
    nameWithType: PartitionManagerOptions
    fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions
    type: Class
    syntax:
      content: public class PartitionManagerOptions
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host.createHostName(String)
    parent: com.microsoft.azure.eventprocessorhost._event_processor_host
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: createHostName(String prefix)
    nameWithType: EventProcessorHost.createHostName(String prefix)
    fullName: static String com.microsoft.azure.eventprocessorhost.EventProcessorHost.createHostName(String prefix)
    type: Method
    summary: |-
      <p><span data-ttu-id="634cb-239">安全に渡すに一意のホスト名を生成するための便利なメソッド、 <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref>ホスト名の引数を受け取るコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="634cb-239">Convenience method for generating unique host names, safe to pass to the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> constructors that take a hostName argument.</span></span></p>
      <p><span data-ttu-id="634cb-240">プレフィックスを指定する場合、構築された名前は、その文字列で始まります。</span><span class="sxs-lookup"><span data-stu-id="634cb-240">If a prefix is supplied, the constructed name begins with that string.</span></span> <span data-ttu-id="634cb-241">プレフィックス引数が null または空の文字列の場合は、構築済みの名前は、"javahost"で始まります。</span><span class="sxs-lookup"><span data-stu-id="634cb-241">If the prefix argument is null or an empty string, the constructed name begins with "javahost".</span></span> <span data-ttu-id="634cb-242">ダッシュでは、'-'、UUID が一意の名前を作成する追加されます。</span><span class="sxs-lookup"><span data-stu-id="634cb-242">Then a dash '-' and a UUID are appended to create a unique name.</span></span></p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    name: IEventProcessor
    nameWithType: IEventProcessor
    fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
    type: Interface
    summary: "<p><span data-ttu-id=\"634cb-243\">イベント プロセッサ クラスで実装する必要があるインターフェイスです。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-243\">Interface that must be implemented by event processor classes.</span></span></p>\n<p><span data-ttu-id=\"634cb-244\">イベント プロセッサ クラスのインスタンスには、1 つのイベント ハブの 1 つのパーティションからのイベントのみが処理されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-244\">Any given instance of an event processor class will only process events from one partition of one Event Hub.</span></span> <span data-ttu-id=\"634cb-245\">A <xref uid=\"com.microsoft.azure.eventprocessorhost._partition_context\" data-throw-if-not-resolved=\"false\">PartitionContext</xref>は、いくつかのパラメーターを変更する可能性がありますが、同じパーティションは常にため、イベント プロセッサへの各呼び出しで提供されています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-245\">A <xref uid=\"com.microsoft.azure.eventprocessorhost._partition_context\" data-throw-if-not-resolved=\"false\">PartitionContext</xref> is provided with each call to the event processor because some parameters could change, but it will always be the same partition.</span></span> </p>\n<p><span data-ttu-id=\"634cb-246\"><xref uid=\"com.microsoft.azure.eventprocessorhost._event_processor_host\" data-throw-if-not-resolved=\"false\">EventProcessorHost</xref>がマルチ スレッド、プロセッサのイベント クラスの特定のインスタンスへの呼び出しはシリアル化以外の<xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\">onError()</xref>です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-246\">Although <xref uid=\"com.microsoft.azure.eventprocessorhost._event_processor_host\" data-throw-if-not-resolved=\"false\">EventProcessorHost</xref> is multithreaded, calls to a given instance of an event processor class are serialized, except for <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\">onError()</xref>.</span></span> <span data-ttu-id=\"634cb-247\"><xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)\" data-throw-if-not-resolved=\"false\">onOpen()</xref>最初に呼び出され、し<xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref> 0 回以上が呼び出されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-247\"><xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)\" data-throw-if-not-resolved=\"false\">onOpen()</xref> is called first, then <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref> will be called zero or more times.</span></span> <span data-ttu-id=\"634cb-248\">エラーがどこか、またはパーティションのリースが失われているために、シャット ダウン、かどうかをイベント プロセッサが必要な場合、または、プロセッサ全体のホストがシャット ダウン、 <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\">onClose()</xref>最後後に呼び出されます<xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref>呼び出しを返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-248\">When the event processor needs to be shut down, whether because there was a failure somewhere, or the lease for the partition has been lost, or because the entire processor host is being shut down, <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\">onClose()</xref> is called after the last <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref> call returns.</span></span> </p>\n<p><span data-ttu-id=\"634cb-249\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\">onError()</xref>呼び出すことが中に<xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref>または<xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\">onClose()</xref>を実行します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-249\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\">onError()</xref> could be called while <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\">onEvents()</xref> or <xref uid=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\">onClose()</xref> is executing.</span></span> <span data-ttu-id=\"634cb-250\">可能性のあるデッドロックを回避するためには、同期は行われません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"634cb-250\">No synchronization is attempted in order to avoid possibly deadlocking.</span></span> </p>"
    syntax:
      content: public interface IEventProcessor
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax: *ref_2