### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._application_health_state_chunk
    id: _application_health_state_chunk
    parent: system.fabric.health
    children:
      - system.fabric.health._application_health_state_chunk.getApplicationName()
      - system.fabric.health._application_health_state_chunk.getApplicationTypeName()
      - system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks()
      - system.fabric.health._application_health_state_chunk.getHealthState()
      - system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks()
      - system.fabric.health._application_health_state_chunk.toString()
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: ApplicationHealthStateChunk
    nameWithType: ApplicationHealthStateChunk
    fullName: system.fabric.health.ApplicationHealthStateChunk
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 8
    package: system.fabric.health
    summary: '<p><span data-ttu-id="a5e93-101">チャンクを表して、アプリケーション ヘルス状態、アプリケーションに関する基本的な正常性の情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a5e93-101">Represents an application health state chunk, which contains basic health information about the application.</span></span> </p>'
    syntax:
      content: public class ApplicationHealthStateChunk
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._application_health_state_chunk.getApplicationName()
    id: getApplicationName()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: ApplicationHealthStateChunk.getApplicationName()
    fullName: URI system.fabric.health.ApplicationHealthStateChunk.getApplicationName()
    overload: system.fabric.health._application_health_state_chunk.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 84
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="a5e93-102">アプリケーションの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="a5e93-102">Gets the application name.</span></span></p>
      <p></p>
    syntax:
      content: public URI getApplicationName()
      return:
        type: '62304784'
        description: <p><span data-ttu-id="a5e93-103">アプリケーション名。</span><span class="sxs-lookup"><span data-stu-id="a5e93-103">The application name.</span></span> </p>
  - uid: system.fabric.health._application_health_state_chunk.getApplicationTypeName()
    id: getApplicationTypeName()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: getApplicationTypeName()
    nameWithType: ApplicationHealthStateChunk.getApplicationTypeName()
    fullName: String system.fabric.health.ApplicationHealthStateChunk.getApplicationTypeName()
    overload: system.fabric.health._application_health_state_chunk.getApplicationTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 75
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="a5e93-104">アプリケーションの種類名を取得します。</span><span class="sxs-lookup"><span data-stu-id="a5e93-104">Gets the application type name.</span></span></p>
      <p></p>
    syntax:
      content: public String getApplicationTypeName()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="a5e93-105">アプリケーションの種類名です。</span><span class="sxs-lookup"><span data-stu-id="a5e93-105">The application type name.</span></span> </p>
  - uid: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks()
    id: getDeployedApplicationHealthStateChunks()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: getDeployedApplicationHealthStateChunks()
    nameWithType: ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks()
    fullName: DeployedApplicationHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks()
    overload: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 41
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"a5e93-106\">入力のフィルターを適用する展開済みアプリケーション ヘルス状態のチャンクの一覧を取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-106\">Gets the list of the deployed application health state chunks that respect the input filters.</span></span></p>\n<p><span data-ttu-id=\"a5e93-107\">\r\n\r\n  <b>注釈:</b>既定では、子に含まれていない結果です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-107\">\r\n\r\n  <b>Remarks:</b> By default, no children are included in results.</span></span> <span data-ttu-id=\"a5e93-108\">ユーザーは、必要な正常性アドインまたはその他の情報に基づく子の一部を含めるように要求できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-108\">Users can request to include some children based on desired health or other information.</span></span> <span data-ttu-id=\"a5e93-109\">たとえば、ユーザーは、以下のヘルス状態のエラーのある展開済みのすべてのアプリケーションを要求できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-109\">For example, users can request to include all deployed applications that have health state error.</span></span> <span data-ttu-id=\"a5e93-110\">フィルター値に関係なく、すべての子は、アプリケーションで集計された正常性が計算に使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-110\">Regardless of filter value, all children are used to compute application aggregated health.</span></span> </p>"
    syntax:
      content: public DeployedApplicationHealthStateChunkList getDeployedApplicationHealthStateChunks()
      return:
        type: system.fabric.health._deployed_application_health_state_chunk_list
        description: <p><span data-ttu-id="a5e93-111">入力のフィルターを適用する展開済みアプリケーション ヘルス状態のチャンクの一覧。</span><span class="sxs-lookup"><span data-stu-id="a5e93-111">The list of the deployed application health state chunks that respect the input filters.</span></span> </p>
  - uid: system.fabric.health._application_health_state_chunk.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: ApplicationHealthStateChunk.getHealthState()
    fullName: HealthState system.fabric.health.ApplicationHealthStateChunk.getHealthState()
    overload: system.fabric.health._application_health_state_chunk.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 66
    package: system.fabric.health
    summary: |-
      <p><span data-ttu-id="a5e93-112">報告された状態のすべてのイベント、子、およびアプリケーションの正常性ポリシーに基づくアプリケーション ヘルス状態は、計算を集計する取得します。</span><span class="sxs-lookup"><span data-stu-id="a5e93-112">Gets the application aggregated health state, computed based on all reported health events, the children and the application health policy.</span></span></p>
      <p></p>
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p><span data-ttu-id="a5e93-113">アプリケーションでは、ヘルス状態を集計します。</span><span class="sxs-lookup"><span data-stu-id="a5e93-113">The application aggregated health state.</span></span> </p>
  - uid: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks()
    id: getServiceHealthStateChunks()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: getServiceHealthStateChunks()
    nameWithType: ApplicationHealthStateChunk.getServiceHealthStateChunks()
    fullName: ServiceHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getServiceHealthStateChunks()
    overload: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 56
    package: system.fabric.health
    summary: "<p><span data-ttu-id=\"a5e93-114\">サービスのヘルス状態の一覧に、入力フィルターを尊重状態チャンクを取得します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-114\">Gets the list of the service health state chunks that respect the input filters.</span></span></p>\n<p><span data-ttu-id=\"a5e93-115\">\r\n\r\n  <b>注釈:</b>既定では、子に含まれていない結果です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-115\">\r\n\r\n  <b>Remarks:</b> By default, no children are included in results.</span></span> <span data-ttu-id=\"a5e93-116\">ユーザーは、必要な正常性アドインまたはその他の情報に基づく子の一部を含めるように要求できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-116\">Users can request to include some children based on desired health or other information.</span></span> <span data-ttu-id=\"a5e93-117\">たとえば、ユーザーは、ヘルス状態のエラーのあるすべてのサービスを指定する要求できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-117\">For example, users can request to include all services that have health state error.</span></span> <span data-ttu-id=\"a5e93-118\">フィルター値に関係なく、すべての子は、アプリケーションで集計された正常性が計算に使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-118\">Regardless of filter value, all children are used to compute application aggregated health.</span></span> </p>"
    syntax:
      content: public ServiceHealthStateChunkList getServiceHealthStateChunks()
      return:
        type: system.fabric.health._service_health_state_chunk_list
        description: <p><span data-ttu-id="a5e93-119">入力フィルターを適用するサービスのヘルス状態のチャンクの一覧。</span><span class="sxs-lookup"><span data-stu-id="a5e93-119">The list of the service health state chunks that respect the input filters.</span></span> </p>
  - uid: system.fabric.health._application_health_state_chunk.toString()
    id: toString()
    parent: system.fabric.health._application_health_state_chunk
    href: system.fabric.health._application_health_state_chunk.yml
    langs:
      - java
    name: toString()
    nameWithType: ApplicationHealthStateChunk.toString()
    fullName: String system.fabric.health.ApplicationHealthStateChunk.toString()
    overload: system.fabric.health._application_health_state_chunk.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealthStateChunk.java
      startLine: 89
    package: system.fabric.health
    syntax:
      content: public String toString()
      return:
        type: '26831127'
references:
  - uid: system.fabric.health._application_health_state_chunk.getDeployedApplicationHealthStateChunks*
    name: getDeployedApplicationHealthStateChunks
    nameWithType: ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks
    fullName: DeployedApplicationHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getDeployedApplicationHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._application_health_state_chunk.getServiceHealthStateChunks*
    name: getServiceHealthStateChunks
    nameWithType: ApplicationHealthStateChunk.getServiceHealthStateChunks
    fullName: ServiceHealthStateChunkList system.fabric.health.ApplicationHealthStateChunk.getServiceHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._application_health_state_chunk.getHealthState*
    name: getHealthState
    nameWithType: ApplicationHealthStateChunk.getHealthState
    fullName: HealthState system.fabric.health.ApplicationHealthStateChunk.getHealthState
    package: system.fabric.health
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric.health._application_health_state_chunk.getApplicationTypeName*
    name: getApplicationTypeName
    nameWithType: ApplicationHealthStateChunk.getApplicationTypeName
    fullName: String system.fabric.health.ApplicationHealthStateChunk.getApplicationTypeName
    package: system.fabric.health
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric.health._application_health_state_chunk.getApplicationName*
    name: getApplicationName
    nameWithType: ApplicationHealthStateChunk.getApplicationName
    fullName: URI system.fabric.health.ApplicationHealthStateChunk.getApplicationName
    package: system.fabric.health
  - uid: system.fabric.health._application_health_state_chunk.toString*
    name: toString
    nameWithType: ApplicationHealthStateChunk.toString
    fullName: String system.fabric.health.ApplicationHealthStateChunk.toString
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._service_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._service_health_state_chunk_list.yml
    name: ServiceHealthStateChunkList
    nameWithType: ServiceHealthStateChunkList
    fullName: system.fabric.health.ServiceHealthStateChunkList
    type: Class
    summary: "<p><span data-ttu-id=\"a5e93-120\">含むリストを表す<xref uid=\"system.fabric.health._service_health_state_chunk\" data-throw-if-not-resolved=\"false\">ServiceHealthStateChunk</xref>項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-120\">Represents a list that contains <xref uid=\"system.fabric.health._service_health_state_chunk\" data-throw-if-not-resolved=\"false\">ServiceHealthStateChunk</xref> items.</span></span> </p>\n<p><span data-ttu-id=\"a5e93-121\">\r\n\r\n  <b>注釈:</b>ヘルス状態のチャンク クエリを通じて、一覧を取得できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-121\">\r\n\r\n  <b>Remarks:</b>The list can be obtained through health state chunk queries.</span></span> <span data-ttu-id=\"a5e93-122\">クエリは、メッセージを格納できる以上のチャンクを結果として必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-122\">The queries may have as result more chunks that can fit a message.</span></span> <span data-ttu-id=\"a5e93-123\">この場合、メッセージに一致する項目の一覧が返されます、合計項目の数を示すカウントを利用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-123\">In this case, the list of items that fit the message is returned plus a count that shows how many total items are available.</span></span> </p>"
    syntax:
      content: public class ServiceHealthStateChunkList
  - uid: system.fabric.health._deployed_application_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._deployed_application_health_state_chunk_list.yml
    name: DeployedApplicationHealthStateChunkList
    nameWithType: DeployedApplicationHealthStateChunkList
    fullName: system.fabric.health.DeployedApplicationHealthStateChunkList
    type: Class
    summary: "<p><span data-ttu-id=\"a5e93-124\">含むリストを表す<xref uid=\"system.fabric.health._deployed_application_health_state_chunk\" data-throw-if-not-resolved=\"false\">DeployedApplicationHealthStateChunk</xref>項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-124\">Represents a list that contains <xref uid=\"system.fabric.health._deployed_application_health_state_chunk\" data-throw-if-not-resolved=\"false\">DeployedApplicationHealthStateChunk</xref> items.</span></span> </p>\n<p><span data-ttu-id=\"a5e93-125\">\r\n\r\n  <b>注釈:</b>ヘルス状態のチャンク クエリを通じて、一覧を取得できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-125\">\r\n\r\n  <b>Remarks:</b>The list can be obtained through health state chunk queries.</span></span> <span data-ttu-id=\"a5e93-126\">クエリは、メッセージを格納できる以上のチャンクを結果として必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-126\">The queries may have as result more chunks that can fit a message.</span></span> <span data-ttu-id=\"a5e93-127\">この場合、メッセージに一致する項目の一覧が返されます、合計項目の数を示すカウントを利用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5e93-127\">In this case, the list of items that fit the message is returned plus a count that shows how many total items are available.</span></span> </p>"
    syntax:
      content: public class DeployedApplicationHealthStateChunkList