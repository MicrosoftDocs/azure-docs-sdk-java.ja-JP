### YamlMime:ManagedReference
items:
  - uid: system.fabric._node_health_query_description
    id: _node_health_query_description
    parent: system.fabric
    children:
      - system.fabric._node_health_query_description.getClusterHealthPolicy()
      - system.fabric._node_health_query_description.getHealthEventsFilter()
      - system.fabric._node_health_query_description.getNodeName()
      - system.fabric._node_health_query_description.NodeHealthQueryDescription(String)
      - system.fabric._node_health_query_description.setClusterHealthPolicy(ClusterHealthPolicy)
      - system.fabric._node_health_query_description.setHealthEventsFilter(HealthEventsFilter)
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: NodeHealthQueryDescription
    nameWithType: NodeHealthQueryDescription
    fullName: system.fabric.NodeHealthQueryDescription
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 9
    package: system.fabric
    summary: '<p>説明を取得するためのクエリ入力<xref uid="system.fabric.health._node_health" data-throw-if-not-resolved="false">system.fabric.health.NodeHealth</xref>です。 によって使用される<xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(system.fabric.NodeHealthQueryDescription)</xref>です。 </p>'
    syntax:
      content: public class NodeHealthQueryDescription
    inheritance:
      - java.lang.Object
  - uid: system.fabric._node_health_query_description.getClusterHealthPolicy()
    id: getClusterHealthPolicy()
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: getClusterHealthPolicy()
    nameWithType: NodeHealthQueryDescription.getClusterHealthPolicy()
    fullName: ClusterHealthPolicy system.fabric.NodeHealthQueryDescription.getClusterHealthPolicy()
    overload: system.fabric._node_health_query_description.getClusterHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 52
    package: system.fabric
    summary: "<p>取得、 <xref uid=\"system.fabric._cluster_health_policy\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy</xref>ノードの正常性を評価するために使用します。</p>\n<p>\r\n\r\n  <b>注釈:</b>正常性ストア マニフェストからクラスターの正常性ポリシーを使用して指定されていない場合 (場合が存在する) または既定の厳密な正常性ポリシー。 </p>"
    syntax:
      content: public ClusterHealthPolicy getClusterHealthPolicy()
      return:
        type: system.fabric._cluster_health_policy
        description: <p><xref uid="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false">System.fabric.ClusterHealthPolicy</xref>ノードの正常性を評価するために使用します。 </p>
  - uid: system.fabric._node_health_query_description.getHealthEventsFilter()
    id: getHealthEventsFilter()
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: getHealthEventsFilter()
    nameWithType: NodeHealthQueryDescription.getHealthEventsFilter()
    fullName: HealthEventsFilter system.fabric.NodeHealthQueryDescription.getHealthEventsFilter()
    overload: system.fabric._node_health_query_description.getHealthEventsFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 81
    package: system.fabric
    summary: "<p>コレクションのフィルターを取得<xref uid=\"system.fabric.health._health_event\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthEvent</xref>ノードで報告します。 フィルターに一致するイベントのみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するイベントのみが返されます。 すべてのイベントは、集計のノードの正常性状態の評価に使用されます。 フィルターが指定されていない場合は、すべてのイベントが返されます。 </p>"
    syntax:
      content: public HealthEventsFilter getHealthEventsFilter()
      return:
        type: system.fabric._health_events_filter
        description: <p>正常性イベントを返すフィルター。 </p>
  - uid: system.fabric._node_health_query_description.getNodeName()
    id: getNodeName()
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: getNodeName()
    nameWithType: NodeHealthQueryDescription.getNodeName()
    fullName: String system.fabric.NodeHealthQueryDescription.getNodeName()
    overload: system.fabric._node_health_query_description.getNodeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 39
    package: system.fabric
    summary: |-
      <p>ノード名を取得します。</p>
      <p></p>
    syntax:
      content: public String getNodeName()
      return:
        type: '26831127'
        description: <p>ノード名。 </p>
  - uid: system.fabric._node_health_query_description.NodeHealthQueryDescription(String)
    id: NodeHealthQueryDescription(String)
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: NodeHealthQueryDescription(String nodeName)
    nameWithType: NodeHealthQueryDescription.NodeHealthQueryDescription(String nodeName)
    fullName: system.fabric.NodeHealthQueryDescription.NodeHealthQueryDescription(String nodeName)
    overload: system.fabric._node_health_query_description.NodeHealthQueryDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 17
    package: system.fabric
    syntax:
      content: public NodeHealthQueryDescription(String nodeName)
      parameters:
        - id: nodeName
          type: '26831127'
  - uid: system.fabric._node_health_query_description.setClusterHealthPolicy(ClusterHealthPolicy)
    id: setClusterHealthPolicy(ClusterHealthPolicy)
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
    nameWithType: NodeHealthQueryDescription.setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
    fullName: void system.fabric.NodeHealthQueryDescription.setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
    overload: system.fabric._node_health_query_description.setClusterHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 66
    package: system.fabric
    summary: "<p>セット、 <xref uid=\"system.fabric._cluster_health_policy\" data-throw-if-not-resolved=\"false\">system.fabric.ClusterHealthPolicy</xref>ノードの正常性を評価するために使用します。</p>\n<p>\r\n\r\n  <b>注釈:</b>正常性ストア マニフェストからクラスターの正常性ポリシーを使用して指定されていない場合 (場合が存在する) または既定の厳密な正常性ポリシー。 </p>"
    syntax:
      content: public void setClusterHealthPolicy(ClusterHealthPolicy clusterHealthPolicy)
      parameters:
        - id: clusterHealthPolicy
          type: system.fabric._cluster_health_policy
          description: <p><xref uid="system.fabric._cluster_health_policy" data-throw-if-not-resolved="false">System.fabric.ClusterHealthPolicy</xref>ノードの正常性を評価するために使用します。 </p>
  - uid: system.fabric._node_health_query_description.setHealthEventsFilter(HealthEventsFilter)
    id: setHealthEventsFilter(HealthEventsFilter)
    parent: system.fabric._node_health_query_description
    href: system.fabric._node_health_query_description.yml
    langs:
      - java
    name: setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    nameWithType: NodeHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    fullName: void system.fabric.NodeHealthQueryDescription.setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
    overload: system.fabric._node_health_query_description.setHealthEventsFilter*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/NodeHealthQueryDescription.java
      startLine: 97
    package: system.fabric
    summary: "<p>コレクションのフィルター設定<xref uid=\"system.fabric.health._health_event\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthEvent</xref>ノードで報告します。 フィルターに一致するイベントのみが返されます。</p>\n<p>\r\n\r\n  <b>注釈:</b>フィルターに一致するイベントのみが返されます。 すべてのイベントは、集計のノードの正常性状態の評価に使用されます。 フィルターが指定されていない場合は、すべてのイベントが返されます。 </p>"
    syntax:
      content: public void setHealthEventsFilter(HealthEventsFilter healthEventsFilter)
      parameters:
        - id: healthEventsFilter
          type: system.fabric._health_events_filter
          description: <p>正常性イベントを返すフィルター。 </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._node_health_query_description.NodeHealthQueryDescription*
    name: NodeHealthQueryDescription
    nameWithType: NodeHealthQueryDescription.NodeHealthQueryDescription
    fullName: system.fabric.NodeHealthQueryDescription.NodeHealthQueryDescription
    package: system.fabric
  - uid: system.fabric._node_health_query_description.getNodeName*
    name: getNodeName
    nameWithType: NodeHealthQueryDescription.getNodeName
    fullName: String system.fabric.NodeHealthQueryDescription.getNodeName
    package: system.fabric
  - uid: system.fabric._node_health_query_description.getClusterHealthPolicy*
    name: getClusterHealthPolicy
    nameWithType: NodeHealthQueryDescription.getClusterHealthPolicy
    fullName: ClusterHealthPolicy system.fabric.NodeHealthQueryDescription.getClusterHealthPolicy
    package: system.fabric
  - uid: system.fabric._node_health_query_description.setClusterHealthPolicy*
    name: setClusterHealthPolicy
    nameWithType: NodeHealthQueryDescription.setClusterHealthPolicy
    fullName: void system.fabric.NodeHealthQueryDescription.setClusterHealthPolicy
    package: system.fabric
  - uid: system.fabric._node_health_query_description.getHealthEventsFilter*
    name: getHealthEventsFilter
    nameWithType: NodeHealthQueryDescription.getHealthEventsFilter
    fullName: HealthEventsFilter system.fabric.NodeHealthQueryDescription.getHealthEventsFilter
    package: system.fabric
  - uid: system.fabric._node_health_query_description.setHealthEventsFilter*
    name: setHealthEventsFilter
    nameWithType: NodeHealthQueryDescription.setHealthEventsFilter
    fullName: void system.fabric.NodeHealthQueryDescription.setHealthEventsFilter
    package: system.fabric
  - uid: system.fabric._cluster_health_policy
    parent: system.fabric
    href: system.fabric._cluster_health_policy.yml
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy
    type: Class
    summary: <p>クラスターまたはクラスター ノードの正常性を評価する正常性ポリシーを定義します。 </p>
    syntax:
      content: public class ClusterHealthPolicy
  - uid: system.fabric._health_events_filter
    parent: system.fabric
    href: system.fabric._health_events_filter.yml
    name: HealthEventsFilter
    nameWithType: HealthEventsFilter
    fullName: system.fabric.HealthEventsFilter
    type: Class
    syntax:
      content: public class HealthEventsFilter
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: <p>A <xref uid="system.fabric.health._health_event" data-throw-if-not-resolved="false">HealthEvent</xref>オブジェクトは ReportHealth API を使用してエンティティのヘルスをレポート中に使用される正常性の情報を含む構造体 </p>
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._node_health
    parent: system.fabric.health
    href: system.fabric.health._node_health.yml
    name: NodeHealth
    nameWithType: NodeHealth
    fullName: system.fabric.health.NodeHealth
    type: Class
    summary: '<p>によって返されるノードの正常性を示します<xref uid="system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)" data-throw-if-not-resolved="false">system.fabric.HealthClient#getNodeHealthAsync(NodeHealthQueryDescription)</xref>です。 </p>'
    syntax:
      content: public class NodeHealth extends EntityHealth
  - uid: system.fabric._health_client.getNodeHealthAsync(NodeHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    name: getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    fullName: CompletableFuture<NodeHealth> system.fabric.HealthClient.getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
    type: Method
    summary: |-
      <p>非同期的に Service Fabric ノードの正常性、指定したタイムアウト時間および取り消しを使用してトークン取得します。</p>
      <p></p>
    syntax:
      content: public CompletableFuture<NodeHealth> getNodeHealthAsync(NodeHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._node_health_query_description
          description: <p>正常性ポリシーのようにパラメーターを定義するクエリの説明がなどにフィルター処理します。 </p>
      return:
        type: 9cdf14d0system.fabric.health._node_healtha08ddfce
        description: <p>Service Fabric ノードの正常性。 </p>