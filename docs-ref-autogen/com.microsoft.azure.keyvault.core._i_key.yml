### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.keyvault.core._i_key
    id: _i_key
    parent: com.microsoft.azure.keyvault.core
    children:
      - 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
      - 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
      - com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
      - com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
      - com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
      - com.microsoft.azure.keyvault.core._i_key.getKid()
      - 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
      - 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
      - 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
      - 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    source:
      remote: &ref_0
        path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
        branch: bb950b2a0255c017040501de0c19e4849361ca1d
        repo: 'https://github.com/Azure/azure-keyvault-java'
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 21
    package: com.microsoft.azure.keyvault.core
    summary: <p>Microsoft Azure Key Vault ライブラリと暗号化キーを表すためのインターフェイスします。 </p>
    syntax:
      content: public interface IKey
  - uid: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    id: 'decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.decryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 72
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>指定した暗号テキストを復号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p>暗号化を解除する暗号テキスト </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: authenticationTag
          type: f549433f
          description: <p>(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用する暗号化アルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>プレーン テキストを含む ListenableFuture </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    id: 'encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.core.IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.encryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 91
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>指定されたプレーン テキストを暗号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p>プレーン テキストを暗号化するには </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: algorithm
          type: 3d93591e
          description: <p>既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム </p>
      return:
        type: 7356d169
        description: <p>暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
    id: getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: getDefaultEncryptionAlgorithm()
    nameWithType: IKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm()
    overload: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 29
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の暗号化アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
    id: getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: IKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm()
    overload: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 37
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>既定のキーは、このキーのアルゴリズムをラップします。 </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
    id: getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: getDefaultSignatureAlgorithm()
    nameWithType: IKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm()
    overload: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 45
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の署名アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getKid()
    id: getKid()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: getKid()
    nameWithType: IKey.getKid()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getKid()
    overload: com.microsoft.azure.keyvault.core._i_key.getKid*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 52
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>このキーの一意のキー識別子。</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>キー識別子 </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    id: 'signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'IKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.signAsync(final byte[] digest, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.signAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 131
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>署名するダイジェスト </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用する署名アルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    id: 'unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 118
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p>暗号化されたキーの暗号化を解除するには </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>ラップ解除されたキーを含む ListenableFuture </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    id: 'verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.verifyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 146
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>入力ダイジェスト </p>
        - id: signature
          type: f549433f
          description: <p>署名を検証します </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: 8779baad
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    id: 'wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    langs:
      - java
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    overload: com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-core/src/main/java/com/microsoft/azure/keyvault/core/IKey.java
      startLine: 106
    package: com.microsoft.azure.keyvault.core
    summary: |-
      <p>ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p>ラップする対称キー </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture </p>
    exceptions:
      - type: 456eb9d1
        description: <p>アルゴリズムが正しくありません。 </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm*
    name: getDefaultEncryptionAlgorithm
    nameWithType: IKey.getDefaultEncryptionAlgorithm
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm*
    name: getDefaultKeyWrapAlgorithm
    nameWithType: IKey.getDefaultKeyWrapAlgorithm
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm*
    name: getDefaultSignatureAlgorithm
    nameWithType: IKey.getDefaultSignatureAlgorithm
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.core._i_key.getKid*
    name: getKid
    nameWithType: IKey.getKid
    fullName: String com.microsoft.azure.keyvault.core.IKey.getKid
    package: com.microsoft.azure.keyvault.core
  - uid: 456eb9d1
    spec.java:
      - name: NoSuchAlgorithmException
        fullName: NoSuchAlgorithmException
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: dfd3b0c8
    spec.java:
      - name: 'ListenableFuture<byte[]>'
        fullName: 'ListenableFuture<byte[]>'
  - uid: com.microsoft.azure.keyvault.core._i_key.decryptAsync*
    name: decryptAsync
    nameWithType: IKey.decryptAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync'
    package: com.microsoft.azure.keyvault.core
  - uid: 7356d169
    spec.java:
      - name: 'ListenableFuture<Triple<byte[], byte[], String>>'
        fullName: 'ListenableFuture<Triple<byte[], byte[], String>>'
  - uid: com.microsoft.azure.keyvault.core._i_key.encryptAsync*
    name: encryptAsync
    nameWithType: IKey.encryptAsync
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.core.IKey.encryptAsync'
    package: com.microsoft.azure.keyvault.core
  - uid: 32be89a6
    spec.java:
      - name: 'ListenableFuture<Pair<byte[], String>>'
        fullName: 'ListenableFuture<Pair<byte[], String>>'
  - uid: com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync*
    name: wrapKeyAsync
    nameWithType: IKey.wrapKeyAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync'
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync*
    name: unwrapKeyAsync
    nameWithType: IKey.unwrapKeyAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync'
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.core._i_key.signAsync*
    name: signAsync
    nameWithType: IKey.signAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.signAsync'
    package: com.microsoft.azure.keyvault.core
  - uid: 8779baad
    spec.java:
      - name: ListenableFuture<Boolean>
        fullName: ListenableFuture<Boolean>
  - uid: com.microsoft.azure.keyvault.core._i_key.verifyAsync*
    name: verifyAsync
    nameWithType: IKey.verifyAsync
    fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync
    package: com.microsoft.azure.keyvault.core
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key
    parent: com.microsoft.azure.keyvault.cryptography
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: RsaKey
    nameWithType: RsaKey
    fullName: com.microsoft.azure.keyvault.cryptography.RsaKey
    type: Class
    syntax:
      content: public class RsaKey
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key
    parent: com.microsoft.azure.keyvault.cryptography
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: SymmetricKey
    nameWithType: SymmetricKey
    fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey
    type: Class
    summary: <p>単純な対称キーの実装 </p>
    syntax:
      content: public class SymmetricKey
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key
    parent: com.microsoft.azure.keyvault.extensions
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: KeyVaultKey
    nameWithType: KeyVaultKey
    fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKey
    type: Class
    summary: <p>暗号化操作を実行する資格情報コンテナー キーです。 </p>
    syntax:
      content: public class KeyVaultKey
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: RsaKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の暗号化アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: KeyVaultKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の暗号化アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: SymmetricKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の暗号化アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の暗号化アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: RsaKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>既定のキーは、このキーのアルゴリズムをラップします。 </p>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: KeyVaultKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>既定のキーは、このキーのアルゴリズムをラップします。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: SymmetricKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定のキー ラップ アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>既定のキーは、このキーのアルゴリズムをラップします。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: RsaKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の署名アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: KeyVaultKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の署名アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: SymmetricKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p>Json Web キー アルゴリズム、RFC7513 からの形式を使用して、このキーの既定の署名アルゴリズムです。</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>このキーの既定の署名アルゴリズムです。 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._rsa_key.getKid()
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: getKid()
    nameWithType: RsaKey.getKid()
    fullName: String com.microsoft.azure.keyvault.cryptography.RsaKey.getKid()
    type: Method
    summary: |-
      <p>このキーの一意のキー識別子。</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>キー識別子 </p>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getKid()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: getKid()
    nameWithType: KeyVaultKey.getKid()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getKid()
    type: Method
    summary: |-
      <p>このキーの一意のキー識別子。</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>キー識別子 </p>
  - uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid()
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: getKid()
    nameWithType: SymmetricKey.getKid()
    fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getKid()
    type: Method
    summary: |-
      <p>このキーの一意のキー識別子。</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>キー識別子 </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'RsaKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    type: Method
    summary: |-
      <p>指定した暗号テキストを復号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p>暗号化を解除する暗号テキスト </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: authenticationTag
          type: f549433f
          description: <p>(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用する暗号化アルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>プレーン テキストを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.decryptAsync(byte [],byte [],byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    nameWithType: 'KeyVaultKey.decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    type: Method
    summary: |-
      <p>指定した暗号テキストを復号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
      parameters:
        - id: ciphertext
          type: ccd9418d
          description: <p>暗号化を解除する暗号テキスト </p>
        - id: iv
          type: ccd9418d
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: ccd9418d
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: authenticationTag
          type: ccd9418d
          description: <p>(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ </p>
        - id: algorithm
          type: '26831127'
          description: <p>を使用する暗号化アルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>プレーン テキストを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'SymmetricKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    type: Method
    summary: |-
      <p>指定した暗号テキストを復号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p>暗号化を解除する暗号テキスト </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: authenticationTag
          type: f549433f
          description: <p>(一部のアルゴリズムで省略可能)、encrypt 操作から認証タグ </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用する暗号化アルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>プレーン テキストを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'RsaKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    type: Method
    summary: |-
      <p>指定されたプレーン テキストを暗号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p>プレーン テキストを暗号化するには </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: algorithm
          type: 3d93591e
          description: <p>既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム </p>
      return:
        type: 7356d169
        description: <p>暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.encryptAsync(byte [],byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    nameWithType: 'KeyVaultKey.encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    type: Method
    summary: |-
      <p>指定されたプレーン テキストを暗号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
      parameters:
        - id: plaintext
          type: ccd9418d
          description: <p>プレーン テキストを暗号化するには </p>
        - id: iv
          type: ccd9418d
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: ccd9418d
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: algorithm
          type: '26831127'
          description: <p>既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム </p>
      return:
        type: 7356d169
        description: <p>暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'SymmetricKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    type: Method
    summary: |-
      <p>指定されたプレーン テキストを暗号化します。 すべてのアルゴリズムが必要なまたは、すべてのパラメーターをサポートします。 注意してください。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p>プレーン テキストを暗号化するには </p>
        - id: iv
          type: f549433f
          description: <p>初期化ベクター (一部のアルゴリズムで省略可能) </p>
        - id: authenticationData
          type: f549433f
          description: <p>追加の認証データ (一部のアルゴリズムで省略可能) </p>
        - id: algorithm
          type: 3d93591e
          description: <p>既定値は DefaultEncryptionAlgorithm キーを使用する暗号化アルゴリズム </p>
      return:
        type: 7356d169
        description: <p>暗号化テキスト、認証タグおよび使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'RsaKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    type: Method
    summary: |-
      <p>ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p>ラップする対称キー </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.wrapKeyAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'wrapKeyAsync(byte[] plaintext, String algorithm)'
    nameWithType: 'KeyVaultKey.wrapKeyAsync(byte[] plaintext, String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.wrapKeyAsync(byte[] plaintext, String algorithm)'
    type: Method
    summary: |-
      <p>ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(byte[] plaintext, String algorithm)'
      parameters:
        - id: key
          type: ccd9418d
          description: <p>ラップする対称キー </p>
        - id: algorithm
          type: '26831127'
          description: <p>使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'SymmetricKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    type: Method
    summary: |-
      <p>ラップ (暗号化)、指定した対称キー マテリアルが指定されていない場合、指定したアルゴリズムまたはキー DefaultKeyWrapAlgorithm を使用します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p>ラップする対称キー </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用するには既定値は DefaultKeyWrapAlgorithm キー ラップのアルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>暗号化されたキーと使用されたアルゴリズムを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.unwrapKeyAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    nameWithType: 'KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    type: Method
    summary: |-
      <p>(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(byte[] ciphertext, String algorithm)'
      parameters:
        - id: encryptedKey
          type: ccd9418d
          description: <p>暗号化されたキーの暗号化を解除するには </p>
        - id: algorithm
          type: '26831127'
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>ラップ解除されたキーを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'RsaKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.RsaKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    type: Method
    summary: |-
      <p>(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p>暗号化されたキーの暗号化を解除するには </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>ラップ解除されたキーを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'SymmetricKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    type: Method
    summary: |-
      <p>(復号化)、指定した暗号化されたキー マテリアルのラップを解除します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p>暗号化されたキーの暗号化を解除するには </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: dfd3b0c8
        description: <p>ラップ解除されたキーを含む ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.signAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'signAsync(byte[] digest, String algorithm)'
    nameWithType: 'KeyVaultKey.signAsync(byte[] digest, String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.signAsync(byte[] digest, String algorithm)'
    type: Method
    summary: |-
      <p>指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(byte[] digest, String algorithm)'
      parameters:
        - id: digest
          type: ccd9418d
          description: <p>署名するダイジェスト </p>
        - id: algorithm
          type: '26831127'
          description: <p>使用する署名アルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'RsaKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.RsaKey.signAsync(final byte[] digest, final String algorithm)'
    type: Method
    summary: |-
      <p>指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>署名するダイジェスト </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用する署名アルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'SymmetricKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.cryptography.SymmetricKey.signAsync(final byte[] digest, final String algorithm)'
    type: Method
    summary: |-
      <p>指定したアルゴリズムが指定されていない場合は、指定したアルゴリズムまたはキー DefaultSignatureAlgorithm を使用してダイジェストに署名します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>署名するダイジェスト </p>
        - id: algorithm
          type: 3d93591e
          description: <p>使用する署名アルゴリズム </p>
      return:
        type: 32be89a6
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.verifyAsync(byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    name: 'verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    nameWithType: 'KeyVaultKey.verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.extensions.KeyVaultKey.verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    type: Method
    summary: |-
      <p>指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(byte[] digest, byte[] signature, String algorithm)'
      parameters:
        - id: digest
          type: ccd9418d
          description: <p>入力ダイジェスト </p>
        - id: signature
          type: ccd9418d
          description: <p>署名を検証します </p>
        - id: algorithm
          type: '26831127'
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: 8779baad
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._rsa_key.verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._rsa_key
    href: com.microsoft.azure.keyvault.cryptography._rsa_key.yml
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'RsaKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.RsaKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    type: Method
    summary: |-
      <p>指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>入力ダイジェスト </p>
        - id: signature
          type: f549433f
          description: <p>署名を検証します </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: 8779baad
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>
  - uid: 'com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
    href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'SymmetricKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.SymmetricKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    type: Method
    summary: |-
      <p>指定されたダイジェストとアルゴリズムを使用して指定された署名の値を確認します。</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>入力ダイジェスト </p>
        - id: signature
          type: f549433f
          description: <p>署名を検証します </p>
        - id: algorithm
          type: 3d93591e
          description: <p>を使用するアルゴリズムを指定する必要があります </p>
      return:
        type: 8779baad
        description: <p>署名と使用されるアルゴリズムを含む ListenableFuture です。 </p>