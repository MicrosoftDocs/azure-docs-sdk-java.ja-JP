### YamlMime:ManagedReference
items:
  - uid: system.fabric._repair_management_client
    id: _repair_management_client
    parent: system.fabric
    children:
      - 'system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean)'
      - 'system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean,Duration)'
      - system.fabric._repair_management_client.close()
      - system.fabric._repair_management_client.createRepairTaskAsync(RepairTask)
      - 'system.fabric._repair_management_client.createRepairTaskAsync(RepairTask,Duration)'
      - 'system.fabric._repair_management_client.deleteRepairTaskAsync(String,long)'
      - 'system.fabric._repair_management_client.deleteRepairTaskAsync(String,long,Duration)'
      - 'system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long)'
      - 'system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long,Duration)'
      - system.fabric._repair_management_client.getRepairTaskListAsync()
      - system.fabric._repair_management_client.getRepairTaskListAsync(Duration)
      - 'system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String)'
      - 'system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)'
      - system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask)
      - 'system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask,Duration)'
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: RepairManagementClient
    nameWithType: RepairManagementClient
    fullName: system.fabric.RepairManagementClient
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 18
    package: system.fabric
    summary: <p><span data-ttu-id="48bdd-101">修復タスクを管理するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-101">Provides methods for managing repair tasks.</span></span> </p>
    syntax:
      content: public class RepairManagementClient
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: 'system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean)'
    id: 'cancelRepairTaskAsync(String,long,boolean)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)'
    nameWithType: 'RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)'
    overload: system.fabric._repair_management_client.cancelRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 126
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-102">指定した修復タスクのキャンセルを要求します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-102">Requests the cancellation of the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-103">キャンセルできる修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-103">The ID of the repair task to be cancelled.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-104">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-104">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-105">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-105">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-106">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-106">If zero, then no version check is performed.</span></span> </p>'
        - id: requestAbort
          type: 4fc6e284
          description: <p><span data-ttu-id="48bdd-107">True を既にある場合でも、修復をできるだけ早く停止する必要がある場合は実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-107">True if the repair should be stopped as soon as possible even if it has already started executing.</span></span> <span data-ttu-id="48bdd-108">実行がまだ開始されていない場合にのみ、修復を取り消す必要がある場合は false。</span><span class="sxs-lookup"><span data-stu-id="48bdd-108">False if the repair should be cancelled only if execution has not yet started.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-109">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-109">The new version number of the repair task.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean,Duration)'
    id: 'cancelRepairTaskAsync(String,long,boolean,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)'
    nameWithType: 'RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)'
    overload: system.fabric._repair_management_client.cancelRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 153
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-110">指定した修復タスクのキャンセルを要求します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-110">Requests the cancellation of the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-111">キャンセルできる修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-111">The ID of the repair task to be cancelled.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-112">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-112">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-113">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-113">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-114">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-114">If zero, then no version check is performed.</span></span> </p>'
        - id: requestAbort
          type: 4fc6e284
          description: <p><span data-ttu-id="48bdd-115">True を既にある場合でも、修復をできるだけ早く停止する必要がある場合は実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-115">True if the repair should be stopped as soon as possible even if it has already started executing.</span></span> <span data-ttu-id="48bdd-116">実行がまだ開始されていない場合にのみ、修復を取り消す必要がある場合は false。</span><span class="sxs-lookup"><span data-stu-id="48bdd-116">False if the repair should be cancelled only if execution has not yet started.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-117">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-117">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-118">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-118">The new version number of the repair task.</span></span> </p>
  - uid: system.fabric._repair_management_client.close()
    id: close()
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: close()
    nameWithType: RepairManagementClient.close()
    fullName: void system.fabric.RepairManagementClient.close()
    overload: system.fabric._repair_management_client.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 542
    package: system.fabric
    syntax:
      content: public void close()
  - uid: system.fabric._repair_management_client.createRepairTaskAsync(RepairTask)
    id: createRepairTaskAsync(RepairTask)
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: createRepairTaskAsync(RepairTask repairTask)
    nameWithType: RepairManagementClient.createRepairTaskAsync(RepairTask repairTask)
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync(RepairTask repairTask)
    overload: system.fabric._repair_management_client.createRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 93
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-119">新しい修復タスクを作成します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-119">Creates a new repair task.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Long> createRepairTaskAsync(RepairTask repairTask)
      parameters:
        - id: repairTask
          type: system.fabric._repair_task
          description: <p><span data-ttu-id="48bdd-120">作成する修復タスクの説明です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-120">The description of the repair task to be created.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-121">修復の新しく作成されたタスクのバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-121">The version number of the newly-created repair task.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.createRepairTaskAsync(RepairTask,Duration)'
    id: 'createRepairTaskAsync(RepairTask,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'createRepairTaskAsync(RepairTask repairTask, Duration timeout)'
    nameWithType: 'RepairManagementClient.createRepairTaskAsync(RepairTask repairTask, Duration timeout)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync(RepairTask repairTask, Duration timeout)'
    overload: system.fabric._repair_management_client.createRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 107
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-122">新しい修復タスクを作成します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-122">Creates a new repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> createRepairTaskAsync(RepairTask repairTask, Duration timeout)'
      parameters:
        - id: repairTask
          type: system.fabric._repair_task
          description: <p><span data-ttu-id="48bdd-123">作成する修復タスクの説明です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-123">The description of the repair task to be created.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-124">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-124">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-125">修復の新しく作成されたタスクのバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-125">The version number of the newly-created repair task.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.deleteRepairTaskAsync(String,long)'
    id: 'deleteRepairTaskAsync(String,long)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'deleteRepairTaskAsync(String repairTaskId, long version)'
    nameWithType: 'RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version)'
    fullName: 'CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version)'
    overload: system.fabric._repair_management_client.deleteRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 209
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-126">指定した修復タスクを削除します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-126">Deletes the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture deleteRepairTaskAsync(String repairTaskId, long version)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-127">削除する完了した修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-127">The ID of the completed repair task to be deleted.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-128">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-128">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-129">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-129">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-130">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-130">If zero, then no version check is performed.</span></span> </p>'
      return:
        type: 5f2aaa64
        description: <p><span data-ttu-id="48bdd-131">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="48bdd-131">A task representing the asynchronous operation.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.deleteRepairTaskAsync(String,long,Duration)'
    id: 'deleteRepairTaskAsync(String,long,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    nameWithType: 'RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    fullName: 'CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    overload: system.fabric._repair_management_client.deleteRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 231
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-132">指定した修復タスクを削除します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-132">Deletes the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-133">削除する完了した修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-133">The ID of the completed repair task to be deleted.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-134">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-134">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-135">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-135">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-136">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-136">If zero, then no version check is performed.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-137">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-137">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 5f2aaa64
        description: <p><span data-ttu-id="48bdd-138">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="48bdd-138">A task representing the asynchronous operation.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long)'
    id: 'forceApproveRepairTaskAsync(String,long)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'forceApproveRepairTaskAsync(String repairTaskId, long version)'
    nameWithType: 'RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version)'
    overload: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 172
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-139">指定した修復タスクの承認を強制します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-139">Forces the approval of the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> forceApproveRepairTaskAsync(String repairTaskId, long version)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-140">承認修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-140">The ID of the repair task to be approved.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-141">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-141">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-142">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-142">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-143">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-143">If zero, then no version check is performed.</span></span> </p>'
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-144">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-144">The new version number of the repair task.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long,Duration)'
    id: 'forceApproveRepairTaskAsync(String,long,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    nameWithType: 'RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
    overload: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 194
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-145">指定した修復タスクの承認を強制します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-145">Forces the approval of the given repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)'
      parameters:
        - id: repairTaskId
          type: '26831127'
          description: <p><span data-ttu-id="48bdd-146">承認修復タスクの ID。</span><span class="sxs-lookup"><span data-stu-id="48bdd-146">The ID of the repair task to be approved.</span></span> </p>
        - id: version
          type: 0364520f
          description: '<p><span data-ttu-id="48bdd-147">修復タスクの現在のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-147">The current version number of the repair task.</span></span> <span data-ttu-id="48bdd-148">0 以外の場合、要求のみは成功します修復作業の実際の現在の値がこの値に一致する場合。</span><span class="sxs-lookup"><span data-stu-id="48bdd-148">If non-zero, then the request will only succeed if this value matches the actual current value of the repair task.</span></span> <span data-ttu-id="48bdd-149">0 の場合、バージョン チェックは実行されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-149">If zero, then no version check is performed.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-150">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-150">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-151">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-151">The new version number of the repair task.</span></span> </p>
  - uid: system.fabric._repair_management_client.getRepairTaskListAsync()
    id: getRepairTaskListAsync()
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: getRepairTaskListAsync()
    nameWithType: RepairManagementClient.getRepairTaskListAsync()
    fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync()
    overload: system.fabric._repair_management_client.getRepairTaskListAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 265
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-152">修復のすべてのタスクの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-152">Gets a list of all repair tasks.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync()
      return:
        type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
        description: <p><span data-ttu-id="48bdd-153">修復のすべてのタスクの一覧。</span><span class="sxs-lookup"><span data-stu-id="48bdd-153">The list of all repair tasks.</span></span> </p>
  - uid: system.fabric._repair_management_client.getRepairTaskListAsync(Duration)
    id: getRepairTaskListAsync(Duration)
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: getRepairTaskListAsync(Duration timeout)
    nameWithType: RepairManagementClient.getRepairTaskListAsync(Duration timeout)
    fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(Duration timeout)
    overload: system.fabric._repair_management_client.getRepairTaskListAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 279
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-154">修復のすべてのタスクの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-154">Gets a list of all repair tasks.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-155">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-155">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
        description: <p><span data-ttu-id="48bdd-156">修復のすべてのタスクの一覧。</span><span class="sxs-lookup"><span data-stu-id="48bdd-156">The list of all repair tasks.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String)'
    id: 'getRepairTaskListAsync(String,RepairTaskStateFilter,String)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)'
    nameWithType: 'RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)'
    fullName: 'CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)'
    overload: system.fabric._repair_management_client.getRepairTaskListAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 298
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-157">すべての指定したフィルターに一致する修復作業の一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-157">Gets a list of repair tasks matching all of the given filters.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<RepairTaskList> getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)'
      parameters:
        - id: taskIdFilter
          type: '26831127'
          description: '<p><span data-ttu-id="48bdd-158">照合される修復タスク ID プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="48bdd-158">The repair task ID prefix to be matched.</span></span> <span data-ttu-id="48bdd-159">タスク ID にフィルターが適用されていない null の場合、</span><span class="sxs-lookup"><span data-stu-id="48bdd-159">If null, no filter is applied to the task ID.</span></span> </p>'
        - id: stateFilter
          type: system.fabric.repair._repair_task_state_filter
          description: <p><span data-ttu-id="48bdd-160">タスクの状態を指定する状態フィルター値のビットごとの組み合わせは、リストに含まれる必要があります。</span><span class="sxs-lookup"><span data-stu-id="48bdd-160">A bitwise combination of state filter values that specify which task states should be included in the list.</span></span> </p>
        - id: executorFilter
          type: '26831127'
          description: '<p><span data-ttu-id="48bdd-161">要求されたタスクが含まれる一覧に含めるか修復の実行子の名前。</span><span class="sxs-lookup"><span data-stu-id="48bdd-161">The name of the repair executor whose claimed tasks should be included in the list.</span></span> <span data-ttu-id="48bdd-162">Null の場合、実行プログラム名にフィルターは適用されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-162">If null, no filter is applied to the executor name.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
        description: <p><span data-ttu-id="48bdd-163">すべての指定したフィルターに一致する修復作業の一覧。</span><span class="sxs-lookup"><span data-stu-id="48bdd-163">The list of repair tasks matching all of the given filters.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)'
    id: 'getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)'
    nameWithType: 'RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)'
    fullName: 'CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)'
    overload: system.fabric._repair_management_client.getRepairTaskListAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 323
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-164">すべての指定したフィルターに一致する修復作業の一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-164">Gets a list of repair tasks matching all of the given filters.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<RepairTaskList> getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)'
      parameters:
        - id: taskIdFilter
          type: '26831127'
          description: '<p><span data-ttu-id="48bdd-165">照合される修復タスク ID プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="48bdd-165">The repair task ID prefix to be matched.</span></span> <span data-ttu-id="48bdd-166">タスク ID にフィルターが適用されていない null の場合、</span><span class="sxs-lookup"><span data-stu-id="48bdd-166">If null, no filter is applied to the task ID.</span></span> </p>'
        - id: stateFilter
          type: system.fabric.repair._repair_task_state_filter
          description: <p><span data-ttu-id="48bdd-167">タスクの状態を指定する状態フィルター値のビットごとの組み合わせは、リストに含まれる必要があります。</span><span class="sxs-lookup"><span data-stu-id="48bdd-167">A bitwise combination of state filter values that specify which task states should be included in the list.</span></span> </p>
        - id: executorFilter
          type: '26831127'
          description: '<p><span data-ttu-id="48bdd-168">要求されたタスクが含まれる一覧に含めるか修復の実行子の名前。</span><span class="sxs-lookup"><span data-stu-id="48bdd-168">The name of the repair executor whose claimed tasks should be included in the list.</span></span> <span data-ttu-id="48bdd-169">Null の場合、実行プログラム名にフィルターは適用されません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-169">If null, no filter is applied to the executor name.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-170">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-170">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
        description: <p><span data-ttu-id="48bdd-171">すべての指定したフィルターに一致する修復作業の一覧。</span><span class="sxs-lookup"><span data-stu-id="48bdd-171">The list of repair tasks matching all of the given filters.</span></span> </p>
  - uid: system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask)
    id: updateRepairExecutionStateAsync(RepairTask)
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: updateRepairExecutionStateAsync(RepairTask repairTask)
    nameWithType: RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask)
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask)
    overload: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 242
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-172">修復タスクを更新します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-172">Updates a repair task.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Long> updateRepairExecutionStateAsync(RepairTask repairTask)
      parameters:
        - id: repairTask
          type: system.fabric._repair_task
          description: <p><span data-ttu-id="48bdd-173">変更後の修復作業します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-173">The modified repair task.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-174">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-174">The new version number of the repair task.</span></span> </p>
  - uid: 'system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask,Duration)'
    id: 'updateRepairExecutionStateAsync(RepairTask,Duration)'
    parent: system.fabric._repair_management_client
    href: system.fabric._repair_management_client.yml
    langs:
      - java
    name: 'updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)'
    nameWithType: 'RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)'
    fullName: 'CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)'
    overload: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      startLine: 256
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="48bdd-175">修復タスクを更新します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-175">Updates a repair task.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)'
      parameters:
        - id: repairTask
          type: system.fabric._repair_task
          description: <p><span data-ttu-id="48bdd-176">変更後の修復作業します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-176">The modified repair task.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: <p><span data-ttu-id="48bdd-177">時間の最大量 Service Fabric を返す前に続行するには、この操作は許可されます、 <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>です。</span><span class="sxs-lookup"><span data-stu-id="48bdd-177">The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>.</span></span> </p>
      return:
        type: 30822cb1
        description: <p><span data-ttu-id="48bdd-178">修復タスクの新しいバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="48bdd-178">The new version number of the repair task.</span></span> </p>
references:
  - uid: 30822cb1
    spec.java:
      - name: CompletableFuture<Long>
        fullName: CompletableFuture<Long>
  - uid: system.fabric._repair_management_client.createRepairTaskAsync*
    name: createRepairTaskAsync
    nameWithType: RepairManagementClient.createRepairTaskAsync
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._repair_management_client.cancelRepairTaskAsync*
    name: cancelRepairTaskAsync
    nameWithType: RepairManagementClient.cancelRepairTaskAsync
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync
    package: system.fabric
  - uid: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
    name: forceApproveRepairTaskAsync
    nameWithType: RepairManagementClient.forceApproveRepairTaskAsync
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync
    package: system.fabric
  - uid: 5f2aaa64
    spec.java:
      - name: CompletableFuture
        fullName: CompletableFuture
  - uid: system.fabric._repair_management_client.deleteRepairTaskAsync*
    name: deleteRepairTaskAsync
    nameWithType: RepairManagementClient.deleteRepairTaskAsync
    fullName: CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync
    package: system.fabric
  - uid: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
    name: updateRepairExecutionStateAsync
    nameWithType: RepairManagementClient.updateRepairExecutionStateAsync
    fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync
    package: system.fabric
  - uid: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric.repair._repair_task_list
        name: RepairTaskList
        fullName: system.fabric.repair.RepairTaskList
        href: system.fabric.repair._repair_task_list.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._repair_management_client.getRepairTaskListAsync*
    name: getRepairTaskListAsync
    nameWithType: RepairManagementClient.getRepairTaskListAsync
    fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync
    package: system.fabric
  - uid: system.fabric._repair_management_client.close*
    name: close
    nameWithType: RepairManagementClient.close
    fullName: void system.fabric.RepairManagementClient.close
    package: system.fabric
  - uid: system.fabric._repair_scope_identifier
    parent: system.fabric
    href: system.fabric._repair_scope_identifier.yml
    name: RepairScopeIdentifier
    nameWithType: RepairScopeIdentifier
    fullName: system.fabric.RepairScopeIdentifier
    type: Class
    summary: <p><span data-ttu-id="48bdd-179">修復タスクのスコープについて説明します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-179">Describes the scope of a repair task.</span></span> <span data-ttu-id="48bdd-180">このクラスは、Service Fabric プラットフォームをサポートしていますコードから直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-180">This class supports the Service Fabric platform; it is not meant to be called directly from your code.</span></span> </p>
    syntax:
      content: public class RepairScopeIdentifier
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric.repair._repair_task_list
    parent: system.fabric.repair
    href: system.fabric.repair._repair_task_list.yml
    name: RepairTaskList
    nameWithType: RepairTaskList
    fullName: system.fabric.repair.RepairTaskList
    type: Class
    summary: <p><span data-ttu-id="48bdd-181">一覧を表す<xref uid="system.fabric._repair_task" data-throw-if-not-resolved="false">system.fabric.RepairTask</xref>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="48bdd-181">Represents a list of <xref uid="system.fabric._repair_task" data-throw-if-not-resolved="false">system.fabric.RepairTask</xref> objects.</span></span> <span data-ttu-id="48bdd-182">このクラスは、Service Fabric プラットフォームをサポートしていますコードから直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-182">This class supports the Service Fabric platform; it is not meant to be called directly from your code.</span></span> </p>
    syntax:
      content: public class RepairTaskList
  - uid: system.fabric._repair_task
    parent: system.fabric
    href: system.fabric._repair_task.yml
    name: RepairTask
    nameWithType: RepairTask
    fullName: system.fabric.RepairTask
    type: Class
    summary: '<p><span data-ttu-id="48bdd-183">修復の種類が要求された、その進行状況、およびその最終的な結果は何でしたに関する情報を含む修復タスクを表します。</span><span class="sxs-lookup"><span data-stu-id="48bdd-183">Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was.</span></span> <span data-ttu-id="48bdd-184">このクラスは、Service Fabric プラットフォームをサポートしていますコードから直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="48bdd-184">This class supports the Service Fabric platform; it is not meant to be called directly from your code.</span></span> </p>'
    syntax:
      content: public class RepairTask
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric.repair._repair_task_state_filter
    parent: system.fabric.repair
    href: system.fabric.repair._repair_task_state_filter.yml
    name: RepairTaskStateFilter
    nameWithType: RepairTaskStateFilter
    fullName: system.fabric.repair.RepairTaskStateFilter
    type: Enum
    syntax:
      content: public enum RepairTaskStateFilter